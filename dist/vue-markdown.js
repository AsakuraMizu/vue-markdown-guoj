/**
 * vue-markdown v1.0.2
 * https://github.com/miaolz123/vue-markdown
 * MIT License
 */

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["VueMarkdown"] = factory();
	else
		root["VueMarkdown"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.install = install;

	var _VueMarkdown = __webpack_require__(1);

	var _VueMarkdown2 = _interopRequireDefault(_VueMarkdown);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function install(Vue) {
	  Vue.component('vue-markdown', _VueMarkdown2.default);
	}

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getIterator2 = __webpack_require__(2);

	var _getIterator3 = _interopRequireDefault(_getIterator2);

	var _keys = __webpack_require__(55);

	var _keys2 = _interopRequireDefault(_keys);

	var _markdownIt = __webpack_require__(59);

	var _markdownIt2 = _interopRequireDefault(_markdownIt);

	var _markdownItEmoji = __webpack_require__(127);

	var _markdownItEmoji2 = _interopRequireDefault(_markdownItEmoji);

	var _markdownItSub = __webpack_require__(133);

	var _markdownItSub2 = _interopRequireDefault(_markdownItSub);

	var _markdownItSup = __webpack_require__(134);

	var _markdownItSup2 = _interopRequireDefault(_markdownItSup);

	var _markdownItFootnote = __webpack_require__(135);

	var _markdownItFootnote2 = _interopRequireDefault(_markdownItFootnote);

	var _markdownItDeflist = __webpack_require__(136);

	var _markdownItDeflist2 = _interopRequireDefault(_markdownItDeflist);

	var _markdownItAbbr = __webpack_require__(137);

	var _markdownItAbbr2 = _interopRequireDefault(_markdownItAbbr);

	var _markdownItIns = __webpack_require__(138);

	var _markdownItIns2 = _interopRequireDefault(_markdownItIns);

	var _markdownItMark = __webpack_require__(139);

	var _markdownItMark2 = _interopRequireDefault(_markdownItMark);

	var _markdownItTocAndAnchor = __webpack_require__(140);

	var _markdownItTocAndAnchor2 = _interopRequireDefault(_markdownItTocAndAnchor);

	var _markdownItTaskLists = __webpack_require__(153);

	var _markdownItTaskLists2 = _interopRequireDefault(_markdownItTaskLists);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var mathjax = __webpack_require__(154).mathjax;
	var TeX = __webpack_require__(158).TeX;
	var CHTML = __webpack_require__(198).CHTML;
	var liteAdaptor = __webpack_require__(344).liteAdaptor;
	var RegisterHTMLHandler = __webpack_require__(352).RegisterHTMLHandler;

	var AllPackages = __webpack_require__(372).AllPackages;

	exports.default = {
	  md: new _markdownIt2.default(),

	  template: '<div><slot></slot></div>',

	  data: function data() {
	    return {
	      sourceData: this.source
	    };
	  },


	  props: {
	    watches: {
	      type: Array,
	      default: function _default() {
	        return ['source', 'show', 'toc'];
	      }
	    },
	    source: {
	      type: String,
	      default: ''
	    },
	    show: {
	      type: Boolean,
	      default: true
	    },
	    highlight: {
	      type: Boolean,
	      default: true
	    },
	    html: {
	      type: Boolean,
	      default: true
	    },
	    xhtmlOut: {
	      type: Boolean,
	      default: true
	    },
	    breaks: {
	      type: Boolean,
	      default: true
	    },
	    linkify: {
	      type: Boolean,
	      default: true
	    },
	    emoji: {
	      type: Boolean,
	      default: true
	    },
	    typographer: {
	      type: Boolean,
	      default: true
	    },
	    langPrefix: {
	      type: String,
	      default: 'language-'
	    },
	    quotes: {
	      type: String,
	      default: '“”‘’'
	    },
	    tableClass: {
	      type: String,
	      default: 'table'
	    },
	    taskLists: {
	      type: Boolean,
	      default: true
	    },
	    toc: {
	      type: Boolean,
	      default: false
	    },
	    tocId: {
	      type: String
	    },
	    tocClass: {
	      type: String,
	      default: 'table-of-contents'
	    },
	    tocFirstLevel: {
	      type: Number,
	      default: 2
	    },
	    tocLastLevel: {
	      type: Number
	    },
	    tocAnchorLink: {
	      type: Boolean,
	      default: true
	    },
	    tocAnchorClass: {
	      type: String,
	      default: 'toc-anchor'
	    },
	    tocAnchorLinkSymbol: {
	      type: String,
	      default: '#'
	    },
	    tocAnchorLinkSpace: {
	      type: Boolean,
	      default: true
	    },
	    tocAnchorLinkClass: {
	      type: String,
	      default: 'toc-anchor-link'
	    },
	    anchorAttributes: {
	      type: Object,
	      default: function _default() {
	        return {};
	      }
	    },
	    prerender: {
	      type: Function,
	      default: function _default(sourceData) {
	        return sourceData;
	      }
	    },
	    postrender: {
	      type: Function,
	      default: function _default(htmlData) {
	        return htmlData;
	      }
	    },
	    addtionMarkdownModules: {
	      type: Array,
	      default: []
	    }
	  },

	  computed: {
	    tocLastLevelComputed: function tocLastLevelComputed() {
	      return this.tocLastLevel > this.tocFirstLevel ? this.tocLastLevel : this.tocFirstLevel + 1;
	    }
	  },

	  render: function render(createElement) {
	    var _this = this;

	    this.md = new _markdownIt2.default().use(_markdownItSub2.default).use(_markdownItSup2.default).use(_markdownItFootnote2.default).use(_markdownItDeflist2.default).use(_markdownItAbbr2.default).use(_markdownItIns2.default).use(_markdownItMark2.default).use(_markdownItTaskLists2.default, { enabled: this.taskLists });

	    for (i in this.addtionMarkdownModules) {
	      this.md = this.md.use(i.module, i.options);
	    }

	    if (this.emoji) {
	      this.md.use(_markdownItEmoji2.default);
	    }

	    this.md.set({
	      html: this.html,
	      xhtmlOut: this.xhtmlOut,
	      breaks: this.breaks,
	      linkify: this.linkify,
	      typographer: this.typographer,
	      langPrefix: this.langPrefix,
	      quotes: this.quotes
	    });
	    this.md.renderer.rules.table_open = function () {
	      return '<table class="' + _this.tableClass + '">\n';
	    };
	    var defaultLinkRenderer = this.md.renderer.rules.link_open || function (tokens, idx, options, env, self) {
	      return self.renderToken(tokens, idx, options);
	    };
	    this.md.renderer.rules.link_open = function (tokens, idx, options, env, self) {
	      (0, _keys2.default)(_this.anchorAttributes).map(function (attribute) {
	        var aIndex = tokens[idx].attrIndex(attribute);
	        var value = _this.anchorAttributes[attribute];
	        if (aIndex < 0) {
	          tokens[idx].attrPush([attribute, value]); // add new attribute
	        } else {
	          tokens[idx].attrs[aIndex][1] = value;
	        }
	      });
	      return defaultLinkRenderer(tokens, idx, options, env, self);
	    };

	    if (this.toc) {
	      this.md.use(_markdownItTocAndAnchor2.default, {
	        tocClassName: this.tocClass,
	        tocFirstLevel: this.tocFirstLevel,
	        tocLastLevel: this.tocLastLevelComputed,
	        anchorLink: this.tocAnchorLink,
	        anchorLinkSymbol: this.tocAnchorLinkSymbol,
	        anchorLinkSpace: this.tocAnchorLinkSpace,
	        anchorClassName: this.tocAnchorClass,
	        anchorLinkSymbolClassName: this.tocAnchorLinkClass,
	        tocCallback: function tocCallback(tocMarkdown, tocArray, tocHtml) {
	          if (tocHtml) {
	            if (_this.tocId && document.getElementById(_this.tocId)) {
	              document.getElementById(_this.tocId).innerHTML = tocHtml;
	            }

	            _this.$emit('toc-rendered', tocHtml);
	          }
	        }
	      });
	    }

	    var outHtml = this.show ? this.md.render(this.prerender(this.sourceData)) : '';
	    outHtml = this.postrender(outHtml);

	    this.$emit('rendered', outHtml);
	    return createElement('div', {
	      domProps: {
	        innerHTML: outHtml
	      }
	    });
	  },
	  beforeMount: function beforeMount() {
	    var _this2 = this;

	    if (this.$slots.default) {
	      this.sourceData = '';
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;

	      try {
	        for (var _iterator = (0, _getIterator3.default)(this.$slots.default), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var slot = _step.value;

	          this.sourceData += slot.text;
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator.return) {
	            _iterator.return();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	    }

	    this.$watch('source', function () {
	      _this2.sourceData = _this2.prerender(_this2.source);
	      _this2.$forceUpdate();
	    });

	    this.watches.forEach(function (v) {
	      _this2.$watch(v, function () {
	        _this2.$forceUpdate();
	      });
	    });
	  }
	};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(3), __esModule: true };

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(4);
	__webpack_require__(50);
	module.exports = __webpack_require__(52);


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(5);
	var global = __webpack_require__(16);
	var hide = __webpack_require__(20);
	var Iterators = __webpack_require__(8);
	var TO_STRING_TAG = __webpack_require__(47)('toStringTag');

	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');

	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(6);
	var step = __webpack_require__(7);
	var Iterators = __webpack_require__(8);
	var toIObject = __webpack_require__(9);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(13)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ }),
/* 6 */
/***/ (function(module, exports) {

	module.exports = function () { /* empty */ };


/***/ }),
/* 7 */
/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ }),
/* 8 */
/***/ (function(module, exports) {

	module.exports = {};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(10);
	var defined = __webpack_require__(12);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(11);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 11 */
/***/ (function(module, exports) {

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 12 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(14);
	var $export = __webpack_require__(15);
	var redefine = __webpack_require__(31);
	var hide = __webpack_require__(20);
	var Iterators = __webpack_require__(8);
	var $iterCreate = __webpack_require__(32);
	var setToStringTag = __webpack_require__(46);
	var getPrototypeOf = __webpack_require__(48);
	var ITERATOR = __webpack_require__(47)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';

	var returnThis = function () { return this; };

	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = $native || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ }),
/* 14 */
/***/ (function(module, exports) {

	module.exports = true;


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(16);
	var core = __webpack_require__(17);
	var ctx = __webpack_require__(18);
	var hide = __webpack_require__(20);
	var has = __webpack_require__(30);
	var PROTOTYPE = 'prototype';

	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && has(exports, key)) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 16 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 17 */
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.6.11' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(19);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 19 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(21);
	var createDesc = __webpack_require__(29);
	module.exports = __webpack_require__(25) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(22);
	var IE8_DOM_DEFINE = __webpack_require__(24);
	var toPrimitive = __webpack_require__(28);
	var dP = Object.defineProperty;

	exports.f = __webpack_require__(25) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(23);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 23 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(25) && !__webpack_require__(26)(function () {
	  return Object.defineProperty(__webpack_require__(27)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(26)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 26 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(23);
	var document = __webpack_require__(16).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(23);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 29 */
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 30 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(20);


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(33);
	var descriptor = __webpack_require__(29);
	var setToStringTag = __webpack_require__(46);
	var IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(20)(IteratorPrototype, __webpack_require__(47)('iterator'), function () { return this; });

	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(22);
	var dPs = __webpack_require__(34);
	var enumBugKeys = __webpack_require__(44);
	var IE_PROTO = __webpack_require__(41)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(27)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(45).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(21);
	var anObject = __webpack_require__(22);
	var getKeys = __webpack_require__(35);

	module.exports = __webpack_require__(25) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(36);
	var enumBugKeys = __webpack_require__(44);

	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(30);
	var toIObject = __webpack_require__(9);
	var arrayIndexOf = __webpack_require__(37)(false);
	var IE_PROTO = __webpack_require__(41)('IE_PROTO');

	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(9);
	var toLength = __webpack_require__(38);
	var toAbsoluteIndex = __webpack_require__(40);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(39);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 39 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(39);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(42)('keys');
	var uid = __webpack_require__(43);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	var core = __webpack_require__(17);
	var global = __webpack_require__(16);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});

	(module.exports = function (key, value) {
	  return store[key] || (store[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: core.version,
	  mode: __webpack_require__(14) ? 'pure' : 'global',
	  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
	});


/***/ }),
/* 43 */
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 44 */
/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(16).document;
	module.exports = document && document.documentElement;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(21).f;
	var has = __webpack_require__(30);
	var TAG = __webpack_require__(47)('toStringTag');

	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(42)('wks');
	var uid = __webpack_require__(43);
	var Symbol = __webpack_require__(16).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(30);
	var toObject = __webpack_require__(49);
	var IE_PROTO = __webpack_require__(41)('IE_PROTO');
	var ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(12);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(51)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(13)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(39);
	var defined = __webpack_require__(12);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(22);
	var get = __webpack_require__(53);
	module.exports = __webpack_require__(17).getIterator = function (it) {
	  var iterFn = get(it);
	  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
	  return anObject(iterFn.call(it));
	};


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(54);
	var ITERATOR = __webpack_require__(47)('iterator');
	var Iterators = __webpack_require__(8);
	module.exports = __webpack_require__(17).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(11);
	var TAG = __webpack_require__(47)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};

	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(56), __esModule: true };

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(57);
	module.exports = __webpack_require__(17).Object.keys;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(49);
	var $keys = __webpack_require__(35);

	__webpack_require__(58)('keys', function () {
	  return function keys(it) {
	    return $keys(toObject(it));
	  };
	});


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(15);
	var core = __webpack_require__(17);
	var fails = __webpack_require__(26);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';


	module.exports = __webpack_require__(60);


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	// Main parser class

	'use strict';


	var utils        = __webpack_require__(61);
	var helpers      = __webpack_require__(75);
	var Renderer     = __webpack_require__(79);
	var ParserCore   = __webpack_require__(80);
	var ParserBlock  = __webpack_require__(90);
	var ParserInline = __webpack_require__(105);
	var LinkifyIt    = __webpack_require__(120);
	var mdurl        = __webpack_require__(65);
	var punycode     = __webpack_require__(122);


	var config = {
	  'default': __webpack_require__(124),
	  zero: __webpack_require__(125),
	  commonmark: __webpack_require__(126)
	};

	////////////////////////////////////////////////////////////////////////////////
	//
	// This validator can prohibit more than really needed to prevent XSS. It's a
	// tradeoff to keep code simple and to be secure by default.
	//
	// If you need different setup - override validator method as you wish. Or
	// replace it with dummy function and use external sanitizer.
	//

	var BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;
	var GOOD_DATA_RE = /^data:image\/(gif|png|jpeg|webp);/;

	function validateLink(url) {
	  // url should be normalized at this point, and existing entities are decoded
	  var str = url.trim().toLowerCase();

	  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;
	}

	////////////////////////////////////////////////////////////////////////////////


	var RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];

	function normalizeLink(url) {
	  var parsed = mdurl.parse(url, true);

	  if (parsed.hostname) {
	    // Encode hostnames in urls like:
	    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`
	    //
	    // We don't encode unknown schemas, because it's likely that we encode
	    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)
	    //
	    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
	      try {
	        parsed.hostname = punycode.toASCII(parsed.hostname);
	      } catch (er) { /**/ }
	    }
	  }

	  return mdurl.encode(mdurl.format(parsed));
	}

	function normalizeLinkText(url) {
	  var parsed = mdurl.parse(url, true);

	  if (parsed.hostname) {
	    // Encode hostnames in urls like:
	    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`
	    //
	    // We don't encode unknown schemas, because it's likely that we encode
	    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)
	    //
	    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
	      try {
	        parsed.hostname = punycode.toUnicode(parsed.hostname);
	      } catch (er) { /**/ }
	    }
	  }

	  return mdurl.decode(mdurl.format(parsed));
	}


	/**
	 * class MarkdownIt
	 *
	 * Main parser/renderer class.
	 *
	 * ##### Usage
	 *
	 * ```javascript
	 * // node.js, "classic" way:
	 * var MarkdownIt = require('markdown-it'),
	 *     md = new MarkdownIt();
	 * var result = md.render('# markdown-it rulezz!');
	 *
	 * // node.js, the same, but with sugar:
	 * var md = require('markdown-it')();
	 * var result = md.render('# markdown-it rulezz!');
	 *
	 * // browser without AMD, added to "window" on script load
	 * // Note, there are no dash.
	 * var md = window.markdownit();
	 * var result = md.render('# markdown-it rulezz!');
	 * ```
	 *
	 * Single line rendering, without paragraph wrap:
	 *
	 * ```javascript
	 * var md = require('markdown-it')();
	 * var result = md.renderInline('__markdown-it__ rulezz!');
	 * ```
	 **/

	/**
	 * new MarkdownIt([presetName, options])
	 * - presetName (String): optional, `commonmark` / `zero`
	 * - options (Object)
	 *
	 * Creates parser instanse with given config. Can be called without `new`.
	 *
	 * ##### presetName
	 *
	 * MarkdownIt provides named presets as a convenience to quickly
	 * enable/disable active syntax rules and options for common use cases.
	 *
	 * - ["commonmark"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -
	 *   configures parser to strict [CommonMark](http://commonmark.org/) mode.
	 * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -
	 *   similar to GFM, used when no preset name given. Enables all available rules,
	 *   but still without html, typographer & autolinker.
	 * - ["zero"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -
	 *   all rules disabled. Useful to quickly setup your config via `.enable()`.
	 *   For example, when you need only `bold` and `italic` markup and nothing else.
	 *
	 * ##### options:
	 *
	 * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!
	 *   That's not safe! You may need external sanitizer to protect output from XSS.
	 *   It's better to extend features via plugins, instead of enabling HTML.
	 * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags
	 *   (`<br />`). This is needed only for full CommonMark compatibility. In real
	 *   world you will need HTML output.
	 * - __breaks__ - `false`. Set `true` to convert `\n` in paragraphs into `<br>`.
	 * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.
	 *   Can be useful for external highlighters.
	 * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.
	 * - __typographer__  - `false`. Set `true` to enable [some language-neutral
	 *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +
	 *   quotes beautification (smartquotes).
	 * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement
	 *   pairs, when typographer enabled and smartquotes on. For example, you can
	 *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and
	 *   `['«\xA0', '\xA0»', '‹\xA0', '\xA0›']` for French (including nbsp).
	 * - __highlight__ - `null`. Highlighter function for fenced code blocks.
	 *   Highlighter `function (str, lang)` should return escaped HTML. It can also
	 *   return empty string if the source was not changed and should be escaped
	 *   externaly. If result starts with <pre... internal wrapper is skipped.
	 *
	 * ##### Example
	 *
	 * ```javascript
	 * // commonmark mode
	 * var md = require('markdown-it')('commonmark');
	 *
	 * // default mode
	 * var md = require('markdown-it')();
	 *
	 * // enable everything
	 * var md = require('markdown-it')({
	 *   html: true,
	 *   linkify: true,
	 *   typographer: true
	 * });
	 * ```
	 *
	 * ##### Syntax highlighting
	 *
	 * ```js
	 * var hljs = require('highlight.js') // https://highlightjs.org/
	 *
	 * var md = require('markdown-it')({
	 *   highlight: function (str, lang) {
	 *     if (lang && hljs.getLanguage(lang)) {
	 *       try {
	 *         return hljs.highlight(lang, str, true).value;
	 *       } catch (__) {}
	 *     }
	 *
	 *     return ''; // use external default escaping
	 *   }
	 * });
	 * ```
	 *
	 * Or with full wrapper override (if you need assign class to `<pre>`):
	 *
	 * ```javascript
	 * var hljs = require('highlight.js') // https://highlightjs.org/
	 *
	 * // Actual default values
	 * var md = require('markdown-it')({
	 *   highlight: function (str, lang) {
	 *     if (lang && hljs.getLanguage(lang)) {
	 *       try {
	 *         return '<pre class="hljs"><code>' +
	 *                hljs.highlight(lang, str, true).value +
	 *                '</code></pre>';
	 *       } catch (__) {}
	 *     }
	 *
	 *     return '<pre class="hljs"><code>' + md.utils.escapeHtml(str) + '</code></pre>';
	 *   }
	 * });
	 * ```
	 *
	 **/
	function MarkdownIt(presetName, options) {
	  if (!(this instanceof MarkdownIt)) {
	    return new MarkdownIt(presetName, options);
	  }

	  if (!options) {
	    if (!utils.isString(presetName)) {
	      options = presetName || {};
	      presetName = 'default';
	    }
	  }

	  /**
	   * MarkdownIt#inline -> ParserInline
	   *
	   * Instance of [[ParserInline]]. You may need it to add new rules when
	   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and
	   * [[MarkdownIt.enable]].
	   **/
	  this.inline = new ParserInline();

	  /**
	   * MarkdownIt#block -> ParserBlock
	   *
	   * Instance of [[ParserBlock]]. You may need it to add new rules when
	   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and
	   * [[MarkdownIt.enable]].
	   **/
	  this.block = new ParserBlock();

	  /**
	   * MarkdownIt#core -> Core
	   *
	   * Instance of [[Core]] chain executor. You may need it to add new rules when
	   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and
	   * [[MarkdownIt.enable]].
	   **/
	  this.core = new ParserCore();

	  /**
	   * MarkdownIt#renderer -> Renderer
	   *
	   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering
	   * rules for new token types, generated by plugins.
	   *
	   * ##### Example
	   *
	   * ```javascript
	   * var md = require('markdown-it')();
	   *
	   * function myToken(tokens, idx, options, env, self) {
	   *   //...
	   *   return result;
	   * };
	   *
	   * md.renderer.rules['my_token'] = myToken
	   * ```
	   *
	   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).
	   **/
	  this.renderer = new Renderer();

	  /**
	   * MarkdownIt#linkify -> LinkifyIt
	   *
	   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.
	   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)
	   * rule.
	   **/
	  this.linkify = new LinkifyIt();

	  /**
	   * MarkdownIt#validateLink(url) -> Boolean
	   *
	   * Link validation function. CommonMark allows too much in links. By default
	   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas
	   * except some embedded image types.
	   *
	   * You can change this behaviour:
	   *
	   * ```javascript
	   * var md = require('markdown-it')();
	   * // enable everything
	   * md.validateLink = function () { return true; }
	   * ```
	   **/
	  this.validateLink = validateLink;

	  /**
	   * MarkdownIt#normalizeLink(url) -> String
	   *
	   * Function used to encode link url to a machine-readable format,
	   * which includes url-encoding, punycode, etc.
	   **/
	  this.normalizeLink = normalizeLink;

	  /**
	   * MarkdownIt#normalizeLinkText(url) -> String
	   *
	   * Function used to decode link url to a human-readable format`
	   **/
	  this.normalizeLinkText = normalizeLinkText;


	  // Expose utils & helpers for easy acces from plugins

	  /**
	   * MarkdownIt#utils -> utils
	   *
	   * Assorted utility functions, useful to write plugins. See details
	   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).
	   **/
	  this.utils = utils;

	  /**
	   * MarkdownIt#helpers -> helpers
	   *
	   * Link components parser functions, useful to write plugins. See details
	   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).
	   **/
	  this.helpers = helpers;


	  this.options = {};
	  this.configure(presetName);

	  if (options) { this.set(options); }
	}


	/** chainable
	 * MarkdownIt.set(options)
	 *
	 * Set parser options (in the same format as in constructor). Probably, you
	 * will never need it, but you can change options after constructor call.
	 *
	 * ##### Example
	 *
	 * ```javascript
	 * var md = require('markdown-it')()
	 *             .set({ html: true, breaks: true })
	 *             .set({ typographer, true });
	 * ```
	 *
	 * __Note:__ To achieve the best possible performance, don't modify a
	 * `markdown-it` instance options on the fly. If you need multiple configurations
	 * it's best to create multiple instances and initialize each with separate
	 * config.
	 **/
	MarkdownIt.prototype.set = function (options) {
	  utils.assign(this.options, options);
	  return this;
	};


	/** chainable, internal
	 * MarkdownIt.configure(presets)
	 *
	 * Batch load of all options and compenent settings. This is internal method,
	 * and you probably will not need it. But if you with - see available presets
	 * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)
	 *
	 * We strongly recommend to use presets instead of direct config loads. That
	 * will give better compatibility with next versions.
	 **/
	MarkdownIt.prototype.configure = function (presets) {
	  var self = this, presetName;

	  if (utils.isString(presets)) {
	    presetName = presets;
	    presets = config[presetName];
	    if (!presets) { throw new Error('Wrong `markdown-it` preset "' + presetName + '", check name'); }
	  }

	  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\'t be empty'); }

	  if (presets.options) { self.set(presets.options); }

	  if (presets.components) {
	    Object.keys(presets.components).forEach(function (name) {
	      if (presets.components[name].rules) {
	        self[name].ruler.enableOnly(presets.components[name].rules);
	      }
	      if (presets.components[name].rules2) {
	        self[name].ruler2.enableOnly(presets.components[name].rules2);
	      }
	    });
	  }
	  return this;
	};


	/** chainable
	 * MarkdownIt.enable(list, ignoreInvalid)
	 * - list (String|Array): rule name or list of rule names to enable
	 * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
	 *
	 * Enable list or rules. It will automatically find appropriate components,
	 * containing rules with given names. If rule not found, and `ignoreInvalid`
	 * not set - throws exception.
	 *
	 * ##### Example
	 *
	 * ```javascript
	 * var md = require('markdown-it')()
	 *             .enable(['sub', 'sup'])
	 *             .disable('smartquotes');
	 * ```
	 **/
	MarkdownIt.prototype.enable = function (list, ignoreInvalid) {
	  var result = [];

	  if (!Array.isArray(list)) { list = [ list ]; }

	  [ 'core', 'block', 'inline' ].forEach(function (chain) {
	    result = result.concat(this[chain].ruler.enable(list, true));
	  }, this);

	  result = result.concat(this.inline.ruler2.enable(list, true));

	  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });

	  if (missed.length && !ignoreInvalid) {
	    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);
	  }

	  return this;
	};


	/** chainable
	 * MarkdownIt.disable(list, ignoreInvalid)
	 * - list (String|Array): rule name or list of rule names to disable.
	 * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
	 *
	 * The same as [[MarkdownIt.enable]], but turn specified rules off.
	 **/
	MarkdownIt.prototype.disable = function (list, ignoreInvalid) {
	  var result = [];

	  if (!Array.isArray(list)) { list = [ list ]; }

	  [ 'core', 'block', 'inline' ].forEach(function (chain) {
	    result = result.concat(this[chain].ruler.disable(list, true));
	  }, this);

	  result = result.concat(this.inline.ruler2.disable(list, true));

	  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });

	  if (missed.length && !ignoreInvalid) {
	    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);
	  }
	  return this;
	};


	/** chainable
	 * MarkdownIt.use(plugin, params)
	 *
	 * Load specified plugin with given params into current parser instance.
	 * It's just a sugar to call `plugin(md, params)` with curring.
	 *
	 * ##### Example
	 *
	 * ```javascript
	 * var iterator = require('markdown-it-for-inline');
	 * var md = require('markdown-it')()
	 *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {
	 *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');
	 *             });
	 * ```
	 **/
	MarkdownIt.prototype.use = function (plugin /*, params, ... */) {
	  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));
	  plugin.apply(plugin, args);
	  return this;
	};


	/** internal
	 * MarkdownIt.parse(src, env) -> Array
	 * - src (String): source string
	 * - env (Object): environment sandbox
	 *
	 * Parse input string and returns list of block tokens (special token type
	 * "inline" will contain list of inline tokens). You should not call this
	 * method directly, until you write custom renderer (for example, to produce
	 * AST).
	 *
	 * `env` is used to pass data between "distributed" rules and return additional
	 * metadata like reference info, needed for the renderer. It also can be used to
	 * inject data in specific cases. Usually, you will be ok to pass `{}`,
	 * and then pass updated object to renderer.
	 **/
	MarkdownIt.prototype.parse = function (src, env) {
	  var state = new this.core.State(src, this, env);

	  this.core.process(state);

	  return state.tokens;
	};


	/**
	 * MarkdownIt.render(src [, env]) -> String
	 * - src (String): source string
	 * - env (Object): environment sandbox
	 *
	 * Render markdown string into html. It does all magic for you :).
	 *
	 * `env` can be used to inject additional metadata (`{}` by default).
	 * But you will not need it with high probability. See also comment
	 * in [[MarkdownIt.parse]].
	 **/
	MarkdownIt.prototype.render = function (src, env) {
	  env = env || {};

	  return this.renderer.render(this.parse(src, env), this.options, env);
	};


	/** internal
	 * MarkdownIt.parseInline(src, env) -> Array
	 * - src (String): source string
	 * - env (Object): environment sandbox
	 *
	 * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the
	 * block tokens list with the single `inline` element, containing parsed inline
	 * tokens in `children` property. Also updates `env` object.
	 **/
	MarkdownIt.prototype.parseInline = function (src, env) {
	  var state = new this.core.State(src, this, env);

	  state.inlineMode = true;
	  this.core.process(state);

	  return state.tokens;
	};


	/**
	 * MarkdownIt.renderInline(src [, env]) -> String
	 * - src (String): source string
	 * - env (Object): environment sandbox
	 *
	 * Similar to [[MarkdownIt.render]] but for single paragraph content. Result
	 * will NOT be wrapped into `<p>` tags.
	 **/
	MarkdownIt.prototype.renderInline = function (src, env) {
	  env = env || {};

	  return this.renderer.render(this.parseInline(src, env), this.options, env);
	};


	module.exports = MarkdownIt;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	// Utilities
	//
	'use strict';


	function _class(obj) { return Object.prototype.toString.call(obj); }

	function isString(obj) { return _class(obj) === '[object String]'; }

	var _hasOwnProperty = Object.prototype.hasOwnProperty;

	function has(object, key) {
	  return _hasOwnProperty.call(object, key);
	}

	// Merge objects
	//
	function assign(obj /*from1, from2, from3, ...*/) {
	  var sources = Array.prototype.slice.call(arguments, 1);

	  sources.forEach(function (source) {
	    if (!source) { return; }

	    if (typeof source !== 'object') {
	      throw new TypeError(source + 'must be object');
	    }

	    Object.keys(source).forEach(function (key) {
	      obj[key] = source[key];
	    });
	  });

	  return obj;
	}

	// Remove element from array and put another array at those position.
	// Useful for some operations with tokens
	function arrayReplaceAt(src, pos, newElements) {
	  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));
	}

	////////////////////////////////////////////////////////////////////////////////

	function isValidEntityCode(c) {
	  /*eslint no-bitwise:0*/
	  // broken sequence
	  if (c >= 0xD800 && c <= 0xDFFF) { return false; }
	  // never used
	  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }
	  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }
	  // control codes
	  if (c >= 0x00 && c <= 0x08) { return false; }
	  if (c === 0x0B) { return false; }
	  if (c >= 0x0E && c <= 0x1F) { return false; }
	  if (c >= 0x7F && c <= 0x9F) { return false; }
	  // out of range
	  if (c > 0x10FFFF) { return false; }
	  return true;
	}

	function fromCodePoint(c) {
	  /*eslint no-bitwise:0*/
	  if (c > 0xffff) {
	    c -= 0x10000;
	    var surrogate1 = 0xd800 + (c >> 10),
	        surrogate2 = 0xdc00 + (c & 0x3ff);

	    return String.fromCharCode(surrogate1, surrogate2);
	  }
	  return String.fromCharCode(c);
	}


	var UNESCAPE_MD_RE  = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g;
	var ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;
	var UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');

	var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;

	var entities = __webpack_require__(62);

	function replaceEntityPattern(match, name) {
	  var code = 0;

	  if (has(entities, name)) {
	    return entities[name];
	  }

	  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {
	    code = name[1].toLowerCase() === 'x' ?
	      parseInt(name.slice(2), 16)
	    :
	      parseInt(name.slice(1), 10);
	    if (isValidEntityCode(code)) {
	      return fromCodePoint(code);
	    }
	  }

	  return match;
	}

	/*function replaceEntities(str) {
	  if (str.indexOf('&') < 0) { return str; }

	  return str.replace(ENTITY_RE, replaceEntityPattern);
	}*/

	function unescapeMd(str) {
	  if (str.indexOf('\\') < 0) { return str; }
	  return str.replace(UNESCAPE_MD_RE, '$1');
	}

	function unescapeAll(str) {
	  if (str.indexOf('\\') < 0 && str.indexOf('&') < 0) { return str; }

	  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {
	    if (escaped) { return escaped; }
	    return replaceEntityPattern(match, entity);
	  });
	}

	////////////////////////////////////////////////////////////////////////////////

	var HTML_ESCAPE_TEST_RE = /[&<>"]/;
	var HTML_ESCAPE_REPLACE_RE = /[&<>"]/g;
	var HTML_REPLACEMENTS = {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;'
	};

	function replaceUnsafeChar(ch) {
	  return HTML_REPLACEMENTS[ch];
	}

	function escapeHtml(str) {
	  if (HTML_ESCAPE_TEST_RE.test(str)) {
	    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);
	  }
	  return str;
	}

	////////////////////////////////////////////////////////////////////////////////

	var REGEXP_ESCAPE_RE = /[.?*+^$[\]\\(){}|-]/g;

	function escapeRE(str) {
	  return str.replace(REGEXP_ESCAPE_RE, '\\$&');
	}

	////////////////////////////////////////////////////////////////////////////////

	function isSpace(code) {
	  switch (code) {
	    case 0x09:
	    case 0x20:
	      return true;
	  }
	  return false;
	}

	// Zs (unicode class) || [\t\f\v\r\n]
	function isWhiteSpace(code) {
	  if (code >= 0x2000 && code <= 0x200A) { return true; }
	  switch (code) {
	    case 0x09: // \t
	    case 0x0A: // \n
	    case 0x0B: // \v
	    case 0x0C: // \f
	    case 0x0D: // \r
	    case 0x20:
	    case 0xA0:
	    case 0x1680:
	    case 0x202F:
	    case 0x205F:
	    case 0x3000:
	      return true;
	  }
	  return false;
	}

	////////////////////////////////////////////////////////////////////////////////

	/*eslint-disable max-len*/
	var UNICODE_PUNCT_RE = __webpack_require__(64);

	// Currently without astral characters support.
	function isPunctChar(ch) {
	  return UNICODE_PUNCT_RE.test(ch);
	}


	// Markdown ASCII punctuation characters.
	//
	// !, ", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \, ], ^, _, `, {, |, }, or ~
	// http://spec.commonmark.org/0.15/#ascii-punctuation-character
	//
	// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.
	//
	function isMdAsciiPunct(ch) {
	  switch (ch) {
	    case 0x21/* ! */:
	    case 0x22/* " */:
	    case 0x23/* # */:
	    case 0x24/* $ */:
	    case 0x25/* % */:
	    case 0x26/* & */:
	    case 0x27/* ' */:
	    case 0x28/* ( */:
	    case 0x29/* ) */:
	    case 0x2A/* * */:
	    case 0x2B/* + */:
	    case 0x2C/* , */:
	    case 0x2D/* - */:
	    case 0x2E/* . */:
	    case 0x2F/* / */:
	    case 0x3A/* : */:
	    case 0x3B/* ; */:
	    case 0x3C/* < */:
	    case 0x3D/* = */:
	    case 0x3E/* > */:
	    case 0x3F/* ? */:
	    case 0x40/* @ */:
	    case 0x5B/* [ */:
	    case 0x5C/* \ */:
	    case 0x5D/* ] */:
	    case 0x5E/* ^ */:
	    case 0x5F/* _ */:
	    case 0x60/* ` */:
	    case 0x7B/* { */:
	    case 0x7C/* | */:
	    case 0x7D/* } */:
	    case 0x7E/* ~ */:
	      return true;
	    default:
	      return false;
	  }
	}

	// Hepler to unify [reference labels].
	//
	function normalizeReference(str) {
	  // use .toUpperCase() instead of .toLowerCase()
	  // here to avoid a conflict with Object.prototype
	  // members (most notably, `__proto__`)
	  return str.trim().replace(/\s+/g, ' ').toUpperCase();
	}

	////////////////////////////////////////////////////////////////////////////////

	// Re-export libraries commonly used in both markdown-it and its plugins,
	// so plugins won't have to depend on them explicitly, which reduces their
	// bundled size (e.g. a browser build).
	//
	exports.lib                 = {};
	exports.lib.mdurl           = __webpack_require__(65);
	exports.lib.ucmicro         = __webpack_require__(70);

	exports.assign              = assign;
	exports.isString            = isString;
	exports.has                 = has;
	exports.unescapeMd          = unescapeMd;
	exports.unescapeAll         = unescapeAll;
	exports.isValidEntityCode   = isValidEntityCode;
	exports.fromCodePoint       = fromCodePoint;
	// exports.replaceEntities     = replaceEntities;
	exports.escapeHtml          = escapeHtml;
	exports.arrayReplaceAt      = arrayReplaceAt;
	exports.isSpace             = isSpace;
	exports.isWhiteSpace        = isWhiteSpace;
	exports.isMdAsciiPunct      = isMdAsciiPunct;
	exports.isPunctChar         = isPunctChar;
	exports.escapeRE            = escapeRE;
	exports.normalizeReference  = normalizeReference;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	// HTML5 entities map: { name -> utf16string }
	//
	'use strict';

	/*eslint quotes:0*/
	module.exports = __webpack_require__(63);


/***/ }),
/* 63 */
/***/ (function(module, exports) {

	module.exports = {"Aacute":"Á","aacute":"á","Abreve":"Ă","abreve":"ă","ac":"∾","acd":"∿","acE":"∾̳","Acirc":"Â","acirc":"â","acute":"´","Acy":"А","acy":"а","AElig":"Æ","aelig":"æ","af":"⁡","Afr":"𝔄","afr":"𝔞","Agrave":"À","agrave":"à","alefsym":"ℵ","aleph":"ℵ","Alpha":"Α","alpha":"α","Amacr":"Ā","amacr":"ā","amalg":"⨿","amp":"&","AMP":"&","andand":"⩕","And":"⩓","and":"∧","andd":"⩜","andslope":"⩘","andv":"⩚","ang":"∠","ange":"⦤","angle":"∠","angmsdaa":"⦨","angmsdab":"⦩","angmsdac":"⦪","angmsdad":"⦫","angmsdae":"⦬","angmsdaf":"⦭","angmsdag":"⦮","angmsdah":"⦯","angmsd":"∡","angrt":"∟","angrtvb":"⊾","angrtvbd":"⦝","angsph":"∢","angst":"Å","angzarr":"⍼","Aogon":"Ą","aogon":"ą","Aopf":"𝔸","aopf":"𝕒","apacir":"⩯","ap":"≈","apE":"⩰","ape":"≊","apid":"≋","apos":"'","ApplyFunction":"⁡","approx":"≈","approxeq":"≊","Aring":"Å","aring":"å","Ascr":"𝒜","ascr":"𝒶","Assign":"≔","ast":"*","asymp":"≈","asympeq":"≍","Atilde":"Ã","atilde":"ã","Auml":"Ä","auml":"ä","awconint":"∳","awint":"⨑","backcong":"≌","backepsilon":"϶","backprime":"‵","backsim":"∽","backsimeq":"⋍","Backslash":"∖","Barv":"⫧","barvee":"⊽","barwed":"⌅","Barwed":"⌆","barwedge":"⌅","bbrk":"⎵","bbrktbrk":"⎶","bcong":"≌","Bcy":"Б","bcy":"б","bdquo":"„","becaus":"∵","because":"∵","Because":"∵","bemptyv":"⦰","bepsi":"϶","bernou":"ℬ","Bernoullis":"ℬ","Beta":"Β","beta":"β","beth":"ℶ","between":"≬","Bfr":"𝔅","bfr":"𝔟","bigcap":"⋂","bigcirc":"◯","bigcup":"⋃","bigodot":"⨀","bigoplus":"⨁","bigotimes":"⨂","bigsqcup":"⨆","bigstar":"★","bigtriangledown":"▽","bigtriangleup":"△","biguplus":"⨄","bigvee":"⋁","bigwedge":"⋀","bkarow":"⤍","blacklozenge":"⧫","blacksquare":"▪","blacktriangle":"▴","blacktriangledown":"▾","blacktriangleleft":"◂","blacktriangleright":"▸","blank":"␣","blk12":"▒","blk14":"░","blk34":"▓","block":"█","bne":"=⃥","bnequiv":"≡⃥","bNot":"⫭","bnot":"⌐","Bopf":"𝔹","bopf":"𝕓","bot":"⊥","bottom":"⊥","bowtie":"⋈","boxbox":"⧉","boxdl":"┐","boxdL":"╕","boxDl":"╖","boxDL":"╗","boxdr":"┌","boxdR":"╒","boxDr":"╓","boxDR":"╔","boxh":"─","boxH":"═","boxhd":"┬","boxHd":"╤","boxhD":"╥","boxHD":"╦","boxhu":"┴","boxHu":"╧","boxhU":"╨","boxHU":"╩","boxminus":"⊟","boxplus":"⊞","boxtimes":"⊠","boxul":"┘","boxuL":"╛","boxUl":"╜","boxUL":"╝","boxur":"└","boxuR":"╘","boxUr":"╙","boxUR":"╚","boxv":"│","boxV":"║","boxvh":"┼","boxvH":"╪","boxVh":"╫","boxVH":"╬","boxvl":"┤","boxvL":"╡","boxVl":"╢","boxVL":"╣","boxvr":"├","boxvR":"╞","boxVr":"╟","boxVR":"╠","bprime":"‵","breve":"˘","Breve":"˘","brvbar":"¦","bscr":"𝒷","Bscr":"ℬ","bsemi":"⁏","bsim":"∽","bsime":"⋍","bsolb":"⧅","bsol":"\\","bsolhsub":"⟈","bull":"•","bullet":"•","bump":"≎","bumpE":"⪮","bumpe":"≏","Bumpeq":"≎","bumpeq":"≏","Cacute":"Ć","cacute":"ć","capand":"⩄","capbrcup":"⩉","capcap":"⩋","cap":"∩","Cap":"⋒","capcup":"⩇","capdot":"⩀","CapitalDifferentialD":"ⅅ","caps":"∩︀","caret":"⁁","caron":"ˇ","Cayleys":"ℭ","ccaps":"⩍","Ccaron":"Č","ccaron":"č","Ccedil":"Ç","ccedil":"ç","Ccirc":"Ĉ","ccirc":"ĉ","Cconint":"∰","ccups":"⩌","ccupssm":"⩐","Cdot":"Ċ","cdot":"ċ","cedil":"¸","Cedilla":"¸","cemptyv":"⦲","cent":"¢","centerdot":"·","CenterDot":"·","cfr":"𝔠","Cfr":"ℭ","CHcy":"Ч","chcy":"ч","check":"✓","checkmark":"✓","Chi":"Χ","chi":"χ","circ":"ˆ","circeq":"≗","circlearrowleft":"↺","circlearrowright":"↻","circledast":"⊛","circledcirc":"⊚","circleddash":"⊝","CircleDot":"⊙","circledR":"®","circledS":"Ⓢ","CircleMinus":"⊖","CirclePlus":"⊕","CircleTimes":"⊗","cir":"○","cirE":"⧃","cire":"≗","cirfnint":"⨐","cirmid":"⫯","cirscir":"⧂","ClockwiseContourIntegral":"∲","CloseCurlyDoubleQuote":"”","CloseCurlyQuote":"’","clubs":"♣","clubsuit":"♣","colon":":","Colon":"∷","Colone":"⩴","colone":"≔","coloneq":"≔","comma":",","commat":"@","comp":"∁","compfn":"∘","complement":"∁","complexes":"ℂ","cong":"≅","congdot":"⩭","Congruent":"≡","conint":"∮","Conint":"∯","ContourIntegral":"∮","copf":"𝕔","Copf":"ℂ","coprod":"∐","Coproduct":"∐","copy":"©","COPY":"©","copysr":"℗","CounterClockwiseContourIntegral":"∳","crarr":"↵","cross":"✗","Cross":"⨯","Cscr":"𝒞","cscr":"𝒸","csub":"⫏","csube":"⫑","csup":"⫐","csupe":"⫒","ctdot":"⋯","cudarrl":"⤸","cudarrr":"⤵","cuepr":"⋞","cuesc":"⋟","cularr":"↶","cularrp":"⤽","cupbrcap":"⩈","cupcap":"⩆","CupCap":"≍","cup":"∪","Cup":"⋓","cupcup":"⩊","cupdot":"⊍","cupor":"⩅","cups":"∪︀","curarr":"↷","curarrm":"⤼","curlyeqprec":"⋞","curlyeqsucc":"⋟","curlyvee":"⋎","curlywedge":"⋏","curren":"¤","curvearrowleft":"↶","curvearrowright":"↷","cuvee":"⋎","cuwed":"⋏","cwconint":"∲","cwint":"∱","cylcty":"⌭","dagger":"†","Dagger":"‡","daleth":"ℸ","darr":"↓","Darr":"↡","dArr":"⇓","dash":"‐","Dashv":"⫤","dashv":"⊣","dbkarow":"⤏","dblac":"˝","Dcaron":"Ď","dcaron":"ď","Dcy":"Д","dcy":"д","ddagger":"‡","ddarr":"⇊","DD":"ⅅ","dd":"ⅆ","DDotrahd":"⤑","ddotseq":"⩷","deg":"°","Del":"∇","Delta":"Δ","delta":"δ","demptyv":"⦱","dfisht":"⥿","Dfr":"𝔇","dfr":"𝔡","dHar":"⥥","dharl":"⇃","dharr":"⇂","DiacriticalAcute":"´","DiacriticalDot":"˙","DiacriticalDoubleAcute":"˝","DiacriticalGrave":"`","DiacriticalTilde":"˜","diam":"⋄","diamond":"⋄","Diamond":"⋄","diamondsuit":"♦","diams":"♦","die":"¨","DifferentialD":"ⅆ","digamma":"ϝ","disin":"⋲","div":"÷","divide":"÷","divideontimes":"⋇","divonx":"⋇","DJcy":"Ђ","djcy":"ђ","dlcorn":"⌞","dlcrop":"⌍","dollar":"$","Dopf":"𝔻","dopf":"𝕕","Dot":"¨","dot":"˙","DotDot":"⃜","doteq":"≐","doteqdot":"≑","DotEqual":"≐","dotminus":"∸","dotplus":"∔","dotsquare":"⊡","doublebarwedge":"⌆","DoubleContourIntegral":"∯","DoubleDot":"¨","DoubleDownArrow":"⇓","DoubleLeftArrow":"⇐","DoubleLeftRightArrow":"⇔","DoubleLeftTee":"⫤","DoubleLongLeftArrow":"⟸","DoubleLongLeftRightArrow":"⟺","DoubleLongRightArrow":"⟹","DoubleRightArrow":"⇒","DoubleRightTee":"⊨","DoubleUpArrow":"⇑","DoubleUpDownArrow":"⇕","DoubleVerticalBar":"∥","DownArrowBar":"⤓","downarrow":"↓","DownArrow":"↓","Downarrow":"⇓","DownArrowUpArrow":"⇵","DownBreve":"̑","downdownarrows":"⇊","downharpoonleft":"⇃","downharpoonright":"⇂","DownLeftRightVector":"⥐","DownLeftTeeVector":"⥞","DownLeftVectorBar":"⥖","DownLeftVector":"↽","DownRightTeeVector":"⥟","DownRightVectorBar":"⥗","DownRightVector":"⇁","DownTeeArrow":"↧","DownTee":"⊤","drbkarow":"⤐","drcorn":"⌟","drcrop":"⌌","Dscr":"𝒟","dscr":"𝒹","DScy":"Ѕ","dscy":"ѕ","dsol":"⧶","Dstrok":"Đ","dstrok":"đ","dtdot":"⋱","dtri":"▿","dtrif":"▾","duarr":"⇵","duhar":"⥯","dwangle":"⦦","DZcy":"Џ","dzcy":"џ","dzigrarr":"⟿","Eacute":"É","eacute":"é","easter":"⩮","Ecaron":"Ě","ecaron":"ě","Ecirc":"Ê","ecirc":"ê","ecir":"≖","ecolon":"≕","Ecy":"Э","ecy":"э","eDDot":"⩷","Edot":"Ė","edot":"ė","eDot":"≑","ee":"ⅇ","efDot":"≒","Efr":"𝔈","efr":"𝔢","eg":"⪚","Egrave":"È","egrave":"è","egs":"⪖","egsdot":"⪘","el":"⪙","Element":"∈","elinters":"⏧","ell":"ℓ","els":"⪕","elsdot":"⪗","Emacr":"Ē","emacr":"ē","empty":"∅","emptyset":"∅","EmptySmallSquare":"◻","emptyv":"∅","EmptyVerySmallSquare":"▫","emsp13":" ","emsp14":" ","emsp":" ","ENG":"Ŋ","eng":"ŋ","ensp":" ","Eogon":"Ę","eogon":"ę","Eopf":"𝔼","eopf":"𝕖","epar":"⋕","eparsl":"⧣","eplus":"⩱","epsi":"ε","Epsilon":"Ε","epsilon":"ε","epsiv":"ϵ","eqcirc":"≖","eqcolon":"≕","eqsim":"≂","eqslantgtr":"⪖","eqslantless":"⪕","Equal":"⩵","equals":"=","EqualTilde":"≂","equest":"≟","Equilibrium":"⇌","equiv":"≡","equivDD":"⩸","eqvparsl":"⧥","erarr":"⥱","erDot":"≓","escr":"ℯ","Escr":"ℰ","esdot":"≐","Esim":"⩳","esim":"≂","Eta":"Η","eta":"η","ETH":"Ð","eth":"ð","Euml":"Ë","euml":"ë","euro":"€","excl":"!","exist":"∃","Exists":"∃","expectation":"ℰ","exponentiale":"ⅇ","ExponentialE":"ⅇ","fallingdotseq":"≒","Fcy":"Ф","fcy":"ф","female":"♀","ffilig":"ﬃ","fflig":"ﬀ","ffllig":"ﬄ","Ffr":"𝔉","ffr":"𝔣","filig":"ﬁ","FilledSmallSquare":"◼","FilledVerySmallSquare":"▪","fjlig":"fj","flat":"♭","fllig":"ﬂ","fltns":"▱","fnof":"ƒ","Fopf":"𝔽","fopf":"𝕗","forall":"∀","ForAll":"∀","fork":"⋔","forkv":"⫙","Fouriertrf":"ℱ","fpartint":"⨍","frac12":"½","frac13":"⅓","frac14":"¼","frac15":"⅕","frac16":"⅙","frac18":"⅛","frac23":"⅔","frac25":"⅖","frac34":"¾","frac35":"⅗","frac38":"⅜","frac45":"⅘","frac56":"⅚","frac58":"⅝","frac78":"⅞","frasl":"⁄","frown":"⌢","fscr":"𝒻","Fscr":"ℱ","gacute":"ǵ","Gamma":"Γ","gamma":"γ","Gammad":"Ϝ","gammad":"ϝ","gap":"⪆","Gbreve":"Ğ","gbreve":"ğ","Gcedil":"Ģ","Gcirc":"Ĝ","gcirc":"ĝ","Gcy":"Г","gcy":"г","Gdot":"Ġ","gdot":"ġ","ge":"≥","gE":"≧","gEl":"⪌","gel":"⋛","geq":"≥","geqq":"≧","geqslant":"⩾","gescc":"⪩","ges":"⩾","gesdot":"⪀","gesdoto":"⪂","gesdotol":"⪄","gesl":"⋛︀","gesles":"⪔","Gfr":"𝔊","gfr":"𝔤","gg":"≫","Gg":"⋙","ggg":"⋙","gimel":"ℷ","GJcy":"Ѓ","gjcy":"ѓ","gla":"⪥","gl":"≷","glE":"⪒","glj":"⪤","gnap":"⪊","gnapprox":"⪊","gne":"⪈","gnE":"≩","gneq":"⪈","gneqq":"≩","gnsim":"⋧","Gopf":"𝔾","gopf":"𝕘","grave":"`","GreaterEqual":"≥","GreaterEqualLess":"⋛","GreaterFullEqual":"≧","GreaterGreater":"⪢","GreaterLess":"≷","GreaterSlantEqual":"⩾","GreaterTilde":"≳","Gscr":"𝒢","gscr":"ℊ","gsim":"≳","gsime":"⪎","gsiml":"⪐","gtcc":"⪧","gtcir":"⩺","gt":">","GT":">","Gt":"≫","gtdot":"⋗","gtlPar":"⦕","gtquest":"⩼","gtrapprox":"⪆","gtrarr":"⥸","gtrdot":"⋗","gtreqless":"⋛","gtreqqless":"⪌","gtrless":"≷","gtrsim":"≳","gvertneqq":"≩︀","gvnE":"≩︀","Hacek":"ˇ","hairsp":" ","half":"½","hamilt":"ℋ","HARDcy":"Ъ","hardcy":"ъ","harrcir":"⥈","harr":"↔","hArr":"⇔","harrw":"↭","Hat":"^","hbar":"ℏ","Hcirc":"Ĥ","hcirc":"ĥ","hearts":"♥","heartsuit":"♥","hellip":"…","hercon":"⊹","hfr":"𝔥","Hfr":"ℌ","HilbertSpace":"ℋ","hksearow":"⤥","hkswarow":"⤦","hoarr":"⇿","homtht":"∻","hookleftarrow":"↩","hookrightarrow":"↪","hopf":"𝕙","Hopf":"ℍ","horbar":"―","HorizontalLine":"─","hscr":"𝒽","Hscr":"ℋ","hslash":"ℏ","Hstrok":"Ħ","hstrok":"ħ","HumpDownHump":"≎","HumpEqual":"≏","hybull":"⁃","hyphen":"‐","Iacute":"Í","iacute":"í","ic":"⁣","Icirc":"Î","icirc":"î","Icy":"И","icy":"и","Idot":"İ","IEcy":"Е","iecy":"е","iexcl":"¡","iff":"⇔","ifr":"𝔦","Ifr":"ℑ","Igrave":"Ì","igrave":"ì","ii":"ⅈ","iiiint":"⨌","iiint":"∭","iinfin":"⧜","iiota":"℩","IJlig":"Ĳ","ijlig":"ĳ","Imacr":"Ī","imacr":"ī","image":"ℑ","ImaginaryI":"ⅈ","imagline":"ℐ","imagpart":"ℑ","imath":"ı","Im":"ℑ","imof":"⊷","imped":"Ƶ","Implies":"⇒","incare":"℅","in":"∈","infin":"∞","infintie":"⧝","inodot":"ı","intcal":"⊺","int":"∫","Int":"∬","integers":"ℤ","Integral":"∫","intercal":"⊺","Intersection":"⋂","intlarhk":"⨗","intprod":"⨼","InvisibleComma":"⁣","InvisibleTimes":"⁢","IOcy":"Ё","iocy":"ё","Iogon":"Į","iogon":"į","Iopf":"𝕀","iopf":"𝕚","Iota":"Ι","iota":"ι","iprod":"⨼","iquest":"¿","iscr":"𝒾","Iscr":"ℐ","isin":"∈","isindot":"⋵","isinE":"⋹","isins":"⋴","isinsv":"⋳","isinv":"∈","it":"⁢","Itilde":"Ĩ","itilde":"ĩ","Iukcy":"І","iukcy":"і","Iuml":"Ï","iuml":"ï","Jcirc":"Ĵ","jcirc":"ĵ","Jcy":"Й","jcy":"й","Jfr":"𝔍","jfr":"𝔧","jmath":"ȷ","Jopf":"𝕁","jopf":"𝕛","Jscr":"𝒥","jscr":"𝒿","Jsercy":"Ј","jsercy":"ј","Jukcy":"Є","jukcy":"є","Kappa":"Κ","kappa":"κ","kappav":"ϰ","Kcedil":"Ķ","kcedil":"ķ","Kcy":"К","kcy":"к","Kfr":"𝔎","kfr":"𝔨","kgreen":"ĸ","KHcy":"Х","khcy":"х","KJcy":"Ќ","kjcy":"ќ","Kopf":"𝕂","kopf":"𝕜","Kscr":"𝒦","kscr":"𝓀","lAarr":"⇚","Lacute":"Ĺ","lacute":"ĺ","laemptyv":"⦴","lagran":"ℒ","Lambda":"Λ","lambda":"λ","lang":"⟨","Lang":"⟪","langd":"⦑","langle":"⟨","lap":"⪅","Laplacetrf":"ℒ","laquo":"«","larrb":"⇤","larrbfs":"⤟","larr":"←","Larr":"↞","lArr":"⇐","larrfs":"⤝","larrhk":"↩","larrlp":"↫","larrpl":"⤹","larrsim":"⥳","larrtl":"↢","latail":"⤙","lAtail":"⤛","lat":"⪫","late":"⪭","lates":"⪭︀","lbarr":"⤌","lBarr":"⤎","lbbrk":"❲","lbrace":"{","lbrack":"[","lbrke":"⦋","lbrksld":"⦏","lbrkslu":"⦍","Lcaron":"Ľ","lcaron":"ľ","Lcedil":"Ļ","lcedil":"ļ","lceil":"⌈","lcub":"{","Lcy":"Л","lcy":"л","ldca":"⤶","ldquo":"“","ldquor":"„","ldrdhar":"⥧","ldrushar":"⥋","ldsh":"↲","le":"≤","lE":"≦","LeftAngleBracket":"⟨","LeftArrowBar":"⇤","leftarrow":"←","LeftArrow":"←","Leftarrow":"⇐","LeftArrowRightArrow":"⇆","leftarrowtail":"↢","LeftCeiling":"⌈","LeftDoubleBracket":"⟦","LeftDownTeeVector":"⥡","LeftDownVectorBar":"⥙","LeftDownVector":"⇃","LeftFloor":"⌊","leftharpoondown":"↽","leftharpoonup":"↼","leftleftarrows":"⇇","leftrightarrow":"↔","LeftRightArrow":"↔","Leftrightarrow":"⇔","leftrightarrows":"⇆","leftrightharpoons":"⇋","leftrightsquigarrow":"↭","LeftRightVector":"⥎","LeftTeeArrow":"↤","LeftTee":"⊣","LeftTeeVector":"⥚","leftthreetimes":"⋋","LeftTriangleBar":"⧏","LeftTriangle":"⊲","LeftTriangleEqual":"⊴","LeftUpDownVector":"⥑","LeftUpTeeVector":"⥠","LeftUpVectorBar":"⥘","LeftUpVector":"↿","LeftVectorBar":"⥒","LeftVector":"↼","lEg":"⪋","leg":"⋚","leq":"≤","leqq":"≦","leqslant":"⩽","lescc":"⪨","les":"⩽","lesdot":"⩿","lesdoto":"⪁","lesdotor":"⪃","lesg":"⋚︀","lesges":"⪓","lessapprox":"⪅","lessdot":"⋖","lesseqgtr":"⋚","lesseqqgtr":"⪋","LessEqualGreater":"⋚","LessFullEqual":"≦","LessGreater":"≶","lessgtr":"≶","LessLess":"⪡","lesssim":"≲","LessSlantEqual":"⩽","LessTilde":"≲","lfisht":"⥼","lfloor":"⌊","Lfr":"𝔏","lfr":"𝔩","lg":"≶","lgE":"⪑","lHar":"⥢","lhard":"↽","lharu":"↼","lharul":"⥪","lhblk":"▄","LJcy":"Љ","ljcy":"љ","llarr":"⇇","ll":"≪","Ll":"⋘","llcorner":"⌞","Lleftarrow":"⇚","llhard":"⥫","lltri":"◺","Lmidot":"Ŀ","lmidot":"ŀ","lmoustache":"⎰","lmoust":"⎰","lnap":"⪉","lnapprox":"⪉","lne":"⪇","lnE":"≨","lneq":"⪇","lneqq":"≨","lnsim":"⋦","loang":"⟬","loarr":"⇽","lobrk":"⟦","longleftarrow":"⟵","LongLeftArrow":"⟵","Longleftarrow":"⟸","longleftrightarrow":"⟷","LongLeftRightArrow":"⟷","Longleftrightarrow":"⟺","longmapsto":"⟼","longrightarrow":"⟶","LongRightArrow":"⟶","Longrightarrow":"⟹","looparrowleft":"↫","looparrowright":"↬","lopar":"⦅","Lopf":"𝕃","lopf":"𝕝","loplus":"⨭","lotimes":"⨴","lowast":"∗","lowbar":"_","LowerLeftArrow":"↙","LowerRightArrow":"↘","loz":"◊","lozenge":"◊","lozf":"⧫","lpar":"(","lparlt":"⦓","lrarr":"⇆","lrcorner":"⌟","lrhar":"⇋","lrhard":"⥭","lrm":"‎","lrtri":"⊿","lsaquo":"‹","lscr":"𝓁","Lscr":"ℒ","lsh":"↰","Lsh":"↰","lsim":"≲","lsime":"⪍","lsimg":"⪏","lsqb":"[","lsquo":"‘","lsquor":"‚","Lstrok":"Ł","lstrok":"ł","ltcc":"⪦","ltcir":"⩹","lt":"<","LT":"<","Lt":"≪","ltdot":"⋖","lthree":"⋋","ltimes":"⋉","ltlarr":"⥶","ltquest":"⩻","ltri":"◃","ltrie":"⊴","ltrif":"◂","ltrPar":"⦖","lurdshar":"⥊","luruhar":"⥦","lvertneqq":"≨︀","lvnE":"≨︀","macr":"¯","male":"♂","malt":"✠","maltese":"✠","Map":"⤅","map":"↦","mapsto":"↦","mapstodown":"↧","mapstoleft":"↤","mapstoup":"↥","marker":"▮","mcomma":"⨩","Mcy":"М","mcy":"м","mdash":"—","mDDot":"∺","measuredangle":"∡","MediumSpace":" ","Mellintrf":"ℳ","Mfr":"𝔐","mfr":"𝔪","mho":"℧","micro":"µ","midast":"*","midcir":"⫰","mid":"∣","middot":"·","minusb":"⊟","minus":"−","minusd":"∸","minusdu":"⨪","MinusPlus":"∓","mlcp":"⫛","mldr":"…","mnplus":"∓","models":"⊧","Mopf":"𝕄","mopf":"𝕞","mp":"∓","mscr":"𝓂","Mscr":"ℳ","mstpos":"∾","Mu":"Μ","mu":"μ","multimap":"⊸","mumap":"⊸","nabla":"∇","Nacute":"Ń","nacute":"ń","nang":"∠⃒","nap":"≉","napE":"⩰̸","napid":"≋̸","napos":"ŉ","napprox":"≉","natural":"♮","naturals":"ℕ","natur":"♮","nbsp":" ","nbump":"≎̸","nbumpe":"≏̸","ncap":"⩃","Ncaron":"Ň","ncaron":"ň","Ncedil":"Ņ","ncedil":"ņ","ncong":"≇","ncongdot":"⩭̸","ncup":"⩂","Ncy":"Н","ncy":"н","ndash":"–","nearhk":"⤤","nearr":"↗","neArr":"⇗","nearrow":"↗","ne":"≠","nedot":"≐̸","NegativeMediumSpace":"​","NegativeThickSpace":"​","NegativeThinSpace":"​","NegativeVeryThinSpace":"​","nequiv":"≢","nesear":"⤨","nesim":"≂̸","NestedGreaterGreater":"≫","NestedLessLess":"≪","NewLine":"\n","nexist":"∄","nexists":"∄","Nfr":"𝔑","nfr":"𝔫","ngE":"≧̸","nge":"≱","ngeq":"≱","ngeqq":"≧̸","ngeqslant":"⩾̸","nges":"⩾̸","nGg":"⋙̸","ngsim":"≵","nGt":"≫⃒","ngt":"≯","ngtr":"≯","nGtv":"≫̸","nharr":"↮","nhArr":"⇎","nhpar":"⫲","ni":"∋","nis":"⋼","nisd":"⋺","niv":"∋","NJcy":"Њ","njcy":"њ","nlarr":"↚","nlArr":"⇍","nldr":"‥","nlE":"≦̸","nle":"≰","nleftarrow":"↚","nLeftarrow":"⇍","nleftrightarrow":"↮","nLeftrightarrow":"⇎","nleq":"≰","nleqq":"≦̸","nleqslant":"⩽̸","nles":"⩽̸","nless":"≮","nLl":"⋘̸","nlsim":"≴","nLt":"≪⃒","nlt":"≮","nltri":"⋪","nltrie":"⋬","nLtv":"≪̸","nmid":"∤","NoBreak":"⁠","NonBreakingSpace":" ","nopf":"𝕟","Nopf":"ℕ","Not":"⫬","not":"¬","NotCongruent":"≢","NotCupCap":"≭","NotDoubleVerticalBar":"∦","NotElement":"∉","NotEqual":"≠","NotEqualTilde":"≂̸","NotExists":"∄","NotGreater":"≯","NotGreaterEqual":"≱","NotGreaterFullEqual":"≧̸","NotGreaterGreater":"≫̸","NotGreaterLess":"≹","NotGreaterSlantEqual":"⩾̸","NotGreaterTilde":"≵","NotHumpDownHump":"≎̸","NotHumpEqual":"≏̸","notin":"∉","notindot":"⋵̸","notinE":"⋹̸","notinva":"∉","notinvb":"⋷","notinvc":"⋶","NotLeftTriangleBar":"⧏̸","NotLeftTriangle":"⋪","NotLeftTriangleEqual":"⋬","NotLess":"≮","NotLessEqual":"≰","NotLessGreater":"≸","NotLessLess":"≪̸","NotLessSlantEqual":"⩽̸","NotLessTilde":"≴","NotNestedGreaterGreater":"⪢̸","NotNestedLessLess":"⪡̸","notni":"∌","notniva":"∌","notnivb":"⋾","notnivc":"⋽","NotPrecedes":"⊀","NotPrecedesEqual":"⪯̸","NotPrecedesSlantEqual":"⋠","NotReverseElement":"∌","NotRightTriangleBar":"⧐̸","NotRightTriangle":"⋫","NotRightTriangleEqual":"⋭","NotSquareSubset":"⊏̸","NotSquareSubsetEqual":"⋢","NotSquareSuperset":"⊐̸","NotSquareSupersetEqual":"⋣","NotSubset":"⊂⃒","NotSubsetEqual":"⊈","NotSucceeds":"⊁","NotSucceedsEqual":"⪰̸","NotSucceedsSlantEqual":"⋡","NotSucceedsTilde":"≿̸","NotSuperset":"⊃⃒","NotSupersetEqual":"⊉","NotTilde":"≁","NotTildeEqual":"≄","NotTildeFullEqual":"≇","NotTildeTilde":"≉","NotVerticalBar":"∤","nparallel":"∦","npar":"∦","nparsl":"⫽⃥","npart":"∂̸","npolint":"⨔","npr":"⊀","nprcue":"⋠","nprec":"⊀","npreceq":"⪯̸","npre":"⪯̸","nrarrc":"⤳̸","nrarr":"↛","nrArr":"⇏","nrarrw":"↝̸","nrightarrow":"↛","nRightarrow":"⇏","nrtri":"⋫","nrtrie":"⋭","nsc":"⊁","nsccue":"⋡","nsce":"⪰̸","Nscr":"𝒩","nscr":"𝓃","nshortmid":"∤","nshortparallel":"∦","nsim":"≁","nsime":"≄","nsimeq":"≄","nsmid":"∤","nspar":"∦","nsqsube":"⋢","nsqsupe":"⋣","nsub":"⊄","nsubE":"⫅̸","nsube":"⊈","nsubset":"⊂⃒","nsubseteq":"⊈","nsubseteqq":"⫅̸","nsucc":"⊁","nsucceq":"⪰̸","nsup":"⊅","nsupE":"⫆̸","nsupe":"⊉","nsupset":"⊃⃒","nsupseteq":"⊉","nsupseteqq":"⫆̸","ntgl":"≹","Ntilde":"Ñ","ntilde":"ñ","ntlg":"≸","ntriangleleft":"⋪","ntrianglelefteq":"⋬","ntriangleright":"⋫","ntrianglerighteq":"⋭","Nu":"Ν","nu":"ν","num":"#","numero":"№","numsp":" ","nvap":"≍⃒","nvdash":"⊬","nvDash":"⊭","nVdash":"⊮","nVDash":"⊯","nvge":"≥⃒","nvgt":">⃒","nvHarr":"⤄","nvinfin":"⧞","nvlArr":"⤂","nvle":"≤⃒","nvlt":"<⃒","nvltrie":"⊴⃒","nvrArr":"⤃","nvrtrie":"⊵⃒","nvsim":"∼⃒","nwarhk":"⤣","nwarr":"↖","nwArr":"⇖","nwarrow":"↖","nwnear":"⤧","Oacute":"Ó","oacute":"ó","oast":"⊛","Ocirc":"Ô","ocirc":"ô","ocir":"⊚","Ocy":"О","ocy":"о","odash":"⊝","Odblac":"Ő","odblac":"ő","odiv":"⨸","odot":"⊙","odsold":"⦼","OElig":"Œ","oelig":"œ","ofcir":"⦿","Ofr":"𝔒","ofr":"𝔬","ogon":"˛","Ograve":"Ò","ograve":"ò","ogt":"⧁","ohbar":"⦵","ohm":"Ω","oint":"∮","olarr":"↺","olcir":"⦾","olcross":"⦻","oline":"‾","olt":"⧀","Omacr":"Ō","omacr":"ō","Omega":"Ω","omega":"ω","Omicron":"Ο","omicron":"ο","omid":"⦶","ominus":"⊖","Oopf":"𝕆","oopf":"𝕠","opar":"⦷","OpenCurlyDoubleQuote":"“","OpenCurlyQuote":"‘","operp":"⦹","oplus":"⊕","orarr":"↻","Or":"⩔","or":"∨","ord":"⩝","order":"ℴ","orderof":"ℴ","ordf":"ª","ordm":"º","origof":"⊶","oror":"⩖","orslope":"⩗","orv":"⩛","oS":"Ⓢ","Oscr":"𝒪","oscr":"ℴ","Oslash":"Ø","oslash":"ø","osol":"⊘","Otilde":"Õ","otilde":"õ","otimesas":"⨶","Otimes":"⨷","otimes":"⊗","Ouml":"Ö","ouml":"ö","ovbar":"⌽","OverBar":"‾","OverBrace":"⏞","OverBracket":"⎴","OverParenthesis":"⏜","para":"¶","parallel":"∥","par":"∥","parsim":"⫳","parsl":"⫽","part":"∂","PartialD":"∂","Pcy":"П","pcy":"п","percnt":"%","period":".","permil":"‰","perp":"⊥","pertenk":"‱","Pfr":"𝔓","pfr":"𝔭","Phi":"Φ","phi":"φ","phiv":"ϕ","phmmat":"ℳ","phone":"☎","Pi":"Π","pi":"π","pitchfork":"⋔","piv":"ϖ","planck":"ℏ","planckh":"ℎ","plankv":"ℏ","plusacir":"⨣","plusb":"⊞","pluscir":"⨢","plus":"+","plusdo":"∔","plusdu":"⨥","pluse":"⩲","PlusMinus":"±","plusmn":"±","plussim":"⨦","plustwo":"⨧","pm":"±","Poincareplane":"ℌ","pointint":"⨕","popf":"𝕡","Popf":"ℙ","pound":"£","prap":"⪷","Pr":"⪻","pr":"≺","prcue":"≼","precapprox":"⪷","prec":"≺","preccurlyeq":"≼","Precedes":"≺","PrecedesEqual":"⪯","PrecedesSlantEqual":"≼","PrecedesTilde":"≾","preceq":"⪯","precnapprox":"⪹","precneqq":"⪵","precnsim":"⋨","pre":"⪯","prE":"⪳","precsim":"≾","prime":"′","Prime":"″","primes":"ℙ","prnap":"⪹","prnE":"⪵","prnsim":"⋨","prod":"∏","Product":"∏","profalar":"⌮","profline":"⌒","profsurf":"⌓","prop":"∝","Proportional":"∝","Proportion":"∷","propto":"∝","prsim":"≾","prurel":"⊰","Pscr":"𝒫","pscr":"𝓅","Psi":"Ψ","psi":"ψ","puncsp":" ","Qfr":"𝔔","qfr":"𝔮","qint":"⨌","qopf":"𝕢","Qopf":"ℚ","qprime":"⁗","Qscr":"𝒬","qscr":"𝓆","quaternions":"ℍ","quatint":"⨖","quest":"?","questeq":"≟","quot":"\"","QUOT":"\"","rAarr":"⇛","race":"∽̱","Racute":"Ŕ","racute":"ŕ","radic":"√","raemptyv":"⦳","rang":"⟩","Rang":"⟫","rangd":"⦒","range":"⦥","rangle":"⟩","raquo":"»","rarrap":"⥵","rarrb":"⇥","rarrbfs":"⤠","rarrc":"⤳","rarr":"→","Rarr":"↠","rArr":"⇒","rarrfs":"⤞","rarrhk":"↪","rarrlp":"↬","rarrpl":"⥅","rarrsim":"⥴","Rarrtl":"⤖","rarrtl":"↣","rarrw":"↝","ratail":"⤚","rAtail":"⤜","ratio":"∶","rationals":"ℚ","rbarr":"⤍","rBarr":"⤏","RBarr":"⤐","rbbrk":"❳","rbrace":"}","rbrack":"]","rbrke":"⦌","rbrksld":"⦎","rbrkslu":"⦐","Rcaron":"Ř","rcaron":"ř","Rcedil":"Ŗ","rcedil":"ŗ","rceil":"⌉","rcub":"}","Rcy":"Р","rcy":"р","rdca":"⤷","rdldhar":"⥩","rdquo":"”","rdquor":"”","rdsh":"↳","real":"ℜ","realine":"ℛ","realpart":"ℜ","reals":"ℝ","Re":"ℜ","rect":"▭","reg":"®","REG":"®","ReverseElement":"∋","ReverseEquilibrium":"⇋","ReverseUpEquilibrium":"⥯","rfisht":"⥽","rfloor":"⌋","rfr":"𝔯","Rfr":"ℜ","rHar":"⥤","rhard":"⇁","rharu":"⇀","rharul":"⥬","Rho":"Ρ","rho":"ρ","rhov":"ϱ","RightAngleBracket":"⟩","RightArrowBar":"⇥","rightarrow":"→","RightArrow":"→","Rightarrow":"⇒","RightArrowLeftArrow":"⇄","rightarrowtail":"↣","RightCeiling":"⌉","RightDoubleBracket":"⟧","RightDownTeeVector":"⥝","RightDownVectorBar":"⥕","RightDownVector":"⇂","RightFloor":"⌋","rightharpoondown":"⇁","rightharpoonup":"⇀","rightleftarrows":"⇄","rightleftharpoons":"⇌","rightrightarrows":"⇉","rightsquigarrow":"↝","RightTeeArrow":"↦","RightTee":"⊢","RightTeeVector":"⥛","rightthreetimes":"⋌","RightTriangleBar":"⧐","RightTriangle":"⊳","RightTriangleEqual":"⊵","RightUpDownVector":"⥏","RightUpTeeVector":"⥜","RightUpVectorBar":"⥔","RightUpVector":"↾","RightVectorBar":"⥓","RightVector":"⇀","ring":"˚","risingdotseq":"≓","rlarr":"⇄","rlhar":"⇌","rlm":"‏","rmoustache":"⎱","rmoust":"⎱","rnmid":"⫮","roang":"⟭","roarr":"⇾","robrk":"⟧","ropar":"⦆","ropf":"𝕣","Ropf":"ℝ","roplus":"⨮","rotimes":"⨵","RoundImplies":"⥰","rpar":")","rpargt":"⦔","rppolint":"⨒","rrarr":"⇉","Rrightarrow":"⇛","rsaquo":"›","rscr":"𝓇","Rscr":"ℛ","rsh":"↱","Rsh":"↱","rsqb":"]","rsquo":"’","rsquor":"’","rthree":"⋌","rtimes":"⋊","rtri":"▹","rtrie":"⊵","rtrif":"▸","rtriltri":"⧎","RuleDelayed":"⧴","ruluhar":"⥨","rx":"℞","Sacute":"Ś","sacute":"ś","sbquo":"‚","scap":"⪸","Scaron":"Š","scaron":"š","Sc":"⪼","sc":"≻","sccue":"≽","sce":"⪰","scE":"⪴","Scedil":"Ş","scedil":"ş","Scirc":"Ŝ","scirc":"ŝ","scnap":"⪺","scnE":"⪶","scnsim":"⋩","scpolint":"⨓","scsim":"≿","Scy":"С","scy":"с","sdotb":"⊡","sdot":"⋅","sdote":"⩦","searhk":"⤥","searr":"↘","seArr":"⇘","searrow":"↘","sect":"§","semi":";","seswar":"⤩","setminus":"∖","setmn":"∖","sext":"✶","Sfr":"𝔖","sfr":"𝔰","sfrown":"⌢","sharp":"♯","SHCHcy":"Щ","shchcy":"щ","SHcy":"Ш","shcy":"ш","ShortDownArrow":"↓","ShortLeftArrow":"←","shortmid":"∣","shortparallel":"∥","ShortRightArrow":"→","ShortUpArrow":"↑","shy":"­","Sigma":"Σ","sigma":"σ","sigmaf":"ς","sigmav":"ς","sim":"∼","simdot":"⩪","sime":"≃","simeq":"≃","simg":"⪞","simgE":"⪠","siml":"⪝","simlE":"⪟","simne":"≆","simplus":"⨤","simrarr":"⥲","slarr":"←","SmallCircle":"∘","smallsetminus":"∖","smashp":"⨳","smeparsl":"⧤","smid":"∣","smile":"⌣","smt":"⪪","smte":"⪬","smtes":"⪬︀","SOFTcy":"Ь","softcy":"ь","solbar":"⌿","solb":"⧄","sol":"/","Sopf":"𝕊","sopf":"𝕤","spades":"♠","spadesuit":"♠","spar":"∥","sqcap":"⊓","sqcaps":"⊓︀","sqcup":"⊔","sqcups":"⊔︀","Sqrt":"√","sqsub":"⊏","sqsube":"⊑","sqsubset":"⊏","sqsubseteq":"⊑","sqsup":"⊐","sqsupe":"⊒","sqsupset":"⊐","sqsupseteq":"⊒","square":"□","Square":"□","SquareIntersection":"⊓","SquareSubset":"⊏","SquareSubsetEqual":"⊑","SquareSuperset":"⊐","SquareSupersetEqual":"⊒","SquareUnion":"⊔","squarf":"▪","squ":"□","squf":"▪","srarr":"→","Sscr":"𝒮","sscr":"𝓈","ssetmn":"∖","ssmile":"⌣","sstarf":"⋆","Star":"⋆","star":"☆","starf":"★","straightepsilon":"ϵ","straightphi":"ϕ","strns":"¯","sub":"⊂","Sub":"⋐","subdot":"⪽","subE":"⫅","sube":"⊆","subedot":"⫃","submult":"⫁","subnE":"⫋","subne":"⊊","subplus":"⪿","subrarr":"⥹","subset":"⊂","Subset":"⋐","subseteq":"⊆","subseteqq":"⫅","SubsetEqual":"⊆","subsetneq":"⊊","subsetneqq":"⫋","subsim":"⫇","subsub":"⫕","subsup":"⫓","succapprox":"⪸","succ":"≻","succcurlyeq":"≽","Succeeds":"≻","SucceedsEqual":"⪰","SucceedsSlantEqual":"≽","SucceedsTilde":"≿","succeq":"⪰","succnapprox":"⪺","succneqq":"⪶","succnsim":"⋩","succsim":"≿","SuchThat":"∋","sum":"∑","Sum":"∑","sung":"♪","sup1":"¹","sup2":"²","sup3":"³","sup":"⊃","Sup":"⋑","supdot":"⪾","supdsub":"⫘","supE":"⫆","supe":"⊇","supedot":"⫄","Superset":"⊃","SupersetEqual":"⊇","suphsol":"⟉","suphsub":"⫗","suplarr":"⥻","supmult":"⫂","supnE":"⫌","supne":"⊋","supplus":"⫀","supset":"⊃","Supset":"⋑","supseteq":"⊇","supseteqq":"⫆","supsetneq":"⊋","supsetneqq":"⫌","supsim":"⫈","supsub":"⫔","supsup":"⫖","swarhk":"⤦","swarr":"↙","swArr":"⇙","swarrow":"↙","swnwar":"⤪","szlig":"ß","Tab":"\t","target":"⌖","Tau":"Τ","tau":"τ","tbrk":"⎴","Tcaron":"Ť","tcaron":"ť","Tcedil":"Ţ","tcedil":"ţ","Tcy":"Т","tcy":"т","tdot":"⃛","telrec":"⌕","Tfr":"𝔗","tfr":"𝔱","there4":"∴","therefore":"∴","Therefore":"∴","Theta":"Θ","theta":"θ","thetasym":"ϑ","thetav":"ϑ","thickapprox":"≈","thicksim":"∼","ThickSpace":"  ","ThinSpace":" ","thinsp":" ","thkap":"≈","thksim":"∼","THORN":"Þ","thorn":"þ","tilde":"˜","Tilde":"∼","TildeEqual":"≃","TildeFullEqual":"≅","TildeTilde":"≈","timesbar":"⨱","timesb":"⊠","times":"×","timesd":"⨰","tint":"∭","toea":"⤨","topbot":"⌶","topcir":"⫱","top":"⊤","Topf":"𝕋","topf":"𝕥","topfork":"⫚","tosa":"⤩","tprime":"‴","trade":"™","TRADE":"™","triangle":"▵","triangledown":"▿","triangleleft":"◃","trianglelefteq":"⊴","triangleq":"≜","triangleright":"▹","trianglerighteq":"⊵","tridot":"◬","trie":"≜","triminus":"⨺","TripleDot":"⃛","triplus":"⨹","trisb":"⧍","tritime":"⨻","trpezium":"⏢","Tscr":"𝒯","tscr":"𝓉","TScy":"Ц","tscy":"ц","TSHcy":"Ћ","tshcy":"ћ","Tstrok":"Ŧ","tstrok":"ŧ","twixt":"≬","twoheadleftarrow":"↞","twoheadrightarrow":"↠","Uacute":"Ú","uacute":"ú","uarr":"↑","Uarr":"↟","uArr":"⇑","Uarrocir":"⥉","Ubrcy":"Ў","ubrcy":"ў","Ubreve":"Ŭ","ubreve":"ŭ","Ucirc":"Û","ucirc":"û","Ucy":"У","ucy":"у","udarr":"⇅","Udblac":"Ű","udblac":"ű","udhar":"⥮","ufisht":"⥾","Ufr":"𝔘","ufr":"𝔲","Ugrave":"Ù","ugrave":"ù","uHar":"⥣","uharl":"↿","uharr":"↾","uhblk":"▀","ulcorn":"⌜","ulcorner":"⌜","ulcrop":"⌏","ultri":"◸","Umacr":"Ū","umacr":"ū","uml":"¨","UnderBar":"_","UnderBrace":"⏟","UnderBracket":"⎵","UnderParenthesis":"⏝","Union":"⋃","UnionPlus":"⊎","Uogon":"Ų","uogon":"ų","Uopf":"𝕌","uopf":"𝕦","UpArrowBar":"⤒","uparrow":"↑","UpArrow":"↑","Uparrow":"⇑","UpArrowDownArrow":"⇅","updownarrow":"↕","UpDownArrow":"↕","Updownarrow":"⇕","UpEquilibrium":"⥮","upharpoonleft":"↿","upharpoonright":"↾","uplus":"⊎","UpperLeftArrow":"↖","UpperRightArrow":"↗","upsi":"υ","Upsi":"ϒ","upsih":"ϒ","Upsilon":"Υ","upsilon":"υ","UpTeeArrow":"↥","UpTee":"⊥","upuparrows":"⇈","urcorn":"⌝","urcorner":"⌝","urcrop":"⌎","Uring":"Ů","uring":"ů","urtri":"◹","Uscr":"𝒰","uscr":"𝓊","utdot":"⋰","Utilde":"Ũ","utilde":"ũ","utri":"▵","utrif":"▴","uuarr":"⇈","Uuml":"Ü","uuml":"ü","uwangle":"⦧","vangrt":"⦜","varepsilon":"ϵ","varkappa":"ϰ","varnothing":"∅","varphi":"ϕ","varpi":"ϖ","varpropto":"∝","varr":"↕","vArr":"⇕","varrho":"ϱ","varsigma":"ς","varsubsetneq":"⊊︀","varsubsetneqq":"⫋︀","varsupsetneq":"⊋︀","varsupsetneqq":"⫌︀","vartheta":"ϑ","vartriangleleft":"⊲","vartriangleright":"⊳","vBar":"⫨","Vbar":"⫫","vBarv":"⫩","Vcy":"В","vcy":"в","vdash":"⊢","vDash":"⊨","Vdash":"⊩","VDash":"⊫","Vdashl":"⫦","veebar":"⊻","vee":"∨","Vee":"⋁","veeeq":"≚","vellip":"⋮","verbar":"|","Verbar":"‖","vert":"|","Vert":"‖","VerticalBar":"∣","VerticalLine":"|","VerticalSeparator":"❘","VerticalTilde":"≀","VeryThinSpace":" ","Vfr":"𝔙","vfr":"𝔳","vltri":"⊲","vnsub":"⊂⃒","vnsup":"⊃⃒","Vopf":"𝕍","vopf":"𝕧","vprop":"∝","vrtri":"⊳","Vscr":"𝒱","vscr":"𝓋","vsubnE":"⫋︀","vsubne":"⊊︀","vsupnE":"⫌︀","vsupne":"⊋︀","Vvdash":"⊪","vzigzag":"⦚","Wcirc":"Ŵ","wcirc":"ŵ","wedbar":"⩟","wedge":"∧","Wedge":"⋀","wedgeq":"≙","weierp":"℘","Wfr":"𝔚","wfr":"𝔴","Wopf":"𝕎","wopf":"𝕨","wp":"℘","wr":"≀","wreath":"≀","Wscr":"𝒲","wscr":"𝓌","xcap":"⋂","xcirc":"◯","xcup":"⋃","xdtri":"▽","Xfr":"𝔛","xfr":"𝔵","xharr":"⟷","xhArr":"⟺","Xi":"Ξ","xi":"ξ","xlarr":"⟵","xlArr":"⟸","xmap":"⟼","xnis":"⋻","xodot":"⨀","Xopf":"𝕏","xopf":"𝕩","xoplus":"⨁","xotime":"⨂","xrarr":"⟶","xrArr":"⟹","Xscr":"𝒳","xscr":"𝓍","xsqcup":"⨆","xuplus":"⨄","xutri":"△","xvee":"⋁","xwedge":"⋀","Yacute":"Ý","yacute":"ý","YAcy":"Я","yacy":"я","Ycirc":"Ŷ","ycirc":"ŷ","Ycy":"Ы","ycy":"ы","yen":"¥","Yfr":"𝔜","yfr":"𝔶","YIcy":"Ї","yicy":"ї","Yopf":"𝕐","yopf":"𝕪","Yscr":"𝒴","yscr":"𝓎","YUcy":"Ю","yucy":"ю","yuml":"ÿ","Yuml":"Ÿ","Zacute":"Ź","zacute":"ź","Zcaron":"Ž","zcaron":"ž","Zcy":"З","zcy":"з","Zdot":"Ż","zdot":"ż","zeetrf":"ℨ","ZeroWidthSpace":"​","Zeta":"Ζ","zeta":"ζ","zfr":"𝔷","Zfr":"ℨ","ZHcy":"Ж","zhcy":"ж","zigrarr":"⇝","zopf":"𝕫","Zopf":"ℤ","Zscr":"𝒵","zscr":"𝓏","zwj":"‍","zwnj":"‌"}

/***/ }),
/* 64 */
/***/ (function(module, exports) {

	module.exports=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';


	module.exports.encode = __webpack_require__(66);
	module.exports.decode = __webpack_require__(67);
	module.exports.format = __webpack_require__(68);
	module.exports.parse  = __webpack_require__(69);


/***/ }),
/* 66 */
/***/ (function(module, exports) {

	
	'use strict';


	var encodeCache = {};


	// Create a lookup array where anything but characters in `chars` string
	// and alphanumeric chars is percent-encoded.
	//
	function getEncodeCache(exclude) {
	  var i, ch, cache = encodeCache[exclude];
	  if (cache) { return cache; }

	  cache = encodeCache[exclude] = [];

	  for (i = 0; i < 128; i++) {
	    ch = String.fromCharCode(i);

	    if (/^[0-9a-z]$/i.test(ch)) {
	      // always allow unencoded alphanumeric characters
	      cache.push(ch);
	    } else {
	      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));
	    }
	  }

	  for (i = 0; i < exclude.length; i++) {
	    cache[exclude.charCodeAt(i)] = exclude[i];
	  }

	  return cache;
	}


	// Encode unsafe characters with percent-encoding, skipping already
	// encoded sequences.
	//
	//  - string       - string to encode
	//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)
	//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)
	//
	function encode(string, exclude, keepEscaped) {
	  var i, l, code, nextCode, cache,
	      result = '';

	  if (typeof exclude !== 'string') {
	    // encode(string, keepEscaped)
	    keepEscaped  = exclude;
	    exclude = encode.defaultChars;
	  }

	  if (typeof keepEscaped === 'undefined') {
	    keepEscaped = true;
	  }

	  cache = getEncodeCache(exclude);

	  for (i = 0, l = string.length; i < l; i++) {
	    code = string.charCodeAt(i);

	    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {
	      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {
	        result += string.slice(i, i + 3);
	        i += 2;
	        continue;
	      }
	    }

	    if (code < 128) {
	      result += cache[code];
	      continue;
	    }

	    if (code >= 0xD800 && code <= 0xDFFF) {
	      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {
	        nextCode = string.charCodeAt(i + 1);
	        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {
	          result += encodeURIComponent(string[i] + string[i + 1]);
	          i++;
	          continue;
	        }
	      }
	      result += '%EF%BF%BD';
	      continue;
	    }

	    result += encodeURIComponent(string[i]);
	  }

	  return result;
	}

	encode.defaultChars   = ";/?:@&=+$,-_.!~*'()#";
	encode.componentChars = "-_.!~*'()";


	module.exports = encode;


/***/ }),
/* 67 */
/***/ (function(module, exports) {

	
	'use strict';


	/* eslint-disable no-bitwise */

	var decodeCache = {};

	function getDecodeCache(exclude) {
	  var i, ch, cache = decodeCache[exclude];
	  if (cache) { return cache; }

	  cache = decodeCache[exclude] = [];

	  for (i = 0; i < 128; i++) {
	    ch = String.fromCharCode(i);
	    cache.push(ch);
	  }

	  for (i = 0; i < exclude.length; i++) {
	    ch = exclude.charCodeAt(i);
	    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);
	  }

	  return cache;
	}


	// Decode percent-encoded string.
	//
	function decode(string, exclude) {
	  var cache;

	  if (typeof exclude !== 'string') {
	    exclude = decode.defaultChars;
	  }

	  cache = getDecodeCache(exclude);

	  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {
	    var i, l, b1, b2, b3, b4, chr,
	        result = '';

	    for (i = 0, l = seq.length; i < l; i += 3) {
	      b1 = parseInt(seq.slice(i + 1, i + 3), 16);

	      if (b1 < 0x80) {
	        result += cache[b1];
	        continue;
	      }

	      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {
	        // 110xxxxx 10xxxxxx
	        b2 = parseInt(seq.slice(i + 4, i + 6), 16);

	        if ((b2 & 0xC0) === 0x80) {
	          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);

	          if (chr < 0x80) {
	            result += '\ufffd\ufffd';
	          } else {
	            result += String.fromCharCode(chr);
	          }

	          i += 3;
	          continue;
	        }
	      }

	      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {
	        // 1110xxxx 10xxxxxx 10xxxxxx
	        b2 = parseInt(seq.slice(i + 4, i + 6), 16);
	        b3 = parseInt(seq.slice(i + 7, i + 9), 16);

	        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {
	          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);

	          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {
	            result += '\ufffd\ufffd\ufffd';
	          } else {
	            result += String.fromCharCode(chr);
	          }

	          i += 6;
	          continue;
	        }
	      }

	      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {
	        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx
	        b2 = parseInt(seq.slice(i + 4, i + 6), 16);
	        b3 = parseInt(seq.slice(i + 7, i + 9), 16);
	        b4 = parseInt(seq.slice(i + 10, i + 12), 16);

	        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {
	          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);

	          if (chr < 0x10000 || chr > 0x10FFFF) {
	            result += '\ufffd\ufffd\ufffd\ufffd';
	          } else {
	            chr -= 0x10000;
	            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));
	          }

	          i += 9;
	          continue;
	        }
	      }

	      result += '\ufffd';
	    }

	    return result;
	  });
	}


	decode.defaultChars   = ';/?:@&=+$,#';
	decode.componentChars = '';


	module.exports = decode;


/***/ }),
/* 68 */
/***/ (function(module, exports) {

	
	'use strict';


	module.exports = function format(url) {
	  var result = '';

	  result += url.protocol || '';
	  result += url.slashes ? '//' : '';
	  result += url.auth ? url.auth + '@' : '';

	  if (url.hostname && url.hostname.indexOf(':') !== -1) {
	    // ipv6 address
	    result += '[' + url.hostname + ']';
	  } else {
	    result += url.hostname || '';
	  }

	  result += url.port ? ':' + url.port : '';
	  result += url.pathname || '';
	  result += url.search || '';
	  result += url.hash || '';

	  return result;
	};


/***/ }),
/* 69 */
/***/ (function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	'use strict';

	//
	// Changes from joyent/node:
	//
	// 1. No leading slash in paths,
	//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`
	//
	// 2. Backslashes are not replaced with slashes,
	//    so `http:\\example.org\` is treated like a relative path
	//
	// 3. Trailing colon is treated like a part of the path,
	//    i.e. in `http://example.org:foo` pathname is `:foo`
	//
	// 4. Nothing is URL-encoded in the resulting object,
	//    (in joyent/node some chars in auth and paths are encoded)
	//
	// 5. `url.parse()` does not have `parseQueryString` argument
	//
	// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,
	//    which can be constructed using other parts of the url.
	//


	function Url() {
	  this.protocol = null;
	  this.slashes = null;
	  this.auth = null;
	  this.port = null;
	  this.hostname = null;
	  this.hash = null;
	  this.search = null;
	  this.pathname = null;
	}

	// Reference: RFC 3986, RFC 1808, RFC 2396

	// define these here so at least they only have to be
	// compiled once on the first module load.
	var protocolPattern = /^([a-z0-9.+-]+:)/i,
	    portPattern = /:[0-9]*$/,

	    // Special case for a simple path URL
	    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

	    // RFC 2396: characters reserved for delimiting URLs.
	    // We actually just auto-escape these.
	    delims = [ '<', '>', '"', '`', ' ', '\r', '\n', '\t' ],

	    // RFC 2396: characters not allowed for various reasons.
	    unwise = [ '{', '}', '|', '\\', '^', '`' ].concat(delims),

	    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
	    autoEscape = [ '\'' ].concat(unwise),
	    // Characters that are never ever allowed in a hostname.
	    // Note that any invalid chars are also handled, but these
	    // are the ones that are *expected* to be seen, so we fast-path
	    // them.
	    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),
	    hostEndingChars = [ '/', '?', '#' ],
	    hostnameMaxLen = 255,
	    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
	    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
	    // protocols that can allow "unsafe" and "unwise" chars.
	    /* eslint-disable no-script-url */
	    // protocols that never have a hostname.
	    hostlessProtocol = {
	      'javascript': true,
	      'javascript:': true
	    },
	    // protocols that always contain a // bit.
	    slashedProtocol = {
	      'http': true,
	      'https': true,
	      'ftp': true,
	      'gopher': true,
	      'file': true,
	      'http:': true,
	      'https:': true,
	      'ftp:': true,
	      'gopher:': true,
	      'file:': true
	    };
	    /* eslint-enable no-script-url */

	function urlParse(url, slashesDenoteHost) {
	  if (url && url instanceof Url) { return url; }

	  var u = new Url();
	  u.parse(url, slashesDenoteHost);
	  return u;
	}

	Url.prototype.parse = function(url, slashesDenoteHost) {
	  var i, l, lowerProto, hec, slashes,
	      rest = url;

	  // trim before proceeding.
	  // This is to support parse stuff like "  http://foo.com  \n"
	  rest = rest.trim();

	  if (!slashesDenoteHost && url.split('#').length === 1) {
	    // Try fast path regexp
	    var simplePath = simplePathPattern.exec(rest);
	    if (simplePath) {
	      this.pathname = simplePath[1];
	      if (simplePath[2]) {
	        this.search = simplePath[2];
	      }
	      return this;
	    }
	  }

	  var proto = protocolPattern.exec(rest);
	  if (proto) {
	    proto = proto[0];
	    lowerProto = proto.toLowerCase();
	    this.protocol = proto;
	    rest = rest.substr(proto.length);
	  }

	  // figure out if it's got a host
	  // user@server is *always* interpreted as a hostname, and url
	  // resolution will treat //foo/bar as host=foo,path=bar because that's
	  // how the browser resolves relative URLs.
	  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
	    slashes = rest.substr(0, 2) === '//';
	    if (slashes && !(proto && hostlessProtocol[proto])) {
	      rest = rest.substr(2);
	      this.slashes = true;
	    }
	  }

	  if (!hostlessProtocol[proto] &&
	      (slashes || (proto && !slashedProtocol[proto]))) {

	    // there's a hostname.
	    // the first instance of /, ?, ;, or # ends the host.
	    //
	    // If there is an @ in the hostname, then non-host chars *are* allowed
	    // to the left of the last @ sign, unless some host-ending character
	    // comes *before* the @-sign.
	    // URLs are obnoxious.
	    //
	    // ex:
	    // http://a@b@c/ => user:a@b host:c
	    // http://a@b?@c => user:a host:c path:/?@c

	    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
	    // Review our test case against browsers more comprehensively.

	    // find the first instance of any hostEndingChars
	    var hostEnd = -1;
	    for (i = 0; i < hostEndingChars.length; i++) {
	      hec = rest.indexOf(hostEndingChars[i]);
	      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
	        hostEnd = hec;
	      }
	    }

	    // at this point, either we have an explicit point where the
	    // auth portion cannot go past, or the last @ char is the decider.
	    var auth, atSign;
	    if (hostEnd === -1) {
	      // atSign can be anywhere.
	      atSign = rest.lastIndexOf('@');
	    } else {
	      // atSign must be in auth portion.
	      // http://a@b/c@d => host:b auth:a path:/c@d
	      atSign = rest.lastIndexOf('@', hostEnd);
	    }

	    // Now we have a portion which is definitely the auth.
	    // Pull that off.
	    if (atSign !== -1) {
	      auth = rest.slice(0, atSign);
	      rest = rest.slice(atSign + 1);
	      this.auth = auth;
	    }

	    // the host is the remaining to the left of the first non-host char
	    hostEnd = -1;
	    for (i = 0; i < nonHostChars.length; i++) {
	      hec = rest.indexOf(nonHostChars[i]);
	      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
	        hostEnd = hec;
	      }
	    }
	    // if we still have not hit it, then the entire thing is a host.
	    if (hostEnd === -1) {
	      hostEnd = rest.length;
	    }

	    if (rest[hostEnd - 1] === ':') { hostEnd--; }
	    var host = rest.slice(0, hostEnd);
	    rest = rest.slice(hostEnd);

	    // pull out port.
	    this.parseHost(host);

	    // we've indicated that there is a hostname,
	    // so even if it's empty, it has to be present.
	    this.hostname = this.hostname || '';

	    // if hostname begins with [ and ends with ]
	    // assume that it's an IPv6 address.
	    var ipv6Hostname = this.hostname[0] === '[' &&
	        this.hostname[this.hostname.length - 1] === ']';

	    // validate a little.
	    if (!ipv6Hostname) {
	      var hostparts = this.hostname.split(/\./);
	      for (i = 0, l = hostparts.length; i < l; i++) {
	        var part = hostparts[i];
	        if (!part) { continue; }
	        if (!part.match(hostnamePartPattern)) {
	          var newpart = '';
	          for (var j = 0, k = part.length; j < k; j++) {
	            if (part.charCodeAt(j) > 127) {
	              // we replace non-ASCII char with a temporary placeholder
	              // we need this to make sure size of hostname is not
	              // broken by replacing non-ASCII by nothing
	              newpart += 'x';
	            } else {
	              newpart += part[j];
	            }
	          }
	          // we test again with ASCII char only
	          if (!newpart.match(hostnamePartPattern)) {
	            var validParts = hostparts.slice(0, i);
	            var notHost = hostparts.slice(i + 1);
	            var bit = part.match(hostnamePartStart);
	            if (bit) {
	              validParts.push(bit[1]);
	              notHost.unshift(bit[2]);
	            }
	            if (notHost.length) {
	              rest = notHost.join('.') + rest;
	            }
	            this.hostname = validParts.join('.');
	            break;
	          }
	        }
	      }
	    }

	    if (this.hostname.length > hostnameMaxLen) {
	      this.hostname = '';
	    }

	    // strip [ and ] from the hostname
	    // the host field still retains them, though
	    if (ipv6Hostname) {
	      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
	    }
	  }

	  // chop off from the tail first.
	  var hash = rest.indexOf('#');
	  if (hash !== -1) {
	    // got a fragment string.
	    this.hash = rest.substr(hash);
	    rest = rest.slice(0, hash);
	  }
	  var qm = rest.indexOf('?');
	  if (qm !== -1) {
	    this.search = rest.substr(qm);
	    rest = rest.slice(0, qm);
	  }
	  if (rest) { this.pathname = rest; }
	  if (slashedProtocol[lowerProto] &&
	      this.hostname && !this.pathname) {
	    this.pathname = '';
	  }

	  return this;
	};

	Url.prototype.parseHost = function(host) {
	  var port = portPattern.exec(host);
	  if (port) {
	    port = port[0];
	    if (port !== ':') {
	      this.port = port.substr(1);
	    }
	    host = host.substr(0, host.length - port.length);
	  }
	  if (host) { this.hostname = host; }
	};

	module.exports = urlParse;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.Any = __webpack_require__(71);
	exports.Cc  = __webpack_require__(72);
	exports.Cf  = __webpack_require__(73);
	exports.P   = __webpack_require__(64);
	exports.Z   = __webpack_require__(74);


/***/ }),
/* 71 */
/***/ (function(module, exports) {

	module.exports=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/

/***/ }),
/* 72 */
/***/ (function(module, exports) {

	module.exports=/[\0-\x1F\x7F-\x9F]/

/***/ }),
/* 73 */
/***/ (function(module, exports) {

	module.exports=/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/

/***/ }),
/* 74 */
/***/ (function(module, exports) {

	module.exports=/[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	// Just a shortcut for bulk export
	'use strict';


	exports.parseLinkLabel       = __webpack_require__(76);
	exports.parseLinkDestination = __webpack_require__(77);
	exports.parseLinkTitle       = __webpack_require__(78);


/***/ }),
/* 76 */
/***/ (function(module, exports) {

	// Parse link label
	//
	// this function assumes that first character ("[") already matches;
	// returns the end of the label
	//
	'use strict';

	module.exports = function parseLinkLabel(state, start, disableNested) {
	  var level, found, marker, prevPos,
	      labelEnd = -1,
	      max = state.posMax,
	      oldPos = state.pos;

	  state.pos = start + 1;
	  level = 1;

	  while (state.pos < max) {
	    marker = state.src.charCodeAt(state.pos);
	    if (marker === 0x5D /* ] */) {
	      level--;
	      if (level === 0) {
	        found = true;
	        break;
	      }
	    }

	    prevPos = state.pos;
	    state.md.inline.skipToken(state);
	    if (marker === 0x5B /* [ */) {
	      if (prevPos === state.pos - 1) {
	        // increase level if we find text `[`, which is not a part of any token
	        level++;
	      } else if (disableNested) {
	        state.pos = oldPos;
	        return -1;
	      }
	    }
	  }

	  if (found) {
	    labelEnd = state.pos;
	  }

	  // restore old state
	  state.pos = oldPos;

	  return labelEnd;
	};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	// Parse link destination
	//
	'use strict';


	var isSpace     = __webpack_require__(61).isSpace;
	var unescapeAll = __webpack_require__(61).unescapeAll;


	module.exports = function parseLinkDestination(str, pos, max) {
	  var code, level,
	      lines = 0,
	      start = pos,
	      result = {
	        ok: false,
	        pos: 0,
	        lines: 0,
	        str: ''
	      };

	  if (str.charCodeAt(pos) === 0x3C /* < */) {
	    pos++;
	    while (pos < max) {
	      code = str.charCodeAt(pos);
	      if (code === 0x0A /* \n */ || isSpace(code)) { return result; }
	      if (code === 0x3E /* > */) {
	        result.pos = pos + 1;
	        result.str = unescapeAll(str.slice(start + 1, pos));
	        result.ok = true;
	        return result;
	      }
	      if (code === 0x5C /* \ */ && pos + 1 < max) {
	        pos += 2;
	        continue;
	      }

	      pos++;
	    }

	    // no closing '>'
	    return result;
	  }

	  // this should be ... } else { ... branch

	  level = 0;
	  while (pos < max) {
	    code = str.charCodeAt(pos);

	    if (code === 0x20) { break; }

	    // ascii control characters
	    if (code < 0x20 || code === 0x7F) { break; }

	    if (code === 0x5C /* \ */ && pos + 1 < max) {
	      pos += 2;
	      continue;
	    }

	    if (code === 0x28 /* ( */) {
	      level++;
	      if (level > 1) { break; }
	    }

	    if (code === 0x29 /* ) */) {
	      level--;
	      if (level < 0) { break; }
	    }

	    pos++;
	  }

	  if (start === pos) { return result; }

	  result.str = unescapeAll(str.slice(start, pos));
	  result.lines = lines;
	  result.pos = pos;
	  result.ok = true;
	  return result;
	};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	// Parse link title
	//
	'use strict';


	var unescapeAll = __webpack_require__(61).unescapeAll;


	module.exports = function parseLinkTitle(str, pos, max) {
	  var code,
	      marker,
	      lines = 0,
	      start = pos,
	      result = {
	        ok: false,
	        pos: 0,
	        lines: 0,
	        str: ''
	      };

	  if (pos >= max) { return result; }

	  marker = str.charCodeAt(pos);

	  if (marker !== 0x22 /* " */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }

	  pos++;

	  // if opening marker is "(", switch it to closing marker ")"
	  if (marker === 0x28) { marker = 0x29; }

	  while (pos < max) {
	    code = str.charCodeAt(pos);
	    if (code === marker) {
	      result.pos = pos + 1;
	      result.lines = lines;
	      result.str = unescapeAll(str.slice(start + 1, pos));
	      result.ok = true;
	      return result;
	    } else if (code === 0x0A) {
	      lines++;
	    } else if (code === 0x5C /* \ */ && pos + 1 < max) {
	      pos++;
	      if (str.charCodeAt(pos) === 0x0A) {
	        lines++;
	      }
	    }

	    pos++;
	  }

	  return result;
	};


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * class Renderer
	 *
	 * Generates HTML from parsed token stream. Each instance has independent
	 * copy of rules. Those can be rewritten with ease. Also, you can add new
	 * rules if you create plugin and adds new token types.
	 **/
	'use strict';


	var assign          = __webpack_require__(61).assign;
	var unescapeAll     = __webpack_require__(61).unescapeAll;
	var escapeHtml      = __webpack_require__(61).escapeHtml;


	////////////////////////////////////////////////////////////////////////////////

	var default_rules = {};


	default_rules.code_inline = function (tokens, idx, options, env, slf) {
	  var token = tokens[idx],
	      attrs = slf.renderAttrs(token);

	  return  '<code' + (attrs ? ' ' + attrs : '') + '>' +
	          escapeHtml(tokens[idx].content) +
	          '</code>';
	};


	default_rules.code_block = function (tokens, idx, options, env, slf) {
	  var token = tokens[idx],
	      attrs = slf.renderAttrs(token);

	  return  '<pre' + (attrs ? ' ' + attrs : '') + '><code>' +
	          escapeHtml(tokens[idx].content) +
	          '</code></pre>\n';
	};


	default_rules.fence = function (tokens, idx, options, env, slf) {
	  var token = tokens[idx],
	      info = token.info ? unescapeAll(token.info).trim() : '',
	      langName = '',
	      highlighted, i, tmpAttrs, tmpToken;

	  if (info) {
	    langName = info.split(/\s+/g)[0];
	  }

	  if (options.highlight) {
	    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);
	  } else {
	    highlighted = escapeHtml(token.content);
	  }

	  if (highlighted.indexOf('<pre') === 0) {
	    return highlighted + '\n';
	  }

	  // If language exists, inject class gently, without mudofying original token.
	  // May be, one day we will add .clone() for token and simplify this part, but
	  // now we prefer to keep things local.
	  if (info) {
	    i        = token.attrIndex('class');
	    tmpAttrs = token.attrs ? token.attrs.slice() : [];

	    if (i < 0) {
	      tmpAttrs.push([ 'class', options.langPrefix + langName ]);
	    } else {
	      tmpAttrs[i] += ' ' + options.langPrefix + langName;
	    }

	    // Fake token just to render attributes
	    tmpToken = {
	      attrs: tmpAttrs
	    };

	    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'
	          + highlighted
	          + '</code></pre>\n';
	  }


	  return  '<pre><code' + slf.renderAttrs(token) + '>'
	        + highlighted
	        + '</code></pre>\n';
	};


	default_rules.image = function (tokens, idx, options, env, slf) {
	  var token = tokens[idx];

	  // "alt" attr MUST be set, even if empty. Because it's mandatory and
	  // should be placed on proper position for tests.
	  //
	  // Replace content with actual value

	  token.attrs[token.attrIndex('alt')][1] =
	    slf.renderInlineAsText(token.children, options, env);

	  return slf.renderToken(tokens, idx, options);
	};


	default_rules.hardbreak = function (tokens, idx, options /*, env */) {
	  return options.xhtmlOut ? '<br />\n' : '<br>\n';
	};
	default_rules.softbreak = function (tokens, idx, options /*, env */) {
	  return options.breaks ? (options.xhtmlOut ? '<br />\n' : '<br>\n') : '\n';
	};


	default_rules.text = function (tokens, idx /*, options, env */) {
	  return escapeHtml(tokens[idx].content);
	};


	default_rules.html_block = function (tokens, idx /*, options, env */) {
	  return tokens[idx].content;
	};
	default_rules.html_inline = function (tokens, idx /*, options, env */) {
	  return tokens[idx].content;
	};


	/**
	 * new Renderer()
	 *
	 * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.
	 **/
	function Renderer() {

	  /**
	   * Renderer#rules -> Object
	   *
	   * Contains render rules for tokens. Can be updated and extended.
	   *
	   * ##### Example
	   *
	   * ```javascript
	   * var md = require('markdown-it')();
	   *
	   * md.renderer.rules.strong_open  = function () { return '<b>'; };
	   * md.renderer.rules.strong_close = function () { return '</b>'; };
	   *
	   * var result = md.renderInline(...);
	   * ```
	   *
	   * Each rule is called as independed static function with fixed signature:
	   *
	   * ```javascript
	   * function my_token_render(tokens, idx, options, env, renderer) {
	   *   // ...
	   *   return renderedHTML;
	   * }
	   * ```
	   *
	   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)
	   * for more details and examples.
	   **/
	  this.rules = assign({}, default_rules);
	}


	/**
	 * Renderer.renderAttrs(token) -> String
	 *
	 * Render token attributes to string.
	 **/
	Renderer.prototype.renderAttrs = function renderAttrs(token) {
	  var i, l, result;

	  if (!token.attrs) { return ''; }

	  result = '';

	  for (i = 0, l = token.attrs.length; i < l; i++) {
	    result += ' ' + escapeHtml(token.attrs[i][0]) + '="' + escapeHtml(token.attrs[i][1]) + '"';
	  }

	  return result;
	};


	/**
	 * Renderer.renderToken(tokens, idx, options) -> String
	 * - tokens (Array): list of tokens
	 * - idx (Numbed): token index to render
	 * - options (Object): params of parser instance
	 *
	 * Default token renderer. Can be overriden by custom function
	 * in [[Renderer#rules]].
	 **/
	Renderer.prototype.renderToken = function renderToken(tokens, idx, options) {
	  var nextToken,
	      result = '',
	      needLf = false,
	      token = tokens[idx];

	  // Tight list paragraphs
	  if (token.hidden) {
	    return '';
	  }

	  // Insert a newline between hidden paragraph and subsequent opening
	  // block-level tag.
	  //
	  // For example, here we should insert a newline before blockquote:
	  //  - a
	  //    >
	  //
	  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {
	    result += '\n';
	  }

	  // Add token name, e.g. `<img`
	  result += (token.nesting === -1 ? '</' : '<') + token.tag;

	  // Encode attributes, e.g. `<img src="foo"`
	  result += this.renderAttrs(token);

	  // Add a slash for self-closing tags, e.g. `<img src="foo" /`
	  if (token.nesting === 0 && options.xhtmlOut) {
	    result += ' /';
	  }

	  // Check if we need to add a newline after this tag
	  if (token.block) {
	    needLf = true;

	    if (token.nesting === 1) {
	      if (idx + 1 < tokens.length) {
	        nextToken = tokens[idx + 1];

	        if (nextToken.type === 'inline' || nextToken.hidden) {
	          // Block-level tag containing an inline tag.
	          //
	          needLf = false;

	        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {
	          // Opening tag + closing tag of the same type. E.g. `<li></li>`.
	          //
	          needLf = false;
	        }
	      }
	    }
	  }

	  result += needLf ? '>\n' : '>';

	  return result;
	};


	/**
	 * Renderer.renderInline(tokens, options, env) -> String
	 * - tokens (Array): list on block tokens to renter
	 * - options (Object): params of parser instance
	 * - env (Object): additional data from parsed input (references, for example)
	 *
	 * The same as [[Renderer.render]], but for single token of `inline` type.
	 **/
	Renderer.prototype.renderInline = function (tokens, options, env) {
	  var type,
	      result = '',
	      rules = this.rules;

	  for (var i = 0, len = tokens.length; i < len; i++) {
	    type = tokens[i].type;

	    if (typeof rules[type] !== 'undefined') {
	      result += rules[type](tokens, i, options, env, this);
	    } else {
	      result += this.renderToken(tokens, i, options);
	    }
	  }

	  return result;
	};


	/** internal
	 * Renderer.renderInlineAsText(tokens, options, env) -> String
	 * - tokens (Array): list on block tokens to renter
	 * - options (Object): params of parser instance
	 * - env (Object): additional data from parsed input (references, for example)
	 *
	 * Special kludge for image `alt` attributes to conform CommonMark spec.
	 * Don't try to use it! Spec requires to show `alt` content with stripped markup,
	 * instead of simple escaping.
	 **/
	Renderer.prototype.renderInlineAsText = function (tokens, options, env) {
	  var result = '';

	  for (var i = 0, len = tokens.length; i < len; i++) {
	    if (tokens[i].type === 'text') {
	      result += tokens[i].content;
	    } else if (tokens[i].type === 'image') {
	      result += this.renderInlineAsText(tokens[i].children, options, env);
	    }
	  }

	  return result;
	};


	/**
	 * Renderer.render(tokens, options, env) -> String
	 * - tokens (Array): list on block tokens to renter
	 * - options (Object): params of parser instance
	 * - env (Object): additional data from parsed input (references, for example)
	 *
	 * Takes token stream and generates HTML. Probably, you will never need to call
	 * this method directly.
	 **/
	Renderer.prototype.render = function (tokens, options, env) {
	  var i, len, type,
	      result = '',
	      rules = this.rules;

	  for (i = 0, len = tokens.length; i < len; i++) {
	    type = tokens[i].type;

	    if (type === 'inline') {
	      result += this.renderInline(tokens[i].children, options, env);
	    } else if (typeof rules[type] !== 'undefined') {
	      result += rules[tokens[i].type](tokens, i, options, env, this);
	    } else {
	      result += this.renderToken(tokens, i, options, env);
	    }
	  }

	  return result;
	};

	module.exports = Renderer;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	/** internal
	 * class Core
	 *
	 * Top-level rules executor. Glues block/inline parsers and does intermediate
	 * transformations.
	 **/
	'use strict';


	var Ruler  = __webpack_require__(81);


	var _rules = [
	  [ 'normalize',      __webpack_require__(82)      ],
	  [ 'block',          __webpack_require__(83)          ],
	  [ 'inline',         __webpack_require__(84)         ],
	  [ 'linkify',        __webpack_require__(85)        ],
	  [ 'replacements',   __webpack_require__(86)   ],
	  [ 'smartquotes',    __webpack_require__(87)    ]
	];


	/**
	 * new Core()
	 **/
	function Core() {
	  /**
	   * Core#ruler -> Ruler
	   *
	   * [[Ruler]] instance. Keep configuration of core rules.
	   **/
	  this.ruler = new Ruler();

	  for (var i = 0; i < _rules.length; i++) {
	    this.ruler.push(_rules[i][0], _rules[i][1]);
	  }
	}


	/**
	 * Core.process(state)
	 *
	 * Executes core chain rules.
	 **/
	Core.prototype.process = function (state) {
	  var i, l, rules;

	  rules = this.ruler.getRules('');

	  for (i = 0, l = rules.length; i < l; i++) {
	    rules[i](state);
	  }
	};

	Core.prototype.State = __webpack_require__(88);


	module.exports = Core;


/***/ }),
/* 81 */
/***/ (function(module, exports) {

	/**
	 * class Ruler
	 *
	 * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and
	 * [[MarkdownIt#inline]] to manage sequences of functions (rules):
	 *
	 * - keep rules in defined order
	 * - assign the name to each rule
	 * - enable/disable rules
	 * - add/replace rules
	 * - allow assign rules to additional named chains (in the same)
	 * - cacheing lists of active rules
	 *
	 * You will not need use this class directly until write plugins. For simple
	 * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and
	 * [[MarkdownIt.use]].
	 **/
	'use strict';


	/**
	 * new Ruler()
	 **/
	function Ruler() {
	  // List of added rules. Each element is:
	  //
	  // {
	  //   name: XXX,
	  //   enabled: Boolean,
	  //   fn: Function(),
	  //   alt: [ name2, name3 ]
	  // }
	  //
	  this.__rules__ = [];

	  // Cached rule chains.
	  //
	  // First level - chain name, '' for default.
	  // Second level - diginal anchor for fast filtering by charcodes.
	  //
	  this.__cache__ = null;
	}

	////////////////////////////////////////////////////////////////////////////////
	// Helper methods, should not be used directly


	// Find rule index by name
	//
	Ruler.prototype.__find__ = function (name) {
	  for (var i = 0; i < this.__rules__.length; i++) {
	    if (this.__rules__[i].name === name) {
	      return i;
	    }
	  }
	  return -1;
	};


	// Build rules lookup cache
	//
	Ruler.prototype.__compile__ = function () {
	  var self = this;
	  var chains = [ '' ];

	  // collect unique names
	  self.__rules__.forEach(function (rule) {
	    if (!rule.enabled) { return; }

	    rule.alt.forEach(function (altName) {
	      if (chains.indexOf(altName) < 0) {
	        chains.push(altName);
	      }
	    });
	  });

	  self.__cache__ = {};

	  chains.forEach(function (chain) {
	    self.__cache__[chain] = [];
	    self.__rules__.forEach(function (rule) {
	      if (!rule.enabled) { return; }

	      if (chain && rule.alt.indexOf(chain) < 0) { return; }

	      self.__cache__[chain].push(rule.fn);
	    });
	  });
	};


	/**
	 * Ruler.at(name, fn [, options])
	 * - name (String): rule name to replace.
	 * - fn (Function): new rule function.
	 * - options (Object): new rule options (not mandatory).
	 *
	 * Replace rule by name with new function & options. Throws error if name not
	 * found.
	 *
	 * ##### Options:
	 *
	 * - __alt__ - array with names of "alternate" chains.
	 *
	 * ##### Example
	 *
	 * Replace existing typorgapher replacement rule with new one:
	 *
	 * ```javascript
	 * var md = require('markdown-it')();
	 *
	 * md.core.ruler.at('replacements', function replace(state) {
	 *   //...
	 * });
	 * ```
	 **/
	Ruler.prototype.at = function (name, fn, options) {
	  var index = this.__find__(name);
	  var opt = options || {};

	  if (index === -1) { throw new Error('Parser rule not found: ' + name); }

	  this.__rules__[index].fn = fn;
	  this.__rules__[index].alt = opt.alt || [];
	  this.__cache__ = null;
	};


	/**
	 * Ruler.before(beforeName, ruleName, fn [, options])
	 * - beforeName (String): new rule will be added before this one.
	 * - ruleName (String): name of added rule.
	 * - fn (Function): rule function.
	 * - options (Object): rule options (not mandatory).
	 *
	 * Add new rule to chain before one with given name. See also
	 * [[Ruler.after]], [[Ruler.push]].
	 *
	 * ##### Options:
	 *
	 * - __alt__ - array with names of "alternate" chains.
	 *
	 * ##### Example
	 *
	 * ```javascript
	 * var md = require('markdown-it')();
	 *
	 * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {
	 *   //...
	 * });
	 * ```
	 **/
	Ruler.prototype.before = function (beforeName, ruleName, fn, options) {
	  var index = this.__find__(beforeName);
	  var opt = options || {};

	  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }

	  this.__rules__.splice(index, 0, {
	    name: ruleName,
	    enabled: true,
	    fn: fn,
	    alt: opt.alt || []
	  });

	  this.__cache__ = null;
	};


	/**
	 * Ruler.after(afterName, ruleName, fn [, options])
	 * - afterName (String): new rule will be added after this one.
	 * - ruleName (String): name of added rule.
	 * - fn (Function): rule function.
	 * - options (Object): rule options (not mandatory).
	 *
	 * Add new rule to chain after one with given name. See also
	 * [[Ruler.before]], [[Ruler.push]].
	 *
	 * ##### Options:
	 *
	 * - __alt__ - array with names of "alternate" chains.
	 *
	 * ##### Example
	 *
	 * ```javascript
	 * var md = require('markdown-it')();
	 *
	 * md.inline.ruler.after('text', 'my_rule', function replace(state) {
	 *   //...
	 * });
	 * ```
	 **/
	Ruler.prototype.after = function (afterName, ruleName, fn, options) {
	  var index = this.__find__(afterName);
	  var opt = options || {};

	  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }

	  this.__rules__.splice(index + 1, 0, {
	    name: ruleName,
	    enabled: true,
	    fn: fn,
	    alt: opt.alt || []
	  });

	  this.__cache__ = null;
	};

	/**
	 * Ruler.push(ruleName, fn [, options])
	 * - ruleName (String): name of added rule.
	 * - fn (Function): rule function.
	 * - options (Object): rule options (not mandatory).
	 *
	 * Push new rule to the end of chain. See also
	 * [[Ruler.before]], [[Ruler.after]].
	 *
	 * ##### Options:
	 *
	 * - __alt__ - array with names of "alternate" chains.
	 *
	 * ##### Example
	 *
	 * ```javascript
	 * var md = require('markdown-it')();
	 *
	 * md.core.ruler.push('my_rule', function replace(state) {
	 *   //...
	 * });
	 * ```
	 **/
	Ruler.prototype.push = function (ruleName, fn, options) {
	  var opt = options || {};

	  this.__rules__.push({
	    name: ruleName,
	    enabled: true,
	    fn: fn,
	    alt: opt.alt || []
	  });

	  this.__cache__ = null;
	};


	/**
	 * Ruler.enable(list [, ignoreInvalid]) -> Array
	 * - list (String|Array): list of rule names to enable.
	 * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
	 *
	 * Enable rules with given names. If any rule name not found - throw Error.
	 * Errors can be disabled by second param.
	 *
	 * Returns list of found rule names (if no exception happened).
	 *
	 * See also [[Ruler.disable]], [[Ruler.enableOnly]].
	 **/
	Ruler.prototype.enable = function (list, ignoreInvalid) {
	  if (!Array.isArray(list)) { list = [ list ]; }

	  var result = [];

	  // Search by name and enable
	  list.forEach(function (name) {
	    var idx = this.__find__(name);

	    if (idx < 0) {
	      if (ignoreInvalid) { return; }
	      throw new Error('Rules manager: invalid rule name ' + name);
	    }
	    this.__rules__[idx].enabled = true;
	    result.push(name);
	  }, this);

	  this.__cache__ = null;
	  return result;
	};


	/**
	 * Ruler.enableOnly(list [, ignoreInvalid])
	 * - list (String|Array): list of rule names to enable (whitelist).
	 * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
	 *
	 * Enable rules with given names, and disable everything else. If any rule name
	 * not found - throw Error. Errors can be disabled by second param.
	 *
	 * See also [[Ruler.disable]], [[Ruler.enable]].
	 **/
	Ruler.prototype.enableOnly = function (list, ignoreInvalid) {
	  if (!Array.isArray(list)) { list = [ list ]; }

	  this.__rules__.forEach(function (rule) { rule.enabled = false; });

	  this.enable(list, ignoreInvalid);
	};


	/**
	 * Ruler.disable(list [, ignoreInvalid]) -> Array
	 * - list (String|Array): list of rule names to disable.
	 * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.
	 *
	 * Disable rules with given names. If any rule name not found - throw Error.
	 * Errors can be disabled by second param.
	 *
	 * Returns list of found rule names (if no exception happened).
	 *
	 * See also [[Ruler.enable]], [[Ruler.enableOnly]].
	 **/
	Ruler.prototype.disable = function (list, ignoreInvalid) {
	  if (!Array.isArray(list)) { list = [ list ]; }

	  var result = [];

	  // Search by name and disable
	  list.forEach(function (name) {
	    var idx = this.__find__(name);

	    if (idx < 0) {
	      if (ignoreInvalid) { return; }
	      throw new Error('Rules manager: invalid rule name ' + name);
	    }
	    this.__rules__[idx].enabled = false;
	    result.push(name);
	  }, this);

	  this.__cache__ = null;
	  return result;
	};


	/**
	 * Ruler.getRules(chainName) -> Array
	 *
	 * Return array of active functions (rules) for given chain name. It analyzes
	 * rules configuration, compiles caches if not exists and returns result.
	 *
	 * Default chain name is `''` (empty string). It can't be skipped. That's
	 * done intentionally, to keep signature monomorphic for high speed.
	 **/
	Ruler.prototype.getRules = function (chainName) {
	  if (this.__cache__ === null) {
	    this.__compile__();
	  }

	  // Chain can be empty, if rules disabled. But we still have to return Array.
	  return this.__cache__[chainName] || [];
	};

	module.exports = Ruler;


/***/ }),
/* 82 */
/***/ (function(module, exports) {

	// Normalize input string

	'use strict';


	var NEWLINES_RE  = /\r[\n\u0085]?|[\u2424\u2028\u0085]/g;
	var NULL_RE      = /\u0000/g;


	module.exports = function inline(state) {
	  var str;

	  // Normalize newlines
	  str = state.src.replace(NEWLINES_RE, '\n');

	  // Replace NULL characters
	  str = str.replace(NULL_RE, '\uFFFD');

	  state.src = str;
	};


/***/ }),
/* 83 */
/***/ (function(module, exports) {

	'use strict';


	module.exports = function block(state) {
	  var token;

	  if (state.inlineMode) {
	    token          = new state.Token('inline', '', 0);
	    token.content  = state.src;
	    token.map      = [ 0, 1 ];
	    token.children = [];
	    state.tokens.push(token);
	  } else {
	    state.md.block.parse(state.src, state.md, state.env, state.tokens);
	  }
	};


/***/ }),
/* 84 */
/***/ (function(module, exports) {

	'use strict';

	module.exports = function inline(state) {
	  var tokens = state.tokens, tok, i, l;

	  // Parse inlines
	  for (i = 0, l = tokens.length; i < l; i++) {
	    tok = tokens[i];
	    if (tok.type === 'inline') {
	      state.md.inline.parse(tok.content, state.md, state.env, tok.children);
	    }
	  }
	};


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	// Replace link-like texts with link nodes.
	//
	// Currently restricted by `md.validateLink()` to http/https/ftp
	//
	'use strict';


	var arrayReplaceAt = __webpack_require__(61).arrayReplaceAt;


	function isLinkOpen(str) {
	  return /^<a[>\s]/i.test(str);
	}
	function isLinkClose(str) {
	  return /^<\/a\s*>/i.test(str);
	}


	module.exports = function linkify(state) {
	  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,
	      level, htmlLinkLevel, url, fullUrl, urlText,
	      blockTokens = state.tokens,
	      links;

	  if (!state.md.options.linkify) { return; }

	  for (j = 0, l = blockTokens.length; j < l; j++) {
	    if (blockTokens[j].type !== 'inline' ||
	        !state.md.linkify.pretest(blockTokens[j].content)) {
	      continue;
	    }

	    tokens = blockTokens[j].children;

	    htmlLinkLevel = 0;

	    // We scan from the end, to keep position when new tags added.
	    // Use reversed logic in links start/end match
	    for (i = tokens.length - 1; i >= 0; i--) {
	      currentToken = tokens[i];

	      // Skip content of markdown links
	      if (currentToken.type === 'link_close') {
	        i--;
	        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {
	          i--;
	        }
	        continue;
	      }

	      // Skip content of html tag links
	      if (currentToken.type === 'html_inline') {
	        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {
	          htmlLinkLevel--;
	        }
	        if (isLinkClose(currentToken.content)) {
	          htmlLinkLevel++;
	        }
	      }
	      if (htmlLinkLevel > 0) { continue; }

	      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {

	        text = currentToken.content;
	        links = state.md.linkify.match(text);

	        // Now split string to nodes
	        nodes = [];
	        level = currentToken.level;
	        lastPos = 0;

	        for (ln = 0; ln < links.length; ln++) {

	          url = links[ln].url;
	          fullUrl = state.md.normalizeLink(url);
	          if (!state.md.validateLink(fullUrl)) { continue; }

	          urlText = links[ln].text;

	          // Linkifier might send raw hostnames like "example.com", where url
	          // starts with domain name. So we prepend http:// in those cases,
	          // and remove it afterwards.
	          //
	          if (!links[ln].schema) {
	            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\/\//, '');
	          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {
	            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');
	          } else {
	            urlText = state.md.normalizeLinkText(urlText);
	          }

	          pos = links[ln].index;

	          if (pos > lastPos) {
	            token         = new state.Token('text', '', 0);
	            token.content = text.slice(lastPos, pos);
	            token.level   = level;
	            nodes.push(token);
	          }

	          token         = new state.Token('link_open', 'a', 1);
	          token.attrs   = [ [ 'href', fullUrl ] ];
	          token.level   = level++;
	          token.markup  = 'linkify';
	          token.info    = 'auto';
	          nodes.push(token);

	          token         = new state.Token('text', '', 0);
	          token.content = urlText;
	          token.level   = level;
	          nodes.push(token);

	          token         = new state.Token('link_close', 'a', -1);
	          token.level   = --level;
	          token.markup  = 'linkify';
	          token.info    = 'auto';
	          nodes.push(token);

	          lastPos = links[ln].lastIndex;
	        }
	        if (lastPos < text.length) {
	          token         = new state.Token('text', '', 0);
	          token.content = text.slice(lastPos);
	          token.level   = level;
	          nodes.push(token);
	        }

	        // replace current node
	        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);
	      }
	    }
	  }
	};


/***/ }),
/* 86 */
/***/ (function(module, exports) {

	// Simple typographyc replacements
	//
	// (c) (C) → ©
	// (tm) (TM) → ™
	// (r) (R) → ®
	// +- → ±
	// (p) (P) -> §
	// ... → … (also ?.... → ?.., !.... → !..)
	// ???????? → ???, !!!!! → !!!, `,,` → `,`
	// -- → &ndash;, --- → &mdash;
	//
	'use strict';

	// TODO:
	// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾
	// - miltiplication 2 x 4 -> 2 × 4

	var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/;

	// Workaround for phantomjs - need regex without /g flag,
	// or root check will fail every second time
	var SCOPED_ABBR_TEST_RE = /\((c|tm|r|p)\)/i;

	var SCOPED_ABBR_RE = /\((c|tm|r|p)\)/ig;
	var SCOPED_ABBR = {
	  c: '©',
	  r: '®',
	  p: '§',
	  tm: '™'
	};

	function replaceFn(match, name) {
	  return SCOPED_ABBR[name.toLowerCase()];
	}

	function replace_scoped(inlineTokens) {
	  var i, token;

	  for (i = inlineTokens.length - 1; i >= 0; i--) {
	    token = inlineTokens[i];
	    if (token.type === 'text') {
	      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);
	    }
	  }
	}

	function replace_rare(inlineTokens) {
	  var i, token;

	  for (i = inlineTokens.length - 1; i >= 0; i--) {
	    token = inlineTokens[i];
	    if (token.type === 'text') {
	      if (RARE_RE.test(token.content)) {
	        token.content = token.content
	                    .replace(/\+-/g, '±')
	                    // .., ..., ....... -> …
	                    // but ?..... & !..... -> ?.. & !..
	                    .replace(/\.{2,}/g, '…').replace(/([?!])…/g, '$1..')
	                    .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')
	                    // em-dash
	                    .replace(/(^|[^-])---([^-]|$)/mg, '$1\u2014$2')
	                    // en-dash
	                    .replace(/(^|\s)--(\s|$)/mg, '$1\u2013$2')
	                    .replace(/(^|[^-\s])--([^-\s]|$)/mg, '$1\u2013$2');
	      }
	    }
	  }
	}


	module.exports = function replace(state) {
	  var blkIdx;

	  if (!state.md.options.typographer) { return; }

	  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {

	    if (state.tokens[blkIdx].type !== 'inline') { continue; }

	    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {
	      replace_scoped(state.tokens[blkIdx].children);
	    }

	    if (RARE_RE.test(state.tokens[blkIdx].content)) {
	      replace_rare(state.tokens[blkIdx].children);
	    }

	  }
	};


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	// Convert straight quotation marks to typographic ones
	//
	'use strict';


	var isWhiteSpace   = __webpack_require__(61).isWhiteSpace;
	var isPunctChar    = __webpack_require__(61).isPunctChar;
	var isMdAsciiPunct = __webpack_require__(61).isMdAsciiPunct;

	var QUOTE_TEST_RE = /['"]/;
	var QUOTE_RE = /['"]/g;
	var APOSTROPHE = '\u2019'; /* ’ */


	function replaceAt(str, index, ch) {
	  return str.substr(0, index) + ch + str.substr(index + 1);
	}

	function process_inlines(tokens, state) {
	  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,
	      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,
	      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;

	  stack = [];

	  for (i = 0; i < tokens.length; i++) {
	    token = tokens[i];

	    thisLevel = tokens[i].level;

	    for (j = stack.length - 1; j >= 0; j--) {
	      if (stack[j].level <= thisLevel) { break; }
	    }
	    stack.length = j + 1;

	    if (token.type !== 'text') { continue; }

	    text = token.content;
	    pos = 0;
	    max = text.length;

	    /*eslint no-labels:0,block-scoped-var:0*/
	    OUTER:
	    while (pos < max) {
	      QUOTE_RE.lastIndex = pos;
	      t = QUOTE_RE.exec(text);
	      if (!t) { break; }

	      canOpen = canClose = true;
	      pos = t.index + 1;
	      isSingle = (t[0] === "'");

	      // Find previous character,
	      // default to space if it's the beginning of the line
	      //
	      lastChar = 0x20;

	      if (t.index - 1 >= 0) {
	        lastChar = text.charCodeAt(t.index - 1);
	      } else {
	        for (j = i - 1; j >= 0; j--) {
	          if (tokens[j].type !== 'text') { continue; }

	          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);
	          break;
	        }
	      }

	      // Find next character,
	      // default to space if it's the end of the line
	      //
	      nextChar = 0x20;

	      if (pos < max) {
	        nextChar = text.charCodeAt(pos);
	      } else {
	        for (j = i + 1; j < tokens.length; j++) {
	          if (tokens[j].type !== 'text') { continue; }

	          nextChar = tokens[j].content.charCodeAt(0);
	          break;
	        }
	      }

	      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
	      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));

	      isLastWhiteSpace = isWhiteSpace(lastChar);
	      isNextWhiteSpace = isWhiteSpace(nextChar);

	      if (isNextWhiteSpace) {
	        canOpen = false;
	      } else if (isNextPunctChar) {
	        if (!(isLastWhiteSpace || isLastPunctChar)) {
	          canOpen = false;
	        }
	      }

	      if (isLastWhiteSpace) {
	        canClose = false;
	      } else if (isLastPunctChar) {
	        if (!(isNextWhiteSpace || isNextPunctChar)) {
	          canClose = false;
	        }
	      }

	      if (nextChar === 0x22 /* " */ && t[0] === '"') {
	        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {
	          // special case: 1"" - count first quote as an inch
	          canClose = canOpen = false;
	        }
	      }

	      if (canOpen && canClose) {
	        // treat this as the middle of the word
	        canOpen = false;
	        canClose = isNextPunctChar;
	      }

	      if (!canOpen && !canClose) {
	        // middle of word
	        if (isSingle) {
	          token.content = replaceAt(token.content, t.index, APOSTROPHE);
	        }
	        continue;
	      }

	      if (canClose) {
	        // this could be a closing quote, rewind the stack to get a match
	        for (j = stack.length - 1; j >= 0; j--) {
	          item = stack[j];
	          if (stack[j].level < thisLevel) { break; }
	          if (item.single === isSingle && stack[j].level === thisLevel) {
	            item = stack[j];

	            if (isSingle) {
	              openQuote = state.md.options.quotes[2];
	              closeQuote = state.md.options.quotes[3];
	            } else {
	              openQuote = state.md.options.quotes[0];
	              closeQuote = state.md.options.quotes[1];
	            }

	            // replace token.content *before* tokens[item.token].content,
	            // because, if they are pointing at the same token, replaceAt
	            // could mess up indices when quote length != 1
	            token.content = replaceAt(token.content, t.index, closeQuote);
	            tokens[item.token].content = replaceAt(
	              tokens[item.token].content, item.pos, openQuote);

	            pos += closeQuote.length - 1;
	            if (item.token === i) { pos += openQuote.length - 1; }

	            text = token.content;
	            max = text.length;

	            stack.length = j;
	            continue OUTER;
	          }
	        }
	      }

	      if (canOpen) {
	        stack.push({
	          token: i,
	          pos: t.index,
	          single: isSingle,
	          level: thisLevel
	        });
	      } else if (canClose && isSingle) {
	        token.content = replaceAt(token.content, t.index, APOSTROPHE);
	      }
	    }
	  }
	}


	module.exports = function smartquotes(state) {
	  /*eslint max-depth:0*/
	  var blkIdx;

	  if (!state.md.options.typographer) { return; }

	  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {

	    if (state.tokens[blkIdx].type !== 'inline' ||
	        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {
	      continue;
	    }

	    process_inlines(state.tokens[blkIdx].children, state);
	  }
	};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	// Core state object
	//
	'use strict';

	var Token = __webpack_require__(89);


	function StateCore(src, md, env) {
	  this.src = src;
	  this.env = env;
	  this.tokens = [];
	  this.inlineMode = false;
	  this.md = md; // link to parser instance
	}

	// re-export Token class to use in core rules
	StateCore.prototype.Token = Token;


	module.exports = StateCore;


/***/ }),
/* 89 */
/***/ (function(module, exports) {

	// Token class

	'use strict';


	/**
	 * class Token
	 **/

	/**
	 * new Token(type, tag, nesting)
	 *
	 * Create new token and fill passed properties.
	 **/
	function Token(type, tag, nesting) {
	  /**
	   * Token#type -> String
	   *
	   * Type of the token (string, e.g. "paragraph_open")
	   **/
	  this.type     = type;

	  /**
	   * Token#tag -> String
	   *
	   * html tag name, e.g. "p"
	   **/
	  this.tag      = tag;

	  /**
	   * Token#attrs -> Array
	   *
	   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`
	   **/
	  this.attrs    = null;

	  /**
	   * Token#map -> Array
	   *
	   * Source map info. Format: `[ line_begin, line_end ]`
	   **/
	  this.map      = null;

	  /**
	   * Token#nesting -> Number
	   *
	   * Level change (number in {-1, 0, 1} set), where:
	   *
	   * -  `1` means the tag is opening
	   * -  `0` means the tag is self-closing
	   * - `-1` means the tag is closing
	   **/
	  this.nesting  = nesting;

	  /**
	   * Token#level -> Number
	   *
	   * nesting level, the same as `state.level`
	   **/
	  this.level    = 0;

	  /**
	   * Token#children -> Array
	   *
	   * An array of child nodes (inline and img tokens)
	   **/
	  this.children = null;

	  /**
	   * Token#content -> String
	   *
	   * In a case of self-closing tag (code, html, fence, etc.),
	   * it has contents of this tag.
	   **/
	  this.content  = '';

	  /**
	   * Token#markup -> String
	   *
	   * '*' or '_' for emphasis, fence string for fence, etc.
	   **/
	  this.markup   = '';

	  /**
	   * Token#info -> String
	   *
	   * fence infostring
	   **/
	  this.info     = '';

	  /**
	   * Token#meta -> Object
	   *
	   * A place for plugins to store an arbitrary data
	   **/
	  this.meta     = null;

	  /**
	   * Token#block -> Boolean
	   *
	   * True for block-level tokens, false for inline tokens.
	   * Used in renderer to calculate line breaks
	   **/
	  this.block    = false;

	  /**
	   * Token#hidden -> Boolean
	   *
	   * If it's true, ignore this element when rendering. Used for tight lists
	   * to hide paragraphs.
	   **/
	  this.hidden   = false;
	}


	/**
	 * Token.attrIndex(name) -> Number
	 *
	 * Search attribute index by name.
	 **/
	Token.prototype.attrIndex = function attrIndex(name) {
	  var attrs, i, len;

	  if (!this.attrs) { return -1; }

	  attrs = this.attrs;

	  for (i = 0, len = attrs.length; i < len; i++) {
	    if (attrs[i][0] === name) { return i; }
	  }
	  return -1;
	};


	/**
	 * Token.attrPush(attrData)
	 *
	 * Add `[ name, value ]` attribute to list. Init attrs if necessary
	 **/
	Token.prototype.attrPush = function attrPush(attrData) {
	  if (this.attrs) {
	    this.attrs.push(attrData);
	  } else {
	    this.attrs = [ attrData ];
	  }
	};


	/**
	 * Token.attrSet(name, value)
	 *
	 * Set `name` attribute to `value`. Override old value if exists.
	 **/
	Token.prototype.attrSet = function attrSet(name, value) {
	  var idx = this.attrIndex(name),
	      attrData = [ name, value ];

	  if (idx < 0) {
	    this.attrPush(attrData);
	  } else {
	    this.attrs[idx] = attrData;
	  }
	};


	/**
	 * Token.attrGet(name)
	 *
	 * Get the value of attribute `name`, or null if it does not exist.
	 **/
	Token.prototype.attrGet = function attrGet(name) {
	  var idx = this.attrIndex(name), value = null;
	  if (idx >= 0) {
	    value = this.attrs[idx][1];
	  }
	  return value;
	};


	/**
	 * Token.attrJoin(name, value)
	 *
	 * Join value to existing attribute via space. Or create new attribute if not
	 * exists. Useful to operate with token classes.
	 **/
	Token.prototype.attrJoin = function attrJoin(name, value) {
	  var idx = this.attrIndex(name);

	  if (idx < 0) {
	    this.attrPush([ name, value ]);
	  } else {
	    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;
	  }
	};


	module.exports = Token;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/** internal
	 * class ParserBlock
	 *
	 * Block-level tokenizer.
	 **/
	'use strict';


	var Ruler           = __webpack_require__(81);


	var _rules = [
	  // First 2 params - rule name & source. Secondary array - list of rules,
	  // which can be terminated by this one.
	  [ 'table',      __webpack_require__(91),      [ 'paragraph', 'reference' ] ],
	  [ 'code',       __webpack_require__(92) ],
	  [ 'fence',      __webpack_require__(93),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],
	  [ 'blockquote', __webpack_require__(94), [ 'paragraph', 'reference', 'list' ] ],
	  [ 'hr',         __webpack_require__(95),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],
	  [ 'list',       __webpack_require__(96),       [ 'paragraph', 'reference', 'blockquote' ] ],
	  [ 'reference',  __webpack_require__(97) ],
	  [ 'heading',    __webpack_require__(98),    [ 'paragraph', 'reference', 'blockquote' ] ],
	  [ 'lheading',   __webpack_require__(99) ],
	  [ 'html_block', __webpack_require__(100), [ 'paragraph', 'reference', 'blockquote' ] ],
	  [ 'paragraph',  __webpack_require__(103) ]
	];


	/**
	 * new ParserBlock()
	 **/
	function ParserBlock() {
	  /**
	   * ParserBlock#ruler -> Ruler
	   *
	   * [[Ruler]] instance. Keep configuration of block rules.
	   **/
	  this.ruler = new Ruler();

	  for (var i = 0; i < _rules.length; i++) {
	    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });
	  }
	}


	// Generate tokens for input range
	//
	ParserBlock.prototype.tokenize = function (state, startLine, endLine) {
	  var ok, i,
	      rules = this.ruler.getRules(''),
	      len = rules.length,
	      line = startLine,
	      hasEmptyLines = false,
	      maxNesting = state.md.options.maxNesting;

	  while (line < endLine) {
	    state.line = line = state.skipEmptyLines(line);
	    if (line >= endLine) { break; }

	    // Termination condition for nested calls.
	    // Nested calls currently used for blockquotes & lists
	    if (state.sCount[line] < state.blkIndent) { break; }

	    // If nesting level exceeded - skip tail to the end. That's not ordinary
	    // situation and we should not care about content.
	    if (state.level >= maxNesting) {
	      state.line = endLine;
	      break;
	    }

	    // Try all possible rules.
	    // On success, rule should:
	    //
	    // - update `state.line`
	    // - update `state.tokens`
	    // - return true

	    for (i = 0; i < len; i++) {
	      ok = rules[i](state, line, endLine, false);
	      if (ok) { break; }
	    }

	    // set state.tight iff we had an empty line before current tag
	    // i.e. latest empty line should not count
	    state.tight = !hasEmptyLines;

	    // paragraph might "eat" one newline after it in nested lists
	    if (state.isEmpty(state.line - 1)) {
	      hasEmptyLines = true;
	    }

	    line = state.line;

	    if (line < endLine && state.isEmpty(line)) {
	      hasEmptyLines = true;
	      line++;

	      // two empty lines should stop the parser in list mode
	      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }
	      state.line = line;
	    }
	  }
	};


	/**
	 * ParserBlock.parse(str, md, env, outTokens)
	 *
	 * Process input string and push block tokens into `outTokens`
	 **/
	ParserBlock.prototype.parse = function (src, md, env, outTokens) {
	  var state;

	  if (!src) { return; }

	  state = new this.State(src, md, env, outTokens);

	  this.tokenize(state, state.line, state.lineMax);
	};


	ParserBlock.prototype.State = __webpack_require__(104);


	module.exports = ParserBlock;


/***/ }),
/* 91 */
/***/ (function(module, exports) {

	// GFM table, non-standard

	'use strict';


	function getLine(state, line) {
	  var pos = state.bMarks[line] + state.blkIndent,
	      max = state.eMarks[line];

	  return state.src.substr(pos, max - pos);
	}

	function escapedSplit(str) {
	  var result = [],
	      pos = 0,
	      max = str.length,
	      ch,
	      escapes = 0,
	      lastPos = 0,
	      backTicked = false,
	      lastBackTick = 0;

	  ch  = str.charCodeAt(pos);

	  while (pos < max) {
	    if (ch === 0x60/* ` */ && (escapes % 2 === 0)) {
	      backTicked = !backTicked;
	      lastBackTick = pos;
	    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {
	      result.push(str.substring(lastPos, pos));
	      lastPos = pos + 1;
	    } else if (ch === 0x5c/* \ */) {
	      escapes++;
	    } else {
	      escapes = 0;
	    }

	    pos++;

	    // If there was an un-closed backtick, go back to just after
	    // the last backtick, but as if it was a normal character
	    if (pos === max && backTicked) {
	      backTicked = false;
	      pos = lastBackTick + 1;
	    }

	    ch = str.charCodeAt(pos);
	  }

	  result.push(str.substring(lastPos));

	  return result;
	}


	module.exports = function table(state, startLine, endLine, silent) {
	  var ch, lineText, pos, i, nextLine, columns, columnCount, token,
	      aligns, t, tableLines, tbodyLines;

	  // should have at least three lines
	  if (startLine + 2 > endLine) { return false; }

	  nextLine = startLine + 1;

	  if (state.sCount[nextLine] < state.blkIndent) { return false; }

	  // first character of the second line should be '|' or '-'

	  pos = state.bMarks[nextLine] + state.tShift[nextLine];
	  if (pos >= state.eMarks[nextLine]) { return false; }

	  ch = state.src.charCodeAt(pos);
	  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }

	  lineText = getLine(state, startLine + 1);
	  if (!/^[-:| ]+$/.test(lineText)) { return false; }

	  columns = lineText.split('|');
	  aligns = [];
	  for (i = 0; i < columns.length; i++) {
	    t = columns[i].trim();
	    if (!t) {
	      // allow empty columns before and after table, but not in between columns;
	      // e.g. allow ` |---| `, disallow ` ---||--- `
	      if (i === 0 || i === columns.length - 1) {
	        continue;
	      } else {
	        return false;
	      }
	    }

	    if (!/^:?-+:?$/.test(t)) { return false; }
	    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {
	      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');
	    } else if (t.charCodeAt(0) === 0x3A/* : */) {
	      aligns.push('left');
	    } else {
	      aligns.push('');
	    }
	  }

	  lineText = getLine(state, startLine).trim();
	  if (lineText.indexOf('|') === -1) { return false; }
	  columns = escapedSplit(lineText.replace(/^\||\|$/g, ''));

	  // header row will define an amount of columns in the entire table,
	  // and align row shouldn't be smaller than that (the rest of the rows can)
	  columnCount = columns.length;
	  if (columnCount > aligns.length) { return false; }

	  if (silent) { return true; }

	  token     = state.push('table_open', 'table', 1);
	  token.map = tableLines = [ startLine, 0 ];

	  token     = state.push('thead_open', 'thead', 1);
	  token.map = [ startLine, startLine + 1 ];

	  token     = state.push('tr_open', 'tr', 1);
	  token.map = [ startLine, startLine + 1 ];

	  for (i = 0; i < columns.length; i++) {
	    token          = state.push('th_open', 'th', 1);
	    token.map      = [ startLine, startLine + 1 ];
	    if (aligns[i]) {
	      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];
	    }

	    token          = state.push('inline', '', 0);
	    token.content  = columns[i].trim();
	    token.map      = [ startLine, startLine + 1 ];
	    token.children = [];

	    token          = state.push('th_close', 'th', -1);
	  }

	  token     = state.push('tr_close', 'tr', -1);
	  token     = state.push('thead_close', 'thead', -1);

	  token     = state.push('tbody_open', 'tbody', 1);
	  token.map = tbodyLines = [ startLine + 2, 0 ];

	  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {
	    if (state.sCount[nextLine] < state.blkIndent) { break; }

	    lineText = getLine(state, nextLine);
	    if (lineText.indexOf('|') === -1) { break; }

	    // keep spaces at beginning of line to indicate an empty first cell, but
	    // strip trailing whitespace
	    columns = escapedSplit(lineText.replace(/^\||\|\s*$/g, ''));

	    token = state.push('tr_open', 'tr', 1);
	    for (i = 0; i < columnCount; i++) {
	      token          = state.push('td_open', 'td', 1);
	      if (aligns[i]) {
	        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];
	      }

	      token          = state.push('inline', '', 0);
	      token.content  = columns[i] ? columns[i].trim() : '';
	      token.children = [];

	      token          = state.push('td_close', 'td', -1);
	    }
	    token = state.push('tr_close', 'tr', -1);
	  }
	  token = state.push('tbody_close', 'tbody', -1);
	  token = state.push('table_close', 'table', -1);

	  tableLines[1] = tbodyLines[1] = nextLine;
	  state.line = nextLine;
	  return true;
	};


/***/ }),
/* 92 */
/***/ (function(module, exports) {

	// Code block (4 spaces padded)

	'use strict';


	module.exports = function code(state, startLine, endLine/*, silent*/) {
	  var nextLine, last, token, emptyLines = 0;

	  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }

	  last = nextLine = startLine + 1;

	  while (nextLine < endLine) {
	    if (state.isEmpty(nextLine)) {
	      emptyLines++;

	      // workaround for lists: 2 blank lines should terminate indented
	      // code block, but not fenced code block
	      if (emptyLines >= 2 && state.parentType === 'list') {
	        break;
	      }

	      nextLine++;
	      continue;
	    }

	    emptyLines = 0;

	    if (state.sCount[nextLine] - state.blkIndent >= 4) {
	      nextLine++;
	      last = nextLine;
	      continue;
	    }
	    break;
	  }

	  state.line = last;

	  token         = state.push('code_block', 'code', 0);
	  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);
	  token.map     = [ startLine, state.line ];

	  return true;
	};


/***/ }),
/* 93 */
/***/ (function(module, exports) {

	// fences (``` lang, ~~~ lang)

	'use strict';


	module.exports = function fence(state, startLine, endLine, silent) {
	  var marker, len, params, nextLine, mem, token, markup,
	      haveEndMarker = false,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  if (pos + 3 > max) { return false; }

	  marker = state.src.charCodeAt(pos);

	  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {
	    return false;
	  }

	  // scan marker length
	  mem = pos;
	  pos = state.skipChars(pos, marker);

	  len = pos - mem;

	  if (len < 3) { return false; }

	  markup = state.src.slice(mem, pos);
	  params = state.src.slice(pos, max);

	  if (params.indexOf('`') >= 0) { return false; }

	  // Since start is found, we can report success here in validation mode
	  if (silent) { return true; }

	  // search end of block
	  nextLine = startLine;

	  for (;;) {
	    nextLine++;
	    if (nextLine >= endLine) {
	      // unclosed block should be autoclosed by end of document.
	      // also block seems to be autoclosed by end of parent
	      break;
	    }

	    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];
	    max = state.eMarks[nextLine];

	    if (pos < max && state.sCount[nextLine] < state.blkIndent) {
	      // non-empty line with negative indent should stop the list:
	      // - ```
	      //  test
	      break;
	    }

	    if (state.src.charCodeAt(pos) !== marker) { continue; }

	    if (state.sCount[nextLine] - state.blkIndent >= 4) {
	      // closing fence should be indented less than 4 spaces
	      continue;
	    }

	    pos = state.skipChars(pos, marker);

	    // closing code fence must be at least as long as the opening one
	    if (pos - mem < len) { continue; }

	    // make sure tail has spaces only
	    pos = state.skipSpaces(pos);

	    if (pos < max) { continue; }

	    haveEndMarker = true;
	    // found!
	    break;
	  }

	  // If a fence has heading spaces, they should be removed from its inner block
	  len = state.sCount[startLine];

	  state.line = nextLine + (haveEndMarker ? 1 : 0);

	  token         = state.push('fence', 'code', 0);
	  token.info    = params;
	  token.content = state.getLines(startLine + 1, nextLine, len, true);
	  token.markup  = markup;
	  token.map     = [ startLine, state.line ];

	  return true;
	};


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	// Block quotes

	'use strict';

	var isSpace = __webpack_require__(61).isSpace;


	module.exports = function blockquote(state, startLine, endLine, silent) {
	  var nextLine, lastLineEmpty, oldTShift, oldSCount, oldBMarks, oldIndent, oldParentType, lines, initial, offset, ch,
	      terminatorRules, token,
	      i, l, terminate,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  // check the block quote marker
	  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }

	  // we know that it's going to be a valid blockquote,
	  // so no point trying to find the end of it in silent mode
	  if (silent) { return true; }

	  // skip one optional space (but not tab, check cmark impl) after '>'
	  if (state.src.charCodeAt(pos) === 0x20) { pos++; }

	  oldIndent = state.blkIndent;
	  state.blkIndent = 0;

	  // skip spaces after ">" and re-calculate offset
	  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);

	  oldBMarks = [ state.bMarks[startLine] ];
	  state.bMarks[startLine] = pos;

	  while (pos < max) {
	    ch = state.src.charCodeAt(pos);

	    if (isSpace(ch)) {
	      if (ch === 0x09) {
	        offset += 4 - offset % 4;
	      } else {
	        offset++;
	      }
	    } else {
	      break;
	    }

	    pos++;
	  }

	  lastLineEmpty = pos >= max;

	  oldSCount = [ state.sCount[startLine] ];
	  state.sCount[startLine] = offset - initial;

	  oldTShift = [ state.tShift[startLine] ];
	  state.tShift[startLine] = pos - state.bMarks[startLine];

	  terminatorRules = state.md.block.ruler.getRules('blockquote');

	  // Search the end of the block
	  //
	  // Block ends with either:
	  //  1. an empty line outside:
	  //     ```
	  //     > test
	  //
	  //     ```
	  //  2. an empty line inside:
	  //     ```
	  //     >
	  //     test
	  //     ```
	  //  3. another tag
	  //     ```
	  //     > test
	  //      - - -
	  //     ```
	  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {
	    if (state.sCount[nextLine] < oldIndent) { break; }

	    pos = state.bMarks[nextLine] + state.tShift[nextLine];
	    max = state.eMarks[nextLine];

	    if (pos >= max) {
	      // Case 1: line is not inside the blockquote, and this line is empty.
	      break;
	    }

	    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {
	      // This line is inside the blockquote.

	      // skip one optional space (but not tab, check cmark impl) after '>'
	      if (state.src.charCodeAt(pos) === 0x20) { pos++; }

	      // skip spaces after ">" and re-calculate offset
	      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);

	      oldBMarks.push(state.bMarks[nextLine]);
	      state.bMarks[nextLine] = pos;

	      while (pos < max) {
	        ch = state.src.charCodeAt(pos);

	        if (isSpace(ch)) {
	          if (ch === 0x09) {
	            offset += 4 - offset % 4;
	          } else {
	            offset++;
	          }
	        } else {
	          break;
	        }

	        pos++;
	      }

	      lastLineEmpty = pos >= max;

	      oldSCount.push(state.sCount[nextLine]);
	      state.sCount[nextLine] = offset - initial;

	      oldTShift.push(state.tShift[nextLine]);
	      state.tShift[nextLine] = pos - state.bMarks[nextLine];
	      continue;
	    }

	    // Case 2: line is not inside the blockquote, and the last line was empty.
	    if (lastLineEmpty) { break; }

	    // Case 3: another tag found.
	    terminate = false;
	    for (i = 0, l = terminatorRules.length; i < l; i++) {
	      if (terminatorRules[i](state, nextLine, endLine, true)) {
	        terminate = true;
	        break;
	      }
	    }
	    if (terminate) { break; }

	    oldBMarks.push(state.bMarks[nextLine]);
	    oldTShift.push(state.tShift[nextLine]);
	    oldSCount.push(state.sCount[nextLine]);

	    // A negative indentation means that this is a paragraph continuation
	    //
	    state.sCount[nextLine] = -1;
	  }

	  oldParentType = state.parentType;
	  state.parentType = 'blockquote';

	  token        = state.push('blockquote_open', 'blockquote', 1);
	  token.markup = '>';
	  token.map    = lines = [ startLine, 0 ];

	  state.md.block.tokenize(state, startLine, nextLine);

	  token        = state.push('blockquote_close', 'blockquote', -1);
	  token.markup = '>';

	  state.parentType = oldParentType;
	  lines[1] = state.line;

	  // Restore original tShift; this might not be necessary since the parser
	  // has already been here, but just to make sure we can do that.
	  for (i = 0; i < oldTShift.length; i++) {
	    state.bMarks[i + startLine] = oldBMarks[i];
	    state.tShift[i + startLine] = oldTShift[i];
	    state.sCount[i + startLine] = oldSCount[i];
	  }
	  state.blkIndent = oldIndent;

	  return true;
	};


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	// Horizontal rule

	'use strict';

	var isSpace = __webpack_require__(61).isSpace;


	module.exports = function hr(state, startLine, endLine, silent) {
	  var marker, cnt, ch, token,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  marker = state.src.charCodeAt(pos++);

	  // Check hr marker
	  if (marker !== 0x2A/* * */ &&
	      marker !== 0x2D/* - */ &&
	      marker !== 0x5F/* _ */) {
	    return false;
	  }

	  // markers can be mixed with spaces, but there should be at least 3 of them

	  cnt = 1;
	  while (pos < max) {
	    ch = state.src.charCodeAt(pos++);
	    if (ch !== marker && !isSpace(ch)) { return false; }
	    if (ch === marker) { cnt++; }
	  }

	  if (cnt < 3) { return false; }

	  if (silent) { return true; }

	  state.line = startLine + 1;

	  token        = state.push('hr', 'hr', 0);
	  token.map    = [ startLine, state.line ];
	  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));

	  return true;
	};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	// Lists

	'use strict';

	var isSpace = __webpack_require__(61).isSpace;


	// Search `[-+*][\n ]`, returns next pos arter marker on success
	// or -1 on fail.
	function skipBulletListMarker(state, startLine) {
	  var marker, pos, max, ch;

	  pos = state.bMarks[startLine] + state.tShift[startLine];
	  max = state.eMarks[startLine];

	  marker = state.src.charCodeAt(pos++);
	  // Check bullet
	  if (marker !== 0x2A/* * */ &&
	      marker !== 0x2D/* - */ &&
	      marker !== 0x2B/* + */) {
	    return -1;
	  }

	  if (pos < max) {
	    ch = state.src.charCodeAt(pos);

	    if (!isSpace(ch)) {
	      // " -test " - is not a list item
	      return -1;
	    }
	  }

	  return pos;
	}

	// Search `\d+[.)][\n ]`, returns next pos arter marker on success
	// or -1 on fail.
	function skipOrderedListMarker(state, startLine) {
	  var ch,
	      start = state.bMarks[startLine] + state.tShift[startLine],
	      pos = start,
	      max = state.eMarks[startLine];

	  // List marker should have at least 2 chars (digit + dot)
	  if (pos + 1 >= max) { return -1; }

	  ch = state.src.charCodeAt(pos++);

	  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }

	  for (;;) {
	    // EOL -> fail
	    if (pos >= max) { return -1; }

	    ch = state.src.charCodeAt(pos++);

	    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {

	      // List marker should have no more than 9 digits
	      // (prevents integer overflow in browsers)
	      if (pos - start >= 10) { return -1; }

	      continue;
	    }

	    // found valid marker
	    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {
	      break;
	    }

	    return -1;
	  }


	  if (pos < max) {
	    ch = state.src.charCodeAt(pos);

	    if (!isSpace(ch)) {
	      // " 1.test " - is not a list item
	      return -1;
	    }
	  }
	  return pos;
	}

	function markTightParagraphs(state, idx) {
	  var i, l,
	      level = state.level + 2;

	  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
	    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {
	      state.tokens[i + 2].hidden = true;
	      state.tokens[i].hidden = true;
	      i += 2;
	    }
	  }
	}


	module.exports = function list(state, startLine, endLine, silent) {
	  var nextLine,
	      initial,
	      offset,
	      indent,
	      oldTShift,
	      oldIndent,
	      oldLIndent,
	      oldTight,
	      oldParentType,
	      start,
	      posAfterMarker,
	      ch,
	      pos,
	      max,
	      indentAfterMarker,
	      markerValue,
	      markerCharCode,
	      isOrdered,
	      contentStart,
	      listTokIdx,
	      prevEmptyEnd,
	      listLines,
	      itemLines,
	      tight = true,
	      terminatorRules,
	      token,
	      i, l, terminate;

	  // Detect list type and position after marker
	  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {
	    isOrdered = true;
	  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {
	    isOrdered = false;
	  } else {
	    return false;
	  }

	  // We should terminate list on style change. Remember first one to compare.
	  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);

	  // For validation mode we can terminate immediately
	  if (silent) { return true; }

	  // Start list
	  listTokIdx = state.tokens.length;

	  if (isOrdered) {
	    start = state.bMarks[startLine] + state.tShift[startLine];
	    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));

	    token       = state.push('ordered_list_open', 'ol', 1);
	    if (markerValue !== 1) {
	      token.attrs = [ [ 'start', markerValue ] ];
	    }

	  } else {
	    token       = state.push('bullet_list_open', 'ul', 1);
	  }

	  token.map    = listLines = [ startLine, 0 ];
	  token.markup = String.fromCharCode(markerCharCode);

	  //
	  // Iterate list items
	  //

	  nextLine = startLine;
	  prevEmptyEnd = false;
	  terminatorRules = state.md.block.ruler.getRules('list');

	  while (nextLine < endLine) {
	    pos = posAfterMarker;
	    max = state.eMarks[nextLine];

	    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);

	    while (pos < max) {
	      ch = state.src.charCodeAt(pos);

	      if (isSpace(ch)) {
	        if (ch === 0x09) {
	          offset += 4 - offset % 4;
	        } else {
	          offset++;
	        }
	      } else {
	        break;
	      }

	      pos++;
	    }

	    contentStart = pos;

	    if (contentStart >= max) {
	      // trimming space in "-    \n  3" case, indent is 1 here
	      indentAfterMarker = 1;
	    } else {
	      indentAfterMarker = offset - initial;
	    }

	    // If we have more than 4 spaces, the indent is 1
	    // (the rest is just indented code block)
	    if (indentAfterMarker > 4) { indentAfterMarker = 1; }

	    // "  -  test"
	    //  ^^^^^ - calculating total length of this thing
	    indent = initial + indentAfterMarker;

	    // Run subparser & write tokens
	    token        = state.push('list_item_open', 'li', 1);
	    token.markup = String.fromCharCode(markerCharCode);
	    token.map    = itemLines = [ startLine, 0 ];

	    oldIndent = state.blkIndent;
	    oldTight = state.tight;
	    oldTShift = state.tShift[startLine];
	    oldLIndent = state.sCount[startLine];
	    oldParentType = state.parentType;
	    state.blkIndent = indent;
	    state.tight = true;
	    state.parentType = 'list';
	    state.tShift[startLine] = contentStart - state.bMarks[startLine];
	    state.sCount[startLine] = offset;

	    if (contentStart >= max && state.isEmpty(startLine + 1)) {
	      // workaround for this case
	      // (list item is empty, list terminates before "foo"):
	      // ~~~~~~~~
	      //   -
	      //
	      //     foo
	      // ~~~~~~~~
	      state.line = Math.min(state.line + 2, endLine);
	    } else {
	      state.md.block.tokenize(state, startLine, endLine, true);
	    }

	    // If any of list item is tight, mark list as tight
	    if (!state.tight || prevEmptyEnd) {
	      tight = false;
	    }
	    // Item become loose if finish with empty line,
	    // but we should filter last element, because it means list finish
	    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);

	    state.blkIndent = oldIndent;
	    state.tShift[startLine] = oldTShift;
	    state.sCount[startLine] = oldLIndent;
	    state.tight = oldTight;
	    state.parentType = oldParentType;

	    token        = state.push('list_item_close', 'li', -1);
	    token.markup = String.fromCharCode(markerCharCode);

	    nextLine = startLine = state.line;
	    itemLines[1] = nextLine;
	    contentStart = state.bMarks[startLine];

	    if (nextLine >= endLine) { break; }

	    if (state.isEmpty(nextLine)) {
	      break;
	    }

	    //
	    // Try to check if list is terminated or continued.
	    //
	    if (state.sCount[nextLine] < state.blkIndent) { break; }

	    // fail if terminating block found
	    terminate = false;
	    for (i = 0, l = terminatorRules.length; i < l; i++) {
	      if (terminatorRules[i](state, nextLine, endLine, true)) {
	        terminate = true;
	        break;
	      }
	    }
	    if (terminate) { break; }

	    // fail if list has another type
	    if (isOrdered) {
	      posAfterMarker = skipOrderedListMarker(state, nextLine);
	      if (posAfterMarker < 0) { break; }
	    } else {
	      posAfterMarker = skipBulletListMarker(state, nextLine);
	      if (posAfterMarker < 0) { break; }
	    }

	    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }
	  }

	  // Finilize list
	  if (isOrdered) {
	    token = state.push('ordered_list_close', 'ol', -1);
	  } else {
	    token = state.push('bullet_list_close', 'ul', -1);
	  }
	  token.markup = String.fromCharCode(markerCharCode);

	  listLines[1] = nextLine;
	  state.line = nextLine;

	  // mark paragraphs tight if needed
	  if (tight) {
	    markTightParagraphs(state, listTokIdx);
	  }

	  return true;
	};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';


	var parseLinkDestination = __webpack_require__(77);
	var parseLinkTitle       = __webpack_require__(78);
	var normalizeReference   = __webpack_require__(61).normalizeReference;
	var isSpace              = __webpack_require__(61).isSpace;


	module.exports = function reference(state, startLine, _endLine, silent) {
	  var ch,
	      destEndPos,
	      destEndLineNo,
	      endLine,
	      href,
	      i,
	      l,
	      label,
	      labelEnd,
	      res,
	      start,
	      str,
	      terminate,
	      terminatorRules,
	      title,
	      lines = 0,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine],
	      nextLine = startLine + 1;

	  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }

	  // Simple check to quickly interrupt scan on [link](url) at the start of line.
	  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54
	  while (++pos < max) {
	    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&
	        state.src.charCodeAt(pos - 1) !== 0x5C/* \ */) {
	      if (pos + 1 === max) { return false; }
	      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }
	      break;
	    }
	  }

	  endLine = state.lineMax;

	  // jump line-by-line until empty one or EOF
	  terminatorRules = state.md.block.ruler.getRules('reference');

	  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
	    // this would be a code block normally, but after paragraph
	    // it's considered a lazy continuation regardless of what's there
	    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }

	    // quirk for blockquotes, this line should already be checked by that rule
	    if (state.sCount[nextLine] < 0) { continue; }

	    // Some tags can terminate paragraph without empty line.
	    terminate = false;
	    for (i = 0, l = terminatorRules.length; i < l; i++) {
	      if (terminatorRules[i](state, nextLine, endLine, true)) {
	        terminate = true;
	        break;
	      }
	    }
	    if (terminate) { break; }
	  }

	  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
	  max = str.length;

	  for (pos = 1; pos < max; pos++) {
	    ch = str.charCodeAt(pos);
	    if (ch === 0x5B /* [ */) {
	      return false;
	    } else if (ch === 0x5D /* ] */) {
	      labelEnd = pos;
	      break;
	    } else if (ch === 0x0A /* \n */) {
	      lines++;
	    } else if (ch === 0x5C /* \ */) {
	      pos++;
	      if (pos < max && str.charCodeAt(pos) === 0x0A) {
	        lines++;
	      }
	    }
	  }

	  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }

	  // [label]:   destination   'title'
	  //         ^^^ skip optional whitespace here
	  for (pos = labelEnd + 2; pos < max; pos++) {
	    ch = str.charCodeAt(pos);
	    if (ch === 0x0A) {
	      lines++;
	    } else if (isSpace(ch)) {
	      /*eslint no-empty:0*/
	    } else {
	      break;
	    }
	  }

	  // [label]:   destination   'title'
	  //            ^^^^^^^^^^^ parse this
	  res = parseLinkDestination(str, pos, max);
	  if (!res.ok) { return false; }

	  href = state.md.normalizeLink(res.str);
	  if (!state.md.validateLink(href)) { return false; }

	  pos = res.pos;
	  lines += res.lines;

	  // save cursor state, we could require to rollback later
	  destEndPos = pos;
	  destEndLineNo = lines;

	  // [label]:   destination   'title'
	  //                       ^^^ skipping those spaces
	  start = pos;
	  for (; pos < max; pos++) {
	    ch = str.charCodeAt(pos);
	    if (ch === 0x0A) {
	      lines++;
	    } else if (isSpace(ch)) {
	      /*eslint no-empty:0*/
	    } else {
	      break;
	    }
	  }

	  // [label]:   destination   'title'
	  //                          ^^^^^^^ parse this
	  res = parseLinkTitle(str, pos, max);
	  if (pos < max && start !== pos && res.ok) {
	    title = res.str;
	    pos = res.pos;
	    lines += res.lines;
	  } else {
	    title = '';
	    pos = destEndPos;
	    lines = destEndLineNo;
	  }

	  // skip trailing spaces until the rest of the line
	  while (pos < max) {
	    ch = str.charCodeAt(pos);
	    if (!isSpace(ch)) { break; }
	    pos++;
	  }

	  if (pos < max && str.charCodeAt(pos) !== 0x0A) {
	    if (title) {
	      // garbage at the end of the line after title,
	      // but it could still be a valid reference if we roll back
	      title = '';
	      pos = destEndPos;
	      lines = destEndLineNo;
	      while (pos < max) {
	        ch = str.charCodeAt(pos);
	        if (!isSpace(ch)) { break; }
	        pos++;
	      }
	    }
	  }

	  if (pos < max && str.charCodeAt(pos) !== 0x0A) {
	    // garbage at the end of the line
	    return false;
	  }

	  label = normalizeReference(str.slice(1, labelEnd));
	  if (!label) {
	    // CommonMark 0.20 disallows empty labels
	    return false;
	  }

	  // Reference can not terminate anything. This check is for safety only.
	  /*istanbul ignore if*/
	  if (silent) { return true; }

	  if (typeof state.env.references === 'undefined') {
	    state.env.references = {};
	  }
	  if (typeof state.env.references[label] === 'undefined') {
	    state.env.references[label] = { title: title, href: href };
	  }

	  state.line = startLine + lines + 1;
	  return true;
	};


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	// heading (#, ##, ...)

	'use strict';

	var isSpace = __webpack_require__(61).isSpace;


	module.exports = function heading(state, startLine, endLine, silent) {
	  var ch, level, tmp, token,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  ch  = state.src.charCodeAt(pos);

	  if (ch !== 0x23/* # */ || pos >= max) { return false; }

	  // count heading level
	  level = 1;
	  ch = state.src.charCodeAt(++pos);
	  while (ch === 0x23/* # */ && pos < max && level <= 6) {
	    level++;
	    ch = state.src.charCodeAt(++pos);
	  }

	  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }

	  if (silent) { return true; }

	  // Let's cut tails like '    ###  ' from the end of string

	  max = state.skipSpacesBack(max, pos);
	  tmp = state.skipCharsBack(max, 0x23, pos); // #
	  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {
	    max = tmp;
	  }

	  state.line = startLine + 1;

	  token        = state.push('heading_open', 'h' + String(level), 1);
	  token.markup = '########'.slice(0, level);
	  token.map    = [ startLine, state.line ];

	  token          = state.push('inline', '', 0);
	  token.content  = state.src.slice(pos, max).trim();
	  token.map      = [ startLine, state.line ];
	  token.children = [];

	  token        = state.push('heading_close', 'h' + String(level), -1);
	  token.markup = '########'.slice(0, level);

	  return true;
	};


/***/ }),
/* 99 */
/***/ (function(module, exports) {

	// lheading (---, ===)

	'use strict';


	module.exports = function lheading(state, startLine, endLine/*, silent*/) {
	  var content, terminate, i, l, token, pos, max, level, marker,
	      nextLine = startLine + 1,
	      terminatorRules = state.md.block.ruler.getRules('paragraph');

	  // jump line-by-line until empty one or EOF
	  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
	    // this would be a code block normally, but after paragraph
	    // it's considered a lazy continuation regardless of what's there
	    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }

	    //
	    // Check for underline in setext header
	    //
	    if (state.sCount[nextLine] >= state.blkIndent) {
	      pos = state.bMarks[nextLine] + state.tShift[nextLine];
	      max = state.eMarks[nextLine];

	      if (pos < max) {
	        marker = state.src.charCodeAt(pos);

	        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {
	          pos = state.skipChars(pos, marker);
	          pos = state.skipSpaces(pos);

	          if (pos >= max) {
	            level = (marker === 0x3D/* = */ ? 1 : 2);
	            break;
	          }
	        }
	      }
	    }

	    // quirk for blockquotes, this line should already be checked by that rule
	    if (state.sCount[nextLine] < 0) { continue; }

	    // Some tags can terminate paragraph without empty line.
	    terminate = false;
	    for (i = 0, l = terminatorRules.length; i < l; i++) {
	      if (terminatorRules[i](state, nextLine, endLine, true)) {
	        terminate = true;
	        break;
	      }
	    }
	    if (terminate) { break; }
	  }

	  if (!level) {
	    // Didn't find valid underline
	    return false;
	  }

	  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();

	  state.line = nextLine + 1;

	  token          = state.push('heading_open', 'h' + String(level), 1);
	  token.markup   = String.fromCharCode(marker);
	  token.map      = [ startLine, state.line ];

	  token          = state.push('inline', '', 0);
	  token.content  = content;
	  token.map      = [ startLine, state.line - 1 ];
	  token.children = [];

	  token          = state.push('heading_close', 'h' + String(level), -1);
	  token.markup   = String.fromCharCode(marker);

	  return true;
	};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	// HTML block

	'use strict';


	var block_names = __webpack_require__(101);
	var HTML_OPEN_CLOSE_TAG_RE = __webpack_require__(102).HTML_OPEN_CLOSE_TAG_RE;

	// An array of opening and corresponding closing sequences for html tags,
	// last argument defines whether it can terminate a paragraph or not
	//
	var HTML_SEQUENCES = [
	  [ /^<(script|pre|style)(?=(\s|>|$))/i, /<\/(script|pre|style)>/i, true ],
	  [ /^<!--/,        /-->/,   true ],
	  [ /^<\?/,         /\?>/,   true ],
	  [ /^<![A-Z]/,     />/,     true ],
	  [ /^<!\[CDATA\[/, /\]\]>/, true ],
	  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\s|/?>|$))', 'i'), /^$/, true ],
	  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\s*$'),  /^$/, false ]
	];


	module.exports = function html_block(state, startLine, endLine, silent) {
	  var i, nextLine, token, lineText,
	      pos = state.bMarks[startLine] + state.tShift[startLine],
	      max = state.eMarks[startLine];

	  if (!state.md.options.html) { return false; }

	  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }

	  lineText = state.src.slice(pos, max);

	  for (i = 0; i < HTML_SEQUENCES.length; i++) {
	    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }
	  }

	  if (i === HTML_SEQUENCES.length) { return false; }

	  if (silent) {
	    // true if this sequence can be a terminator, false otherwise
	    return HTML_SEQUENCES[i][2];
	  }

	  nextLine = startLine + 1;

	  // If we are here - we detected HTML block.
	  // Let's roll down till block end.
	  if (!HTML_SEQUENCES[i][1].test(lineText)) {
	    for (; nextLine < endLine; nextLine++) {
	      if (state.sCount[nextLine] < state.blkIndent) { break; }

	      pos = state.bMarks[nextLine] + state.tShift[nextLine];
	      max = state.eMarks[nextLine];
	      lineText = state.src.slice(pos, max);

	      if (HTML_SEQUENCES[i][1].test(lineText)) {
	        if (lineText.length !== 0) { nextLine++; }
	        break;
	      }
	    }
	  }

	  state.line = nextLine;

	  token         = state.push('html_block', '', 0);
	  token.map     = [ startLine, nextLine ];
	  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);

	  return true;
	};


/***/ }),
/* 101 */
/***/ (function(module, exports) {

	// List of valid html blocks names, accorting to commonmark spec
	// http://jgm.github.io/CommonMark/spec.html#html-blocks

	'use strict';


	module.exports = [
	  'address',
	  'article',
	  'aside',
	  'base',
	  'basefont',
	  'blockquote',
	  'body',
	  'caption',
	  'center',
	  'col',
	  'colgroup',
	  'dd',
	  'details',
	  'dialog',
	  'dir',
	  'div',
	  'dl',
	  'dt',
	  'fieldset',
	  'figcaption',
	  'figure',
	  'footer',
	  'form',
	  'frame',
	  'frameset',
	  'h1',
	  'head',
	  'header',
	  'hr',
	  'html',
	  'iframe',
	  'legend',
	  'li',
	  'link',
	  'main',
	  'menu',
	  'menuitem',
	  'meta',
	  'nav',
	  'noframes',
	  'ol',
	  'optgroup',
	  'option',
	  'p',
	  'param',
	  'pre',
	  'section',
	  'source',
	  'title',
	  'summary',
	  'table',
	  'tbody',
	  'td',
	  'tfoot',
	  'th',
	  'thead',
	  'title',
	  'tr',
	  'track',
	  'ul'
	];


/***/ }),
/* 102 */
/***/ (function(module, exports) {

	// Regexps to match html elements

	'use strict';

	var attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';

	var unquoted      = '[^"\'=<>`\\x00-\\x20]+';
	var single_quoted = "'[^']*'";
	var double_quoted = '"[^"]*"';

	var attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';

	var attribute   = '(?:\\s+' + attr_name + '(?:\\s*=\\s*' + attr_value + ')?)';

	var open_tag    = '<[A-Za-z][A-Za-z0-9\\-]*' + attribute + '*\\s*\\/?>';

	var close_tag   = '<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>';
	var comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';
	var processing  = '<[?].*?[?]>';
	var declaration = '<![A-Z]+\\s+[^>]*>';
	var cdata       = '<!\\[CDATA\\[[\\s\\S]*?\\]\\]>';

	var HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +
	                        '|' + processing + '|' + declaration + '|' + cdata + ')');
	var HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');

	module.exports.HTML_TAG_RE = HTML_TAG_RE;
	module.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;


/***/ }),
/* 103 */
/***/ (function(module, exports) {

	// Paragraph

	'use strict';


	module.exports = function paragraph(state, startLine/*, endLine*/) {
	  var content, terminate, i, l, token,
	      nextLine = startLine + 1,
	      terminatorRules = state.md.block.ruler.getRules('paragraph'),
	      endLine = state.lineMax;

	  // jump line-by-line until empty one or EOF
	  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
	    // this would be a code block normally, but after paragraph
	    // it's considered a lazy continuation regardless of what's there
	    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }

	    // quirk for blockquotes, this line should already be checked by that rule
	    if (state.sCount[nextLine] < 0) { continue; }

	    // Some tags can terminate paragraph without empty line.
	    terminate = false;
	    for (i = 0, l = terminatorRules.length; i < l; i++) {
	      if (terminatorRules[i](state, nextLine, endLine, true)) {
	        terminate = true;
	        break;
	      }
	    }
	    if (terminate) { break; }
	  }

	  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();

	  state.line = nextLine;

	  token          = state.push('paragraph_open', 'p', 1);
	  token.map      = [ startLine, state.line ];

	  token          = state.push('inline', '', 0);
	  token.content  = content;
	  token.map      = [ startLine, state.line ];
	  token.children = [];

	  token          = state.push('paragraph_close', 'p', -1);

	  return true;
	};


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	// Parser state class

	'use strict';

	var Token = __webpack_require__(89);
	var isSpace = __webpack_require__(61).isSpace;


	function StateBlock(src, md, env, tokens) {
	  var ch, s, start, pos, len, indent, offset, indent_found;

	  this.src = src;

	  // link to parser instance
	  this.md     = md;

	  this.env = env;

	  //
	  // Internal state vartiables
	  //

	  this.tokens = tokens;

	  this.bMarks = [];  // line begin offsets for fast jumps
	  this.eMarks = [];  // line end offsets for fast jumps
	  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)
	  this.sCount = [];  // indents for each line (tabs expanded)

	  // block parser variables
	  this.blkIndent  = 0; // required block content indent
	                       // (for example, if we are in list)
	  this.line       = 0; // line index in src
	  this.lineMax    = 0; // lines count
	  this.tight      = false;  // loose/tight mode for lists
	  this.parentType = 'root'; // if `list`, block parser stops on two newlines
	  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)

	  this.level = 0;

	  // renderer
	  this.result = '';

	  // Create caches
	  // Generate markers.
	  s = this.src;
	  indent_found = false;

	  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {
	    ch = s.charCodeAt(pos);

	    if (!indent_found) {
	      if (isSpace(ch)) {
	        indent++;

	        if (ch === 0x09) {
	          offset += 4 - offset % 4;
	        } else {
	          offset++;
	        }
	        continue;
	      } else {
	        indent_found = true;
	      }
	    }

	    if (ch === 0x0A || pos === len - 1) {
	      if (ch !== 0x0A) { pos++; }
	      this.bMarks.push(start);
	      this.eMarks.push(pos);
	      this.tShift.push(indent);
	      this.sCount.push(offset);

	      indent_found = false;
	      indent = 0;
	      offset = 0;
	      start = pos + 1;
	    }
	  }

	  // Push fake entry to simplify cache bounds checks
	  this.bMarks.push(s.length);
	  this.eMarks.push(s.length);
	  this.tShift.push(0);
	  this.sCount.push(0);

	  this.lineMax = this.bMarks.length - 1; // don't count last fake line
	}

	// Push new token to "stream".
	//
	StateBlock.prototype.push = function (type, tag, nesting) {
	  var token = new Token(type, tag, nesting);
	  token.block = true;

	  if (nesting < 0) { this.level--; }
	  token.level = this.level;
	  if (nesting > 0) { this.level++; }

	  this.tokens.push(token);
	  return token;
	};

	StateBlock.prototype.isEmpty = function isEmpty(line) {
	  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];
	};

	StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {
	  for (var max = this.lineMax; from < max; from++) {
	    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {
	      break;
	    }
	  }
	  return from;
	};

	// Skip spaces from given position.
	StateBlock.prototype.skipSpaces = function skipSpaces(pos) {
	  var ch;

	  for (var max = this.src.length; pos < max; pos++) {
	    ch = this.src.charCodeAt(pos);
	    if (!isSpace(ch)) { break; }
	  }
	  return pos;
	};

	// Skip spaces from given position in reverse.
	StateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {
	  if (pos <= min) { return pos; }

	  while (pos > min) {
	    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }
	  }
	  return pos;
	};

	// Skip char codes from given position
	StateBlock.prototype.skipChars = function skipChars(pos, code) {
	  for (var max = this.src.length; pos < max; pos++) {
	    if (this.src.charCodeAt(pos) !== code) { break; }
	  }
	  return pos;
	};

	// Skip char codes reverse from given position - 1
	StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {
	  if (pos <= min) { return pos; }

	  while (pos > min) {
	    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }
	  }
	  return pos;
	};

	// cut lines range from source.
	StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {
	  var i, lineIndent, ch, first, last, queue, lineStart,
	      line = begin;

	  if (begin >= end) {
	    return '';
	  }

	  queue = new Array(end - begin);

	  for (i = 0; line < end; line++, i++) {
	    lineIndent = 0;
	    lineStart = first = this.bMarks[line];

	    if (line + 1 < end || keepLastLF) {
	      // No need for bounds check because we have fake entry on tail.
	      last = this.eMarks[line] + 1;
	    } else {
	      last = this.eMarks[line];
	    }

	    while (first < last && lineIndent < indent) {
	      ch = this.src.charCodeAt(first);

	      if (isSpace(ch)) {
	        if (ch === 0x09) {
	          lineIndent += 4 - lineIndent % 4;
	        } else {
	          lineIndent++;
	        }
	      } else if (first - lineStart < this.tShift[line]) {
	        // patched tShift masked characters to look like spaces (blockquotes, list markers)
	        lineIndent++;
	      } else {
	        break;
	      }

	      first++;
	    }

	    queue[i] = this.src.slice(first, last);
	  }

	  return queue.join('');
	};

	// re-export Token class to use in block rules
	StateBlock.prototype.Token = Token;


	module.exports = StateBlock;


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	/** internal
	 * class ParserInline
	 *
	 * Tokenizes paragraph content.
	 **/
	'use strict';


	var Ruler           = __webpack_require__(81);


	////////////////////////////////////////////////////////////////////////////////
	// Parser rules

	var _rules = [
	  [ 'text',            __webpack_require__(106) ],
	  [ 'newline',         __webpack_require__(107) ],
	  [ 'escape',          __webpack_require__(108) ],
	  [ 'backticks',       __webpack_require__(109) ],
	  [ 'strikethrough',   __webpack_require__(110).tokenize ],
	  [ 'emphasis',        __webpack_require__(111).tokenize ],
	  [ 'link',            __webpack_require__(112) ],
	  [ 'image',           __webpack_require__(113) ],
	  [ 'autolink',        __webpack_require__(114) ],
	  [ 'html_inline',     __webpack_require__(115) ],
	  [ 'entity',          __webpack_require__(116) ]
	];

	var _rules2 = [
	  [ 'balance_pairs',   __webpack_require__(117) ],
	  [ 'strikethrough',   __webpack_require__(110).postProcess ],
	  [ 'emphasis',        __webpack_require__(111).postProcess ],
	  [ 'text_collapse',   __webpack_require__(118) ]
	];


	/**
	 * new ParserInline()
	 **/
	function ParserInline() {
	  var i;

	  /**
	   * ParserInline#ruler -> Ruler
	   *
	   * [[Ruler]] instance. Keep configuration of inline rules.
	   **/
	  this.ruler = new Ruler();

	  for (i = 0; i < _rules.length; i++) {
	    this.ruler.push(_rules[i][0], _rules[i][1]);
	  }

	  /**
	   * ParserInline#ruler2 -> Ruler
	   *
	   * [[Ruler]] instance. Second ruler used for post-processing
	   * (e.g. in emphasis-like rules).
	   **/
	  this.ruler2 = new Ruler();

	  for (i = 0; i < _rules2.length; i++) {
	    this.ruler2.push(_rules2[i][0], _rules2[i][1]);
	  }
	}


	// Skip single token by running all rules in validation mode;
	// returns `true` if any rule reported success
	//
	ParserInline.prototype.skipToken = function (state) {
	  var ok, i, pos = state.pos,
	      rules = this.ruler.getRules(''),
	      len = rules.length,
	      maxNesting = state.md.options.maxNesting,
	      cache = state.cache;


	  if (typeof cache[pos] !== 'undefined') {
	    state.pos = cache[pos];
	    return;
	  }

	  if (state.level < maxNesting) {
	    for (i = 0; i < len; i++) {
	      // Increment state.level and decrement it later to limit recursion.
	      // It's harmless to do here, because no tokens are created. But ideally,
	      // we'd need a separate private state variable for this purpose.
	      //
	      state.level++;
	      ok = rules[i](state, true);
	      state.level--;

	      if (ok) { break; }
	    }
	  } else {
	    // Too much nesting, just skip until the end of the paragraph.
	    //
	    // NOTE: this will cause links to behave incorrectly in the following case,
	    //       when an amount of `[` is exactly equal to `maxNesting + 1`:
	    //
	    //       [[[[[[[[[[[[[[[[[[[[[foo]()
	    //
	    // TODO: remove this workaround when CM standard will allow nested links
	    //       (we can replace it by preventing links from being parsed in
	    //       validation mode)
	    //
	    state.pos = state.posMax;
	  }

	  if (!ok) { state.pos++; }
	  cache[pos] = state.pos;
	};


	// Generate tokens for input range
	//
	ParserInline.prototype.tokenize = function (state) {
	  var ok, i,
	      rules = this.ruler.getRules(''),
	      len = rules.length,
	      end = state.posMax,
	      maxNesting = state.md.options.maxNesting;

	  while (state.pos < end) {
	    // Try all possible rules.
	    // On success, rule should:
	    //
	    // - update `state.pos`
	    // - update `state.tokens`
	    // - return true

	    if (state.level < maxNesting) {
	      for (i = 0; i < len; i++) {
	        ok = rules[i](state, false);
	        if (ok) { break; }
	      }
	    }

	    if (ok) {
	      if (state.pos >= end) { break; }
	      continue;
	    }

	    state.pending += state.src[state.pos++];
	  }

	  if (state.pending) {
	    state.pushPending();
	  }
	};


	/**
	 * ParserInline.parse(str, md, env, outTokens)
	 *
	 * Process input string and push inline tokens into `outTokens`
	 **/
	ParserInline.prototype.parse = function (str, md, env, outTokens) {
	  var i, rules, len;
	  var state = new this.State(str, md, env, outTokens);

	  this.tokenize(state);

	  rules = this.ruler2.getRules('');
	  len = rules.length;

	  for (i = 0; i < len; i++) {
	    rules[i](state);
	  }
	};


	ParserInline.prototype.State = __webpack_require__(119);


	module.exports = ParserInline;


/***/ }),
/* 106 */
/***/ (function(module, exports) {

	// Skip text characters for text token, place those to pending buffer
	// and increment current pos

	'use strict';


	// Rule to skip pure text
	// '{}$%@~+=:' reserved for extentions

	// !, ", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \, ], ^, _, `, {, |, }, or ~

	// !!!! Don't confuse with "Markdown ASCII Punctuation" chars
	// http://spec.commonmark.org/0.15/#ascii-punctuation-character
	function isTerminatorChar(ch) {
	  switch (ch) {
	    case 0x0A/* \n */:
	    case 0x21/* ! */:
	    case 0x23/* # */:
	    case 0x24/* $ */:
	    case 0x25/* % */:
	    case 0x26/* & */:
	    case 0x2A/* * */:
	    case 0x2B/* + */:
	    case 0x2D/* - */:
	    case 0x3A/* : */:
	    case 0x3C/* < */:
	    case 0x3D/* = */:
	    case 0x3E/* > */:
	    case 0x40/* @ */:
	    case 0x5B/* [ */:
	    case 0x5C/* \ */:
	    case 0x5D/* ] */:
	    case 0x5E/* ^ */:
	    case 0x5F/* _ */:
	    case 0x60/* ` */:
	    case 0x7B/* { */:
	    case 0x7D/* } */:
	    case 0x7E/* ~ */:
	      return true;
	    default:
	      return false;
	  }
	}

	module.exports = function text(state, silent) {
	  var pos = state.pos;

	  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {
	    pos++;
	  }

	  if (pos === state.pos) { return false; }

	  if (!silent) { state.pending += state.src.slice(state.pos, pos); }

	  state.pos = pos;

	  return true;
	};

	// Alternative implementation, for memory.
	//
	// It costs 10% of performance, but allows extend terminators list, if place it
	// to `ParcerInline` property. Probably, will switch to it sometime, such
	// flexibility required.

	/*
	var TERMINATOR_RE = /[\n!#$%&*+\-:<=>@[\\\]^_`{}~]/;

	module.exports = function text(state, silent) {
	  var pos = state.pos,
	      idx = state.src.slice(pos).search(TERMINATOR_RE);

	  // first char is terminator -> empty text
	  if (idx === 0) { return false; }

	  // no terminator -> text till end of string
	  if (idx < 0) {
	    if (!silent) { state.pending += state.src.slice(pos); }
	    state.pos = state.src.length;
	    return true;
	  }

	  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }

	  state.pos += idx;

	  return true;
	};*/


/***/ }),
/* 107 */
/***/ (function(module, exports) {

	// Proceess '\n'

	'use strict';

	module.exports = function newline(state, silent) {
	  var pmax, max, pos = state.pos;

	  if (state.src.charCodeAt(pos) !== 0x0A/* \n */) { return false; }

	  pmax = state.pending.length - 1;
	  max = state.posMax;

	  // '  \n' -> hardbreak
	  // Lookup in pending chars is bad practice! Don't copy to other rules!
	  // Pending string is stored in concat mode, indexed lookups will cause
	  // convertion to flat mode.
	  if (!silent) {
	    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {
	      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {
	        state.pending = state.pending.replace(/ +$/, '');
	        state.push('hardbreak', 'br', 0);
	      } else {
	        state.pending = state.pending.slice(0, -1);
	        state.push('softbreak', 'br', 0);
	      }

	    } else {
	      state.push('softbreak', 'br', 0);
	    }
	  }

	  pos++;

	  // skip heading spaces for next line
	  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }

	  state.pos = pos;
	  return true;
	};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	// Proceess escaped chars and hardbreaks

	'use strict';

	var isSpace = __webpack_require__(61).isSpace;

	var ESCAPED = [];

	for (var i = 0; i < 256; i++) { ESCAPED.push(0); }

	'\\!"#$%&\'()*+,./:;<=>?@[]^_`{|}~-'
	  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });


	module.exports = function escape(state, silent) {
	  var ch, pos = state.pos, max = state.posMax;

	  if (state.src.charCodeAt(pos) !== 0x5C/* \ */) { return false; }

	  pos++;

	  if (pos < max) {
	    ch = state.src.charCodeAt(pos);

	    if (ch < 256 && ESCAPED[ch] !== 0) {
	      if (!silent) { state.pending += state.src[pos]; }
	      state.pos += 2;
	      return true;
	    }

	    if (ch === 0x0A) {
	      if (!silent) {
	        state.push('hardbreak', 'br', 0);
	      }

	      pos++;
	      // skip leading whitespaces from next line
	      while (pos < max) {
	        ch = state.src.charCodeAt(pos);
	        if (!isSpace(ch)) { break; }
	        pos++;
	      }

	      state.pos = pos;
	      return true;
	    }
	  }

	  if (!silent) { state.pending += '\\'; }
	  state.pos++;
	  return true;
	};


/***/ }),
/* 109 */
/***/ (function(module, exports) {

	// Parse backticks

	'use strict';

	module.exports = function backtick(state, silent) {
	  var start, max, marker, matchStart, matchEnd, token,
	      pos = state.pos,
	      ch = state.src.charCodeAt(pos);

	  if (ch !== 0x60/* ` */) { return false; }

	  start = pos;
	  pos++;
	  max = state.posMax;

	  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }

	  marker = state.src.slice(start, pos);

	  matchStart = matchEnd = pos;

	  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {
	    matchEnd = matchStart + 1;

	    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }

	    if (matchEnd - matchStart === marker.length) {
	      if (!silent) {
	        token         = state.push('code_inline', 'code', 0);
	        token.markup  = marker;
	        token.content = state.src.slice(pos, matchStart)
	                                 .replace(/[ \n]+/g, ' ')
	                                 .trim();
	      }
	      state.pos = matchEnd;
	      return true;
	    }
	  }

	  if (!silent) { state.pending += marker; }
	  state.pos += marker.length;
	  return true;
	};


/***/ }),
/* 110 */
/***/ (function(module, exports) {

	// ~~strike through~~
	//
	'use strict';


	// Insert each marker as a separate text token, and add it to delimiter list
	//
	module.exports.tokenize = function strikethrough(state, silent) {
	  var i, scanned, token, len, ch,
	      start = state.pos,
	      marker = state.src.charCodeAt(start);

	  if (silent) { return false; }

	  if (marker !== 0x7E/* ~ */) { return false; }

	  scanned = state.scanDelims(state.pos, true);
	  len = scanned.length;
	  ch = String.fromCharCode(marker);

	  if (len < 2) { return false; }

	  if (len % 2) {
	    token         = state.push('text', '', 0);
	    token.content = ch;
	    len--;
	  }

	  for (i = 0; i < len; i += 2) {
	    token         = state.push('text', '', 0);
	    token.content = ch + ch;

	    state.delimiters.push({
	      marker: marker,
	      jump:   i,
	      token:  state.tokens.length - 1,
	      level:  state.level,
	      end:    -1,
	      open:   scanned.can_open,
	      close:  scanned.can_close
	    });
	  }

	  state.pos += scanned.length;

	  return true;
	};


	// Walk through delimiter list and replace text tokens with tags
	//
	module.exports.postProcess = function strikethrough(state) {
	  var i, j,
	      startDelim,
	      endDelim,
	      token,
	      loneMarkers = [],
	      delimiters = state.delimiters,
	      max = state.delimiters.length;

	  for (i = 0; i < max; i++) {
	    startDelim = delimiters[i];

	    if (startDelim.marker !== 0x7E/* ~ */) {
	      continue;
	    }

	    if (startDelim.end === -1) {
	      continue;
	    }

	    endDelim = delimiters[startDelim.end];

	    token         = state.tokens[startDelim.token];
	    token.type    = 's_open';
	    token.tag     = 's';
	    token.nesting = 1;
	    token.markup  = '~~';
	    token.content = '';

	    token         = state.tokens[endDelim.token];
	    token.type    = 's_close';
	    token.tag     = 's';
	    token.nesting = -1;
	    token.markup  = '~~';
	    token.content = '';

	    if (state.tokens[endDelim.token - 1].type === 'text' &&
	        state.tokens[endDelim.token - 1].content === '~') {

	      loneMarkers.push(endDelim.token - 1);
	    }
	  }

	  // If a marker sequence has an odd number of characters, it's splitted
	  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the
	  // start of the sequence.
	  //
	  // So, we have to move all those markers after subsequent s_close tags.
	  //
	  while (loneMarkers.length) {
	    i = loneMarkers.pop();
	    j = i + 1;

	    while (j < state.tokens.length && state.tokens[j].type === 's_close') {
	      j++;
	    }

	    j--;

	    if (i !== j) {
	      token = state.tokens[j];
	      state.tokens[j] = state.tokens[i];
	      state.tokens[i] = token;
	    }
	  }
	};


/***/ }),
/* 111 */
/***/ (function(module, exports) {

	// Process *this* and _that_
	//
	'use strict';


	// Insert each marker as a separate text token, and add it to delimiter list
	//
	module.exports.tokenize = function emphasis(state, silent) {
	  var i, scanned, token,
	      start = state.pos,
	      marker = state.src.charCodeAt(start);

	  if (silent) { return false; }

	  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }

	  scanned = state.scanDelims(state.pos, marker === 0x2A);

	  for (i = 0; i < scanned.length; i++) {
	    token         = state.push('text', '', 0);
	    token.content = String.fromCharCode(marker);

	    state.delimiters.push({
	      // Char code of the starting marker (number).
	      //
	      marker: marker,

	      // An amount of characters before this one that's equivalent to
	      // current one. In plain English: if this delimiter does not open
	      // an emphasis, neither do previous `jump` characters.
	      //
	      // Used to skip sequences like "*****" in one step, for 1st asterisk
	      // value will be 0, for 2nd it's 1 and so on.
	      //
	      jump:   i,

	      // A position of the token this delimiter corresponds to.
	      //
	      token:  state.tokens.length - 1,

	      // Token level.
	      //
	      level:  state.level,

	      // If this delimiter is matched as a valid opener, `end` will be
	      // equal to its position, otherwise it's `-1`.
	      //
	      end:    -1,

	      // Boolean flags that determine if this delimiter could open or close
	      // an emphasis.
	      //
	      open:   scanned.can_open,
	      close:  scanned.can_close
	    });
	  }

	  state.pos += scanned.length;

	  return true;
	};


	// Walk through delimiter list and replace text tokens with tags
	//
	module.exports.postProcess = function emphasis(state) {
	  var i,
	      startDelim,
	      endDelim,
	      token,
	      ch,
	      isStrong,
	      delimiters = state.delimiters,
	      max = state.delimiters.length;

	  for (i = 0; i < max; i++) {
	    startDelim = delimiters[i];

	    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {
	      continue;
	    }

	    // Process only opening markers
	    if (startDelim.end === -1) {
	      continue;
	    }

	    endDelim = delimiters[startDelim.end];

	    // If the next delimiter has the same marker and is adjacent to this one,
	    // merge those into one strong delimiter.
	    //
	    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`
	    //
	    isStrong = i + 1 < max &&
	               delimiters[i + 1].end === startDelim.end - 1 &&
	               delimiters[i + 1].token === startDelim.token + 1 &&
	               delimiters[startDelim.end - 1].token === endDelim.token - 1 &&
	               delimiters[i + 1].marker === startDelim.marker;

	    ch = String.fromCharCode(startDelim.marker);

	    token         = state.tokens[startDelim.token];
	    token.type    = isStrong ? 'strong_open' : 'em_open';
	    token.tag     = isStrong ? 'strong' : 'em';
	    token.nesting = 1;
	    token.markup  = isStrong ? ch + ch : ch;
	    token.content = '';

	    token         = state.tokens[endDelim.token];
	    token.type    = isStrong ? 'strong_close' : 'em_close';
	    token.tag     = isStrong ? 'strong' : 'em';
	    token.nesting = -1;
	    token.markup  = isStrong ? ch + ch : ch;
	    token.content = '';

	    if (isStrong) {
	      state.tokens[delimiters[i + 1].token].content = '';
	      state.tokens[delimiters[startDelim.end - 1].token].content = '';
	      i++;
	    }
	  }
	};


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	// Process [link](<to> "stuff")

	'use strict';

	var parseLinkLabel       = __webpack_require__(76);
	var parseLinkDestination = __webpack_require__(77);
	var parseLinkTitle       = __webpack_require__(78);
	var normalizeReference   = __webpack_require__(61).normalizeReference;
	var isSpace              = __webpack_require__(61).isSpace;


	module.exports = function link(state, silent) {
	  var attrs,
	      code,
	      label,
	      labelEnd,
	      labelStart,
	      pos,
	      res,
	      ref,
	      title,
	      token,
	      href = '',
	      oldPos = state.pos,
	      max = state.posMax,
	      start = state.pos;

	  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }

	  labelStart = state.pos + 1;
	  labelEnd = parseLinkLabel(state, state.pos, true);

	  // parser failed to find ']', so it's not a valid link
	  if (labelEnd < 0) { return false; }

	  pos = labelEnd + 1;
	  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {
	    //
	    // Inline link
	    //

	    // [link](  <href>  "title"  )
	    //        ^^ skipping these spaces
	    pos++;
	    for (; pos < max; pos++) {
	      code = state.src.charCodeAt(pos);
	      if (!isSpace(code) && code !== 0x0A) { break; }
	    }
	    if (pos >= max) { return false; }

	    // [link](  <href>  "title"  )
	    //          ^^^^^^ parsing link destination
	    start = pos;
	    res = parseLinkDestination(state.src, pos, state.posMax);
	    if (res.ok) {
	      href = state.md.normalizeLink(res.str);
	      if (state.md.validateLink(href)) {
	        pos = res.pos;
	      } else {
	        href = '';
	      }
	    }

	    // [link](  <href>  "title"  )
	    //                ^^ skipping these spaces
	    start = pos;
	    for (; pos < max; pos++) {
	      code = state.src.charCodeAt(pos);
	      if (!isSpace(code) && code !== 0x0A) { break; }
	    }

	    // [link](  <href>  "title"  )
	    //                  ^^^^^^^ parsing link title
	    res = parseLinkTitle(state.src, pos, state.posMax);
	    if (pos < max && start !== pos && res.ok) {
	      title = res.str;
	      pos = res.pos;

	      // [link](  <href>  "title"  )
	      //                         ^^ skipping these spaces
	      for (; pos < max; pos++) {
	        code = state.src.charCodeAt(pos);
	        if (!isSpace(code) && code !== 0x0A) { break; }
	      }
	    } else {
	      title = '';
	    }

	    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {
	      state.pos = oldPos;
	      return false;
	    }
	    pos++;
	  } else {
	    //
	    // Link reference
	    //
	    if (typeof state.env.references === 'undefined') { return false; }

	    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {
	      start = pos + 1;
	      pos = parseLinkLabel(state, pos);
	      if (pos >= 0) {
	        label = state.src.slice(start, pos++);
	      } else {
	        pos = labelEnd + 1;
	      }
	    } else {
	      pos = labelEnd + 1;
	    }

	    // covers label === '' and label === undefined
	    // (collapsed reference link and shortcut reference link respectively)
	    if (!label) { label = state.src.slice(labelStart, labelEnd); }

	    ref = state.env.references[normalizeReference(label)];
	    if (!ref) {
	      state.pos = oldPos;
	      return false;
	    }
	    href = ref.href;
	    title = ref.title;
	  }

	  //
	  // We found the end of the link, and know for a fact it's a valid link;
	  // so all that's left to do is to call tokenizer.
	  //
	  if (!silent) {
	    state.pos = labelStart;
	    state.posMax = labelEnd;

	    token        = state.push('link_open', 'a', 1);
	    token.attrs  = attrs = [ [ 'href', href ] ];
	    if (title) {
	      attrs.push([ 'title', title ]);
	    }

	    state.md.inline.tokenize(state);

	    token        = state.push('link_close', 'a', -1);
	  }

	  state.pos = pos;
	  state.posMax = max;
	  return true;
	};


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	// Process ![image](<src> "title")

	'use strict';

	var parseLinkLabel       = __webpack_require__(76);
	var parseLinkDestination = __webpack_require__(77);
	var parseLinkTitle       = __webpack_require__(78);
	var normalizeReference   = __webpack_require__(61).normalizeReference;
	var isSpace              = __webpack_require__(61).isSpace;


	module.exports = function image(state, silent) {
	  var attrs,
	      code,
	      content,
	      label,
	      labelEnd,
	      labelStart,
	      pos,
	      ref,
	      res,
	      title,
	      token,
	      tokens,
	      start,
	      href = '',
	      oldPos = state.pos,
	      max = state.posMax;

	  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }
	  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }

	  labelStart = state.pos + 2;
	  labelEnd = parseLinkLabel(state, state.pos + 1, false);

	  // parser failed to find ']', so it's not a valid link
	  if (labelEnd < 0) { return false; }

	  pos = labelEnd + 1;
	  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {
	    //
	    // Inline link
	    //

	    // [link](  <href>  "title"  )
	    //        ^^ skipping these spaces
	    pos++;
	    for (; pos < max; pos++) {
	      code = state.src.charCodeAt(pos);
	      if (!isSpace(code) && code !== 0x0A) { break; }
	    }
	    if (pos >= max) { return false; }

	    // [link](  <href>  "title"  )
	    //          ^^^^^^ parsing link destination
	    start = pos;
	    res = parseLinkDestination(state.src, pos, state.posMax);
	    if (res.ok) {
	      href = state.md.normalizeLink(res.str);
	      if (state.md.validateLink(href)) {
	        pos = res.pos;
	      } else {
	        href = '';
	      }
	    }

	    // [link](  <href>  "title"  )
	    //                ^^ skipping these spaces
	    start = pos;
	    for (; pos < max; pos++) {
	      code = state.src.charCodeAt(pos);
	      if (!isSpace(code) && code !== 0x0A) { break; }
	    }

	    // [link](  <href>  "title"  )
	    //                  ^^^^^^^ parsing link title
	    res = parseLinkTitle(state.src, pos, state.posMax);
	    if (pos < max && start !== pos && res.ok) {
	      title = res.str;
	      pos = res.pos;

	      // [link](  <href>  "title"  )
	      //                         ^^ skipping these spaces
	      for (; pos < max; pos++) {
	        code = state.src.charCodeAt(pos);
	        if (!isSpace(code) && code !== 0x0A) { break; }
	      }
	    } else {
	      title = '';
	    }

	    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {
	      state.pos = oldPos;
	      return false;
	    }
	    pos++;
	  } else {
	    //
	    // Link reference
	    //
	    if (typeof state.env.references === 'undefined') { return false; }

	    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {
	      start = pos + 1;
	      pos = parseLinkLabel(state, pos);
	      if (pos >= 0) {
	        label = state.src.slice(start, pos++);
	      } else {
	        pos = labelEnd + 1;
	      }
	    } else {
	      pos = labelEnd + 1;
	    }

	    // covers label === '' and label === undefined
	    // (collapsed reference link and shortcut reference link respectively)
	    if (!label) { label = state.src.slice(labelStart, labelEnd); }

	    ref = state.env.references[normalizeReference(label)];
	    if (!ref) {
	      state.pos = oldPos;
	      return false;
	    }
	    href = ref.href;
	    title = ref.title;
	  }

	  //
	  // We found the end of the link, and know for a fact it's a valid link;
	  // so all that's left to do is to call tokenizer.
	  //
	  if (!silent) {
	    content = state.src.slice(labelStart, labelEnd);

	    state.md.inline.parse(
	      content,
	      state.md,
	      state.env,
	      tokens = []
	    );

	    token          = state.push('image', 'img', 0);
	    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];
	    token.children = tokens;
	    token.content  = content;

	    if (title) {
	      attrs.push([ 'title', title ]);
	    }
	  }

	  state.pos = pos;
	  state.posMax = max;
	  return true;
	};


/***/ }),
/* 114 */
/***/ (function(module, exports) {

	// Process autolinks '<protocol:...>'

	'use strict';


	/*eslint max-len:0*/
	var EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;
	var AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)>/;


	module.exports = function autolink(state, silent) {
	  var tail, linkMatch, emailMatch, url, fullUrl, token,
	      pos = state.pos;

	  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }

	  tail = state.src.slice(pos);

	  if (tail.indexOf('>') < 0) { return false; }

	  if (AUTOLINK_RE.test(tail)) {
	    linkMatch = tail.match(AUTOLINK_RE);

	    url = linkMatch[0].slice(1, -1);
	    fullUrl = state.md.normalizeLink(url);
	    if (!state.md.validateLink(fullUrl)) { return false; }

	    if (!silent) {
	      token         = state.push('link_open', 'a', 1);
	      token.attrs   = [ [ 'href', fullUrl ] ];
	      token.markup  = 'autolink';
	      token.info    = 'auto';

	      token         = state.push('text', '', 0);
	      token.content = state.md.normalizeLinkText(url);

	      token         = state.push('link_close', 'a', -1);
	      token.markup  = 'autolink';
	      token.info    = 'auto';
	    }

	    state.pos += linkMatch[0].length;
	    return true;
	  }

	  if (EMAIL_RE.test(tail)) {
	    emailMatch = tail.match(EMAIL_RE);

	    url = emailMatch[0].slice(1, -1);
	    fullUrl = state.md.normalizeLink('mailto:' + url);
	    if (!state.md.validateLink(fullUrl)) { return false; }

	    if (!silent) {
	      token         = state.push('link_open', 'a', 1);
	      token.attrs   = [ [ 'href', fullUrl ] ];
	      token.markup  = 'autolink';
	      token.info    = 'auto';

	      token         = state.push('text', '', 0);
	      token.content = state.md.normalizeLinkText(url);

	      token         = state.push('link_close', 'a', -1);
	      token.markup  = 'autolink';
	      token.info    = 'auto';
	    }

	    state.pos += emailMatch[0].length;
	    return true;
	  }

	  return false;
	};


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	// Process html tags

	'use strict';


	var HTML_TAG_RE = __webpack_require__(102).HTML_TAG_RE;


	function isLetter(ch) {
	  /*eslint no-bitwise:0*/
	  var lc = ch | 0x20; // to lower case
	  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);
	}


	module.exports = function html_inline(state, silent) {
	  var ch, match, max, token,
	      pos = state.pos;

	  if (!state.md.options.html) { return false; }

	  // Check start
	  max = state.posMax;
	  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||
	      pos + 2 >= max) {
	    return false;
	  }

	  // Quick fail on second char
	  ch = state.src.charCodeAt(pos + 1);
	  if (ch !== 0x21/* ! */ &&
	      ch !== 0x3F/* ? */ &&
	      ch !== 0x2F/* / */ &&
	      !isLetter(ch)) {
	    return false;
	  }

	  match = state.src.slice(pos).match(HTML_TAG_RE);
	  if (!match) { return false; }

	  if (!silent) {
	    token         = state.push('html_inline', '', 0);
	    token.content = state.src.slice(pos, pos + match[0].length);
	  }
	  state.pos += match[0].length;
	  return true;
	};


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	// Process html entity - &#123;, &#xAF;, &quot;, ...

	'use strict';

	var entities          = __webpack_require__(62);
	var has               = __webpack_require__(61).has;
	var isValidEntityCode = __webpack_require__(61).isValidEntityCode;
	var fromCodePoint     = __webpack_require__(61).fromCodePoint;


	var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;
	var NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;


	module.exports = function entity(state, silent) {
	  var ch, code, match, pos = state.pos, max = state.posMax;

	  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }

	  if (pos + 1 < max) {
	    ch = state.src.charCodeAt(pos + 1);

	    if (ch === 0x23 /* # */) {
	      match = state.src.slice(pos).match(DIGITAL_RE);
	      if (match) {
	        if (!silent) {
	          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);
	          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);
	        }
	        state.pos += match[0].length;
	        return true;
	      }
	    } else {
	      match = state.src.slice(pos).match(NAMED_RE);
	      if (match) {
	        if (has(entities, match[1])) {
	          if (!silent) { state.pending += entities[match[1]]; }
	          state.pos += match[0].length;
	          return true;
	        }
	      }
	    }
	  }

	  if (!silent) { state.pending += '&'; }
	  state.pos++;
	  return true;
	};


/***/ }),
/* 117 */
/***/ (function(module, exports) {

	// For each opening emphasis-like marker find a matching closing one
	//
	'use strict';


	module.exports = function link_pairs(state) {
	  var i, j, lastDelim, currDelim,
	      delimiters = state.delimiters,
	      max = state.delimiters.length;

	  for (i = 0; i < max; i++) {
	    lastDelim = delimiters[i];

	    if (!lastDelim.close) { continue; }

	    j = i - lastDelim.jump - 1;

	    while (j >= 0) {
	      currDelim = delimiters[j];

	      if (currDelim.open &&
	          currDelim.marker === lastDelim.marker &&
	          currDelim.end < 0 &&
	          currDelim.level === lastDelim.level) {

	        lastDelim.jump = i - j;
	        lastDelim.open = false;
	        currDelim.end  = i;
	        currDelim.jump = 0;
	        break;
	      }

	      j -= currDelim.jump + 1;
	    }
	  }
	};


/***/ }),
/* 118 */
/***/ (function(module, exports) {

	// Merge adjacent text nodes into one, and re-calculate all token levels
	//
	'use strict';


	module.exports = function text_collapse(state) {
	  var curr, last,
	      level = 0,
	      tokens = state.tokens,
	      max = state.tokens.length;

	  for (curr = last = 0; curr < max; curr++) {
	    // re-calculate levels
	    level += tokens[curr].nesting;
	    tokens[curr].level = level;

	    if (tokens[curr].type === 'text' &&
	        curr + 1 < max &&
	        tokens[curr + 1].type === 'text') {

	      // collapse two adjacent text nodes
	      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;
	    } else {
	      if (curr !== last) { tokens[last] = tokens[curr]; }

	      last++;
	    }
	  }

	  if (curr !== last) {
	    tokens.length = last;
	  }
	};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	// Inline parser state

	'use strict';


	var Token          = __webpack_require__(89);
	var isWhiteSpace   = __webpack_require__(61).isWhiteSpace;
	var isPunctChar    = __webpack_require__(61).isPunctChar;
	var isMdAsciiPunct = __webpack_require__(61).isMdAsciiPunct;


	function StateInline(src, md, env, outTokens) {
	  this.src = src;
	  this.env = env;
	  this.md = md;
	  this.tokens = outTokens;

	  this.pos = 0;
	  this.posMax = this.src.length;
	  this.level = 0;
	  this.pending = '';
	  this.pendingLevel = 0;

	  this.cache = {};        // Stores { start: end } pairs. Useful for backtrack
	                          // optimization of pairs parse (emphasis, strikes).

	  this.delimiters = [];   // Emphasis-like delimiters
	}


	// Flush pending text
	//
	StateInline.prototype.pushPending = function () {
	  var token = new Token('text', '', 0);
	  token.content = this.pending;
	  token.level = this.pendingLevel;
	  this.tokens.push(token);
	  this.pending = '';
	  return token;
	};


	// Push new token to "stream".
	// If pending text exists - flush it as text token
	//
	StateInline.prototype.push = function (type, tag, nesting) {
	  if (this.pending) {
	    this.pushPending();
	  }

	  var token = new Token(type, tag, nesting);

	  if (nesting < 0) { this.level--; }
	  token.level = this.level;
	  if (nesting > 0) { this.level++; }

	  this.pendingLevel = this.level;
	  this.tokens.push(token);
	  return token;
	};


	// Scan a sequence of emphasis-like markers, and determine whether
	// it can start an emphasis sequence or end an emphasis sequence.
	//
	//  - start - position to scan from (it should point at a valid marker);
	//  - canSplitWord - determine if these markers can be found inside a word
	//
	StateInline.prototype.scanDelims = function (start, canSplitWord) {
	  var pos = start, lastChar, nextChar, count, can_open, can_close,
	      isLastWhiteSpace, isLastPunctChar,
	      isNextWhiteSpace, isNextPunctChar,
	      left_flanking = true,
	      right_flanking = true,
	      max = this.posMax,
	      marker = this.src.charCodeAt(start);

	  // treat beginning of the line as a whitespace
	  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;

	  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }

	  count = pos - start;

	  // treat end of the line as a whitespace
	  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;

	  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
	  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));

	  isLastWhiteSpace = isWhiteSpace(lastChar);
	  isNextWhiteSpace = isWhiteSpace(nextChar);

	  if (isNextWhiteSpace) {
	    left_flanking = false;
	  } else if (isNextPunctChar) {
	    if (!(isLastWhiteSpace || isLastPunctChar)) {
	      left_flanking = false;
	    }
	  }

	  if (isLastWhiteSpace) {
	    right_flanking = false;
	  } else if (isLastPunctChar) {
	    if (!(isNextWhiteSpace || isNextPunctChar)) {
	      right_flanking = false;
	    }
	  }

	  if (!canSplitWord) {
	    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);
	    can_close = right_flanking && (!left_flanking  || isNextPunctChar);
	  } else {
	    can_open  = left_flanking;
	    can_close = right_flanking;
	  }

	  return {
	    can_open:  can_open,
	    can_close: can_close,
	    length:    count
	  };
	};


	// re-export Token class to use in block rules
	StateInline.prototype.Token = Token;


	module.exports = StateInline;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';


	////////////////////////////////////////////////////////////////////////////////
	// Helpers

	// Merge objects
	//
	function assign(obj /*from1, from2, from3, ...*/) {
	  var sources = Array.prototype.slice.call(arguments, 1);

	  sources.forEach(function (source) {
	    if (!source) { return; }

	    Object.keys(source).forEach(function (key) {
	      obj[key] = source[key];
	    });
	  });

	  return obj;
	}

	function _class(obj) { return Object.prototype.toString.call(obj); }
	function isString(obj) { return _class(obj) === '[object String]'; }
	function isObject(obj) { return _class(obj) === '[object Object]'; }
	function isRegExp(obj) { return _class(obj) === '[object RegExp]'; }
	function isFunction(obj) { return _class(obj) === '[object Function]'; }


	function escapeRE(str) { return str.replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&'); }

	////////////////////////////////////////////////////////////////////////////////


	var defaultOptions = {
	  fuzzyLink: true,
	  fuzzyEmail: true,
	  fuzzyIP: false
	};


	function isOptionsObj(obj) {
	  return Object.keys(obj || {}).reduce(function (acc, k) {
	    return acc || defaultOptions.hasOwnProperty(k);
	  }, false);
	}


	var defaultSchemas = {
	  'http:': {
	    validate: function (text, pos, self) {
	      var tail = text.slice(pos);

	      if (!self.re.http) {
	        // compile lazily, because "host"-containing variables can change on tlds update.
	        self.re.http =  new RegExp(
	          '^\\/\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'
	        );
	      }
	      if (self.re.http.test(tail)) {
	        return tail.match(self.re.http)[0].length;
	      }
	      return 0;
	    }
	  },
	  'https:':  'http:',
	  'ftp:':    'http:',
	  '//':      {
	    validate: function (text, pos, self) {
	      var tail = text.slice(pos);

	      if (!self.re.no_http) {
	      // compile lazily, because "host"-containing variables can change on tlds update.
	        self.re.no_http =  new RegExp(
	          '^' +
	          self.re.src_auth +
	          // Don't allow single-level domains, because of false positives like '//test'
	          // with code comments
	          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\.)+' + self.re.src_domain_root + ')' +
	          self.re.src_port +
	          self.re.src_host_terminator +
	          self.re.src_path,

	          'i'
	        );
	      }

	      if (self.re.no_http.test(tail)) {
	        // should not be `://` & `///`, that protects from errors in protocol name
	        if (pos >= 3 && text[pos - 3] === ':') { return 0; }
	        if (pos >= 3 && text[pos - 3] === '/') { return 0; }
	        return tail.match(self.re.no_http)[0].length;
	      }
	      return 0;
	    }
	  },
	  'mailto:': {
	    validate: function (text, pos, self) {
	      var tail = text.slice(pos);

	      if (!self.re.mailto) {
	        self.re.mailto =  new RegExp(
	          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'
	        );
	      }
	      if (self.re.mailto.test(tail)) {
	        return tail.match(self.re.mailto)[0].length;
	      }
	      return 0;
	    }
	  }
	};

	/*eslint-disable max-len*/

	// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)
	var tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';

	// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead
	var tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');

	/*eslint-enable max-len*/

	////////////////////////////////////////////////////////////////////////////////

	function resetScanCache(self) {
	  self.__index__ = -1;
	  self.__text_cache__   = '';
	}

	function createValidator(re) {
	  return function (text, pos) {
	    var tail = text.slice(pos);

	    if (re.test(tail)) {
	      return tail.match(re)[0].length;
	    }
	    return 0;
	  };
	}

	function createNormalizer() {
	  return function (match, self) {
	    self.normalize(match);
	  };
	}

	// Schemas compiler. Build regexps.
	//
	function compile(self) {

	  // Load & clone RE patterns.
	  var re = self.re = assign({}, __webpack_require__(121));

	  // Define dynamic patterns
	  var tlds = self.__tlds__.slice();

	  if (!self.__tlds_replaced__) {
	    tlds.push(tlds_2ch_src_re);
	  }
	  tlds.push(re.src_xn);

	  re.src_tlds = tlds.join('|');

	  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }

	  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');
	  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');
	  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');
	  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');

	  //
	  // Compile each schema
	  //

	  var aliases = [];

	  self.__compiled__ = {}; // Reset compiled data

	  function schemaError(name, val) {
	    throw new Error('(LinkifyIt) Invalid schema "' + name + '": ' + val);
	  }

	  Object.keys(self.__schemas__).forEach(function (name) {
	    var val = self.__schemas__[name];

	    // skip disabled methods
	    if (val === null) { return; }

	    var compiled = { validate: null, link: null };

	    self.__compiled__[name] = compiled;

	    if (isObject(val)) {
	      if (isRegExp(val.validate)) {
	        compiled.validate = createValidator(val.validate);
	      } else if (isFunction(val.validate)) {
	        compiled.validate = val.validate;
	      } else {
	        schemaError(name, val);
	      }

	      if (isFunction(val.normalize)) {
	        compiled.normalize = val.normalize;
	      } else if (!val.normalize) {
	        compiled.normalize = createNormalizer();
	      } else {
	        schemaError(name, val);
	      }

	      return;
	    }

	    if (isString(val)) {
	      aliases.push(name);
	      return;
	    }

	    schemaError(name, val);
	  });

	  //
	  // Compile postponed aliases
	  //

	  aliases.forEach(function (alias) {
	    if (!self.__compiled__[self.__schemas__[alias]]) {
	      // Silently fail on missed schemas to avoid errons on disable.
	      // schemaError(alias, self.__schemas__[alias]);
	      return;
	    }

	    self.__compiled__[alias].validate =
	      self.__compiled__[self.__schemas__[alias]].validate;
	    self.__compiled__[alias].normalize =
	      self.__compiled__[self.__schemas__[alias]].normalize;
	  });

	  //
	  // Fake record for guessed links
	  //
	  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };

	  //
	  // Build schema condition
	  //
	  var slist = Object.keys(self.__compiled__)
	                      .filter(function (name) {
	                        // Filter disabled & fake schemas
	                        return name.length > 0 && self.__compiled__[name];
	                      })
	                      .map(escapeRE)
	                      .join('|');
	  // (?!_) cause 1.5x slowdown
	  self.re.schema_test   = RegExp('(^|(?!_)(?:[><]|' + re.src_ZPCc + '))(' + slist + ')', 'i');
	  self.re.schema_search = RegExp('(^|(?!_)(?:[><]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');

	  self.re.pretest       = RegExp(
	                            '(' + self.re.schema_test.source + ')|' +
	                            '(' + self.re.host_fuzzy_test.source + ')|' +
	                            '@',
	                            'i');

	  //
	  // Cleanup
	  //

	  resetScanCache(self);
	}

	/**
	 * class Match
	 *
	 * Match result. Single element of array, returned by [[LinkifyIt#match]]
	 **/
	function Match(self, shift) {
	  var start = self.__index__,
	      end   = self.__last_index__,
	      text  = self.__text_cache__.slice(start, end);

	  /**
	   * Match#schema -> String
	   *
	   * Prefix (protocol) for matched string.
	   **/
	  this.schema    = self.__schema__.toLowerCase();
	  /**
	   * Match#index -> Number
	   *
	   * First position of matched string.
	   **/
	  this.index     = start + shift;
	  /**
	   * Match#lastIndex -> Number
	   *
	   * Next position after matched string.
	   **/
	  this.lastIndex = end + shift;
	  /**
	   * Match#raw -> String
	   *
	   * Matched string.
	   **/
	  this.raw       = text;
	  /**
	   * Match#text -> String
	   *
	   * Notmalized text of matched string.
	   **/
	  this.text      = text;
	  /**
	   * Match#url -> String
	   *
	   * Normalized url of matched string.
	   **/
	  this.url       = text;
	}

	function createMatch(self, shift) {
	  var match = new Match(self, shift);

	  self.__compiled__[match.schema].normalize(match, self);

	  return match;
	}


	/**
	 * class LinkifyIt
	 **/

	/**
	 * new LinkifyIt(schemas, options)
	 * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)
	 * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }
	 *
	 * Creates new linkifier instance with optional additional schemas.
	 * Can be called without `new` keyword for convenience.
	 *
	 * By default understands:
	 *
	 * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links
	 * - "fuzzy" links and emails (example.com, foo@bar.com).
	 *
	 * `schemas` is an object, where each key/value describes protocol/rule:
	 *
	 * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`
	 *   for example). `linkify-it` makes shure that prefix is not preceeded with
	 *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.
	 * - __value__ - rule to check tail after link prefix
	 *   - _String_ - just alias to existing rule
	 *   - _Object_
	 *     - _validate_ - validator function (should return matched length on success),
	 *       or `RegExp`.
	 *     - _normalize_ - optional function to normalize text & url of matched result
	 *       (for example, for @twitter mentions).
	 *
	 * `options`:
	 *
	 * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.
	 * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts
	 *   like version numbers. Default `false`.
	 * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.
	 *
	 **/
	function LinkifyIt(schemas, options) {
	  if (!(this instanceof LinkifyIt)) {
	    return new LinkifyIt(schemas, options);
	  }

	  if (!options) {
	    if (isOptionsObj(schemas)) {
	      options = schemas;
	      schemas = {};
	    }
	  }

	  this.__opts__           = assign({}, defaultOptions, options);

	  // Cache last tested result. Used to skip repeating steps on next `match` call.
	  this.__index__          = -1;
	  this.__last_index__     = -1; // Next scan position
	  this.__schema__         = '';
	  this.__text_cache__     = '';

	  this.__schemas__        = assign({}, defaultSchemas, schemas);
	  this.__compiled__       = {};

	  this.__tlds__           = tlds_default;
	  this.__tlds_replaced__  = false;

	  this.re = {};

	  compile(this);
	}


	/** chainable
	 * LinkifyIt#add(schema, definition)
	 * - schema (String): rule name (fixed pattern prefix)
	 * - definition (String|RegExp|Object): schema definition
	 *
	 * Add new rule definition. See constructor description for details.
	 **/
	LinkifyIt.prototype.add = function add(schema, definition) {
	  this.__schemas__[schema] = definition;
	  compile(this);
	  return this;
	};


	/** chainable
	 * LinkifyIt#set(options)
	 * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }
	 *
	 * Set recognition options for links without schema.
	 **/
	LinkifyIt.prototype.set = function set(options) {
	  this.__opts__ = assign(this.__opts__, options);
	  return this;
	};


	/**
	 * LinkifyIt#test(text) -> Boolean
	 *
	 * Searches linkifiable pattern and returns `true` on success or `false` on fail.
	 **/
	LinkifyIt.prototype.test = function test(text) {
	  // Reset scan cache
	  this.__text_cache__ = text;
	  this.__index__      = -1;

	  if (!text.length) { return false; }

	  var m, ml, me, len, shift, next, re, tld_pos, at_pos;

	  // try to scan for link with schema - that's the most simple rule
	  if (this.re.schema_test.test(text)) {
	    re = this.re.schema_search;
	    re.lastIndex = 0;
	    while ((m = re.exec(text)) !== null) {
	      len = this.testSchemaAt(text, m[2], re.lastIndex);
	      if (len) {
	        this.__schema__     = m[2];
	        this.__index__      = m.index + m[1].length;
	        this.__last_index__ = m.index + m[0].length + len;
	        break;
	      }
	    }
	  }

	  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {
	    // guess schemaless links
	    tld_pos = text.search(this.re.host_fuzzy_test);
	    if (tld_pos >= 0) {
	      // if tld is located after found link - no need to check fuzzy pattern
	      if (this.__index__ < 0 || tld_pos < this.__index__) {
	        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {

	          shift = ml.index + ml[1].length;

	          if (this.__index__ < 0 || shift < this.__index__) {
	            this.__schema__     = '';
	            this.__index__      = shift;
	            this.__last_index__ = ml.index + ml[0].length;
	          }
	        }
	      }
	    }
	  }

	  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {
	    // guess schemaless emails
	    at_pos = text.indexOf('@');
	    if (at_pos >= 0) {
	      // We can't skip this check, because this cases are possible:
	      // 192.168.1.1@gmail.com, my.in@example.com
	      if ((me = text.match(this.re.email_fuzzy)) !== null) {

	        shift = me.index + me[1].length;
	        next  = me.index + me[0].length;

	        if (this.__index__ < 0 || shift < this.__index__ ||
	            (shift === this.__index__ && next > this.__last_index__)) {
	          this.__schema__     = 'mailto:';
	          this.__index__      = shift;
	          this.__last_index__ = next;
	        }
	      }
	    }
	  }

	  return this.__index__ >= 0;
	};


	/**
	 * LinkifyIt#pretest(text) -> Boolean
	 *
	 * Very quick check, that can give false positives. Returns true if link MAY BE
	 * can exists. Can be used for speed optimization, when you need to check that
	 * link NOT exists.
	 **/
	LinkifyIt.prototype.pretest = function pretest(text) {
	  return this.re.pretest.test(text);
	};


	/**
	 * LinkifyIt#testSchemaAt(text, name, position) -> Number
	 * - text (String): text to scan
	 * - name (String): rule (schema) name
	 * - position (Number): text offset to check from
	 *
	 * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly
	 * at given position. Returns length of found pattern (0 on fail).
	 **/
	LinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {
	  // If not supported schema check requested - terminate
	  if (!this.__compiled__[schema.toLowerCase()]) {
	    return 0;
	  }
	  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);
	};


	/**
	 * LinkifyIt#match(text) -> Array|null
	 *
	 * Returns array of found link descriptions or `null` on fail. We strongly
	 * recommend to use [[LinkifyIt#test]] first, for best speed.
	 *
	 * ##### Result match description
	 *
	 * - __schema__ - link schema, can be empty for fuzzy links, or `//` for
	 *   protocol-neutral  links.
	 * - __index__ - offset of matched text
	 * - __lastIndex__ - index of next char after mathch end
	 * - __raw__ - matched text
	 * - __text__ - normalized text
	 * - __url__ - link, generated from matched text
	 **/
	LinkifyIt.prototype.match = function match(text) {
	  var shift = 0, result = [];

	  // Try to take previous element from cache, if .test() called before
	  if (this.__index__ >= 0 && this.__text_cache__ === text) {
	    result.push(createMatch(this, shift));
	    shift = this.__last_index__;
	  }

	  // Cut head if cache was used
	  var tail = shift ? text.slice(shift) : text;

	  // Scan string until end reached
	  while (this.test(tail)) {
	    result.push(createMatch(this, shift));

	    tail = tail.slice(this.__last_index__);
	    shift += this.__last_index__;
	  }

	  if (result.length) {
	    return result;
	  }

	  return null;
	};


	/** chainable
	 * LinkifyIt#tlds(list [, keepOld]) -> this
	 * - list (Array): list of tlds
	 * - keepOld (Boolean): merge with current list if `true` (`false` by default)
	 *
	 * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)
	 * to avoid false positives. By default this algorythm used:
	 *
	 * - hostname with any 2-letter root zones are ok.
	 * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф
	 *   are ok.
	 * - encoded (`xn--...`) root zones are ok.
	 *
	 * If list is replaced, then exact match for 2-chars root zones will be checked.
	 **/
	LinkifyIt.prototype.tlds = function tlds(list, keepOld) {
	  list = Array.isArray(list) ? list : [ list ];

	  if (!keepOld) {
	    this.__tlds__ = list.slice();
	    this.__tlds_replaced__ = true;
	    compile(this);
	    return this;
	  }

	  this.__tlds__ = this.__tlds__.concat(list)
	                                  .sort()
	                                  .filter(function (el, idx, arr) {
	                                    return el !== arr[idx - 1];
	                                  })
	                                  .reverse();

	  compile(this);
	  return this;
	};

	/**
	 * LinkifyIt#normalize(match)
	 *
	 * Default normalizer (if schema does not define it's own).
	 **/
	LinkifyIt.prototype.normalize = function normalize(match) {

	  // Do minimal possible changes by default. Need to collect feedback prior
	  // to move forward https://github.com/markdown-it/linkify-it/issues/1

	  if (!match.schema) { match.url = 'http://' + match.url; }

	  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {
	    match.url = 'mailto:' + match.url;
	  }
	};


	module.exports = LinkifyIt;


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	// Use direct extract instead of `regenerate` to reduse browserified size
	var src_Any = exports.src_Any = __webpack_require__(71).source;
	var src_Cc  = exports.src_Cc = __webpack_require__(72).source;
	var src_Z   = exports.src_Z  = __webpack_require__(74).source;
	var src_P   = exports.src_P  = __webpack_require__(64).source;

	// \p{\Z\P\Cc\CF} (white spaces + control + format + punctuation)
	var src_ZPCc = exports.src_ZPCc = [ src_Z, src_P, src_Cc ].join('|');

	// \p{\Z\Cc} (white spaces + control)
	var src_ZCc = exports.src_ZCc = [ src_Z, src_Cc ].join('|');

	// All possible word characters (everything without punctuation, spaces & controls)
	// Defined via punctuation & spaces to save space
	// Should be something like \p{\L\N\S\M} (\w but without `_`)
	var src_pseudo_letter       = '(?:(?!>|<|' + src_ZPCc + ')' + src_Any + ')';
	// The same as abothe but without [0-9]
	// var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';

	////////////////////////////////////////////////////////////////////////////////

	var src_ip4 = exports.src_ip4 =

	  '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';

	// Prohibit [@/] in user/pass to avoid wrong domain fetch.
	exports.src_auth    = '(?:(?:(?!' + src_ZCc + '|[@/]).)+@)?';

	var src_port = exports.src_port =

	  '(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?';

	var src_host_terminator = exports.src_host_terminator =

	  '(?=$|>|<|' + src_ZPCc + ')(?!-|_|:\\d|\\.-|\\.(?!$|' + src_ZPCc + '))';

	var src_path = exports.src_path =

	  '(?:' +
	    '[/?#]' +
	      '(?:' +
	        '(?!' + src_ZCc + '|[()[\\]{}.,"\'?!\\-<>]).|' +
	        '\\[(?:(?!' + src_ZCc + '|\\]).)*\\]|' +
	        '\\((?:(?!' + src_ZCc + '|[)]).)*\\)|' +
	        '\\{(?:(?!' + src_ZCc + '|[}]).)*\\}|' +
	        '\\"(?:(?!' + src_ZCc + '|["]).)+\\"|' +
	        "\\'(?:(?!" + src_ZCc + "|[']).)+\\'|" +
	        "\\'(?=" + src_pseudo_letter + ').|' +  // allow `I'm_king` if no pair found
	        '\\.{2,3}[a-zA-Z0-9%/]|' + // github has ... in commit range links. Restrict to
	                                   // - english
	                                   // - percent-encoded
	                                   // - parts of file path
	                                   // until more examples found.
	        '\\.(?!' + src_ZCc + '|[.]).|' +
	        '\\-(?!--(?:[^-]|$))(?:-*)|' +  // `---` => long dash, terminate
	        '\\,(?!' + src_ZCc + ').|' +      // allow `,,,` in paths
	        '\\!(?!' + src_ZCc + '|[!]).|' +
	        '\\?(?!' + src_ZCc + '|[?]).' +
	      ')+' +
	    '|\\/' +
	  ')?';

	var src_email_name = exports.src_email_name =

	  '[\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]+';

	var src_xn = exports.src_xn =

	  'xn--[a-z0-9\\-]{1,59}';

	// More to read about domain names
	// http://serverfault.com/questions/638260/

	var src_domain_root = exports.src_domain_root =

	  // Allow letters & digits (http://test1)
	  '(?:' +
	    src_xn +
	    '|' +
	    src_pseudo_letter + '{1,63}' +
	  ')';

	var src_domain = exports.src_domain =

	  '(?:' +
	    src_xn +
	    '|' +
	    '(?:' + src_pseudo_letter + ')' +
	    '|' +
	    // don't allow `--` in domain names, because:
	    // - that can conflict with markdown &mdash; / &ndash;
	    // - nobody use those anyway
	    '(?:' + src_pseudo_letter + '(?:-(?!-)|' + src_pseudo_letter + '){0,61}' + src_pseudo_letter + ')' +
	  ')';

	var src_host = exports.src_host =

	  '(?:' +
	  // Don't need IP check, because digits are already allowed in normal domain names
	  //   src_ip4 +
	  // '|' +
	    '(?:(?:(?:' + src_domain + ')\\.)*' + src_domain_root + ')' +
	  ')';

	var tpl_host_fuzzy = exports.tpl_host_fuzzy =

	  '(?:' +
	    src_ip4 +
	  '|' +
	    '(?:(?:(?:' + src_domain + ')\\.)+(?:%TLDS%))' +
	  ')';

	var tpl_host_no_ip_fuzzy = exports.tpl_host_no_ip_fuzzy =

	  '(?:(?:(?:' + src_domain + ')\\.)+(?:%TLDS%))';

	exports.src_host_strict =

	  src_host + src_host_terminator;

	var tpl_host_fuzzy_strict = exports.tpl_host_fuzzy_strict =

	  tpl_host_fuzzy + src_host_terminator;

	exports.src_host_port_strict =

	  src_host + src_port + src_host_terminator;

	var tpl_host_port_fuzzy_strict = exports.tpl_host_port_fuzzy_strict =

	  tpl_host_fuzzy + src_port + src_host_terminator;

	var tpl_host_port_no_ip_fuzzy_strict = exports.tpl_host_port_no_ip_fuzzy_strict =

	  tpl_host_no_ip_fuzzy + src_port + src_host_terminator;


	////////////////////////////////////////////////////////////////////////////////
	// Main rules

	// Rude test fuzzy links by host, for quick deny
	exports.tpl_host_fuzzy_test =

	  'localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:' + src_ZPCc + '|>|$))';

	exports.tpl_email_fuzzy =

	    '(^|<|>|\\(|' + src_ZCc + ')(' + src_email_name + '@' + tpl_host_fuzzy_strict + ')';

	exports.tpl_link_fuzzy =
	    // Fuzzy link can't be prepended with .:/\- and non punctuation.
	    // but can start with > (markdown blockquote)
	    '(^|(?![.:/\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' +
	    '((?![$+<=>^`|])' + tpl_host_port_fuzzy_strict + src_path + ')';

	exports.tpl_link_no_ip_fuzzy =
	    // Fuzzy link can't be prepended with .:/\- and non punctuation.
	    // but can start with > (markdown blockquote)
	    '(^|(?![.:/\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' +
	    '((?![$+<=>^`|])' + tpl_host_port_no_ip_fuzzy_strict + src_path + ')';


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.4.1 by @mathias */
	;(function(root) {

		/** Detect free variables */
		var freeExports = typeof exports == 'object' && exports &&
			!exports.nodeType && exports;
		var freeModule = typeof module == 'object' && module &&
			!module.nodeType && module;
		var freeGlobal = typeof global == 'object' && global;
		if (
			freeGlobal.global === freeGlobal ||
			freeGlobal.window === freeGlobal ||
			freeGlobal.self === freeGlobal
		) {
			root = freeGlobal;
		}

		/**
		 * The `punycode` object.
		 * @name punycode
		 * @type Object
		 */
		var punycode,

		/** Highest positive signed 32-bit float value */
		maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

		/** Bootstring parameters */
		base = 36,
		tMin = 1,
		tMax = 26,
		skew = 38,
		damp = 700,
		initialBias = 72,
		initialN = 128, // 0x80
		delimiter = '-', // '\x2D'

		/** Regular expressions */
		regexPunycode = /^xn--/,
		regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
		regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

		/** Error messages */
		errors = {
			'overflow': 'Overflow: input needs wider integers to process',
			'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
			'invalid-input': 'Invalid input'
		},

		/** Convenience shortcuts */
		baseMinusTMin = base - tMin,
		floor = Math.floor,
		stringFromCharCode = String.fromCharCode,

		/** Temporary variable */
		key;

		/*--------------------------------------------------------------------------*/

		/**
		 * A generic error utility function.
		 * @private
		 * @param {String} type The error type.
		 * @returns {Error} Throws a `RangeError` with the applicable error message.
		 */
		function error(type) {
			throw new RangeError(errors[type]);
		}

		/**
		 * A generic `Array#map` utility function.
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} callback The function that gets called for every array
		 * item.
		 * @returns {Array} A new array of values returned by the callback function.
		 */
		function map(array, fn) {
			var length = array.length;
			var result = [];
			while (length--) {
				result[length] = fn(array[length]);
			}
			return result;
		}

		/**
		 * A simple `Array#map`-like wrapper to work with domain name strings or email
		 * addresses.
		 * @private
		 * @param {String} domain The domain name or email address.
		 * @param {Function} callback The function that gets called for every
		 * character.
		 * @returns {Array} A new string of characters returned by the callback
		 * function.
		 */
		function mapDomain(string, fn) {
			var parts = string.split('@');
			var result = '';
			if (parts.length > 1) {
				// In email addresses, only the domain name should be punycoded. Leave
				// the local part (i.e. everything up to `@`) intact.
				result = parts[0] + '@';
				string = parts[1];
			}
			// Avoid `split(regex)` for IE8 compatibility. See #17.
			string = string.replace(regexSeparators, '\x2E');
			var labels = string.split('.');
			var encoded = map(labels, fn).join('.');
			return result + encoded;
		}

		/**
		 * Creates an array containing the numeric code points of each Unicode
		 * character in the string. While JavaScript uses UCS-2 internally,
		 * this function will convert a pair of surrogate halves (each of which
		 * UCS-2 exposes as separate characters) into a single code point,
		 * matching UTF-16.
		 * @see `punycode.ucs2.encode`
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode.ucs2
		 * @name decode
		 * @param {String} string The Unicode input string (UCS-2).
		 * @returns {Array} The new array of code points.
		 */
		function ucs2decode(string) {
			var output = [],
			    counter = 0,
			    length = string.length,
			    value,
			    extra;
			while (counter < length) {
				value = string.charCodeAt(counter++);
				if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
					// high surrogate, and there is a next character
					extra = string.charCodeAt(counter++);
					if ((extra & 0xFC00) == 0xDC00) { // low surrogate
						output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
					} else {
						// unmatched surrogate; only append this code unit, in case the next
						// code unit is the high surrogate of a surrogate pair
						output.push(value);
						counter--;
					}
				} else {
					output.push(value);
				}
			}
			return output;
		}

		/**
		 * Creates a string based on an array of numeric code points.
		 * @see `punycode.ucs2.decode`
		 * @memberOf punycode.ucs2
		 * @name encode
		 * @param {Array} codePoints The array of numeric code points.
		 * @returns {String} The new Unicode string (UCS-2).
		 */
		function ucs2encode(array) {
			return map(array, function(value) {
				var output = '';
				if (value > 0xFFFF) {
					value -= 0x10000;
					output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
					value = 0xDC00 | value & 0x3FF;
				}
				output += stringFromCharCode(value);
				return output;
			}).join('');
		}

		/**
		 * Converts a basic code point into a digit/integer.
		 * @see `digitToBasic()`
		 * @private
		 * @param {Number} codePoint The basic numeric code point value.
		 * @returns {Number} The numeric value of a basic code point (for use in
		 * representing integers) in the range `0` to `base - 1`, or `base` if
		 * the code point does not represent a value.
		 */
		function basicToDigit(codePoint) {
			if (codePoint - 48 < 10) {
				return codePoint - 22;
			}
			if (codePoint - 65 < 26) {
				return codePoint - 65;
			}
			if (codePoint - 97 < 26) {
				return codePoint - 97;
			}
			return base;
		}

		/**
		 * Converts a digit/integer into a basic code point.
		 * @see `basicToDigit()`
		 * @private
		 * @param {Number} digit The numeric value of a basic code point.
		 * @returns {Number} The basic code point whose value (when used for
		 * representing integers) is `digit`, which needs to be in the range
		 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
		 * used; else, the lowercase form is used. The behavior is undefined
		 * if `flag` is non-zero and `digit` has no uppercase form.
		 */
		function digitToBasic(digit, flag) {
			//  0..25 map to ASCII a..z or A..Z
			// 26..35 map to ASCII 0..9
			return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
		}

		/**
		 * Bias adaptation function as per section 3.4 of RFC 3492.
		 * https://tools.ietf.org/html/rfc3492#section-3.4
		 * @private
		 */
		function adapt(delta, numPoints, firstTime) {
			var k = 0;
			delta = firstTime ? floor(delta / damp) : delta >> 1;
			delta += floor(delta / numPoints);
			for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
				delta = floor(delta / baseMinusTMin);
			}
			return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
		}

		/**
		 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
		 * symbols.
		 * @memberOf punycode
		 * @param {String} input The Punycode string of ASCII-only symbols.
		 * @returns {String} The resulting string of Unicode symbols.
		 */
		function decode(input) {
			// Don't use UCS-2
			var output = [],
			    inputLength = input.length,
			    out,
			    i = 0,
			    n = initialN,
			    bias = initialBias,
			    basic,
			    j,
			    index,
			    oldi,
			    w,
			    k,
			    digit,
			    t,
			    /** Cached calculation results */
			    baseMinusT;

			// Handle the basic code points: let `basic` be the number of input code
			// points before the last delimiter, or `0` if there is none, then copy
			// the first basic code points to the output.

			basic = input.lastIndexOf(delimiter);
			if (basic < 0) {
				basic = 0;
			}

			for (j = 0; j < basic; ++j) {
				// if it's not a basic code point
				if (input.charCodeAt(j) >= 0x80) {
					error('not-basic');
				}
				output.push(input.charCodeAt(j));
			}

			// Main decoding loop: start just after the last delimiter if any basic code
			// points were copied; start at the beginning otherwise.

			for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

				// `index` is the index of the next character to be consumed.
				// Decode a generalized variable-length integer into `delta`,
				// which gets added to `i`. The overflow checking is easier
				// if we increase `i` as we go, then subtract off its starting
				// value at the end to obtain `delta`.
				for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

					if (index >= inputLength) {
						error('invalid-input');
					}

					digit = basicToDigit(input.charCodeAt(index++));

					if (digit >= base || digit > floor((maxInt - i) / w)) {
						error('overflow');
					}

					i += digit * w;
					t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

					if (digit < t) {
						break;
					}

					baseMinusT = base - t;
					if (w > floor(maxInt / baseMinusT)) {
						error('overflow');
					}

					w *= baseMinusT;

				}

				out = output.length + 1;
				bias = adapt(i - oldi, out, oldi == 0);

				// `i` was supposed to wrap around from `out` to `0`,
				// incrementing `n` each time, so we'll fix that now:
				if (floor(i / out) > maxInt - n) {
					error('overflow');
				}

				n += floor(i / out);
				i %= out;

				// Insert `n` at position `i` of the output
				output.splice(i++, 0, n);

			}

			return ucs2encode(output);
		}

		/**
		 * Converts a string of Unicode symbols (e.g. a domain name label) to a
		 * Punycode string of ASCII-only symbols.
		 * @memberOf punycode
		 * @param {String} input The string of Unicode symbols.
		 * @returns {String} The resulting Punycode string of ASCII-only symbols.
		 */
		function encode(input) {
			var n,
			    delta,
			    handledCPCount,
			    basicLength,
			    bias,
			    j,
			    m,
			    q,
			    k,
			    t,
			    currentValue,
			    output = [],
			    /** `inputLength` will hold the number of code points in `input`. */
			    inputLength,
			    /** Cached calculation results */
			    handledCPCountPlusOne,
			    baseMinusT,
			    qMinusT;

			// Convert the input in UCS-2 to Unicode
			input = ucs2decode(input);

			// Cache the length
			inputLength = input.length;

			// Initialize the state
			n = initialN;
			delta = 0;
			bias = initialBias;

			// Handle the basic code points
			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue < 0x80) {
					output.push(stringFromCharCode(currentValue));
				}
			}

			handledCPCount = basicLength = output.length;

			// `handledCPCount` is the number of code points that have been handled;
			// `basicLength` is the number of basic code points.

			// Finish the basic string - if it is not empty - with a delimiter
			if (basicLength) {
				output.push(delimiter);
			}

			// Main encoding loop:
			while (handledCPCount < inputLength) {

				// All non-basic code points < n have been handled already. Find the next
				// larger one:
				for (m = maxInt, j = 0; j < inputLength; ++j) {
					currentValue = input[j];
					if (currentValue >= n && currentValue < m) {
						m = currentValue;
					}
				}

				// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
				// but guard against overflow
				handledCPCountPlusOne = handledCPCount + 1;
				if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
					error('overflow');
				}

				delta += (m - n) * handledCPCountPlusOne;
				n = m;

				for (j = 0; j < inputLength; ++j) {
					currentValue = input[j];

					if (currentValue < n && ++delta > maxInt) {
						error('overflow');
					}

					if (currentValue == n) {
						// Represent delta as a generalized variable-length integer
						for (q = delta, k = base; /* no condition */; k += base) {
							t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
							if (q < t) {
								break;
							}
							qMinusT = q - t;
							baseMinusT = base - t;
							output.push(
								stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
							);
							q = floor(qMinusT / baseMinusT);
						}

						output.push(stringFromCharCode(digitToBasic(q, 0)));
						bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
						delta = 0;
						++handledCPCount;
					}
				}

				++delta;
				++n;

			}
			return output.join('');
		}

		/**
		 * Converts a Punycode string representing a domain name or an email address
		 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
		 * it doesn't matter if you call it on a string that has already been
		 * converted to Unicode.
		 * @memberOf punycode
		 * @param {String} input The Punycoded domain name or email address to
		 * convert to Unicode.
		 * @returns {String} The Unicode representation of the given Punycode
		 * string.
		 */
		function toUnicode(input) {
			return mapDomain(input, function(string) {
				return regexPunycode.test(string)
					? decode(string.slice(4).toLowerCase())
					: string;
			});
		}

		/**
		 * Converts a Unicode string representing a domain name or an email address to
		 * Punycode. Only the non-ASCII parts of the domain name will be converted,
		 * i.e. it doesn't matter if you call it with a domain that's already in
		 * ASCII.
		 * @memberOf punycode
		 * @param {String} input The domain name or email address to convert, as a
		 * Unicode string.
		 * @returns {String} The Punycode representation of the given domain name or
		 * email address.
		 */
		function toASCII(input) {
			return mapDomain(input, function(string) {
				return regexNonASCII.test(string)
					? 'xn--' + encode(string)
					: string;
			});
		}

		/*--------------------------------------------------------------------------*/

		/** Define the public API */
		punycode = {
			/**
			 * A string representing the current Punycode.js version number.
			 * @memberOf punycode
			 * @type String
			 */
			'version': '1.4.1',
			/**
			 * An object of methods to convert from JavaScript's internal character
			 * representation (UCS-2) to Unicode code points, and back.
			 * @see <https://mathiasbynens.be/notes/javascript-encoding>
			 * @memberOf punycode
			 * @type Object
			 */
			'ucs2': {
				'decode': ucs2decode,
				'encode': ucs2encode
			},
			'decode': decode,
			'encode': encode,
			'toASCII': toASCII,
			'toUnicode': toUnicode
		};

		/** Expose `punycode` */
		// Some AMD build optimizers, like r.js, check for specific condition patterns
		// like the following:
		if (
			true
		) {
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
				return punycode;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (freeExports && freeModule) {
			if (module.exports == freeExports) {
				// in Node.js, io.js, or RingoJS v0.8.0+
				freeModule.exports = punycode;
			} else {
				// in Narwhal or RingoJS v0.7.0-
				for (key in punycode) {
					punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
				}
			}
		} else {
			// in Rhino or a web browser
			root.punycode = punycode;
		}

	}(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(123)(module), (function() { return this; }())))

/***/ }),
/* 123 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 124 */
/***/ (function(module, exports) {

	// markdown-it default options

	'use strict';


	module.exports = {
	  options: {
	    html:         false,        // Enable HTML tags in source
	    xhtmlOut:     false,        // Use '/' to close single tags (<br />)
	    breaks:       false,        // Convert '\n' in paragraphs into <br>
	    langPrefix:   'language-',  // CSS language prefix for fenced blocks
	    linkify:      false,        // autoconvert URL-like texts to links

	    // Enable some language-neutral replacements + quotes beautification
	    typographer:  false,

	    // Double + single quotes replacement pairs, when typographer enabled,
	    // and smartquotes on. Could be either a String or an Array.
	    //
	    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
	    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
	    quotes: '\u201c\u201d\u2018\u2019', /* “”‘’ */

	    // Highlighter function. Should return escaped HTML,
	    // or '' if the source string is not changed and should be escaped externaly.
	    // If result starts with <pre... internal wrapper is skipped.
	    //
	    // function (/*str, lang*/) { return ''; }
	    //
	    highlight: null,

	    maxNesting:   100            // Internal protection, recursion limit
	  },

	  components: {

	    core: {},
	    block: {},
	    inline: {}
	  }
	};


/***/ }),
/* 125 */
/***/ (function(module, exports) {

	// "Zero" preset, with nothing enabled. Useful for manual configuring of simple
	// modes. For example, to parse bold/italic only.

	'use strict';


	module.exports = {
	  options: {
	    html:         false,        // Enable HTML tags in source
	    xhtmlOut:     false,        // Use '/' to close single tags (<br />)
	    breaks:       false,        // Convert '\n' in paragraphs into <br>
	    langPrefix:   'language-',  // CSS language prefix for fenced blocks
	    linkify:      false,        // autoconvert URL-like texts to links

	    // Enable some language-neutral replacements + quotes beautification
	    typographer:  false,

	    // Double + single quotes replacement pairs, when typographer enabled,
	    // and smartquotes on. Could be either a String or an Array.
	    //
	    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
	    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
	    quotes: '\u201c\u201d\u2018\u2019', /* “”‘’ */

	    // Highlighter function. Should return escaped HTML,
	    // or '' if the source string is not changed and should be escaped externaly.
	    // If result starts with <pre... internal wrapper is skipped.
	    //
	    // function (/*str, lang*/) { return ''; }
	    //
	    highlight: null,

	    maxNesting:   20            // Internal protection, recursion limit
	  },

	  components: {

	    core: {
	      rules: [
	        'normalize',
	        'block',
	        'inline'
	      ]
	    },

	    block: {
	      rules: [
	        'paragraph'
	      ]
	    },

	    inline: {
	      rules: [
	        'text'
	      ],
	      rules2: [
	        'balance_pairs',
	        'text_collapse'
	      ]
	    }
	  }
	};


/***/ }),
/* 126 */
/***/ (function(module, exports) {

	// Commonmark default options

	'use strict';


	module.exports = {
	  options: {
	    html:         true,         // Enable HTML tags in source
	    xhtmlOut:     true,         // Use '/' to close single tags (<br />)
	    breaks:       false,        // Convert '\n' in paragraphs into <br>
	    langPrefix:   'language-',  // CSS language prefix for fenced blocks
	    linkify:      false,        // autoconvert URL-like texts to links

	    // Enable some language-neutral replacements + quotes beautification
	    typographer:  false,

	    // Double + single quotes replacement pairs, when typographer enabled,
	    // and smartquotes on. Could be either a String or an Array.
	    //
	    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
	    // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
	    quotes: '\u201c\u201d\u2018\u2019', /* “”‘’ */

	    // Highlighter function. Should return escaped HTML,
	    // or '' if the source string is not changed and should be escaped externaly.
	    // If result starts with <pre... internal wrapper is skipped.
	    //
	    // function (/*str, lang*/) { return ''; }
	    //
	    highlight: null,

	    maxNesting:   20            // Internal protection, recursion limit
	  },

	  components: {

	    core: {
	      rules: [
	        'normalize',
	        'block',
	        'inline'
	      ]
	    },

	    block: {
	      rules: [
	        'blockquote',
	        'code',
	        'fence',
	        'heading',
	        'hr',
	        'html_block',
	        'lheading',
	        'list',
	        'reference',
	        'paragraph'
	      ]
	    },

	    inline: {
	      rules: [
	        'autolink',
	        'backticks',
	        'emphasis',
	        'entity',
	        'escape',
	        'html_inline',
	        'image',
	        'link',
	        'newline',
	        'text'
	      ],
	      rules2: [
	        'balance_pairs',
	        'emphasis',
	        'text_collapse'
	      ]
	    }
	  }
	};


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';


	var emojies_defs      = __webpack_require__(128);
	var emojies_shortcuts = __webpack_require__(129);
	var emoji_html        = __webpack_require__(130);
	var emoji_replace     = __webpack_require__(131);
	var normalize_opts    = __webpack_require__(132);


	module.exports = function emoji_plugin(md, options) {
	  var defaults = {
	    defs: emojies_defs,
	    shortcuts: emojies_shortcuts,
	    enabled: []
	  };

	  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));

	  md.renderer.rules.emoji = emoji_html;

	  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));
	};


/***/ }),
/* 128 */
/***/ (function(module, exports) {

	module.exports = {"100":"💯","1234":"🔢","grinning":"😀","smiley":"😃","smile":"😄","grin":"😁","laughing":"😆","satisfied":"😆","sweat_smile":"😅","joy":"😂","rofl":"🤣","relaxed":"☺️","blush":"😊","innocent":"😇","slightly_smiling_face":"🙂","upside_down_face":"🙃","wink":"😉","relieved":"😌","heart_eyes":"😍","kissing_heart":"😘","kissing":"😗","kissing_smiling_eyes":"😙","kissing_closed_eyes":"😚","yum":"😋","stuck_out_tongue_winking_eye":"😜","stuck_out_tongue_closed_eyes":"😝","stuck_out_tongue":"😛","money_mouth_face":"🤑","hugs":"🤗","nerd_face":"🤓","sunglasses":"😎","clown_face":"🤡","cowboy_hat_face":"🤠","smirk":"😏","unamused":"😒","disappointed":"😞","pensive":"😔","worried":"😟","confused":"😕","slightly_frowning_face":"🙁","frowning_face":"☹️","persevere":"😣","confounded":"😖","tired_face":"😫","weary":"😩","triumph":"😤","angry":"😠","rage":"😡","pout":"😡","no_mouth":"😶","neutral_face":"😐","expressionless":"😑","hushed":"😯","frowning":"😦","anguished":"😧","open_mouth":"😮","astonished":"😲","dizzy_face":"😵","flushed":"😳","scream":"😱","fearful":"😨","cold_sweat":"😰","cry":"😢","disappointed_relieved":"😥","drooling_face":"🤤","sob":"😭","sweat":"😓","sleepy":"😪","sleeping":"😴","roll_eyes":"🙄","thinking":"🤔","lying_face":"🤥","grimacing":"😬","zipper_mouth_face":"🤐","nauseated_face":"🤢","sneezing_face":"🤧","mask":"😷","face_with_thermometer":"🤒","face_with_head_bandage":"🤕","smiling_imp":"😈","imp":"👿","japanese_ogre":"👹","japanese_goblin":"👺","hankey":"💩","poop":"💩","shit":"💩","ghost":"👻","skull":"💀","skull_and_crossbones":"☠️","alien":"👽","space_invader":"👾","robot":"🤖","jack_o_lantern":"🎃","smiley_cat":"😺","smile_cat":"😸","joy_cat":"😹","heart_eyes_cat":"😻","smirk_cat":"😼","kissing_cat":"😽","scream_cat":"🙀","crying_cat_face":"😿","pouting_cat":"😾","open_hands":"👐","raised_hands":"🙌","clap":"👏","pray":"🙏","handshake":"🤝","+1":"👍","thumbsup":"👍","-1":"👎","thumbsdown":"👎","fist_oncoming":"👊","facepunch":"👊","punch":"👊","fist_raised":"✊","fist":"✊","fist_left":"🤛","fist_right":"🤜","crossed_fingers":"🤞","v":"✌️","metal":"🤘","ok_hand":"👌","point_left":"👈","point_right":"👉","point_up_2":"👆","point_down":"👇","point_up":"☝️","hand":"✋","raised_hand":"✋","raised_back_of_hand":"🤚","raised_hand_with_fingers_splayed":"🖐","vulcan_salute":"🖖","wave":"👋","call_me_hand":"🤙","muscle":"💪","middle_finger":"🖕","fu":"🖕","writing_hand":"✍️","selfie":"🤳","nail_care":"💅","ring":"💍","lipstick":"💄","kiss":"💋","lips":"👄","tongue":"👅","ear":"👂","nose":"👃","footprints":"👣","eye":"👁","eyes":"👀","speaking_head":"🗣","bust_in_silhouette":"👤","busts_in_silhouette":"👥","baby":"👶","boy":"👦","girl":"👧","man":"👨","woman":"👩","blonde_woman":"👱‍♀","blonde_man":"👱","person_with_blond_hair":"👱","older_man":"👴","older_woman":"👵","man_with_gua_pi_mao":"👲","woman_with_turban":"👳‍♀","man_with_turban":"👳","policewoman":"👮‍♀","policeman":"👮","cop":"👮","construction_worker_woman":"👷‍♀","construction_worker_man":"👷","construction_worker":"👷","guardswoman":"💂‍♀","guardsman":"💂","female_detective":"🕵️‍♀️","male_detective":"🕵","detective":"🕵","woman_health_worker":"👩‍⚕","man_health_worker":"👨‍⚕","woman_farmer":"👩‍🌾","man_farmer":"👨‍🌾","woman_cook":"👩‍🍳","man_cook":"👨‍🍳","woman_student":"👩‍🎓","man_student":"👨‍🎓","woman_singer":"👩‍🎤","man_singer":"👨‍🎤","woman_teacher":"👩‍🏫","man_teacher":"👨‍🏫","woman_factory_worker":"👩‍🏭","man_factory_worker":"👨‍🏭","woman_technologist":"👩‍💻","man_technologist":"👨‍💻","woman_office_worker":"👩‍💼","man_office_worker":"👨‍💼","woman_mechanic":"👩‍🔧","man_mechanic":"👨‍🔧","woman_scientist":"👩‍🔬","man_scientist":"👨‍🔬","woman_artist":"👩‍🎨","man_artist":"👨‍🎨","woman_firefighter":"👩‍🚒","man_firefighter":"👨‍🚒","woman_pilot":"👩‍✈","man_pilot":"👨‍✈","woman_astronaut":"👩‍🚀","man_astronaut":"👨‍🚀","woman_judge":"👩‍⚖","man_judge":"👨‍⚖","mrs_claus":"🤶","santa":"🎅","princess":"👸","prince":"🤴","bride_with_veil":"👰","man_in_tuxedo":"🤵","angel":"👼","pregnant_woman":"🤰","bowing_woman":"🙇‍♀","bowing_man":"🙇","bow":"🙇","tipping_hand_woman":"💁","information_desk_person":"💁","sassy_woman":"💁","tipping_hand_man":"💁‍♂","sassy_man":"💁‍♂","no_good_woman":"🙅","no_good":"🙅","ng_woman":"🙅","no_good_man":"🙅‍♂","ng_man":"🙅‍♂","ok_woman":"🙆","ok_man":"🙆‍♂","raising_hand_woman":"🙋","raising_hand":"🙋","raising_hand_man":"🙋‍♂","woman_facepalming":"🤦‍♀","man_facepalming":"🤦‍♂","woman_shrugging":"🤷‍♀","man_shrugging":"🤷‍♂","pouting_woman":"🙎","person_with_pouting_face":"🙎","pouting_man":"🙎‍♂","frowning_woman":"🙍","person_frowning":"🙍","frowning_man":"🙍‍♂","haircut_woman":"💇","haircut":"💇","haircut_man":"💇‍♂","massage_woman":"💆","massage":"💆","massage_man":"💆‍♂","business_suit_levitating":"🕴","dancer":"💃","man_dancing":"🕺","dancing_women":"👯","dancers":"👯","dancing_men":"👯‍♂","walking_woman":"🚶‍♀","walking_man":"🚶","walking":"🚶","running_woman":"🏃‍♀","running_man":"🏃","runner":"🏃","running":"🏃","couple":"👫","two_women_holding_hands":"👭","two_men_holding_hands":"👬","couple_with_heart_woman_man":"💑","couple_with_heart":"💑","couple_with_heart_woman_woman":"👩‍❤️‍👩","couple_with_heart_man_man":"👨‍❤️‍👨","couplekiss_man_woman":"💏","couplekiss_woman_woman":"👩‍❤️‍💋‍👩","couplekiss_man_man":"👨‍❤️‍💋‍👨","family_man_woman_boy":"👪","family":"👪","family_man_woman_girl":"👨‍👩‍👧","family_man_woman_girl_boy":"👨‍👩‍👧‍👦","family_man_woman_boy_boy":"👨‍👩‍👦‍👦","family_man_woman_girl_girl":"👨‍👩‍👧‍👧","family_woman_woman_boy":"👩‍👩‍👦","family_woman_woman_girl":"👩‍👩‍👧","family_woman_woman_girl_boy":"👩‍👩‍👧‍👦","family_woman_woman_boy_boy":"👩‍👩‍👦‍👦","family_woman_woman_girl_girl":"👩‍👩‍👧‍👧","family_man_man_boy":"👨‍👨‍👦","family_man_man_girl":"👨‍👨‍👧","family_man_man_girl_boy":"👨‍👨‍👧‍👦","family_man_man_boy_boy":"👨‍👨‍👦‍👦","family_man_man_girl_girl":"👨‍👨‍👧‍👧","family_woman_boy":"👩‍👦","family_woman_girl":"👩‍👧","family_woman_girl_boy":"👩‍👧‍👦","family_woman_boy_boy":"👩‍👦‍👦","family_woman_girl_girl":"👩‍👧‍👧","family_man_boy":"👨‍👦","family_man_girl":"👨‍👧","family_man_girl_boy":"👨‍👧‍👦","family_man_boy_boy":"👨‍👦‍👦","family_man_girl_girl":"👨‍👧‍👧","womans_clothes":"👚","shirt":"👕","tshirt":"👕","jeans":"👖","necktie":"👔","dress":"👗","bikini":"👙","kimono":"👘","high_heel":"👠","sandal":"👡","boot":"👢","mans_shoe":"👞","shoe":"👞","athletic_shoe":"👟","womans_hat":"👒","tophat":"🎩","mortar_board":"🎓","crown":"👑","rescue_worker_helmet":"⛑","school_satchel":"🎒","pouch":"👝","purse":"👛","handbag":"👜","briefcase":"💼","eyeglasses":"👓","dark_sunglasses":"🕶","closed_umbrella":"🌂","open_umbrella":"☂️","dog":"🐶","cat":"🐱","mouse":"🐭","hamster":"🐹","rabbit":"🐰","fox_face":"🦊","bear":"🐻","panda_face":"🐼","koala":"🐨","tiger":"🐯","lion":"🦁","cow":"🐮","pig":"🐷","pig_nose":"🐽","frog":"🐸","monkey_face":"🐵","see_no_evil":"🙈","hear_no_evil":"🙉","speak_no_evil":"🙊","monkey":"🐒","chicken":"🐔","penguin":"🐧","bird":"🐦","baby_chick":"🐤","hatching_chick":"🐣","hatched_chick":"🐥","duck":"🦆","eagle":"🦅","owl":"🦉","bat":"🦇","wolf":"🐺","boar":"🐗","horse":"🐴","unicorn":"🦄","bee":"🐝","honeybee":"🐝","bug":"🐛","butterfly":"🦋","snail":"🐌","shell":"🐚","beetle":"🐞","ant":"🐜","spider":"🕷","spider_web":"🕸","turtle":"🐢","snake":"🐍","lizard":"🦎","scorpion":"🦂","crab":"🦀","squid":"🦑","octopus":"🐙","shrimp":"🦐","tropical_fish":"🐠","fish":"🐟","blowfish":"🐡","dolphin":"🐬","flipper":"🐬","shark":"🦈","whale":"🐳","whale2":"🐋","crocodile":"🐊","leopard":"🐆","tiger2":"🐅","water_buffalo":"🐃","ox":"🐂","cow2":"🐄","deer":"🦌","dromedary_camel":"🐪","camel":"🐫","elephant":"🐘","rhinoceros":"🦏","gorilla":"🦍","racehorse":"🐎","pig2":"🐖","goat":"🐐","ram":"🐏","sheep":"🐑","dog2":"🐕","poodle":"🐩","cat2":"🐈","rooster":"🐓","turkey":"🦃","dove":"🕊","rabbit2":"🐇","mouse2":"🐁","rat":"🐀","chipmunk":"🐿","feet":"🐾","paw_prints":"🐾","dragon":"🐉","dragon_face":"🐲","cactus":"🌵","christmas_tree":"🎄","evergreen_tree":"🌲","deciduous_tree":"🌳","palm_tree":"🌴","seedling":"🌱","herb":"🌿","shamrock":"☘️","four_leaf_clover":"🍀","bamboo":"🎍","tanabata_tree":"🎋","leaves":"🍃","fallen_leaf":"🍂","maple_leaf":"🍁","mushroom":"🍄","ear_of_rice":"🌾","bouquet":"💐","tulip":"🌷","rose":"🌹","wilted_flower":"🥀","sunflower":"🌻","blossom":"🌼","cherry_blossom":"🌸","hibiscus":"🌺","earth_americas":"🌎","earth_africa":"🌍","earth_asia":"🌏","full_moon":"🌕","waning_gibbous_moon":"🌖","last_quarter_moon":"🌗","waning_crescent_moon":"🌘","new_moon":"🌑","waxing_crescent_moon":"🌒","first_quarter_moon":"🌓","moon":"🌔","waxing_gibbous_moon":"🌔","new_moon_with_face":"🌚","full_moon_with_face":"🌝","sun_with_face":"🌞","first_quarter_moon_with_face":"🌛","last_quarter_moon_with_face":"🌜","crescent_moon":"🌙","dizzy":"💫","star":"⭐️","star2":"🌟","sparkles":"✨","zap":"⚡️","fire":"🔥","boom":"💥","collision":"💥","comet":"☄","sunny":"☀️","sun_behind_small_cloud":"🌤","partly_sunny":"⛅️","sun_behind_large_cloud":"🌥","sun_behind_rain_cloud":"🌦","rainbow":"🌈","cloud":"☁️","cloud_with_rain":"🌧","cloud_with_lightning_and_rain":"⛈","cloud_with_lightning":"🌩","cloud_with_snow":"🌨","snowman_with_snow":"☃️","snowman":"⛄️","snowflake":"❄️","wind_face":"🌬","dash":"💨","tornado":"🌪","fog":"🌫","ocean":"🌊","droplet":"💧","sweat_drops":"💦","umbrella":"☔️","green_apple":"🍏","apple":"🍎","pear":"🍐","tangerine":"🍊","orange":"🍊","mandarin":"🍊","lemon":"🍋","banana":"🍌","watermelon":"🍉","grapes":"🍇","strawberry":"🍓","melon":"🍈","cherries":"🍒","peach":"🍑","pineapple":"🍍","kiwi_fruit":"🥝","avocado":"🥑","tomato":"🍅","eggplant":"🍆","cucumber":"🥒","carrot":"🥕","corn":"🌽","hot_pepper":"🌶","potato":"🥔","sweet_potato":"🍠","chestnut":"🌰","peanuts":"🥜","honey_pot":"🍯","croissant":"🥐","bread":"🍞","baguette_bread":"🥖","cheese":"🧀","egg":"🥚","fried_egg":"🍳","bacon":"🥓","pancakes":"🥞","fried_shrimp":"🍤","poultry_leg":"🍗","meat_on_bone":"🍖","pizza":"🍕","hotdog":"🌭","hamburger":"🍔","fries":"🍟","stuffed_flatbread":"🥙","taco":"🌮","burrito":"🌯","green_salad":"🥗","shallow_pan_of_food":"🥘","spaghetti":"🍝","ramen":"🍜","stew":"🍲","fish_cake":"🍥","sushi":"🍣","bento":"🍱","curry":"🍛","rice":"🍚","rice_ball":"🍙","rice_cracker":"🍘","oden":"🍢","dango":"🍡","shaved_ice":"🍧","ice_cream":"🍨","icecream":"🍦","cake":"🍰","birthday":"🎂","custard":"🍮","lollipop":"🍭","candy":"🍬","chocolate_bar":"🍫","popcorn":"🍿","doughnut":"🍩","cookie":"🍪","milk_glass":"🥛","baby_bottle":"🍼","coffee":"☕️","tea":"🍵","sake":"🍶","beer":"🍺","beers":"🍻","clinking_glasses":"🥂","wine_glass":"🍷","tumbler_glass":"🥃","cocktail":"🍸","tropical_drink":"🍹","champagne":"🍾","spoon":"🥄","fork_and_knife":"🍴","plate_with_cutlery":"🍽","soccer":"⚽️","basketball":"🏀","football":"🏈","baseball":"⚾️","tennis":"🎾","volleyball":"🏐","rugby_football":"🏉","8ball":"🎱","ping_pong":"🏓","badminton":"🏸","goal_net":"🥅","ice_hockey":"🏒","field_hockey":"🏑","cricket":"🏏","golf":"⛳️","bow_and_arrow":"🏹","fishing_pole_and_fish":"🎣","boxing_glove":"🥊","martial_arts_uniform":"🥋","ice_skate":"⛸","ski":"🎿","skier":"⛷","snowboarder":"🏂","weight_lifting_woman":"🏋️‍♀️","weight_lifting_man":"🏋","person_fencing":"🤺","women_wrestling":"🤼‍♀","men_wrestling":"🤼‍♂","woman_cartwheeling":"🤸‍♀","man_cartwheeling":"🤸‍♂","basketball_woman":"⛹️‍♀️","basketball_man":"⛹","woman_playing_handball":"🤾‍♀","man_playing_handball":"🤾‍♂","golfing_woman":"🏌️‍♀️","golfing_man":"🏌","surfing_woman":"🏄‍♀","surfing_man":"🏄","surfer":"🏄","swimming_woman":"🏊‍♀","swimming_man":"🏊","swimmer":"🏊","woman_playing_water_polo":"🤽‍♀","man_playing_water_polo":"🤽‍♂","rowing_woman":"🚣‍♀","rowing_man":"🚣","rowboat":"🚣","horse_racing":"🏇","biking_woman":"🚴‍♀","biking_man":"🚴","bicyclist":"🚴","mountain_biking_woman":"🚵‍♀","mountain_biking_man":"🚵","mountain_bicyclist":"🚵","running_shirt_with_sash":"🎽","medal_sports":"🏅","medal_military":"🎖","1st_place_medal":"🥇","2nd_place_medal":"🥈","3rd_place_medal":"🥉","trophy":"🏆","rosette":"🏵","reminder_ribbon":"🎗","ticket":"🎫","tickets":"🎟","circus_tent":"🎪","woman_juggling":"🤹‍♀","man_juggling":"🤹‍♂","performing_arts":"🎭","art":"🎨","clapper":"🎬","microphone":"🎤","headphones":"🎧","musical_score":"🎼","musical_keyboard":"🎹","drum":"🥁","saxophone":"🎷","trumpet":"🎺","guitar":"🎸","violin":"🎻","game_die":"🎲","dart":"🎯","bowling":"🎳","video_game":"🎮","slot_machine":"🎰","car":"🚗","red_car":"🚗","taxi":"🚕","blue_car":"🚙","bus":"🚌","trolleybus":"🚎","racing_car":"🏎","police_car":"🚓","ambulance":"🚑","fire_engine":"🚒","minibus":"🚐","truck":"🚚","articulated_lorry":"🚛","tractor":"🚜","kick_scooter":"🛴","bike":"🚲","motor_scooter":"🛵","motorcycle":"🏍","rotating_light":"🚨","oncoming_police_car":"🚔","oncoming_bus":"🚍","oncoming_automobile":"🚘","oncoming_taxi":"🚖","aerial_tramway":"🚡","mountain_cableway":"🚠","suspension_railway":"🚟","railway_car":"🚃","train":"🚋","mountain_railway":"🚞","monorail":"🚝","bullettrain_side":"🚄","bullettrain_front":"🚅","light_rail":"🚈","steam_locomotive":"🚂","train2":"🚆","metro":"🚇","tram":"🚊","station":"🚉","helicopter":"🚁","small_airplane":"🛩","airplane":"✈️","flight_departure":"🛫","flight_arrival":"🛬","rocket":"🚀","artificial_satellite":"🛰","seat":"💺","canoe":"🛶","boat":"⛵️","sailboat":"⛵️","motor_boat":"🛥","speedboat":"🚤","passenger_ship":"🛳","ferry":"⛴","ship":"🚢","anchor":"⚓️","construction":"🚧","fuelpump":"⛽️","busstop":"🚏","vertical_traffic_light":"🚦","traffic_light":"🚥","world_map":"🗺","moyai":"🗿","statue_of_liberty":"🗽","fountain":"⛲️","tokyo_tower":"🗼","european_castle":"🏰","japanese_castle":"🏯","stadium":"🏟","ferris_wheel":"🎡","roller_coaster":"🎢","carousel_horse":"🎠","parasol_on_ground":"⛱","beach_umbrella":"🏖","desert_island":"🏝","mountain":"⛰","mountain_snow":"🏔","mount_fuji":"🗻","volcano":"🌋","desert":"🏜","camping":"🏕","tent":"⛺️","railway_track":"🛤","motorway":"🛣","building_construction":"🏗","factory":"🏭","house":"🏠","house_with_garden":"🏡","houses":"🏘","derelict_house":"🏚","office":"🏢","department_store":"🏬","post_office":"🏣","european_post_office":"🏤","hospital":"🏥","bank":"🏦","hotel":"🏨","convenience_store":"🏪","school":"🏫","love_hotel":"🏩","wedding":"💒","classical_building":"🏛","church":"⛪️","mosque":"🕌","synagogue":"🕍","kaaba":"🕋","shinto_shrine":"⛩","japan":"🗾","rice_scene":"🎑","national_park":"🏞","sunrise":"🌅","sunrise_over_mountains":"🌄","stars":"🌠","sparkler":"🎇","fireworks":"🎆","city_sunrise":"🌇","city_sunset":"🌆","cityscape":"🏙","night_with_stars":"🌃","milky_way":"🌌","bridge_at_night":"🌉","foggy":"🌁","watch":"⌚️","iphone":"📱","calling":"📲","computer":"💻","keyboard":"⌨️","desktop_computer":"🖥","printer":"🖨","computer_mouse":"🖱","trackball":"🖲","joystick":"🕹","clamp":"🗜","minidisc":"💽","floppy_disk":"💾","cd":"💿","dvd":"📀","vhs":"📼","camera":"📷","camera_flash":"📸","video_camera":"📹","movie_camera":"🎥","film_projector":"📽","film_strip":"🎞","telephone_receiver":"📞","phone":"☎️","telephone":"☎️","pager":"📟","fax":"📠","tv":"📺","radio":"📻","studio_microphone":"🎙","level_slider":"🎚","control_knobs":"🎛","stopwatch":"⏱","timer_clock":"⏲","alarm_clock":"⏰","mantelpiece_clock":"🕰","hourglass":"⌛️","hourglass_flowing_sand":"⏳","satellite":"📡","battery":"🔋","electric_plug":"🔌","bulb":"💡","flashlight":"🔦","candle":"🕯","wastebasket":"🗑","oil_drum":"🛢","money_with_wings":"💸","dollar":"💵","yen":"💴","euro":"💶","pound":"💷","moneybag":"💰","credit_card":"💳","gem":"💎","balance_scale":"⚖️","wrench":"🔧","hammer":"🔨","hammer_and_pick":"⚒","hammer_and_wrench":"🛠","pick":"⛏","nut_and_bolt":"🔩","gear":"⚙️","chains":"⛓","gun":"🔫","bomb":"💣","hocho":"🔪","knife":"🔪","dagger":"🗡","crossed_swords":"⚔️","shield":"🛡","smoking":"🚬","coffin":"⚰️","funeral_urn":"⚱️","amphora":"🏺","crystal_ball":"🔮","prayer_beads":"📿","barber":"💈","alembic":"⚗️","telescope":"🔭","microscope":"🔬","hole":"🕳","pill":"💊","syringe":"💉","thermometer":"🌡","toilet":"🚽","potable_water":"🚰","shower":"🚿","bathtub":"🛁","bath":"🛀","bellhop_bell":"🛎","key":"🔑","old_key":"🗝","door":"🚪","couch_and_lamp":"🛋","bed":"🛏","sleeping_bed":"🛌","framed_picture":"🖼","shopping":"🛍","shopping_cart":"🛒","gift":"🎁","balloon":"🎈","flags":"🎏","ribbon":"🎀","confetti_ball":"🎊","tada":"🎉","dolls":"🎎","izakaya_lantern":"🏮","lantern":"🏮","wind_chime":"🎐","email":"✉️","envelope":"✉️","envelope_with_arrow":"📩","incoming_envelope":"📨","e-mail":"📧","love_letter":"💌","inbox_tray":"📥","outbox_tray":"📤","package":"📦","label":"🏷","mailbox_closed":"📪","mailbox":"📫","mailbox_with_mail":"📬","mailbox_with_no_mail":"📭","postbox":"📮","postal_horn":"📯","scroll":"📜","page_with_curl":"📃","page_facing_up":"📄","bookmark_tabs":"📑","bar_chart":"📊","chart_with_upwards_trend":"📈","chart_with_downwards_trend":"📉","spiral_notepad":"🗒","spiral_calendar":"🗓","calendar":"📆","date":"📅","card_index":"📇","card_file_box":"🗃","ballot_box":"🗳","file_cabinet":"🗄","clipboard":"📋","file_folder":"📁","open_file_folder":"📂","card_index_dividers":"🗂","newspaper_roll":"🗞","newspaper":"📰","notebook":"📓","notebook_with_decorative_cover":"📔","ledger":"📒","closed_book":"📕","green_book":"📗","blue_book":"📘","orange_book":"📙","books":"📚","book":"📖","open_book":"📖","bookmark":"🔖","link":"🔗","paperclip":"📎","paperclips":"🖇","triangular_ruler":"📐","straight_ruler":"📏","pushpin":"📌","round_pushpin":"📍","scissors":"✂️","pen":"🖊","fountain_pen":"🖋","black_nib":"✒️","paintbrush":"🖌","crayon":"🖍","memo":"📝","pencil":"📝","pencil2":"✏️","mag":"🔍","mag_right":"🔎","lock_with_ink_pen":"🔏","closed_lock_with_key":"🔐","lock":"🔒","unlock":"🔓","heart":"❤️","yellow_heart":"💛","green_heart":"💚","blue_heart":"💙","purple_heart":"💜","black_heart":"🖤","broken_heart":"💔","heavy_heart_exclamation":"❣️","two_hearts":"💕","revolving_hearts":"💞","heartbeat":"💓","heartpulse":"💗","sparkling_heart":"💖","cupid":"💘","gift_heart":"💝","heart_decoration":"💟","peace_symbol":"☮️","latin_cross":"✝️","star_and_crescent":"☪️","om":"🕉","wheel_of_dharma":"☸️","star_of_david":"✡️","six_pointed_star":"🔯","menorah":"🕎","yin_yang":"☯️","orthodox_cross":"☦️","place_of_worship":"🛐","ophiuchus":"⛎","aries":"♈️","taurus":"♉️","gemini":"♊️","cancer":"♋️","leo":"♌️","virgo":"♍️","libra":"♎️","scorpius":"♏️","sagittarius":"♐️","capricorn":"♑️","aquarius":"♒️","pisces":"♓️","id":"🆔","atom_symbol":"⚛️","accept":"🉑","radioactive":"☢️","biohazard":"☣️","mobile_phone_off":"📴","vibration_mode":"📳","eight_pointed_black_star":"✴️","vs":"🆚","white_flower":"💮","ideograph_advantage":"🉐","secret":"㊙️","congratulations":"㊗️","u6e80":"🈵","a":"🅰️","b":"🅱️","ab":"🆎","cl":"🆑","o2":"🅾️","sos":"🆘","x":"❌","o":"⭕️","stop_sign":"🛑","no_entry":"⛔️","name_badge":"📛","no_entry_sign":"🚫","anger":"💢","hotsprings":"♨️","no_pedestrians":"🚷","do_not_litter":"🚯","no_bicycles":"🚳","non-potable_water":"🚱","underage":"🔞","no_mobile_phones":"📵","no_smoking":"🚭","exclamation":"❗️","heavy_exclamation_mark":"❗️","grey_exclamation":"❕","question":"❓","grey_question":"❔","bangbang":"‼️","interrobang":"⁉️","low_brightness":"🔅","high_brightness":"🔆","part_alternation_mark":"〽️","warning":"⚠️","children_crossing":"🚸","trident":"🔱","fleur_de_lis":"⚜️","beginner":"🔰","recycle":"♻️","white_check_mark":"✅","chart":"💹","sparkle":"❇️","eight_spoked_asterisk":"✳️","negative_squared_cross_mark":"❎","globe_with_meridians":"🌐","diamond_shape_with_a_dot_inside":"💠","m":"Ⓜ️","cyclone":"🌀","zzz":"💤","atm":"🏧","wc":"🚾","wheelchair":"♿️","parking":"🅿️","sa":"🈂️","passport_control":"🛂","customs":"🛃","baggage_claim":"🛄","left_luggage":"🛅","mens":"🚹","womens":"🚺","baby_symbol":"🚼","restroom":"🚻","put_litter_in_its_place":"🚮","cinema":"🎦","signal_strength":"📶","koko":"🈁","symbols":"🔣","information_source":"ℹ️","abc":"🔤","abcd":"🔡","capital_abcd":"🔠","ng":"🆖","ok":"🆗","up":"🆙","cool":"🆒","new":"🆕","free":"🆓","zero":"0️⃣","one":"1️⃣","two":"2️⃣","three":"3️⃣","four":"4️⃣","five":"5️⃣","six":"6️⃣","seven":"7️⃣","eight":"8️⃣","nine":"9️⃣","keycap_ten":"🔟","hash":"#️⃣","asterisk":"*️⃣","arrow_forward":"▶️","pause_button":"⏸","play_or_pause_button":"⏯","stop_button":"⏹","record_button":"⏺","next_track_button":"⏭","previous_track_button":"⏮","fast_forward":"⏩","rewind":"⏪","arrow_double_up":"⏫","arrow_double_down":"⏬","arrow_backward":"◀️","arrow_up_small":"🔼","arrow_down_small":"🔽","arrow_right":"➡️","arrow_left":"⬅️","arrow_up":"⬆️","arrow_down":"⬇️","arrow_upper_right":"↗️","arrow_lower_right":"↘️","arrow_lower_left":"↙️","arrow_upper_left":"↖️","arrow_up_down":"↕️","left_right_arrow":"↔️","arrow_right_hook":"↪️","leftwards_arrow_with_hook":"↩️","arrow_heading_up":"⤴️","arrow_heading_down":"⤵️","twisted_rightwards_arrows":"🔀","repeat":"🔁","repeat_one":"🔂","arrows_counterclockwise":"🔄","arrows_clockwise":"🔃","musical_note":"🎵","notes":"🎶","heavy_plus_sign":"➕","heavy_minus_sign":"➖","heavy_division_sign":"➗","heavy_multiplication_x":"✖️","heavy_dollar_sign":"💲","currency_exchange":"💱","tm":"™️","copyright":"©️","registered":"®️","wavy_dash":"〰️","curly_loop":"➰","loop":"➿","end":"🔚","back":"🔙","on":"🔛","top":"🔝","soon":"🔜","heavy_check_mark":"✔️","ballot_box_with_check":"☑️","radio_button":"🔘","white_circle":"⚪️","black_circle":"⚫️","red_circle":"🔴","large_blue_circle":"🔵","small_red_triangle":"🔺","small_red_triangle_down":"🔻","small_orange_diamond":"🔸","small_blue_diamond":"🔹","large_orange_diamond":"🔶","large_blue_diamond":"🔷","white_square_button":"🔳","black_square_button":"🔲","black_small_square":"▪️","white_small_square":"▫️","black_medium_small_square":"◾️","white_medium_small_square":"◽️","black_medium_square":"◼️","white_medium_square":"◻️","black_large_square":"⬛️","white_large_square":"⬜️","speaker":"🔈","mute":"🔇","sound":"🔉","loud_sound":"🔊","bell":"🔔","no_bell":"🔕","mega":"📣","loudspeaker":"📢","eye_speech_bubble":"👁‍🗨","speech_balloon":"💬","thought_balloon":"💭","right_anger_bubble":"🗯","spades":"♠️","clubs":"♣️","hearts":"♥️","diamonds":"♦️","black_joker":"🃏","flower_playing_cards":"🎴","mahjong":"🀄️","clock1":"🕐","clock2":"🕑","clock3":"🕒","clock4":"🕓","clock5":"🕔","clock6":"🕕","clock7":"🕖","clock8":"🕗","clock9":"🕘","clock10":"🕙","clock11":"🕚","clock12":"🕛","clock130":"🕜","clock230":"🕝","clock330":"🕞","clock430":"🕟","clock530":"🕠","clock630":"🕡","clock730":"🕢","clock830":"🕣","clock930":"🕤","clock1030":"🕥","clock1130":"🕦","clock1230":"🕧","white_flag":"🏳️","black_flag":"🏴","checkered_flag":"🏁","triangular_flag_on_post":"🚩","rainbow_flag":"🏳️‍🌈","afghanistan":"🇦🇫","aland_islands":"🇦🇽","albania":"🇦🇱","algeria":"🇩🇿","american_samoa":"🇦🇸","andorra":"🇦🇩","angola":"🇦🇴","anguilla":"🇦🇮","antarctica":"🇦🇶","antigua_barbuda":"🇦🇬","argentina":"🇦🇷","armenia":"🇦🇲","aruba":"🇦🇼","australia":"🇦🇺","austria":"🇦🇹","azerbaijan":"🇦🇿","bahamas":"🇧🇸","bahrain":"🇧🇭","bangladesh":"🇧🇩","barbados":"🇧🇧","belarus":"🇧🇾","belgium":"🇧🇪","belize":"🇧🇿","benin":"🇧🇯","bermuda":"🇧🇲","bhutan":"🇧🇹","bolivia":"🇧🇴","caribbean_netherlands":"🇧🇶","bosnia_herzegovina":"🇧🇦","botswana":"🇧🇼","brazil":"🇧🇷","british_indian_ocean_territory":"🇮🇴","british_virgin_islands":"🇻🇬","brunei":"🇧🇳","bulgaria":"🇧🇬","burkina_faso":"🇧🇫","burundi":"🇧🇮","cape_verde":"🇨🇻","cambodia":"🇰🇭","cameroon":"🇨🇲","canada":"🇨🇦","canary_islands":"🇮🇨","cayman_islands":"🇰🇾","central_african_republic":"🇨🇫","chad":"🇹🇩","chile":"🇨🇱","cn":"🇨🇳","christmas_island":"🇨🇽","cocos_islands":"🇨🇨","colombia":"🇨🇴","comoros":"🇰🇲","congo_brazzaville":"🇨🇬","congo_kinshasa":"🇨🇩","cook_islands":"🇨🇰","costa_rica":"🇨🇷","cote_divoire":"🇨🇮","croatia":"🇭🇷","cuba":"🇨🇺","curacao":"🇨🇼","cyprus":"🇨🇾","czech_republic":"🇨🇿","denmark":"🇩🇰","djibouti":"🇩🇯","dominica":"🇩🇲","dominican_republic":"🇩🇴","ecuador":"🇪🇨","egypt":"🇪🇬","el_salvador":"🇸🇻","equatorial_guinea":"🇬🇶","eritrea":"🇪🇷","estonia":"🇪🇪","ethiopia":"🇪🇹","eu":"🇪🇺","european_union":"🇪🇺","falkland_islands":"🇫🇰","faroe_islands":"🇫🇴","fiji":"🇫🇯","finland":"🇫🇮","fr":"🇫🇷","french_guiana":"🇬🇫","french_polynesia":"🇵🇫","french_southern_territories":"🇹🇫","gabon":"🇬🇦","gambia":"🇬🇲","georgia":"🇬🇪","de":"🇩🇪","ghana":"🇬🇭","gibraltar":"🇬🇮","greece":"🇬🇷","greenland":"🇬🇱","grenada":"🇬🇩","guadeloupe":"🇬🇵","guam":"🇬🇺","guatemala":"🇬🇹","guernsey":"🇬🇬","guinea":"🇬🇳","guinea_bissau":"🇬🇼","guyana":"🇬🇾","haiti":"🇭🇹","honduras":"🇭🇳","hong_kong":"🇭🇰","hungary":"🇭🇺","iceland":"🇮🇸","india":"🇮🇳","indonesia":"🇮🇩","iran":"🇮🇷","iraq":"🇮🇶","ireland":"🇮🇪","isle_of_man":"🇮🇲","israel":"🇮🇱","it":"🇮🇹","jamaica":"🇯🇲","jp":"🇯🇵","crossed_flags":"🎌","jersey":"🇯🇪","jordan":"🇯🇴","kazakhstan":"🇰🇿","kenya":"🇰🇪","kiribati":"🇰🇮","kosovo":"🇽🇰","kuwait":"🇰🇼","kyrgyzstan":"🇰🇬","laos":"🇱🇦","latvia":"🇱🇻","lebanon":"🇱🇧","lesotho":"🇱🇸","liberia":"🇱🇷","libya":"🇱🇾","liechtenstein":"🇱🇮","lithuania":"🇱🇹","luxembourg":"🇱🇺","macau":"🇲🇴","macedonia":"🇲🇰","madagascar":"🇲🇬","malawi":"🇲🇼","malaysia":"🇲🇾","maldives":"🇲🇻","mali":"🇲🇱","malta":"🇲🇹","marshall_islands":"🇲🇭","martinique":"🇲🇶","mauritania":"🇲🇷","mauritius":"🇲🇺","mayotte":"🇾🇹","mexico":"🇲🇽","micronesia":"🇫🇲","moldova":"🇲🇩","monaco":"🇲🇨","mongolia":"🇲🇳","montenegro":"🇲🇪","montserrat":"🇲🇸","morocco":"🇲🇦","mozambique":"🇲🇿","myanmar":"🇲🇲","namibia":"🇳🇦","nauru":"🇳🇷","nepal":"🇳🇵","netherlands":"🇳🇱","new_caledonia":"🇳🇨","new_zealand":"🇳🇿","nicaragua":"🇳🇮","niger":"🇳🇪","nigeria":"🇳🇬","niue":"🇳🇺","norfolk_island":"🇳🇫","northern_mariana_islands":"🇲🇵","north_korea":"🇰🇵","norway":"🇳🇴","oman":"🇴🇲","pakistan":"🇵🇰","palau":"🇵🇼","palestinian_territories":"🇵🇸","panama":"🇵🇦","papua_new_guinea":"🇵🇬","paraguay":"🇵🇾","peru":"🇵🇪","philippines":"🇵🇭","pitcairn_islands":"🇵🇳","poland":"🇵🇱","portugal":"🇵🇹","puerto_rico":"🇵🇷","qatar":"🇶🇦","reunion":"🇷🇪","romania":"🇷🇴","ru":"🇷🇺","rwanda":"🇷🇼","st_barthelemy":"🇧🇱","st_helena":"🇸🇭","st_kitts_nevis":"🇰🇳","st_lucia":"🇱🇨","st_pierre_miquelon":"🇵🇲","st_vincent_grenadines":"🇻🇨","samoa":"🇼🇸","san_marino":"🇸🇲","sao_tome_principe":"🇸🇹","saudi_arabia":"🇸🇦","senegal":"🇸🇳","serbia":"🇷🇸","seychelles":"🇸🇨","sierra_leone":"🇸🇱","singapore":"🇸🇬","sint_maarten":"🇸🇽","slovakia":"🇸🇰","slovenia":"🇸🇮","solomon_islands":"🇸🇧","somalia":"🇸🇴","south_africa":"🇿🇦","south_georgia_south_sandwich_islands":"🇬🇸","kr":"🇰🇷","south_sudan":"🇸🇸","es":"🇪🇸","sri_lanka":"🇱🇰","sudan":"🇸🇩","suriname":"🇸🇷","swaziland":"🇸🇿","sweden":"🇸🇪","switzerland":"🇨🇭","syria":"🇸🇾","taiwan":"🇹🇼","tajikistan":"🇹🇯","tanzania":"🇹🇿","thailand":"🇹🇭","timor_leste":"🇹🇱","togo":"🇹🇬","tokelau":"🇹🇰","tonga":"🇹🇴","trinidad_tobago":"🇹🇹","tunisia":"🇹🇳","tr":"🇹🇷","turkmenistan":"🇹🇲","turks_caicos_islands":"🇹🇨","tuvalu":"🇹🇻","uganda":"🇺🇬","ukraine":"🇺🇦","united_arab_emirates":"🇦🇪","gb":"🇬🇧","uk":"🇬🇧","us":"🇺🇸","us_virgin_islands":"🇻🇮","uruguay":"🇺🇾","uzbekistan":"🇺🇿","vanuatu":"🇻🇺","vatican_city":"🇻🇦","venezuela":"🇻🇪","vietnam":"🇻🇳","wallis_futuna":"🇼🇫","western_sahara":"🇪🇭","yemen":"🇾🇪","zambia":"🇿🇲","zimbabwe":"🇿🇼"}

/***/ }),
/* 129 */
/***/ (function(module, exports) {

	// Emoticons -> Emoji mapping.
	//
	// (!) Some patterns skipped, to avoid collisions
	// without increase matcher complicity. Than can change in future.
	//
	// Places to look for more emoticons info:
	//
	// - http://en.wikipedia.org/wiki/List_of_emoticons#Western
	// - https://github.com/wooorm/emoticon/blob/master/Support.md
	// - http://factoryjoe.com/projects/emoticons/
	//
	'use strict';

	module.exports = {
	  angry:            [ '>:(', '>:-(' ],
	  blush:            [ ':")', ':-")' ],
	  broken_heart:     [ '</3', '<\\3' ],
	  // :\ and :-\ not used because of conflict with markdown escaping
	  confused:         [ ':/', ':-/' ], // twemoji shows question
	  cry:              [ ":'(", ":'-(", ':,(', ':,-(' ],
	  frowning:         [ ':(', ':-(' ],
	  heart:            [ '<3' ],
	  imp:              [ ']:(', ']:-(' ],
	  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],
	  joy:              [ ":')", ":'-)", ':,)', ':,-)', ":'D", ":'-D", ':,D', ':,-D' ],
	  kissing:          [ ':*', ':-*' ],
	  laughing:         [ 'x-)', 'X-)' ],
	  neutral_face:     [ ':|', ':-|' ],
	  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],
	  rage:             [ ':@', ':-@' ],
	  smile:            [ ':D', ':-D' ],
	  smiley:           [ ':)', ':-)' ],
	  smiling_imp:      [ ']:)', ']:-)' ],
	  sob:              [ ":,'(", ":,'-(", ';(', ';-(' ],
	  stuck_out_tongue: [ ':P', ':-P' ],
	  sunglasses:       [ '8-)', 'B-)' ],
	  sweat:            [ ',:(', ',:-(' ],
	  sweat_smile:      [ ',:)', ',:-)' ],
	  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],
	  wink:             [ ';)', ';-)' ]
	};


/***/ }),
/* 130 */
/***/ (function(module, exports) {

	'use strict';

	module.exports = function emoji_html(tokens, idx /*, options, env */) {
	  return tokens[idx].content;
	};


/***/ }),
/* 131 */
/***/ (function(module, exports) {

	// Emojies & shortcuts replacement logic.
	//
	// Note: In theory, it could be faster to parse :smile: in inline chain and
	// leave only shortcuts here. But, who care...
	//

	'use strict';


	module.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {
	  var arrayReplaceAt = md.utils.arrayReplaceAt,
	      ucm = md.utils.lib.ucmicro,
	      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));

	  function splitTextToken(text, level, Token) {
	    var token, last_pos = 0, nodes = [];

	    text.replace(replaceRE, function (match, offset, src) {
	      var emoji_name;
	      // Validate emoji name
	      if (shortcuts.hasOwnProperty(match)) {
	        // replace shortcut with full name
	        emoji_name = shortcuts[match];

	        // Don't allow letters before any shortcut (as in no ":/" in http://)
	        if (offset > 0 && !ZPCc.test(src[offset - 1])) {
	          return;
	        }

	        // Don't allow letters after any shortcut
	        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {
	          return;
	        }
	      } else {
	        emoji_name = match.slice(1, -1);
	      }

	      // Add new tokens to pending list
	      if (offset > last_pos) {
	        token         = new Token('text', '', 0);
	        token.content = text.slice(last_pos, offset);
	        nodes.push(token);
	      }

	      token         = new Token('emoji', '', 0);
	      token.markup  = emoji_name;
	      token.content = emojies[emoji_name];
	      nodes.push(token);

	      last_pos = offset + match.length;
	    });

	    if (last_pos < text.length) {
	      token         = new Token('text', '', 0);
	      token.content = text.slice(last_pos);
	      nodes.push(token);
	    }

	    return nodes;
	  }

	  return function emoji_replace(state) {
	    var i, j, l, tokens, token,
	        blockTokens = state.tokens,
	        autolinkLevel = 0;

	    for (j = 0, l = blockTokens.length; j < l; j++) {
	      if (blockTokens[j].type !== 'inline') { continue; }
	      tokens = blockTokens[j].children;

	      // We scan from the end, to keep position when new tags added.
	      // Use reversed logic in links start/end match
	      for (i = tokens.length - 1; i >= 0; i--) {
	        token = tokens[i];

	        if (token.type === 'link_open' || token.type === 'link_close') {
	          if (token.info === 'auto') { autolinkLevel -= token.nesting; }
	        }

	        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {
	          // replace current node
	          blockTokens[j].children = tokens = arrayReplaceAt(
	            tokens, i, splitTextToken(token.content, token.level, state.Token)
	          );
	        }
	      }
	    }
	  };
	};


/***/ }),
/* 132 */
/***/ (function(module, exports) {

	// Convert input options to more useable format
	// and compile search regexp

	'use strict';


	function quoteRE(str) {
	  return str.replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&');
	}


	module.exports = function normalize_opts(options) {
	  var emojies = options.defs,
	      shortcuts;

	  // Filter emojies by whitelist, if needed
	  if (options.enabled.length) {
	    emojies = Object.keys(emojies).reduce(function (acc, key) {
	      if (options.enabled.indexOf(key) >= 0) {
	        acc[key] = emojies[key];
	      }
	      return acc;
	    }, {});
	  }

	  // Flatten shortcuts to simple object: { alias: emoji_name }
	  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {
	    // Skip aliases for filtered emojies, to reduce regexp
	    if (!emojies[key]) { return acc; }

	    if (Array.isArray(options.shortcuts[key])) {
	      options.shortcuts[key].forEach(function (alias) {
	        acc[alias] = key;
	      });
	      return acc;
	    }

	    acc[options.shortcuts[key]] = key;
	    return acc;
	  }, {});

	  // Compile regexp
	  var names = Object.keys(emojies)
	                .map(function (name) { return ':' + name + ':'; })
	                .concat(Object.keys(shortcuts))
	                .sort()
	                .reverse()
	                .map(function (name) { return quoteRE(name); })
	                .join('|');
	  var scanRE = RegExp(names);
	  var replaceRE = RegExp(names, 'g');

	  return {
	    defs: emojies,
	    shortcuts: shortcuts,
	    scanRE: scanRE,
	    replaceRE: replaceRE
	  };
	};


/***/ }),
/* 133 */
/***/ (function(module, exports) {

	// Process ~subscript~

	'use strict';

	// same as UNESCAPE_MD_RE plus a space
	var UNESCAPE_RE = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;


	function subscript(state, silent) {
	  var found,
	      content,
	      token,
	      max = state.posMax,
	      start = state.pos;

	  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode
	  if (start + 2 >= max) { return false; }

	  state.pos = start + 1;

	  while (state.pos < max) {
	    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {
	      found = true;
	      break;
	    }

	    state.md.inline.skipToken(state);
	  }

	  if (!found || start + 1 === state.pos) {
	    state.pos = start;
	    return false;
	  }

	  content = state.src.slice(start + 1, state.pos);

	  // don't allow unescaped spaces/newlines inside
	  if (content.match(/(^|[^\\])(\\\\)*\s/)) {
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + 1;

	  // Earlier we checked !silent, but this implementation does not need it
	  token         = state.push('sub_open', 'sub', 1);
	  token.markup  = '~';

	  token         = state.push('text', '', 0);
	  token.content = content.replace(UNESCAPE_RE, '$1');

	  token         = state.push('sub_close', 'sub', -1);
	  token.markup  = '~';

	  state.pos = state.posMax + 1;
	  state.posMax = max;
	  return true;
	}


	module.exports = function sub_plugin(md) {
	  md.inline.ruler.after('emphasis', 'sub', subscript);
	};


/***/ }),
/* 134 */
/***/ (function(module, exports) {

	// Process ^superscript^

	'use strict';

	// same as UNESCAPE_MD_RE plus a space
	var UNESCAPE_RE = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;

	function superscript(state, silent) {
	  var found,
	      content,
	      token,
	      max = state.posMax,
	      start = state.pos;

	  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }
	  if (silent) { return false; } // don't run any pairs in validation mode
	  if (start + 2 >= max) { return false; }

	  state.pos = start + 1;

	  while (state.pos < max) {
	    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {
	      found = true;
	      break;
	    }

	    state.md.inline.skipToken(state);
	  }

	  if (!found || start + 1 === state.pos) {
	    state.pos = start;
	    return false;
	  }

	  content = state.src.slice(start + 1, state.pos);

	  // don't allow unescaped spaces/newlines inside
	  if (content.match(/(^|[^\\])(\\\\)*\s/)) {
	    state.pos = start;
	    return false;
	  }

	  // found!
	  state.posMax = state.pos;
	  state.pos = start + 1;

	  // Earlier we checked !silent, but this implementation does not need it
	  token         = state.push('sup_open', 'sup', 1);
	  token.markup  = '^';

	  token         = state.push('text', '', 0);
	  token.content = content.replace(UNESCAPE_RE, '$1');

	  token         = state.push('sup_close', 'sup', -1);
	  token.markup  = '^';

	  state.pos = state.posMax + 1;
	  state.posMax = max;
	  return true;
	}


	module.exports = function sup_plugin(md) {
	  md.inline.ruler.after('emphasis', 'sup', superscript);
	};


/***/ }),
/* 135 */
/***/ (function(module, exports) {

	// Process footnotes
	//
	'use strict';

	////////////////////////////////////////////////////////////////////////////////
	// Renderer partials

	function _footnote_ref(tokens, idx) {
	  var n = Number(tokens[idx].meta.id + 1).toString();
	  var id = 'fnref' + n;
	  if (tokens[idx].meta.subId > 0) {
	    id += ':' + tokens[idx].meta.subId;
	  }
	  return '<sup class="footnote-ref"><a href="#fn' + n + '" id="' + id + '">[' + n + ']</a></sup>';
	}
	function _footnote_block_open(tokens, idx, options) {
	  return (options.xhtmlOut ? '<hr class="footnotes-sep" />\n' : '<hr class="footnotes-sep">\n') +
	         '<section class="footnotes">\n' +
	         '<ol class="footnotes-list">\n';
	}
	function _footnote_block_close() {
	  return '</ol>\n</section>\n';
	}
	function _footnote_open(tokens, idx) {
	  var id = Number(tokens[idx].meta.id + 1).toString();
	  return '<li id="fn' + id + '"  class="footnote-item">';
	}
	function _footnote_close() {
	  return '</li>\n';
	}
	function _footnote_anchor(tokens, idx) {
	  var n = Number(tokens[idx].meta.id + 1).toString();
	  var id = 'fnref' + n;
	  if (tokens[idx].meta.subId > 0) {
	    id += ':' + tokens[idx].meta.subId;
	  }
	  return ' <a href="#' + id + '" class="footnote-backref">\u21a9</a>'; /* ↩ */
	}

	////////////////////////////////////////////////////////////////////////////////


	module.exports = function sub_plugin(md) {
	  var parseLinkLabel = md.helpers.parseLinkLabel,
	      isSpace = md.utils.isSpace;

	  md.renderer.rules.footnote_ref          = _footnote_ref;
	  md.renderer.rules.footnote_block_open   = _footnote_block_open;
	  md.renderer.rules.footnote_block_close  = _footnote_block_close;
	  md.renderer.rules.footnote_open         = _footnote_open;
	  md.renderer.rules.footnote_close        = _footnote_close;
	  md.renderer.rules.footnote_anchor       = _footnote_anchor;

	  // Process footnote block definition
	  function footnote_def(state, startLine, endLine, silent) {
	    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,
	        initial, offset, ch, posAfterColon,
	        start = state.bMarks[startLine] + state.tShift[startLine],
	        max = state.eMarks[startLine];

	    // line should be at least 5 chars - "[^x]:"
	    if (start + 4 > max) { return false; }

	    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }
	    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }

	    for (pos = start + 2; pos < max; pos++) {
	      if (state.src.charCodeAt(pos) === 0x20) { return false; }
	      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {
	        break;
	      }
	    }

	    if (pos === start + 2) { return false; } // no empty footnote labels
	    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }
	    if (silent) { return true; }
	    pos++;

	    if (!state.env.footnotes) { state.env.footnotes = {}; }
	    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }
	    label = state.src.slice(start + 2, pos - 2);
	    state.env.footnotes.refs[':' + label] = -1;

	    token       = new state.Token('footnote_reference_open', '', 1);
	    token.meta  = { label: label };
	    token.level = state.level++;
	    state.tokens.push(token);

	    oldBMark = state.bMarks[startLine];
	    oldTShift = state.tShift[startLine];
	    oldSCount = state.sCount[startLine];
	    oldParentType = state.parentType;

	    posAfterColon = pos;
	    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);

	    while (pos < max) {
	      ch = state.src.charCodeAt(pos);

	      if (isSpace(ch)) {
	        if (ch === 0x09) {
	          offset += 4 - offset % 4;
	        } else {
	          offset++;
	        }
	      } else {
	        break;
	      }

	      pos++;
	    }

	    state.tShift[startLine] = pos - posAfterColon;
	    state.sCount[startLine] = offset - initial;

	    state.bMarks[startLine] = posAfterColon;
	    state.blkIndent += 4;
	    state.parentType = 'footnote';

	    if (state.sCount[startLine] < state.blkIndent) {
	      state.sCount[startLine] += state.blkIndent;
	    }

	    state.md.block.tokenize(state, startLine, endLine, true);

	    state.parentType = oldParentType;
	    state.blkIndent -= 4;
	    state.tShift[startLine] = oldTShift;
	    state.sCount[startLine] = oldSCount;
	    state.bMarks[startLine] = oldBMark;

	    token       = new state.Token('footnote_reference_close', '', -1);
	    token.level = --state.level;
	    state.tokens.push(token);

	    return true;
	  }

	  // Process inline footnotes (^[...])
	  function footnote_inline(state, silent) {
	    var labelStart,
	        labelEnd,
	        footnoteId,
	        token,
	        tokens,
	        max = state.posMax,
	        start = state.pos;

	    if (start + 2 >= max) { return false; }
	    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }
	    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }

	    labelStart = start + 2;
	    labelEnd = parseLinkLabel(state, start + 1);

	    // parser failed to find ']', so it's not a valid note
	    if (labelEnd < 0) { return false; }

	    // We found the end of the link, and know for a fact it's a valid link;
	    // so all that's left to do is to call tokenizer.
	    //
	    if (!silent) {
	      if (!state.env.footnotes) { state.env.footnotes = {}; }
	      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }
	      footnoteId = state.env.footnotes.list.length;

	      state.md.inline.parse(
	        state.src.slice(labelStart, labelEnd),
	        state.md,
	        state.env,
	        tokens = []
	      );

	      token      = state.push('footnote_ref', '', 0);
	      token.meta = { id: footnoteId };

	      state.env.footnotes.list[footnoteId] = { tokens: tokens };
	    }

	    state.pos = labelEnd + 1;
	    state.posMax = max;
	    return true;
	  }

	  // Process footnote references ([^...])
	  function footnote_ref(state, silent) {
	    var label,
	        pos,
	        footnoteId,
	        footnoteSubId,
	        token,
	        max = state.posMax,
	        start = state.pos;

	    // should be at least 4 chars - "[^x]"
	    if (start + 3 > max) { return false; }

	    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }
	    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }
	    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }

	    for (pos = start + 2; pos < max; pos++) {
	      if (state.src.charCodeAt(pos) === 0x20) { return false; }
	      if (state.src.charCodeAt(pos) === 0x0A) { return false; }
	      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {
	        break;
	      }
	    }

	    if (pos === start + 2) { return false; } // no empty footnote labels
	    if (pos >= max) { return false; }
	    pos++;

	    label = state.src.slice(start + 2, pos - 1);
	    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }

	    if (!silent) {
	      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }

	      if (state.env.footnotes.refs[':' + label] < 0) {
	        footnoteId = state.env.footnotes.list.length;
	        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };
	        state.env.footnotes.refs[':' + label] = footnoteId;
	      } else {
	        footnoteId = state.env.footnotes.refs[':' + label];
	      }

	      footnoteSubId = state.env.footnotes.list[footnoteId].count;
	      state.env.footnotes.list[footnoteId].count++;

	      token      = state.push('footnote_ref', '', 0);
	      token.meta = { id: footnoteId, subId: footnoteSubId };
	    }

	    state.pos = pos;
	    state.posMax = max;
	    return true;
	  }

	  // Glue footnote tokens to end of token stream
	  function footnote_tail(state) {
	    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,
	        insideRef = false,
	        refTokens = {};

	    if (!state.env.footnotes) { return; }

	    state.tokens = state.tokens.filter(function(tok) {
	      if (tok.type === 'footnote_reference_open') {
	        insideRef = true;
	        current = [];
	        currentLabel = tok.meta.label;
	        return false;
	      }
	      if (tok.type === 'footnote_reference_close') {
	        insideRef = false;
	        // prepend ':' to avoid conflict with Object.prototype members
	        refTokens[':' + currentLabel] = current;
	        return false;
	      }
	      if (insideRef) { current.push(tok); }
	      return !insideRef;
	    });

	    if (!state.env.footnotes.list) { return; }
	    list = state.env.footnotes.list;

	    token = new state.Token('footnote_block_open', '', 1);
	    state.tokens.push(token);

	    for (i = 0, l = list.length; i < l; i++) {
	      token      = new state.Token('footnote_open', '', 1);
	      token.meta = { id: i };
	      state.tokens.push(token);

	      if (list[i].tokens) {
	        tokens = [];

	        token          = new state.Token('paragraph_open', 'p', 1);
	        token.block    = true;
	        tokens.push(token);

	        token          = new state.Token('inline', '', 0);
	        token.children = list[i].tokens;
	        token.content  = '';
	        tokens.push(token);

	        token          = new state.Token('paragraph_close', 'p', -1);
	        token.block    = true;
	        tokens.push(token);

	      } else if (list[i].label) {
	        tokens = refTokens[':' + list[i].label];
	      }

	      state.tokens = state.tokens.concat(tokens);
	      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {
	        lastParagraph = state.tokens.pop();
	      } else {
	        lastParagraph = null;
	      }

	      t = list[i].count > 0 ? list[i].count : 1;
	      for (j = 0; j < t; j++) {
	        token      = new state.Token('footnote_anchor', '', 0);
	        token.meta = { id: i, subId: j };
	        state.tokens.push(token);
	      }

	      if (lastParagraph) {
	        state.tokens.push(lastParagraph);
	      }

	      token = new state.Token('footnote_close', '', -1);
	      state.tokens.push(token);
	    }

	    token = new state.Token('footnote_block_close', '', -1);
	    state.tokens.push(token);
	  }

	  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });
	  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);
	  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);
	  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);
	};


/***/ }),
/* 136 */
/***/ (function(module, exports) {

	// Process definition lists
	//
	'use strict';


	module.exports = function deflist_plugin(md) {
	  var isSpace = md.utils.isSpace;

	  // Search `[:~][\n ]`, returns next pos after marker on success
	  // or -1 on fail.
	  function skipMarker(state, line) {
	    var pos, marker,
	        start = state.bMarks[line] + state.tShift[line],
	        max = state.eMarks[line];

	    if (start >= max) { return -1; }

	    // Check bullet
	    marker = state.src.charCodeAt(start++);
	    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }

	    pos = state.skipSpaces(start);

	    // require space after ":"
	    if (start === pos) { return -1; }

	    // no empty definitions, e.g. "  : "
	    if (pos >= max) { return -1; }

	    return start;
	  }

	  function markTightParagraphs(state, idx) {
	    var i, l,
	        level = state.level + 2;

	    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
	      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {
	        state.tokens[i + 2].hidden = true;
	        state.tokens[i].hidden = true;
	        i += 2;
	      }
	    }
	  }

	  function deflist(state, startLine, endLine, silent) {
	    var ch,
	        contentStart,
	        ddLine,
	        dtLine,
	        itemLines,
	        listLines,
	        listTokIdx,
	        max,
	        nextLine,
	        offset,
	        oldDDIndent,
	        oldIndent,
	        oldParentType,
	        oldSCount,
	        oldTShift,
	        oldTight,
	        pos,
	        prevEmptyEnd,
	        tight,
	        token;

	    if (silent) {
	      // quirk: validation mode validates a dd block only, not a whole deflist
	      if (state.ddIndent < 0) { return false; }
	      return skipMarker(state, startLine) >= 0;
	    }

	    nextLine = startLine + 1;
	    if (nextLine >= endLine) { return false; }

	    if (state.isEmpty(nextLine)) {
	      nextLine++;
	      if (nextLine >= endLine) { return false; }
	    }

	    if (state.sCount[nextLine] < state.blkIndent) { return false; }
	    contentStart = skipMarker(state, nextLine);
	    if (contentStart < 0) { return false; }

	    // Start list
	    listTokIdx = state.tokens.length;
	    tight = true;

	    token     = state.push('dl_open', 'dl', 1);
	    token.map = listLines = [ startLine, 0 ];

	    //
	    // Iterate list items
	    //

	    dtLine = startLine;
	    ddLine = nextLine;

	    // One definition list can contain multiple DTs,
	    // and one DT can be followed by multiple DDs.
	    //
	    // Thus, there is two loops here, and label is
	    // needed to break out of the second one
	    //
	    /*eslint no-labels:0,block-scoped-var:0*/
	    OUTER:
	    for (;;) {
	      prevEmptyEnd = false;

	      token          = state.push('dt_open', 'dt', 1);
	      token.map      = [ dtLine, dtLine ];

	      token          = state.push('inline', '', 0);
	      token.map      = [ dtLine, dtLine ];
	      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();
	      token.children = [];

	      token          = state.push('dt_close', 'dt', -1);

	      for (;;) {
	        token     = state.push('dd_open', 'dd', 1);
	        token.map = itemLines = [ nextLine, 0 ];

	        pos = contentStart;
	        max = state.eMarks[ddLine];
	        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);

	        while (pos < max) {
	          ch = state.src.charCodeAt(pos);

	          if (isSpace(ch)) {
	            if (ch === 0x09) {
	              offset += 4 - offset % 4;
	            } else {
	              offset++;
	            }
	          } else {
	            break;
	          }

	          pos++;
	        }

	        contentStart = pos;

	        oldTight = state.tight;
	        oldDDIndent = state.ddIndent;
	        oldIndent = state.blkIndent;
	        oldTShift = state.tShift[ddLine];
	        oldSCount = state.sCount[ddLine];
	        oldParentType = state.parentType;
	        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;
	        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];
	        state.sCount[ddLine] = offset;
	        state.tight = true;
	        state.parentType = 'deflist';

	        state.md.block.tokenize(state, ddLine, endLine, true);

	        // If any of list item is tight, mark list as tight
	        if (!state.tight || prevEmptyEnd) {
	          tight = false;
	        }
	        // Item become loose if finish with empty line,
	        // but we should filter last element, because it means list finish
	        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);

	        state.tShift[ddLine] = oldTShift;
	        state.sCount[ddLine] = oldSCount;
	        state.tight = oldTight;
	        state.parentType = oldParentType;
	        state.blkIndent = oldIndent;
	        state.ddIndent = oldDDIndent;

	        token = state.push('dd_close', 'dd', -1);

	        itemLines[1] = nextLine = state.line;

	        if (nextLine >= endLine) { break OUTER; }

	        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }
	        contentStart = skipMarker(state, nextLine);
	        if (contentStart < 0) { break; }

	        ddLine = nextLine;

	        // go to the next loop iteration:
	        // insert DD tag and repeat checking
	      }

	      if (nextLine >= endLine) { break; }
	      dtLine = nextLine;

	      if (state.isEmpty(dtLine)) { break; }
	      if (state.sCount[dtLine] < state.blkIndent) { break; }

	      ddLine = dtLine + 1;
	      if (ddLine >= endLine) { break; }
	      if (state.isEmpty(ddLine)) { ddLine++; }
	      if (ddLine >= endLine) { break; }

	      if (state.sCount[ddLine] < state.blkIndent) { break; }
	      contentStart = skipMarker(state, ddLine);
	      if (contentStart < 0) { break; }

	      // go to the next loop iteration:
	      // insert DT and DD tags and repeat checking
	    }

	    // Finilize list
	    token = state.push('dl_close', 'dl', -1);

	    listLines[1] = nextLine;

	    state.line = nextLine;

	    // mark paragraphs tight if needed
	    if (tight) {
	      markTightParagraphs(state, listTokIdx);
	    }

	    return true;
	  }


	  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference' ] });
	};


/***/ }),
/* 137 */
/***/ (function(module, exports) {

	// Enclose abbreviations in <abbr> tags
	//
	'use strict';


	module.exports = function sub_plugin(md) {
	  var escapeRE        = md.utils.escapeRE,
	      arrayReplaceAt  = md.utils.arrayReplaceAt;

	  // ASCII characters in Cc, Sc, Sm, Sk categories we should terminate on;
	  // you can check character classes here:
	  // http://www.unicode.org/Public/UNIDATA/UnicodeData.txt
	  var OTHER_CHARS      = ' \r\n$+<=>^`|~';

	  var UNICODE_PUNCT_RE = md.utils.lib.ucmicro.P.source;
	  var UNICODE_SPACE_RE = md.utils.lib.ucmicro.Z.source;


	  function abbr_def(state, startLine, endLine, silent) {
	    var label, title, ch, labelStart, labelEnd,
	        pos = state.bMarks[startLine] + state.tShift[startLine],
	        max = state.eMarks[startLine];

	    if (pos + 2 >= max) { return false; }

	    if (state.src.charCodeAt(pos++) !== 0x2A/* * */) { return false; }
	    if (state.src.charCodeAt(pos++) !== 0x5B/* [ */) { return false; }

	    labelStart = pos;

	    for (; pos < max; pos++) {
	      ch = state.src.charCodeAt(pos);
	      if (ch === 0x5B /* [ */) {
	        return false;
	      } else if (ch === 0x5D /* ] */) {
	        labelEnd = pos;
	        break;
	      } else if (ch === 0x5C /* \ */) {
	        pos++;
	      }
	    }

	    if (labelEnd < 0 || state.src.charCodeAt(labelEnd + 1) !== 0x3A/* : */) {
	      return false;
	    }

	    if (silent) { return true; }

	    label = state.src.slice(labelStart, labelEnd).replace(/\\(.)/g, '$1');
	    title = state.src.slice(labelEnd + 2, max).trim();
	    if (label.length === 0) { return false; }
	    if (title.length === 0) { return false; }
	    if (!state.env.abbreviations) { state.env.abbreviations = {}; }
	    // prepend ':' to avoid conflict with Object.prototype members
	    if (typeof state.env.abbreviations[':' + label] === 'undefined') {
	      state.env.abbreviations[':' + label] = title;
	    }

	    state.line = startLine + 1;
	    return true;
	  }


	  function abbr_replace(state) {
	    var i, j, l, tokens, token, text, nodes, pos, reg, m, regText, regSimple,
	        currentToken,
	        blockTokens = state.tokens;

	    if (!state.env.abbreviations) { return; }

	    regSimple = new RegExp('(?:' +
	      Object.keys(state.env.abbreviations).map(function (x) {
	        return x.substr(1);
	      }).sort(function (a, b) {
	        return b.length - a.length;
	      }).map(escapeRE).join('|') +
	    ')');

	    regText = '(^|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +
	                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])'
	            + '(' + Object.keys(state.env.abbreviations).map(function (x) {
	                      return x.substr(1);
	                    }).sort(function (a, b) {
	                      return b.length - a.length;
	                    }).map(escapeRE).join('|') + ')'
	            + '($|' + UNICODE_PUNCT_RE + '|' + UNICODE_SPACE_RE +
	                    '|[' + OTHER_CHARS.split('').map(escapeRE).join('') + '])';

	    reg = new RegExp(regText, 'g');

	    for (j = 0, l = blockTokens.length; j < l; j++) {
	      if (blockTokens[j].type !== 'inline') { continue; }
	      tokens = blockTokens[j].children;

	      // We scan from the end, to keep position when new tags added.
	      for (i = tokens.length - 1; i >= 0; i--) {
	        currentToken = tokens[i];
	        if (currentToken.type !== 'text') { continue; }

	        pos = 0;
	        text = currentToken.content;
	        reg.lastIndex = 0;
	        nodes = [];

	        // fast regexp run to determine whether there are any abbreviated words
	        // in the current token
	        if (!regSimple.test(text)) { continue; }

	        while ((m = reg.exec(text))) {
	          if (m.index > 0 || m[1].length > 0) {
	            token         = new state.Token('text', '', 0);
	            token.content = text.slice(pos, m.index + m[1].length);
	            nodes.push(token);
	          }

	          token         = new state.Token('abbr_open', 'abbr', 1);
	          token.attrs   = [ [ 'title', state.env.abbreviations[':' + m[2]] ] ];
	          nodes.push(token);

	          token         = new state.Token('text', '', 0);
	          token.content = m[2];
	          nodes.push(token);

	          token         = new state.Token('abbr_close', 'abbr', -1);
	          nodes.push(token);

	          reg.lastIndex -= m[3].length;
	          pos = reg.lastIndex;
	        }

	        if (!nodes.length) { continue; }

	        if (pos < text.length) {
	          token         = new state.Token('text', '', 0);
	          token.content = text.slice(pos);
	          nodes.push(token);
	        }

	        // replace current node
	        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);
	      }
	    }
	  }

	  md.block.ruler.before('reference', 'abbr_def', abbr_def, { alt: [ 'paragraph', 'reference' ] });

	  md.core.ruler.after('linkify', 'abbr_replace', abbr_replace);
	};


/***/ }),
/* 138 */
/***/ (function(module, exports) {

	'use strict';


	module.exports = function ins_plugin(md) {
	  // Insert each marker as a separate text token, and add it to delimiter list
	  //
	  function tokenize(state, silent) {
	    var i, scanned, token, len, ch,
	        start = state.pos,
	        marker = state.src.charCodeAt(start);

	    if (silent) { return false; }

	    if (marker !== 0x2B/* + */) { return false; }

	    scanned = state.scanDelims(state.pos, true);
	    len = scanned.length;
	    ch = String.fromCharCode(marker);

	    if (len < 2) { return false; }

	    if (len % 2) {
	      token         = state.push('text', '', 0);
	      token.content = ch;
	      len--;
	    }

	    for (i = 0; i < len; i += 2) {
	      token         = state.push('text', '', 0);
	      token.content = ch + ch;

	      state.delimiters.push({
	        marker: marker,
	        jump:   i,
	        token:  state.tokens.length - 1,
	        level:  state.level,
	        end:    -1,
	        open:   scanned.can_open,
	        close:  scanned.can_close
	      });
	    }

	    state.pos += scanned.length;

	    return true;
	  }


	  // Walk through delimiter list and replace text tokens with tags
	  //
	  function postProcess(state) {
	    var i, j,
	        startDelim,
	        endDelim,
	        token,
	        loneMarkers = [],
	        delimiters = state.delimiters,
	        max = state.delimiters.length;

	    for (i = 0; i < max; i++) {
	      startDelim = delimiters[i];

	      if (startDelim.marker !== 0x2B/* + */) {
	        continue;
	      }

	      if (startDelim.end === -1) {
	        continue;
	      }

	      endDelim = delimiters[startDelim.end];

	      token         = state.tokens[startDelim.token];
	      token.type    = 'ins_open';
	      token.tag     = 'ins';
	      token.nesting = 1;
	      token.markup  = '++';
	      token.content = '';

	      token         = state.tokens[endDelim.token];
	      token.type    = 'ins_close';
	      token.tag     = 'ins';
	      token.nesting = -1;
	      token.markup  = '++';
	      token.content = '';

	      if (state.tokens[endDelim.token - 1].type === 'text' &&
	          state.tokens[endDelim.token - 1].content === '+') {

	        loneMarkers.push(endDelim.token - 1);
	      }
	    }

	    // If a marker sequence has an odd number of characters, it's splitted
	    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the
	    // start of the sequence.
	    //
	    // So, we have to move all those markers after subsequent s_close tags.
	    //
	    while (loneMarkers.length) {
	      i = loneMarkers.pop();
	      j = i + 1;

	      while (j < state.tokens.length && state.tokens[j].type === 'ins_close') {
	        j++;
	      }

	      j--;

	      if (i !== j) {
	        token = state.tokens[j];
	        state.tokens[j] = state.tokens[i];
	        state.tokens[i] = token;
	      }
	    }
	  }

	  md.inline.ruler.before('emphasis', 'ins', tokenize);
	  md.inline.ruler2.before('emphasis', 'ins', postProcess);
	};


/***/ }),
/* 139 */
/***/ (function(module, exports) {

	'use strict';


	module.exports = function ins_plugin(md) {
	  // Insert each marker as a separate text token, and add it to delimiter list
	  //
	  function tokenize(state, silent) {
	    var i, scanned, token, len, ch,
	        start = state.pos,
	        marker = state.src.charCodeAt(start);

	    if (silent) { return false; }

	    if (marker !== 0x3D/* = */) { return false; }

	    scanned = state.scanDelims(state.pos, true);
	    len = scanned.length;
	    ch = String.fromCharCode(marker);

	    if (len < 2) { return false; }

	    if (len % 2) {
	      token         = state.push('text', '', 0);
	      token.content = ch;
	      len--;
	    }

	    for (i = 0; i < len; i += 2) {
	      token         = state.push('text', '', 0);
	      token.content = ch + ch;

	      state.delimiters.push({
	        marker: marker,
	        jump:   i,
	        token:  state.tokens.length - 1,
	        level:  state.level,
	        end:    -1,
	        open:   scanned.can_open,
	        close:  scanned.can_close
	      });
	    }

	    state.pos += scanned.length;

	    return true;
	  }


	  // Walk through delimiter list and replace text tokens with tags
	  //
	  function postProcess(state) {
	    var i, j,
	        startDelim,
	        endDelim,
	        token,
	        loneMarkers = [],
	        delimiters = state.delimiters,
	        max = state.delimiters.length;

	    for (i = 0; i < max; i++) {
	      startDelim = delimiters[i];

	      if (startDelim.marker !== 0x3D/* = */) {
	        continue;
	      }

	      if (startDelim.end === -1) {
	        continue;
	      }

	      endDelim = delimiters[startDelim.end];

	      token         = state.tokens[startDelim.token];
	      token.type    = 'mark_open';
	      token.tag     = 'mark';
	      token.nesting = 1;
	      token.markup  = '==';
	      token.content = '';

	      token         = state.tokens[endDelim.token];
	      token.type    = 'mark_close';
	      token.tag     = 'mark';
	      token.nesting = -1;
	      token.markup  = '==';
	      token.content = '';

	      if (state.tokens[endDelim.token - 1].type === 'text' &&
	          state.tokens[endDelim.token - 1].content === '=') {

	        loneMarkers.push(endDelim.token - 1);
	      }
	    }

	    // If a marker sequence has an odd number of characters, it's splitted
	    // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the
	    // start of the sequence.
	    //
	    // So, we have to move all those markers after subsequent s_close tags.
	    //
	    while (loneMarkers.length) {
	      i = loneMarkers.pop();
	      j = i + 1;

	      while (j < state.tokens.length && state.tokens[j].type === 'mark_close') {
	        j++;
	      }

	      j--;

	      if (i !== j) {
	        token = state.tokens[j];
	        state.tokens[j] = state.tokens[i];
	        state.tokens[i] = token;
	      }
	    }
	  }

	  md.inline.ruler.before('emphasis', 'mark', tokenize);
	  md.inline.ruler2.before('emphasis', 'mark', postProcess);
	};


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = _default;

	var _clone = _interopRequireDefault(__webpack_require__(141));

	var _uslug = _interopRequireDefault(__webpack_require__(146));

	var _token = _interopRequireDefault(__webpack_require__(89));

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

	function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

	function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

	function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

	function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var TOC = "@[toc]";
	var TOC_RE = /^@\[toc\]/im;

	var markdownItSecondInstance = function markdownItSecondInstance() {};

	var headingIds = {};
	var tocHtml = "";

	var repeat = function repeat(string, num) {
	  return new Array(num + 1).join(string);
	};

	var makeSafe = function makeSafe(string, headingIds, slugifyFn) {
	  var key = slugifyFn(string); // slugify

	  if (!headingIds[key]) {
	    headingIds[key] = 0;
	  }

	  headingIds[key]++;
	  return key + (headingIds[key] > 1 ? "-".concat(headingIds[key]) : "");
	};

	var space = function space() {
	  return _objectSpread({}, new _token.default("text", "", 0), {
	    content: " "
	  });
	};

	var renderAnchorLinkSymbol = function renderAnchorLinkSymbol(options) {
	  if (options.anchorLinkSymbolClassName) {
	    return [_objectSpread({}, new _token.default("span_open", "span", 1), {
	      attrs: [["class", options.anchorLinkSymbolClassName]]
	    }), _objectSpread({}, new _token.default("text", "", 0), {
	      content: options.anchorLinkSymbol
	    }), new _token.default("span_close", "span", -1)];
	  } else {
	    return [_objectSpread({}, new _token.default("text", "", 0), {
	      content: options.anchorLinkSymbol
	    })];
	  }
	};

	var renderAnchorLink = function renderAnchorLink(anchor, options, tokens, idx) {
	  var attrs = [];

	  if (options.anchorClassName != null) {
	    attrs.push(["class", options.anchorClassName]);
	  }

	  attrs.push(["href", "#".concat(anchor)]);

	  var openLinkToken = _objectSpread({}, new _token.default("link_open", "a", 1), {
	    attrs: attrs
	  });

	  var closeLinkToken = new _token.default("link_close", "a", -1);

	  if (options.wrapHeadingTextInAnchor) {
	    tokens[idx + 1].children.unshift(openLinkToken);
	    tokens[idx + 1].children.push(closeLinkToken);
	  } else {
	    var _tokens$children;

	    var linkTokens = [openLinkToken].concat(_toConsumableArray(renderAnchorLinkSymbol(options)), [closeLinkToken]); // `push` or `unshift` according to anchorLinkBefore option
	    // space is at the opposite side.

	    var actionOnArray = {
	      false: "push",
	      true: "unshift"
	    }; // insert space between anchor link and heading ?

	    if (options.anchorLinkSpace) {
	      linkTokens[actionOnArray[!options.anchorLinkBefore]](space());
	    }

	    (_tokens$children = tokens[idx + 1].children)[actionOnArray[options.anchorLinkBefore]].apply(_tokens$children, _toConsumableArray(linkTokens));
	  }
	};

	var treeToMarkdownBulletList = function treeToMarkdownBulletList(tree) {
	  var indent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
	  return tree.map(function (item) {
	    var indentation = "  ";
	    var node = "".concat(repeat(indentation, indent), "*");

	    if (item.heading.content) {
	      var contentWithoutAnchor = item.heading.content.replace(/\[([^\]]*)\]\([^)]*\)/g, "$1");
	      node += " " + "[".concat(contentWithoutAnchor, "](#").concat(item.heading.anchor, ")\n");
	    } else {
	      node += "\n";
	    }

	    if (item.nodes.length) {
	      node += treeToMarkdownBulletList(item.nodes, indent + 1);
	    }

	    return node;
	  }).join("");
	};

	var generateTocMarkdownFromArray = function generateTocMarkdownFromArray(headings, options) {
	  var tree = {
	    nodes: []
	  }; // create an ast

	  headings.forEach(function (heading) {
	    if (heading.level < options.tocFirstLevel || heading.level > options.tocLastLevel) {
	      return;
	    }

	    var i = 1;
	    var lastItem = tree;

	    for (; i < heading.level - options.tocFirstLevel + 1; i++) {
	      if (lastItem.nodes.length === 0) {
	        lastItem.nodes.push({
	          heading: {},
	          nodes: []
	        });
	      }

	      lastItem = lastItem.nodes[lastItem.nodes.length - 1];
	    }

	    lastItem.nodes.push({
	      heading: heading,
	      nodes: []
	    });
	  });
	  return treeToMarkdownBulletList(tree.nodes);
	};

	function _default(md, options) {
	  options = _objectSpread({
	    toc: true,
	    tocClassName: "markdownIt-TOC",
	    tocFirstLevel: 1,
	    tocLastLevel: 6,
	    tocCallback: null,
	    anchorLink: true,
	    anchorLinkSymbol: "#",
	    anchorLinkBefore: true,
	    anchorClassName: "markdownIt-Anchor",
	    resetIds: true,
	    anchorLinkSpace: true,
	    anchorLinkSymbolClassName: null,
	    wrapHeadingTextInAnchor: false
	  }, options);
	  markdownItSecondInstance = (0, _clone.default)(md); // initialize key ids for each instance

	  headingIds = {};
	  md.core.ruler.push("init_toc", function (state) {
	    var tokens = state.tokens; // reset key ids for each document

	    if (options.resetIds) {
	      headingIds = {};
	    }

	    var tocArray = [];
	    var tocMarkdown = "";
	    var tocTokens = [];
	    var slugifyFn = typeof options.slugify === "function" && options.slugify || _uslug.default;

	    for (var i = 0; i < tokens.length; i++) {
	      if (tokens[i].type !== "heading_close") {
	        continue;
	      }

	      var heading = tokens[i - 1];
	      var heading_close = tokens[i];

	      if (heading.type === "inline") {
	        var content = void 0;

	        if (heading.children && heading.children.length > 0 && heading.children[0].type === "link_open") {
	          // headings that contain links have to be processed
	          // differently since nested links aren't allowed in markdown
	          content = heading.children[1].content;
	          heading._tocAnchor = makeSafe(content, headingIds, slugifyFn);
	        } else {
	          content = heading.content;
	          heading._tocAnchor = makeSafe(heading.children.reduce(function (acc, t) {
	            return acc + t.content;
	          }, ""), headingIds, slugifyFn);
	        }

	        if (options.anchorLinkPrefix) {
	          heading._tocAnchor = options.anchorLinkPrefix + heading._tocAnchor;
	        }

	        tocArray.push({
	          content: content,
	          anchor: heading._tocAnchor,
	          level: +heading_close.tag.substr(1, 1)
	        });
	      }
	    }

	    tocMarkdown = generateTocMarkdownFromArray(tocArray, options);
	    tocTokens = markdownItSecondInstance.parse(tocMarkdown, {}); // Adding tocClassName to 'ul' element

	    if (_typeof(tocTokens[0]) === "object" && tocTokens[0].type === "bullet_list_open") {
	      var attrs = tocTokens[0].attrs = tocTokens[0].attrs || [];

	      if (options.tocClassName != null) {
	        attrs.push(["class", options.tocClassName]);
	      }
	    }

	    tocHtml = markdownItSecondInstance.renderer.render(tocTokens, markdownItSecondInstance.options);

	    if (typeof state.env.tocCallback === "function") {
	      state.env.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);
	    } else if (typeof options.tocCallback === "function") {
	      options.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);
	    } else if (typeof md.options.tocCallback === "function") {
	      md.options.tocCallback.call(undefined, tocMarkdown, tocArray, tocHtml);
	    }
	  });
	  md.inline.ruler.after("emphasis", "toc", function (state, silent) {
	    var token;
	    var match;

	    if ( // Reject if the token does not start with @[
	    state.src.charCodeAt(state.pos) !== 0x40 || state.src.charCodeAt(state.pos + 1) !== 0x5b || // Don’t run any pairs in validation mode
	    silent) {
	      return false;
	    } // Detect TOC markdown


	    match = TOC_RE.exec(state.src);
	    match = !match ? [] : match.filter(function (m) {
	      return m;
	    });

	    if (match.length < 1) {
	      return false;
	    } // Build content


	    token = state.push("toc_open", "toc", 1);
	    token.markup = TOC;
	    token = state.push("toc_body", "", 0);
	    token = state.push("toc_close", "toc", -1); // Update pos so the parser can continue

	    state.pos = state.pos + 6;
	    return true;
	  });

	  var originalHeadingOpen = md.renderer.rules.heading_open || function () {
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var tokens = args[0],
	        idx = args[1],
	        options = args[2],
	        self = args[4];
	    return self.renderToken(tokens, idx, options);
	  };

	  md.renderer.rules.heading_open = function () {
	    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }

	    var tokens = args[0],
	        idx = args[1];
	    var attrs = tokens[idx].attrs = tokens[idx].attrs || [];
	    var anchor = tokens[idx + 1]._tocAnchor;
	    attrs.push(["id", anchor]);

	    if (options.anchorLink) {
	      renderAnchorLink.apply(void 0, [anchor, options].concat(args));
	    }

	    return originalHeadingOpen.apply(this, args);
	  };

	  md.renderer.rules.toc_open = function () {
	    return "";
	  };

	  md.renderer.rules.toc_close = function () {
	    return "";
	  };

	  md.renderer.rules.toc_body = function () {
	    return "";
	  };

	  if (options.toc) {
	    md.renderer.rules.toc_body = function () {
	      return tocHtml;
	    };
	  }
	}

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var clone = (function() {
	'use strict';

	function _instanceof(obj, type) {
	  return type != null && obj instanceof type;
	}

	var nativeMap;
	try {
	  nativeMap = Map;
	} catch(_) {
	  // maybe a reference error because no `Map`. Give it a dummy value that no
	  // value will ever be an instanceof.
	  nativeMap = function() {};
	}

	var nativeSet;
	try {
	  nativeSet = Set;
	} catch(_) {
	  nativeSet = function() {};
	}

	var nativePromise;
	try {
	  nativePromise = Promise;
	} catch(_) {
	  nativePromise = function() {};
	}

	/**
	 * Clones (copies) an Object using deep copying.
	 *
	 * This function supports circular references by default, but if you are certain
	 * there are no circular references in your object, you can save some CPU time
	 * by calling clone(obj, false).
	 *
	 * Caution: if `circular` is false and `parent` contains circular references,
	 * your program may enter an infinite loop and crash.
	 *
	 * @param `parent` - the object to be cloned
	 * @param `circular` - set to true if the object to be cloned may contain
	 *    circular references. (optional - true by default)
	 * @param `depth` - set to a number if the object is only to be cloned to
	 *    a particular depth. (optional - defaults to Infinity)
	 * @param `prototype` - sets the prototype to be used when cloning an object.
	 *    (optional - defaults to parent prototype).
	 * @param `includeNonEnumerable` - set to true if the non-enumerable properties
	 *    should be cloned as well. Non-enumerable properties on the prototype
	 *    chain will be ignored. (optional - false by default)
	*/
	function clone(parent, circular, depth, prototype, includeNonEnumerable) {
	  if (typeof circular === 'object') {
	    depth = circular.depth;
	    prototype = circular.prototype;
	    includeNonEnumerable = circular.includeNonEnumerable;
	    circular = circular.circular;
	  }
	  // maintain two arrays for circular references, where corresponding parents
	  // and children have the same index
	  var allParents = [];
	  var allChildren = [];

	  var useBuffer = typeof Buffer != 'undefined';

	  if (typeof circular == 'undefined')
	    circular = true;

	  if (typeof depth == 'undefined')
	    depth = Infinity;

	  // recurse this function so we don't reset allParents and allChildren
	  function _clone(parent, depth) {
	    // cloning null always returns null
	    if (parent === null)
	      return null;

	    if (depth === 0)
	      return parent;

	    var child;
	    var proto;
	    if (typeof parent != 'object') {
	      return parent;
	    }

	    if (_instanceof(parent, nativeMap)) {
	      child = new nativeMap();
	    } else if (_instanceof(parent, nativeSet)) {
	      child = new nativeSet();
	    } else if (_instanceof(parent, nativePromise)) {
	      child = new nativePromise(function (resolve, reject) {
	        parent.then(function(value) {
	          resolve(_clone(value, depth - 1));
	        }, function(err) {
	          reject(_clone(err, depth - 1));
	        });
	      });
	    } else if (clone.__isArray(parent)) {
	      child = [];
	    } else if (clone.__isRegExp(parent)) {
	      child = new RegExp(parent.source, __getRegExpFlags(parent));
	      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
	    } else if (clone.__isDate(parent)) {
	      child = new Date(parent.getTime());
	    } else if (useBuffer && Buffer.isBuffer(parent)) {
	      if (Buffer.allocUnsafe) {
	        // Node.js >= 4.5.0
	        child = Buffer.allocUnsafe(parent.length);
	      } else {
	        // Older Node.js versions
	        child = new Buffer(parent.length);
	      }
	      parent.copy(child);
	      return child;
	    } else if (_instanceof(parent, Error)) {
	      child = Object.create(parent);
	    } else {
	      if (typeof prototype == 'undefined') {
	        proto = Object.getPrototypeOf(parent);
	        child = Object.create(proto);
	      }
	      else {
	        child = Object.create(prototype);
	        proto = prototype;
	      }
	    }

	    if (circular) {
	      var index = allParents.indexOf(parent);

	      if (index != -1) {
	        return allChildren[index];
	      }
	      allParents.push(parent);
	      allChildren.push(child);
	    }

	    if (_instanceof(parent, nativeMap)) {
	      parent.forEach(function(value, key) {
	        var keyChild = _clone(key, depth - 1);
	        var valueChild = _clone(value, depth - 1);
	        child.set(keyChild, valueChild);
	      });
	    }
	    if (_instanceof(parent, nativeSet)) {
	      parent.forEach(function(value) {
	        var entryChild = _clone(value, depth - 1);
	        child.add(entryChild);
	      });
	    }

	    for (var i in parent) {
	      var attrs;
	      if (proto) {
	        attrs = Object.getOwnPropertyDescriptor(proto, i);
	      }

	      if (attrs && attrs.set == null) {
	        continue;
	      }
	      child[i] = _clone(parent[i], depth - 1);
	    }

	    if (Object.getOwnPropertySymbols) {
	      var symbols = Object.getOwnPropertySymbols(parent);
	      for (var i = 0; i < symbols.length; i++) {
	        // Don't need to worry about cloning a symbol because it is a primitive,
	        // like a number or string.
	        var symbol = symbols[i];
	        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
	        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
	          continue;
	        }
	        child[symbol] = _clone(parent[symbol], depth - 1);
	        if (!descriptor.enumerable) {
	          Object.defineProperty(child, symbol, {
	            enumerable: false
	          });
	        }
	      }
	    }

	    if (includeNonEnumerable) {
	      var allPropertyNames = Object.getOwnPropertyNames(parent);
	      for (var i = 0; i < allPropertyNames.length; i++) {
	        var propertyName = allPropertyNames[i];
	        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
	        if (descriptor && descriptor.enumerable) {
	          continue;
	        }
	        child[propertyName] = _clone(parent[propertyName], depth - 1);
	        Object.defineProperty(child, propertyName, {
	          enumerable: false
	        });
	      }
	    }

	    return child;
	  }

	  return _clone(parent, depth);
	}

	/**
	 * Simple flat clone using prototype, accepts only objects, usefull for property
	 * override on FLAT configuration object (no nested props).
	 *
	 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
	 * works.
	 */
	clone.clonePrototype = function clonePrototype(parent) {
	  if (parent === null)
	    return null;

	  var c = function () {};
	  c.prototype = parent;
	  return new c();
	};

	// private utility functions

	function __objToStr(o) {
	  return Object.prototype.toString.call(o);
	}
	clone.__objToStr = __objToStr;

	function __isDate(o) {
	  return typeof o === 'object' && __objToStr(o) === '[object Date]';
	}
	clone.__isDate = __isDate;

	function __isArray(o) {
	  return typeof o === 'object' && __objToStr(o) === '[object Array]';
	}
	clone.__isArray = __isArray;

	function __isRegExp(o) {
	  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
	}
	clone.__isRegExp = __isRegExp;

	function __getRegExpFlags(re) {
	  var flags = '';
	  if (re.global) flags += 'g';
	  if (re.ignoreCase) flags += 'i';
	  if (re.multiline) flags += 'm';
	  return flags;
	}
	clone.__getRegExpFlags = __getRegExpFlags;

	return clone;
	})();

	if (typeof module === 'object' && module.exports) {
	  module.exports = clone;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(142).Buffer))

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(143)
	var ieee754 = __webpack_require__(144)
	var isArray = __webpack_require__(145)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  var actual = that.write(string, encoding)

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }

	  return that
	}

	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }

	  return -1
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}

	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 143 */
/***/ (function(module, exports) {

	'use strict'

	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}

	// Support decoding URL-safe base64 strings, as Node.js does.
	// See: https://en.wikipedia.org/wiki/Base64#URL_applications
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63

	function getLens (b64) {
	  var len = b64.length

	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // Trim off extra bytes after placeholder bytes are found
	  // See: https://github.com/beatgammit/base64-js/issues/42
	  var validLen = b64.indexOf('=')
	  if (validLen === -1) validLen = len

	  var placeHoldersLen = validLen === len
	    ? 0
	    : 4 - (validLen % 4)

	  return [validLen, placeHoldersLen]
	}

	// base64 is 4/3 + up to two characters of the original data
	function byteLength (b64) {
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}

	function _byteLength (b64, validLen, placeHoldersLen) {
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}

	function toByteArray (b64) {
	  var tmp
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]

	  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

	  var curByte = 0

	  // if there are placeholders, only get up to the last complete 4 chars
	  var len = placeHoldersLen > 0
	    ? validLen - 4
	    : validLen

	  var i
	  for (i = 0; i < len; i += 4) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 18) |
	      (revLookup[b64.charCodeAt(i + 1)] << 12) |
	      (revLookup[b64.charCodeAt(i + 2)] << 6) |
	      revLookup[b64.charCodeAt(i + 3)]
	    arr[curByte++] = (tmp >> 16) & 0xFF
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }

	  if (placeHoldersLen === 2) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 2) |
	      (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[curByte++] = tmp & 0xFF
	  }

	  if (placeHoldersLen === 1) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 10) |
	      (revLookup[b64.charCodeAt(i + 1)] << 4) |
	      (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] +
	    lookup[num >> 12 & 0x3F] +
	    lookup[num >> 6 & 0x3F] +
	    lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp =
	      ((uint8[i] << 16) & 0xFF0000) +
	      ((uint8[i + 1] << 8) & 0xFF00) +
	      (uint8[i + 2] & 0xFF)
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(
	      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
	    ))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 2] +
	      lookup[(tmp << 4) & 0x3F] +
	      '=='
	    )
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 10] +
	      lookup[(tmp >> 4) & 0x3F] +
	      lookup[(tmp << 2) & 0x3F] +
	      '='
	    )
	  }

	  return parts.join('')
	}


/***/ }),
/* 144 */
/***/ (function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = ((value * c) - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ }),
/* 145 */
/***/ (function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(147);

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	(function() {
	  var L = __webpack_require__(148).L,
	      N = __webpack_require__(149).N,
	      Z = __webpack_require__(150).Z,
	      M = __webpack_require__(151).M,
	      unorm = __webpack_require__(152);

	  var _unicodeCategory = function(code) {
	    if (~L.indexOf(code)) return 'L';
	    if (~N.indexOf(code)) return 'N';
	    if (~Z.indexOf(code)) return 'Z';
	    if (~M.indexOf(code)) return 'M';
	    return undefined;
	  };

	  module.exports = function(string, options) {
	    string = string || '';
	    options = options || {};
	    var allowedChars = options.allowedChars || '-_~';
	    var lower = typeof options.lower === 'boolean' ? options.lower : true;
	    var spaces = typeof options.spaces === 'boolean' ? options.spaces : false;
	    var rv = [];
	    var chars = unorm.nfkc(string);
	    for(var i = 0; i < chars.length; i++) {
	      var c = chars[i];
	      var code = c.charCodeAt(0);
	      // Allow Common CJK Unified Ideographs
	      // See: http://www.unicode.org/versions/Unicode6.0.0/ch12.pdf - Table 12-2 
	      if (0x4E00 <= code && code <= 0x9FFF) {
	        rv.push(c);
	        continue;
	      }

	      // Allow Hangul
	      if (0xAC00 <= code && code <= 0xD7A3) {
	        rv.push(c);
	        continue;
	      }

	      // Japanese ideographic punctuation
	      if ((0x3000 <= code && code <= 0x3002) || (0xFF01 <= code && code <= 0xFF02)) {
	        rv.push(' ');
	      }

	      if (allowedChars.indexOf(c) != -1) {
	        rv.push(c);
	        continue;
	      }
	      var val = _unicodeCategory(code);
	      if (val && ~'LNM'.indexOf(val)) rv.push(c);
	      if (val && ~'Z'.indexOf(val)) rv.push(' ');
	    }
	    var slug = rv.join('').replace(/^\s+|\s+$/g, '').replace(/\s+/g,' ');
	    if (!spaces) slug = slug.replace(/[\s\-]+/g,'-');
	    if (lower) slug = slug.toLowerCase();
	    return slug;
	  };
	}());

/***/ }),
/* 148 */
/***/ (function(module, exports) {

	/* 
	 * List of Unicode code that are flagged as letter.
	 *
	 * Contains Unicode code of:
	 * - Lu = Letter, uppercase
	 * - Ll = Letter, lowercase
	 * - Lt = Letter, titlecase
	 * - Lm = Letter, modifier
	 * - Lo = Letter, other
	 *
	 * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt
	 *
	 */

	exports.L = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 170, 181, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 736, 737, 738, 739, 740, 748, 750, 880, 881, 882, 883, 884, 886, 887, 890, 891, 892, 893, 895, 902, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1520, 1521, 1522, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1765, 1766, 1774, 1775, 1786, 1787, 1788, 1791, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1969, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2036, 2037, 2042, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2074, 2084, 2088, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2365, 2384, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2447, 2448, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2482, 2486, 2487, 2488, 2489, 2493, 2510, 2524, 2525, 2527, 2528, 2529, 2544, 2545, 2565, 2566, 2567, 2568, 2569, 2570, 2575, 2576, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2649, 2650, 2651, 2652, 2654, 2674, 2675, 2676, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2703, 2704, 2705, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2738, 2739, 2741, 2742, 2743, 2744, 2745, 2749, 2768, 2784, 2785, 2809, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2831, 2832, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2866, 2867, 2869, 2870, 2871, 2872, 2873, 2877, 2908, 2909, 2911, 2912, 2913, 2929, 2947, 2949, 2950, 2951, 2952, 2953, 2954, 2958, 2959, 2960, 2962, 2963, 2964, 2965, 2969, 2970, 2972, 2974, 2975, 2979, 2980, 2984, 2985, 2986, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3024, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3086, 3087, 3088, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3133, 3160, 3161, 3162, 3168, 3169, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3214, 3215, 3216, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3253, 3254, 3255, 3256, 3257, 3261, 3294, 3296, 3297, 3313, 3314, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3342, 3343, 3344, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3389, 3406, 3423, 3424, 3425, 3450, 3451, 3452, 3453, 3454, 3455, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3517, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3634, 3635, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3713, 3714, 3716, 3719, 3720, 3722, 3725, 3732, 3733, 3734, 3735, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3745, 3746, 3747, 3749, 3751, 3754, 3755, 3757, 3758, 3759, 3760, 3762, 3763, 3773, 3776, 3777, 3778, 3779, 3780, 3782, 3804, 3805, 3806, 3807, 3840, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3976, 3977, 3978, 3979, 3980, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4159, 4176, 4177, 4178, 4179, 4180, 4181, 4186, 4187, 4188, 4189, 4193, 4197, 4198, 4206, 4207, 4208, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4238, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4295, 4301, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4682, 4683, 4684, 4685, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4696, 4698, 4699, 4700, 4701, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4746, 4747, 4748, 4749, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4786, 4787, 4788, 4789, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4800, 4802, 4803, 4804, 4805, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 4834, 4835, 4836, 4837, 4838, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4882, 4883, 4884, 4885, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4992, 4993, 4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5004, 5005, 5006, 5007, 5024, 5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5062, 5063, 5064, 5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5087, 5088, 5089, 5090, 5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5112, 5113, 5114, 5115, 5116, 5117, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147, 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5160, 5161, 5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380, 5381, 5382, 5383, 5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 5566, 5567, 5568, 5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 5631, 5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5743, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786, 5792, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5902, 5903, 5904, 5905, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5998, 5999, 6000, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6103, 6108, 6176, 6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 6261, 6262, 6263, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6314, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 6426, 6427, 6428, 6429, 6430, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6512, 6513, 6514, 6515, 6516, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6823, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7086, 7087, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140, 7141, 7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183, 7184, 7185, 7186, 7187, 7188, 7189, 7190, 7191, 7192, 7193, 7194, 7195, 7196, 7197, 7198, 7199, 7200, 7201, 7202, 7203, 7245, 7246, 7247, 7258, 7259, 7260, 7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7401, 7402, 7403, 7404, 7406, 7407, 7408, 7409, 7413, 7414, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, 7615, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7960, 7961, 7962, 7963, 7964, 7965, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8008, 8009, 8010, 8011, 8012, 8013, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8025, 8027, 8029, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8126, 8130, 8131, 8132, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8144, 8145, 8146, 8147, 8150, 8151, 8152, 8153, 8154, 8155, 8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8178, 8179, 8180, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8305, 8319, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8450, 8455, 8458, 8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8469, 8473, 8474, 8475, 8476, 8477, 8484, 8486, 8488, 8490, 8491, 8492, 8493, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 8505, 8508, 8509, 8510, 8511, 8517, 8518, 8519, 8520, 8521, 8526, 8579, 8580, 11264, 11265, 11266, 11267, 11268, 11269, 11270, 11271, 11272, 11273, 11274, 11275, 11276, 11277, 11278, 11279, 11280, 11281, 11282, 11283, 11284, 11285, 11286, 11287, 11288, 11289, 11290, 11291, 11292, 11293, 11294, 11295, 11296, 11297, 11298, 11299, 11300, 11301, 11302, 11303, 11304, 11305, 11306, 11307, 11308, 11309, 11310, 11312, 11313, 11314, 11315, 11316, 11317, 11318, 11319, 11320, 11321, 11322, 11323, 11324, 11325, 11326, 11327, 11328, 11329, 11330, 11331, 11332, 11333, 11334, 11335, 11336, 11337, 11338, 11339, 11340, 11341, 11342, 11343, 11344, 11345, 11346, 11347, 11348, 11349, 11350, 11351, 11352, 11353, 11354, 11355, 11356, 11357, 11358, 11360, 11361, 11362, 11363, 11364, 11365, 11366, 11367, 11368, 11369, 11370, 11371, 11372, 11373, 11374, 11375, 11376, 11377, 11378, 11379, 11380, 11381, 11382, 11383, 11384, 11385, 11386, 11387, 11388, 11389, 11390, 11391, 11392, 11393, 11394, 11395, 11396, 11397, 11398, 11399, 11400, 11401, 11402, 11403, 11404, 11405, 11406, 11407, 11408, 11409, 11410, 11411, 11412, 11413, 11414, 11415, 11416, 11417, 11418, 11419, 11420, 11421, 11422, 11423, 11424, 11425, 11426, 11427, 11428, 11429, 11430, 11431, 11432, 11433, 11434, 11435, 11436, 11437, 11438, 11439, 11440, 11441, 11442, 11443, 11444, 11445, 11446, 11447, 11448, 11449, 11450, 11451, 11452, 11453, 11454, 11455, 11456, 11457, 11458, 11459, 11460, 11461, 11462, 11463, 11464, 11465, 11466, 11467, 11468, 11469, 11470, 11471, 11472, 11473, 11474, 11475, 11476, 11477, 11478, 11479, 11480, 11481, 11482, 11483, 11484, 11485, 11486, 11487, 11488, 11489, 11490, 11491, 11492, 11499, 11500, 11501, 11502, 11506, 11507, 11520, 11521, 11522, 11523, 11524, 11525, 11526, 11527, 11528, 11529, 11530, 11531, 11532, 11533, 11534, 11535, 11536, 11537, 11538, 11539, 11540, 11541, 11542, 11543, 11544, 11545, 11546, 11547, 11548, 11549, 11550, 11551, 11552, 11553, 11554, 11555, 11556, 11557, 11559, 11565, 11568, 11569, 11570, 11571, 11572, 11573, 11574, 11575, 11576, 11577, 11578, 11579, 11580, 11581, 11582, 11583, 11584, 11585, 11586, 11587, 11588, 11589, 11590, 11591, 11592, 11593, 11594, 11595, 11596, 11597, 11598, 11599, 11600, 11601, 11602, 11603, 11604, 11605, 11606, 11607, 11608, 11609, 11610, 11611, 11612, 11613, 11614, 11615, 11616, 11617, 11618, 11619, 11620, 11621, 11622, 11623, 11631, 11648, 11649, 11650, 11651, 11652, 11653, 11654, 11655, 11656, 11657, 11658, 11659, 11660, 11661, 11662, 11663, 11664, 11665, 11666, 11667, 11668, 11669, 11670, 11680, 11681, 11682, 11683, 11684, 11685, 11686, 11688, 11689, 11690, 11691, 11692, 11693, 11694, 11696, 11697, 11698, 11699, 11700, 11701, 11702, 11704, 11705, 11706, 11707, 11708, 11709, 11710, 11712, 11713, 11714, 11715, 11716, 11717, 11718, 11720, 11721, 11722, 11723, 11724, 11725, 11726, 11728, 11729, 11730, 11731, 11732, 11733, 11734, 11736, 11737, 11738, 11739, 11740, 11741, 11742, 11823, 12293, 12294, 12337, 12338, 12339, 12340, 12341, 12347, 12348, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 12436, 12437, 12438, 12445, 12446, 12447, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 12535, 12536, 12537, 12538, 12540, 12541, 12542, 12543, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585, 12586, 12587, 12588, 12589, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, 12601, 12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12611, 12612, 12613, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621, 12622, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 12631, 12632, 12633, 12634, 12635, 12636, 12637, 12638, 12639, 12640, 12641, 12642, 12643, 12644, 12645, 12646, 12647, 12648, 12649, 12650, 12651, 12652, 12653, 12654, 12655, 12656, 12657, 12658, 12659, 12660, 12661, 12662, 12663, 12664, 12665, 12666, 12667, 12668, 12669, 12670, 12671, 12672, 12673, 12674, 12675, 12676, 12677, 12678, 12679, 12680, 12681, 12682, 12683, 12684, 12685, 12686, 12704, 12705, 12706, 12707, 12708, 12709, 12710, 12711, 12712, 12713, 12714, 12715, 12716, 12717, 12718, 12719, 12720, 12721, 12722, 12723, 12724, 12725, 12726, 12727, 12728, 12729, 12730, 12784, 12785, 12786, 12787, 12788, 12789, 12790, 12791, 12792, 12793, 12794, 12795, 12796, 12797, 12798, 12799, 13312, 19893, 19968, 40917, 40960, 40961, 40962, 40963, 40964, 40965, 40966, 40967, 40968, 40969, 40970, 40971, 40972, 40973, 40974, 40975, 40976, 40977, 40978, 40979, 40980, 40981, 40982, 40983, 40984, 40985, 40986, 40987, 40988, 40989, 40990, 40991, 40992, 40993, 40994, 40995, 40996, 40997, 40998, 40999, 41000, 41001, 41002, 41003, 41004, 41005, 41006, 41007, 41008, 41009, 41010, 41011, 41012, 41013, 41014, 41015, 41016, 41017, 41018, 41019, 41020, 41021, 41022, 41023, 41024, 41025, 41026, 41027, 41028, 41029, 41030, 41031, 41032, 41033, 41034, 41035, 41036, 41037, 41038, 41039, 41040, 41041, 41042, 41043, 41044, 41045, 41046, 41047, 41048, 41049, 41050, 41051, 41052, 41053, 41054, 41055, 41056, 41057, 41058, 41059, 41060, 41061, 41062, 41063, 41064, 41065, 41066, 41067, 41068, 41069, 41070, 41071, 41072, 41073, 41074, 41075, 41076, 41077, 41078, 41079, 41080, 41081, 41082, 41083, 41084, 41085, 41086, 41087, 41088, 41089, 41090, 41091, 41092, 41093, 41094, 41095, 41096, 41097, 41098, 41099, 41100, 41101, 41102, 41103, 41104, 41105, 41106, 41107, 41108, 41109, 41110, 41111, 41112, 41113, 41114, 41115, 41116, 41117, 41118, 41119, 41120, 41121, 41122, 41123, 41124, 41125, 41126, 41127, 41128, 41129, 41130, 41131, 41132, 41133, 41134, 41135, 41136, 41137, 41138, 41139, 41140, 41141, 41142, 41143, 41144, 41145, 41146, 41147, 41148, 41149, 41150, 41151, 41152, 41153, 41154, 41155, 41156, 41157, 41158, 41159, 41160, 41161, 41162, 41163, 41164, 41165, 41166, 41167, 41168, 41169, 41170, 41171, 41172, 41173, 41174, 41175, 41176, 41177, 41178, 41179, 41180, 41181, 41182, 41183, 41184, 41185, 41186, 41187, 41188, 41189, 41190, 41191, 41192, 41193, 41194, 41195, 41196, 41197, 41198, 41199, 41200, 41201, 41202, 41203, 41204, 41205, 41206, 41207, 41208, 41209, 41210, 41211, 41212, 41213, 41214, 41215, 41216, 41217, 41218, 41219, 41220, 41221, 41222, 41223, 41224, 41225, 41226, 41227, 41228, 41229, 41230, 41231, 41232, 41233, 41234, 41235, 41236, 41237, 41238, 41239, 41240, 41241, 41242, 41243, 41244, 41245, 41246, 41247, 41248, 41249, 41250, 41251, 41252, 41253, 41254, 41255, 41256, 41257, 41258, 41259, 41260, 41261, 41262, 41263, 41264, 41265, 41266, 41267, 41268, 41269, 41270, 41271, 41272, 41273, 41274, 41275, 41276, 41277, 41278, 41279, 41280, 41281, 41282, 41283, 41284, 41285, 41286, 41287, 41288, 41289, 41290, 41291, 41292, 41293, 41294, 41295, 41296, 41297, 41298, 41299, 41300, 41301, 41302, 41303, 41304, 41305, 41306, 41307, 41308, 41309, 41310, 41311, 41312, 41313, 41314, 41315, 41316, 41317, 41318, 41319, 41320, 41321, 41322, 41323, 41324, 41325, 41326, 41327, 41328, 41329, 41330, 41331, 41332, 41333, 41334, 41335, 41336, 41337, 41338, 41339, 41340, 41341, 41342, 41343, 41344, 41345, 41346, 41347, 41348, 41349, 41350, 41351, 41352, 41353, 41354, 41355, 41356, 41357, 41358, 41359, 41360, 41361, 41362, 41363, 41364, 41365, 41366, 41367, 41368, 41369, 41370, 41371, 41372, 41373, 41374, 41375, 41376, 41377, 41378, 41379, 41380, 41381, 41382, 41383, 41384, 41385, 41386, 41387, 41388, 41389, 41390, 41391, 41392, 41393, 41394, 41395, 41396, 41397, 41398, 41399, 41400, 41401, 41402, 41403, 41404, 41405, 41406, 41407, 41408, 41409, 41410, 41411, 41412, 41413, 41414, 41415, 41416, 41417, 41418, 41419, 41420, 41421, 41422, 41423, 41424, 41425, 41426, 41427, 41428, 41429, 41430, 41431, 41432, 41433, 41434, 41435, 41436, 41437, 41438, 41439, 41440, 41441, 41442, 41443, 41444, 41445, 41446, 41447, 41448, 41449, 41450, 41451, 41452, 41453, 41454, 41455, 41456, 41457, 41458, 41459, 41460, 41461, 41462, 41463, 41464, 41465, 41466, 41467, 41468, 41469, 41470, 41471, 41472, 41473, 41474, 41475, 41476, 41477, 41478, 41479, 41480, 41481, 41482, 41483, 41484, 41485, 41486, 41487, 41488, 41489, 41490, 41491, 41492, 41493, 41494, 41495, 41496, 41497, 41498, 41499, 41500, 41501, 41502, 41503, 41504, 41505, 41506, 41507, 41508, 41509, 41510, 41511, 41512, 41513, 41514, 41515, 41516, 41517, 41518, 41519, 41520, 41521, 41522, 41523, 41524, 41525, 41526, 41527, 41528, 41529, 41530, 41531, 41532, 41533, 41534, 41535, 41536, 41537, 41538, 41539, 41540, 41541, 41542, 41543, 41544, 41545, 41546, 41547, 41548, 41549, 41550, 41551, 41552, 41553, 41554, 41555, 41556, 41557, 41558, 41559, 41560, 41561, 41562, 41563, 41564, 41565, 41566, 41567, 41568, 41569, 41570, 41571, 41572, 41573, 41574, 41575, 41576, 41577, 41578, 41579, 41580, 41581, 41582, 41583, 41584, 41585, 41586, 41587, 41588, 41589, 41590, 41591, 41592, 41593, 41594, 41595, 41596, 41597, 41598, 41599, 41600, 41601, 41602, 41603, 41604, 41605, 41606, 41607, 41608, 41609, 41610, 41611, 41612, 41613, 41614, 41615, 41616, 41617, 41618, 41619, 41620, 41621, 41622, 41623, 41624, 41625, 41626, 41627, 41628, 41629, 41630, 41631, 41632, 41633, 41634, 41635, 41636, 41637, 41638, 41639, 41640, 41641, 41642, 41643, 41644, 41645, 41646, 41647, 41648, 41649, 41650, 41651, 41652, 41653, 41654, 41655, 41656, 41657, 41658, 41659, 41660, 41661, 41662, 41663, 41664, 41665, 41666, 41667, 41668, 41669, 41670, 41671, 41672, 41673, 41674, 41675, 41676, 41677, 41678, 41679, 41680, 41681, 41682, 41683, 41684, 41685, 41686, 41687, 41688, 41689, 41690, 41691, 41692, 41693, 41694, 41695, 41696, 41697, 41698, 41699, 41700, 41701, 41702, 41703, 41704, 41705, 41706, 41707, 41708, 41709, 41710, 41711, 41712, 41713, 41714, 41715, 41716, 41717, 41718, 41719, 41720, 41721, 41722, 41723, 41724, 41725, 41726, 41727, 41728, 41729, 41730, 41731, 41732, 41733, 41734, 41735, 41736, 41737, 41738, 41739, 41740, 41741, 41742, 41743, 41744, 41745, 41746, 41747, 41748, 41749, 41750, 41751, 41752, 41753, 41754, 41755, 41756, 41757, 41758, 41759, 41760, 41761, 41762, 41763, 41764, 41765, 41766, 41767, 41768, 41769, 41770, 41771, 41772, 41773, 41774, 41775, 41776, 41777, 41778, 41779, 41780, 41781, 41782, 41783, 41784, 41785, 41786, 41787, 41788, 41789, 41790, 41791, 41792, 41793, 41794, 41795, 41796, 41797, 41798, 41799, 41800, 41801, 41802, 41803, 41804, 41805, 41806, 41807, 41808, 41809, 41810, 41811, 41812, 41813, 41814, 41815, 41816, 41817, 41818, 41819, 41820, 41821, 41822, 41823, 41824, 41825, 41826, 41827, 41828, 41829, 41830, 41831, 41832, 41833, 41834, 41835, 41836, 41837, 41838, 41839, 41840, 41841, 41842, 41843, 41844, 41845, 41846, 41847, 41848, 41849, 41850, 41851, 41852, 41853, 41854, 41855, 41856, 41857, 41858, 41859, 41860, 41861, 41862, 41863, 41864, 41865, 41866, 41867, 41868, 41869, 41870, 41871, 41872, 41873, 41874, 41875, 41876, 41877, 41878, 41879, 41880, 41881, 41882, 41883, 41884, 41885, 41886, 41887, 41888, 41889, 41890, 41891, 41892, 41893, 41894, 41895, 41896, 41897, 41898, 41899, 41900, 41901, 41902, 41903, 41904, 41905, 41906, 41907, 41908, 41909, 41910, 41911, 41912, 41913, 41914, 41915, 41916, 41917, 41918, 41919, 41920, 41921, 41922, 41923, 41924, 41925, 41926, 41927, 41928, 41929, 41930, 41931, 41932, 41933, 41934, 41935, 41936, 41937, 41938, 41939, 41940, 41941, 41942, 41943, 41944, 41945, 41946, 41947, 41948, 41949, 41950, 41951, 41952, 41953, 41954, 41955, 41956, 41957, 41958, 41959, 41960, 41961, 41962, 41963, 41964, 41965, 41966, 41967, 41968, 41969, 41970, 41971, 41972, 41973, 41974, 41975, 41976, 41977, 41978, 41979, 41980, 41981, 41982, 41983, 41984, 41985, 41986, 41987, 41988, 41989, 41990, 41991, 41992, 41993, 41994, 41995, 41996, 41997, 41998, 41999, 42000, 42001, 42002, 42003, 42004, 42005, 42006, 42007, 42008, 42009, 42010, 42011, 42012, 42013, 42014, 42015, 42016, 42017, 42018, 42019, 42020, 42021, 42022, 42023, 42024, 42025, 42026, 42027, 42028, 42029, 42030, 42031, 42032, 42033, 42034, 42035, 42036, 42037, 42038, 42039, 42040, 42041, 42042, 42043, 42044, 42045, 42046, 42047, 42048, 42049, 42050, 42051, 42052, 42053, 42054, 42055, 42056, 42057, 42058, 42059, 42060, 42061, 42062, 42063, 42064, 42065, 42066, 42067, 42068, 42069, 42070, 42071, 42072, 42073, 42074, 42075, 42076, 42077, 42078, 42079, 42080, 42081, 42082, 42083, 42084, 42085, 42086, 42087, 42088, 42089, 42090, 42091, 42092, 42093, 42094, 42095, 42096, 42097, 42098, 42099, 42100, 42101, 42102, 42103, 42104, 42105, 42106, 42107, 42108, 42109, 42110, 42111, 42112, 42113, 42114, 42115, 42116, 42117, 42118, 42119, 42120, 42121, 42122, 42123, 42124, 42192, 42193, 42194, 42195, 42196, 42197, 42198, 42199, 42200, 42201, 42202, 42203, 42204, 42205, 42206, 42207, 42208, 42209, 42210, 42211, 42212, 42213, 42214, 42215, 42216, 42217, 42218, 42219, 42220, 42221, 42222, 42223, 42224, 42225, 42226, 42227, 42228, 42229, 42230, 42231, 42232, 42233, 42234, 42235, 42236, 42237, 42240, 42241, 42242, 42243, 42244, 42245, 42246, 42247, 42248, 42249, 42250, 42251, 42252, 42253, 42254, 42255, 42256, 42257, 42258, 42259, 42260, 42261, 42262, 42263, 42264, 42265, 42266, 42267, 42268, 42269, 42270, 42271, 42272, 42273, 42274, 42275, 42276, 42277, 42278, 42279, 42280, 42281, 42282, 42283, 42284, 42285, 42286, 42287, 42288, 42289, 42290, 42291, 42292, 42293, 42294, 42295, 42296, 42297, 42298, 42299, 42300, 42301, 42302, 42303, 42304, 42305, 42306, 42307, 42308, 42309, 42310, 42311, 42312, 42313, 42314, 42315, 42316, 42317, 42318, 42319, 42320, 42321, 42322, 42323, 42324, 42325, 42326, 42327, 42328, 42329, 42330, 42331, 42332, 42333, 42334, 42335, 42336, 42337, 42338, 42339, 42340, 42341, 42342, 42343, 42344, 42345, 42346, 42347, 42348, 42349, 42350, 42351, 42352, 42353, 42354, 42355, 42356, 42357, 42358, 42359, 42360, 42361, 42362, 42363, 42364, 42365, 42366, 42367, 42368, 42369, 42370, 42371, 42372, 42373, 42374, 42375, 42376, 42377, 42378, 42379, 42380, 42381, 42382, 42383, 42384, 42385, 42386, 42387, 42388, 42389, 42390, 42391, 42392, 42393, 42394, 42395, 42396, 42397, 42398, 42399, 42400, 42401, 42402, 42403, 42404, 42405, 42406, 42407, 42408, 42409, 42410, 42411, 42412, 42413, 42414, 42415, 42416, 42417, 42418, 42419, 42420, 42421, 42422, 42423, 42424, 42425, 42426, 42427, 42428, 42429, 42430, 42431, 42432, 42433, 42434, 42435, 42436, 42437, 42438, 42439, 42440, 42441, 42442, 42443, 42444, 42445, 42446, 42447, 42448, 42449, 42450, 42451, 42452, 42453, 42454, 42455, 42456, 42457, 42458, 42459, 42460, 42461, 42462, 42463, 42464, 42465, 42466, 42467, 42468, 42469, 42470, 42471, 42472, 42473, 42474, 42475, 42476, 42477, 42478, 42479, 42480, 42481, 42482, 42483, 42484, 42485, 42486, 42487, 42488, 42489, 42490, 42491, 42492, 42493, 42494, 42495, 42496, 42497, 42498, 42499, 42500, 42501, 42502, 42503, 42504, 42505, 42506, 42507, 42508, 42512, 42513, 42514, 42515, 42516, 42517, 42518, 42519, 42520, 42521, 42522, 42523, 42524, 42525, 42526, 42527, 42538, 42539, 42560, 42561, 42562, 42563, 42564, 42565, 42566, 42567, 42568, 42569, 42570, 42571, 42572, 42573, 42574, 42575, 42576, 42577, 42578, 42579, 42580, 42581, 42582, 42583, 42584, 42585, 42586, 42587, 42588, 42589, 42590, 42591, 42592, 42593, 42594, 42595, 42596, 42597, 42598, 42599, 42600, 42601, 42602, 42603, 42604, 42605, 42606, 42623, 42624, 42625, 42626, 42627, 42628, 42629, 42630, 42631, 42632, 42633, 42634, 42635, 42636, 42637, 42638, 42639, 42640, 42641, 42642, 42643, 42644, 42645, 42646, 42647, 42648, 42649, 42650, 42651, 42652, 42653, 42656, 42657, 42658, 42659, 42660, 42661, 42662, 42663, 42664, 42665, 42666, 42667, 42668, 42669, 42670, 42671, 42672, 42673, 42674, 42675, 42676, 42677, 42678, 42679, 42680, 42681, 42682, 42683, 42684, 42685, 42686, 42687, 42688, 42689, 42690, 42691, 42692, 42693, 42694, 42695, 42696, 42697, 42698, 42699, 42700, 42701, 42702, 42703, 42704, 42705, 42706, 42707, 42708, 42709, 42710, 42711, 42712, 42713, 42714, 42715, 42716, 42717, 42718, 42719, 42720, 42721, 42722, 42723, 42724, 42725, 42775, 42776, 42777, 42778, 42779, 42780, 42781, 42782, 42783, 42786, 42787, 42788, 42789, 42790, 42791, 42792, 42793, 42794, 42795, 42796, 42797, 42798, 42799, 42800, 42801, 42802, 42803, 42804, 42805, 42806, 42807, 42808, 42809, 42810, 42811, 42812, 42813, 42814, 42815, 42816, 42817, 42818, 42819, 42820, 42821, 42822, 42823, 42824, 42825, 42826, 42827, 42828, 42829, 42830, 42831, 42832, 42833, 42834, 42835, 42836, 42837, 42838, 42839, 42840, 42841, 42842, 42843, 42844, 42845, 42846, 42847, 42848, 42849, 42850, 42851, 42852, 42853, 42854, 42855, 42856, 42857, 42858, 42859, 42860, 42861, 42862, 42863, 42864, 42865, 42866, 42867, 42868, 42869, 42870, 42871, 42872, 42873, 42874, 42875, 42876, 42877, 42878, 42879, 42880, 42881, 42882, 42883, 42884, 42885, 42886, 42887, 42888, 42891, 42892, 42893, 42894, 42895, 42896, 42897, 42898, 42899, 42900, 42901, 42902, 42903, 42904, 42905, 42906, 42907, 42908, 42909, 42910, 42911, 42912, 42913, 42914, 42915, 42916, 42917, 42918, 42919, 42920, 42921, 42922, 42923, 42924, 42925, 42928, 42929, 42930, 42931, 42932, 42933, 42934, 42935, 42999, 43000, 43001, 43002, 43003, 43004, 43005, 43006, 43007, 43008, 43009, 43011, 43012, 43013, 43015, 43016, 43017, 43018, 43020, 43021, 43022, 43023, 43024, 43025, 43026, 43027, 43028, 43029, 43030, 43031, 43032, 43033, 43034, 43035, 43036, 43037, 43038, 43039, 43040, 43041, 43042, 43072, 43073, 43074, 43075, 43076, 43077, 43078, 43079, 43080, 43081, 43082, 43083, 43084, 43085, 43086, 43087, 43088, 43089, 43090, 43091, 43092, 43093, 43094, 43095, 43096, 43097, 43098, 43099, 43100, 43101, 43102, 43103, 43104, 43105, 43106, 43107, 43108, 43109, 43110, 43111, 43112, 43113, 43114, 43115, 43116, 43117, 43118, 43119, 43120, 43121, 43122, 43123, 43138, 43139, 43140, 43141, 43142, 43143, 43144, 43145, 43146, 43147, 43148, 43149, 43150, 43151, 43152, 43153, 43154, 43155, 43156, 43157, 43158, 43159, 43160, 43161, 43162, 43163, 43164, 43165, 43166, 43167, 43168, 43169, 43170, 43171, 43172, 43173, 43174, 43175, 43176, 43177, 43178, 43179, 43180, 43181, 43182, 43183, 43184, 43185, 43186, 43187, 43250, 43251, 43252, 43253, 43254, 43255, 43259, 43261, 43274, 43275, 43276, 43277, 43278, 43279, 43280, 43281, 43282, 43283, 43284, 43285, 43286, 43287, 43288, 43289, 43290, 43291, 43292, 43293, 43294, 43295, 43296, 43297, 43298, 43299, 43300, 43301, 43312, 43313, 43314, 43315, 43316, 43317, 43318, 43319, 43320, 43321, 43322, 43323, 43324, 43325, 43326, 43327, 43328, 43329, 43330, 43331, 43332, 43333, 43334, 43360, 43361, 43362, 43363, 43364, 43365, 43366, 43367, 43368, 43369, 43370, 43371, 43372, 43373, 43374, 43375, 43376, 43377, 43378, 43379, 43380, 43381, 43382, 43383, 43384, 43385, 43386, 43387, 43388, 43396, 43397, 43398, 43399, 43400, 43401, 43402, 43403, 43404, 43405, 43406, 43407, 43408, 43409, 43410, 43411, 43412, 43413, 43414, 43415, 43416, 43417, 43418, 43419, 43420, 43421, 43422, 43423, 43424, 43425, 43426, 43427, 43428, 43429, 43430, 43431, 43432, 43433, 43434, 43435, 43436, 43437, 43438, 43439, 43440, 43441, 43442, 43471, 43488, 43489, 43490, 43491, 43492, 43494, 43495, 43496, 43497, 43498, 43499, 43500, 43501, 43502, 43503, 43514, 43515, 43516, 43517, 43518, 43520, 43521, 43522, 43523, 43524, 43525, 43526, 43527, 43528, 43529, 43530, 43531, 43532, 43533, 43534, 43535, 43536, 43537, 43538, 43539, 43540, 43541, 43542, 43543, 43544, 43545, 43546, 43547, 43548, 43549, 43550, 43551, 43552, 43553, 43554, 43555, 43556, 43557, 43558, 43559, 43560, 43584, 43585, 43586, 43588, 43589, 43590, 43591, 43592, 43593, 43594, 43595, 43616, 43617, 43618, 43619, 43620, 43621, 43622, 43623, 43624, 43625, 43626, 43627, 43628, 43629, 43630, 43631, 43632, 43633, 43634, 43635, 43636, 43637, 43638, 43642, 43646, 43647, 43648, 43649, 43650, 43651, 43652, 43653, 43654, 43655, 43656, 43657, 43658, 43659, 43660, 43661, 43662, 43663, 43664, 43665, 43666, 43667, 43668, 43669, 43670, 43671, 43672, 43673, 43674, 43675, 43676, 43677, 43678, 43679, 43680, 43681, 43682, 43683, 43684, 43685, 43686, 43687, 43688, 43689, 43690, 43691, 43692, 43693, 43694, 43695, 43697, 43701, 43702, 43705, 43706, 43707, 43708, 43709, 43712, 43714, 43739, 43740, 43741, 43744, 43745, 43746, 43747, 43748, 43749, 43750, 43751, 43752, 43753, 43754, 43762, 43763, 43764, 43777, 43778, 43779, 43780, 43781, 43782, 43785, 43786, 43787, 43788, 43789, 43790, 43793, 43794, 43795, 43796, 43797, 43798, 43808, 43809, 43810, 43811, 43812, 43813, 43814, 43816, 43817, 43818, 43819, 43820, 43821, 43822, 43824, 43825, 43826, 43827, 43828, 43829, 43830, 43831, 43832, 43833, 43834, 43835, 43836, 43837, 43838, 43839, 43840, 43841, 43842, 43843, 43844, 43845, 43846, 43847, 43848, 43849, 43850, 43851, 43852, 43853, 43854, 43855, 43856, 43857, 43858, 43859, 43860, 43861, 43862, 43863, 43864, 43865, 43866, 43868, 43869, 43870, 43871, 43872, 43873, 43874, 43875, 43876, 43877, 43888, 43889, 43890, 43891, 43892, 43893, 43894, 43895, 43896, 43897, 43898, 43899, 43900, 43901, 43902, 43903, 43904, 43905, 43906, 43907, 43908, 43909, 43910, 43911, 43912, 43913, 43914, 43915, 43916, 43917, 43918, 43919, 43920, 43921, 43922, 43923, 43924, 43925, 43926, 43927, 43928, 43929, 43930, 43931, 43932, 43933, 43934, 43935, 43936, 43937, 43938, 43939, 43940, 43941, 43942, 43943, 43944, 43945, 43946, 43947, 43948, 43949, 43950, 43951, 43952, 43953, 43954, 43955, 43956, 43957, 43958, 43959, 43960, 43961, 43962, 43963, 43964, 43965, 43966, 43967, 43968, 43969, 43970, 43971, 43972, 43973, 43974, 43975, 43976, 43977, 43978, 43979, 43980, 43981, 43982, 43983, 43984, 43985, 43986, 43987, 43988, 43989, 43990, 43991, 43992, 43993, 43994, 43995, 43996, 43997, 43998, 43999, 44000, 44001, 44002, 44032, 55203, 55216, 55217, 55218, 55219, 55220, 55221, 55222, 55223, 55224, 55225, 55226, 55227, 55228, 55229, 55230, 55231, 55232, 55233, 55234, 55235, 55236, 55237, 55238, 55243, 55244, 55245, 55246, 55247, 55248, 55249, 55250, 55251, 55252, 55253, 55254, 55255, 55256, 55257, 55258, 55259, 55260, 55261, 55262, 55263, 55264, 55265, 55266, 55267, 55268, 55269, 55270, 55271, 55272, 55273, 55274, 55275, 55276, 55277, 55278, 55279, 55280, 55281, 55282, 55283, 55284, 55285, 55286, 55287, 55288, 55289, 55290, 55291, 63744, 63745, 63746, 63747, 63748, 63749, 63750, 63751, 63752, 63753, 63754, 63755, 63756, 63757, 63758, 63759, 63760, 63761, 63762, 63763, 63764, 63765, 63766, 63767, 63768, 63769, 63770, 63771, 63772, 63773, 63774, 63775, 63776, 63777, 63778, 63779, 63780, 63781, 63782, 63783, 63784, 63785, 63786, 63787, 63788, 63789, 63790, 63791, 63792, 63793, 63794, 63795, 63796, 63797, 63798, 63799, 63800, 63801, 63802, 63803, 63804, 63805, 63806, 63807, 63808, 63809, 63810, 63811, 63812, 63813, 63814, 63815, 63816, 63817, 63818, 63819, 63820, 63821, 63822, 63823, 63824, 63825, 63826, 63827, 63828, 63829, 63830, 63831, 63832, 63833, 63834, 63835, 63836, 63837, 63838, 63839, 63840, 63841, 63842, 63843, 63844, 63845, 63846, 63847, 63848, 63849, 63850, 63851, 63852, 63853, 63854, 63855, 63856, 63857, 63858, 63859, 63860, 63861, 63862, 63863, 63864, 63865, 63866, 63867, 63868, 63869, 63870, 63871, 63872, 63873, 63874, 63875, 63876, 63877, 63878, 63879, 63880, 63881, 63882, 63883, 63884, 63885, 63886, 63887, 63888, 63889, 63890, 63891, 63892, 63893, 63894, 63895, 63896, 63897, 63898, 63899, 63900, 63901, 63902, 63903, 63904, 63905, 63906, 63907, 63908, 63909, 63910, 63911, 63912, 63913, 63914, 63915, 63916, 63917, 63918, 63919, 63920, 63921, 63922, 63923, 63924, 63925, 63926, 63927, 63928, 63929, 63930, 63931, 63932, 63933, 63934, 63935, 63936, 63937, 63938, 63939, 63940, 63941, 63942, 63943, 63944, 63945, 63946, 63947, 63948, 63949, 63950, 63951, 63952, 63953, 63954, 63955, 63956, 63957, 63958, 63959, 63960, 63961, 63962, 63963, 63964, 63965, 63966, 63967, 63968, 63969, 63970, 63971, 63972, 63973, 63974, 63975, 63976, 63977, 63978, 63979, 63980, 63981, 63982, 63983, 63984, 63985, 63986, 63987, 63988, 63989, 63990, 63991, 63992, 63993, 63994, 63995, 63996, 63997, 63998, 63999, 64000, 64001, 64002, 64003, 64004, 64005, 64006, 64007, 64008, 64009, 64010, 64011, 64012, 64013, 64014, 64015, 64016, 64017, 64018, 64019, 64020, 64021, 64022, 64023, 64024, 64025, 64026, 64027, 64028, 64029, 64030, 64031, 64032, 64033, 64034, 64035, 64036, 64037, 64038, 64039, 64040, 64041, 64042, 64043, 64044, 64045, 64046, 64047, 64048, 64049, 64050, 64051, 64052, 64053, 64054, 64055, 64056, 64057, 64058, 64059, 64060, 64061, 64062, 64063, 64064, 64065, 64066, 64067, 64068, 64069, 64070, 64071, 64072, 64073, 64074, 64075, 64076, 64077, 64078, 64079, 64080, 64081, 64082, 64083, 64084, 64085, 64086, 64087, 64088, 64089, 64090, 64091, 64092, 64093, 64094, 64095, 64096, 64097, 64098, 64099, 64100, 64101, 64102, 64103, 64104, 64105, 64106, 64107, 64108, 64109, 64112, 64113, 64114, 64115, 64116, 64117, 64118, 64119, 64120, 64121, 64122, 64123, 64124, 64125, 64126, 64127, 64128, 64129, 64130, 64131, 64132, 64133, 64134, 64135, 64136, 64137, 64138, 64139, 64140, 64141, 64142, 64143, 64144, 64145, 64146, 64147, 64148, 64149, 64150, 64151, 64152, 64153, 64154, 64155, 64156, 64157, 64158, 64159, 64160, 64161, 64162, 64163, 64164, 64165, 64166, 64167, 64168, 64169, 64170, 64171, 64172, 64173, 64174, 64175, 64176, 64177, 64178, 64179, 64180, 64181, 64182, 64183, 64184, 64185, 64186, 64187, 64188, 64189, 64190, 64191, 64192, 64193, 64194, 64195, 64196, 64197, 64198, 64199, 64200, 64201, 64202, 64203, 64204, 64205, 64206, 64207, 64208, 64209, 64210, 64211, 64212, 64213, 64214, 64215, 64216, 64217, 64256, 64257, 64258, 64259, 64260, 64261, 64262, 64275, 64276, 64277, 64278, 64279, 64285, 64287, 64288, 64289, 64290, 64291, 64292, 64293, 64294, 64295, 64296, 64298, 64299, 64300, 64301, 64302, 64303, 64304, 64305, 64306, 64307, 64308, 64309, 64310, 64312, 64313, 64314, 64315, 64316, 64318, 64320, 64321, 64323, 64324, 64326, 64327, 64328, 64329, 64330, 64331, 64332, 64333, 64334, 64335, 64336, 64337, 64338, 64339, 64340, 64341, 64342, 64343, 64344, 64345, 64346, 64347, 64348, 64349, 64350, 64351, 64352, 64353, 64354, 64355, 64356, 64357, 64358, 64359, 64360, 64361, 64362, 64363, 64364, 64365, 64366, 64367, 64368, 64369, 64370, 64371, 64372, 64373, 64374, 64375, 64376, 64377, 64378, 64379, 64380, 64381, 64382, 64383, 64384, 64385, 64386, 64387, 64388, 64389, 64390, 64391, 64392, 64393, 64394, 64395, 64396, 64397, 64398, 64399, 64400, 64401, 64402, 64403, 64404, 64405, 64406, 64407, 64408, 64409, 64410, 64411, 64412, 64413, 64414, 64415, 64416, 64417, 64418, 64419, 64420, 64421, 64422, 64423, 64424, 64425, 64426, 64427, 64428, 64429, 64430, 64431, 64432, 64433, 64467, 64468, 64469, 64470, 64471, 64472, 64473, 64474, 64475, 64476, 64477, 64478, 64479, 64480, 64481, 64482, 64483, 64484, 64485, 64486, 64487, 64488, 64489, 64490, 64491, 64492, 64493, 64494, 64495, 64496, 64497, 64498, 64499, 64500, 64501, 64502, 64503, 64504, 64505, 64506, 64507, 64508, 64509, 64510, 64511, 64512, 64513, 64514, 64515, 64516, 64517, 64518, 64519, 64520, 64521, 64522, 64523, 64524, 64525, 64526, 64527, 64528, 64529, 64530, 64531, 64532, 64533, 64534, 64535, 64536, 64537, 64538, 64539, 64540, 64541, 64542, 64543, 64544, 64545, 64546, 64547, 64548, 64549, 64550, 64551, 64552, 64553, 64554, 64555, 64556, 64557, 64558, 64559, 64560, 64561, 64562, 64563, 64564, 64565, 64566, 64567, 64568, 64569, 64570, 64571, 64572, 64573, 64574, 64575, 64576, 64577, 64578, 64579, 64580, 64581, 64582, 64583, 64584, 64585, 64586, 64587, 64588, 64589, 64590, 64591, 64592, 64593, 64594, 64595, 64596, 64597, 64598, 64599, 64600, 64601, 64602, 64603, 64604, 64605, 64606, 64607, 64608, 64609, 64610, 64611, 64612, 64613, 64614, 64615, 64616, 64617, 64618, 64619, 64620, 64621, 64622, 64623, 64624, 64625, 64626, 64627, 64628, 64629, 64630, 64631, 64632, 64633, 64634, 64635, 64636, 64637, 64638, 64639, 64640, 64641, 64642, 64643, 64644, 64645, 64646, 64647, 64648, 64649, 64650, 64651, 64652, 64653, 64654, 64655, 64656, 64657, 64658, 64659, 64660, 64661, 64662, 64663, 64664, 64665, 64666, 64667, 64668, 64669, 64670, 64671, 64672, 64673, 64674, 64675, 64676, 64677, 64678, 64679, 64680, 64681, 64682, 64683, 64684, 64685, 64686, 64687, 64688, 64689, 64690, 64691, 64692, 64693, 64694, 64695, 64696, 64697, 64698, 64699, 64700, 64701, 64702, 64703, 64704, 64705, 64706, 64707, 64708, 64709, 64710, 64711, 64712, 64713, 64714, 64715, 64716, 64717, 64718, 64719, 64720, 64721, 64722, 64723, 64724, 64725, 64726, 64727, 64728, 64729, 64730, 64731, 64732, 64733, 64734, 64735, 64736, 64737, 64738, 64739, 64740, 64741, 64742, 64743, 64744, 64745, 64746, 64747, 64748, 64749, 64750, 64751, 64752, 64753, 64754, 64755, 64756, 64757, 64758, 64759, 64760, 64761, 64762, 64763, 64764, 64765, 64766, 64767, 64768, 64769, 64770, 64771, 64772, 64773, 64774, 64775, 64776, 64777, 64778, 64779, 64780, 64781, 64782, 64783, 64784, 64785, 64786, 64787, 64788, 64789, 64790, 64791, 64792, 64793, 64794, 64795, 64796, 64797, 64798, 64799, 64800, 64801, 64802, 64803, 64804, 64805, 64806, 64807, 64808, 64809, 64810, 64811, 64812, 64813, 64814, 64815, 64816, 64817, 64818, 64819, 64820, 64821, 64822, 64823, 64824, 64825, 64826, 64827, 64828, 64829, 64848, 64849, 64850, 64851, 64852, 64853, 64854, 64855, 64856, 64857, 64858, 64859, 64860, 64861, 64862, 64863, 64864, 64865, 64866, 64867, 64868, 64869, 64870, 64871, 64872, 64873, 64874, 64875, 64876, 64877, 64878, 64879, 64880, 64881, 64882, 64883, 64884, 64885, 64886, 64887, 64888, 64889, 64890, 64891, 64892, 64893, 64894, 64895, 64896, 64897, 64898, 64899, 64900, 64901, 64902, 64903, 64904, 64905, 64906, 64907, 64908, 64909, 64910, 64911, 64914, 64915, 64916, 64917, 64918, 64919, 64920, 64921, 64922, 64923, 64924, 64925, 64926, 64927, 64928, 64929, 64930, 64931, 64932, 64933, 64934, 64935, 64936, 64937, 64938, 64939, 64940, 64941, 64942, 64943, 64944, 64945, 64946, 64947, 64948, 64949, 64950, 64951, 64952, 64953, 64954, 64955, 64956, 64957, 64958, 64959, 64960, 64961, 64962, 64963, 64964, 64965, 64966, 64967, 65008, 65009, 65010, 65011, 65012, 65013, 65014, 65015, 65016, 65017, 65018, 65019, 65136, 65137, 65138, 65139, 65140, 65142, 65143, 65144, 65145, 65146, 65147, 65148, 65149, 65150, 65151, 65152, 65153, 65154, 65155, 65156, 65157, 65158, 65159, 65160, 65161, 65162, 65163, 65164, 65165, 65166, 65167, 65168, 65169, 65170, 65171, 65172, 65173, 65174, 65175, 65176, 65177, 65178, 65179, 65180, 65181, 65182, 65183, 65184, 65185, 65186, 65187, 65188, 65189, 65190, 65191, 65192, 65193, 65194, 65195, 65196, 65197, 65198, 65199, 65200, 65201, 65202, 65203, 65204, 65205, 65206, 65207, 65208, 65209, 65210, 65211, 65212, 65213, 65214, 65215, 65216, 65217, 65218, 65219, 65220, 65221, 65222, 65223, 65224, 65225, 65226, 65227, 65228, 65229, 65230, 65231, 65232, 65233, 65234, 65235, 65236, 65237, 65238, 65239, 65240, 65241, 65242, 65243, 65244, 65245, 65246, 65247, 65248, 65249, 65250, 65251, 65252, 65253, 65254, 65255, 65256, 65257, 65258, 65259, 65260, 65261, 65262, 65263, 65264, 65265, 65266, 65267, 65268, 65269, 65270, 65271, 65272, 65273, 65274, 65275, 65276, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65382, 65383, 65384, 65385, 65386, 65387, 65388, 65389, 65390, 65391, 65392, 65393, 65394, 65395, 65396, 65397, 65398, 65399, 65400, 65401, 65402, 65403, 65404, 65405, 65406, 65407, 65408, 65409, 65410, 65411, 65412, 65413, 65414, 65415, 65416, 65417, 65418, 65419, 65420, 65421, 65422, 65423, 65424, 65425, 65426, 65427, 65428, 65429, 65430, 65431, 65432, 65433, 65434, 65435, 65436, 65437, 65438, 65439, 65440, 65441, 65442, 65443, 65444, 65445, 65446, 65447, 65448, 65449, 65450, 65451, 65452, 65453, 65454, 65455, 65456, 65457, 65458, 65459, 65460, 65461, 65462, 65463, 65464, 65465, 65466, 65467, 65468, 65469, 65470, 65474, 65475, 65476, 65477, 65478, 65479, 65482, 65483, 65484, 65485, 65486, 65487, 65490, 65491, 65492, 65493, 65494, 65495, 65498, 65499, 65500, 65536, 65537, 65538, 65539, 65540, 65541, 65542, 65543, 65544, 65545, 65546, 65547, 65549, 65550, 65551, 65552, 65553, 65554, 65555, 65556, 65557, 65558, 65559, 65560, 65561, 65562, 65563, 65564, 65565, 65566, 65567, 65568, 65569, 65570, 65571, 65572, 65573, 65574, 65576, 65577, 65578, 65579, 65580, 65581, 65582, 65583, 65584, 65585, 65586, 65587, 65588, 65589, 65590, 65591, 65592, 65593, 65594, 65596, 65597, 65599, 65600, 65601, 65602, 65603, 65604, 65605, 65606, 65607, 65608, 65609, 65610, 65611, 65612, 65613, 65616, 65617, 65618, 65619, 65620, 65621, 65622, 65623, 65624, 65625, 65626, 65627, 65628, 65629, 65664, 65665, 65666, 65667, 65668, 65669, 65670, 65671, 65672, 65673, 65674, 65675, 65676, 65677, 65678, 65679, 65680, 65681, 65682, 65683, 65684, 65685, 65686, 65687, 65688, 65689, 65690, 65691, 65692, 65693, 65694, 65695, 65696, 65697, 65698, 65699, 65700, 65701, 65702, 65703, 65704, 65705, 65706, 65707, 65708, 65709, 65710, 65711, 65712, 65713, 65714, 65715, 65716, 65717, 65718, 65719, 65720, 65721, 65722, 65723, 65724, 65725, 65726, 65727, 65728, 65729, 65730, 65731, 65732, 65733, 65734, 65735, 65736, 65737, 65738, 65739, 65740, 65741, 65742, 65743, 65744, 65745, 65746, 65747, 65748, 65749, 65750, 65751, 65752, 65753, 65754, 65755, 65756, 65757, 65758, 65759, 65760, 65761, 65762, 65763, 65764, 65765, 65766, 65767, 65768, 65769, 65770, 65771, 65772, 65773, 65774, 65775, 65776, 65777, 65778, 65779, 65780, 65781, 65782, 65783, 65784, 65785, 65786, 66176, 66177, 66178, 66179, 66180, 66181, 66182, 66183, 66184, 66185, 66186, 66187, 66188, 66189, 66190, 66191, 66192, 66193, 66194, 66195, 66196, 66197, 66198, 66199, 66200, 66201, 66202, 66203, 66204, 66208, 66209, 66210, 66211, 66212, 66213, 66214, 66215, 66216, 66217, 66218, 66219, 66220, 66221, 66222, 66223, 66224, 66225, 66226, 66227, 66228, 66229, 66230, 66231, 66232, 66233, 66234, 66235, 66236, 66237, 66238, 66239, 66240, 66241, 66242, 66243, 66244, 66245, 66246, 66247, 66248, 66249, 66250, 66251, 66252, 66253, 66254, 66255, 66256, 66304, 66305, 66306, 66307, 66308, 66309, 66310, 66311, 66312, 66313, 66314, 66315, 66316, 66317, 66318, 66319, 66320, 66321, 66322, 66323, 66324, 66325, 66326, 66327, 66328, 66329, 66330, 66331, 66332, 66333, 66334, 66335, 66352, 66353, 66354, 66355, 66356, 66357, 66358, 66359, 66360, 66361, 66362, 66363, 66364, 66365, 66366, 66367, 66368, 66370, 66371, 66372, 66373, 66374, 66375, 66376, 66377, 66384, 66385, 66386, 66387, 66388, 66389, 66390, 66391, 66392, 66393, 66394, 66395, 66396, 66397, 66398, 66399, 66400, 66401, 66402, 66403, 66404, 66405, 66406, 66407, 66408, 66409, 66410, 66411, 66412, 66413, 66414, 66415, 66416, 66417, 66418, 66419, 66420, 66421, 66432, 66433, 66434, 66435, 66436, 66437, 66438, 66439, 66440, 66441, 66442, 66443, 66444, 66445, 66446, 66447, 66448, 66449, 66450, 66451, 66452, 66453, 66454, 66455, 66456, 66457, 66458, 66459, 66460, 66461, 66464, 66465, 66466, 66467, 66468, 66469, 66470, 66471, 66472, 66473, 66474, 66475, 66476, 66477, 66478, 66479, 66480, 66481, 66482, 66483, 66484, 66485, 66486, 66487, 66488, 66489, 66490, 66491, 66492, 66493, 66494, 66495, 66496, 66497, 66498, 66499, 66504, 66505, 66506, 66507, 66508, 66509, 66510, 66511, 66560, 66561, 66562, 66563, 66564, 66565, 66566, 66567, 66568, 66569, 66570, 66571, 66572, 66573, 66574, 66575, 66576, 66577, 66578, 66579, 66580, 66581, 66582, 66583, 66584, 66585, 66586, 66587, 66588, 66589, 66590, 66591, 66592, 66593, 66594, 66595, 66596, 66597, 66598, 66599, 66600, 66601, 66602, 66603, 66604, 66605, 66606, 66607, 66608, 66609, 66610, 66611, 66612, 66613, 66614, 66615, 66616, 66617, 66618, 66619, 66620, 66621, 66622, 66623, 66624, 66625, 66626, 66627, 66628, 66629, 66630, 66631, 66632, 66633, 66634, 66635, 66636, 66637, 66638, 66639, 66640, 66641, 66642, 66643, 66644, 66645, 66646, 66647, 66648, 66649, 66650, 66651, 66652, 66653, 66654, 66655, 66656, 66657, 66658, 66659, 66660, 66661, 66662, 66663, 66664, 66665, 66666, 66667, 66668, 66669, 66670, 66671, 66672, 66673, 66674, 66675, 66676, 66677, 66678, 66679, 66680, 66681, 66682, 66683, 66684, 66685, 66686, 66687, 66688, 66689, 66690, 66691, 66692, 66693, 66694, 66695, 66696, 66697, 66698, 66699, 66700, 66701, 66702, 66703, 66704, 66705, 66706, 66707, 66708, 66709, 66710, 66711, 66712, 66713, 66714, 66715, 66716, 66717, 66816, 66817, 66818, 66819, 66820, 66821, 66822, 66823, 66824, 66825, 66826, 66827, 66828, 66829, 66830, 66831, 66832, 66833, 66834, 66835, 66836, 66837, 66838, 66839, 66840, 66841, 66842, 66843, 66844, 66845, 66846, 66847, 66848, 66849, 66850, 66851, 66852, 66853, 66854, 66855, 66864, 66865, 66866, 66867, 66868, 66869, 66870, 66871, 66872, 66873, 66874, 66875, 66876, 66877, 66878, 66879, 66880, 66881, 66882, 66883, 66884, 66885, 66886, 66887, 66888, 66889, 66890, 66891, 66892, 66893, 66894, 66895, 66896, 66897, 66898, 66899, 66900, 66901, 66902, 66903, 66904, 66905, 66906, 66907, 66908, 66909, 66910, 66911, 66912, 66913, 66914, 66915, 67072, 67073, 67074, 67075, 67076, 67077, 67078, 67079, 67080, 67081, 67082, 67083, 67084, 67085, 67086, 67087, 67088, 67089, 67090, 67091, 67092, 67093, 67094, 67095, 67096, 67097, 67098, 67099, 67100, 67101, 67102, 67103, 67104, 67105, 67106, 67107, 67108, 67109, 67110, 67111, 67112, 67113, 67114, 67115, 67116, 67117, 67118, 67119, 67120, 67121, 67122, 67123, 67124, 67125, 67126, 67127, 67128, 67129, 67130, 67131, 67132, 67133, 67134, 67135, 67136, 67137, 67138, 67139, 67140, 67141, 67142, 67143, 67144, 67145, 67146, 67147, 67148, 67149, 67150, 67151, 67152, 67153, 67154, 67155, 67156, 67157, 67158, 67159, 67160, 67161, 67162, 67163, 67164, 67165, 67166, 67167, 67168, 67169, 67170, 67171, 67172, 67173, 67174, 67175, 67176, 67177, 67178, 67179, 67180, 67181, 67182, 67183, 67184, 67185, 67186, 67187, 67188, 67189, 67190, 67191, 67192, 67193, 67194, 67195, 67196, 67197, 67198, 67199, 67200, 67201, 67202, 67203, 67204, 67205, 67206, 67207, 67208, 67209, 67210, 67211, 67212, 67213, 67214, 67215, 67216, 67217, 67218, 67219, 67220, 67221, 67222, 67223, 67224, 67225, 67226, 67227, 67228, 67229, 67230, 67231, 67232, 67233, 67234, 67235, 67236, 67237, 67238, 67239, 67240, 67241, 67242, 67243, 67244, 67245, 67246, 67247, 67248, 67249, 67250, 67251, 67252, 67253, 67254, 67255, 67256, 67257, 67258, 67259, 67260, 67261, 67262, 67263, 67264, 67265, 67266, 67267, 67268, 67269, 67270, 67271, 67272, 67273, 67274, 67275, 67276, 67277, 67278, 67279, 67280, 67281, 67282, 67283, 67284, 67285, 67286, 67287, 67288, 67289, 67290, 67291, 67292, 67293, 67294, 67295, 67296, 67297, 67298, 67299, 67300, 67301, 67302, 67303, 67304, 67305, 67306, 67307, 67308, 67309, 67310, 67311, 67312, 67313, 67314, 67315, 67316, 67317, 67318, 67319, 67320, 67321, 67322, 67323, 67324, 67325, 67326, 67327, 67328, 67329, 67330, 67331, 67332, 67333, 67334, 67335, 67336, 67337, 67338, 67339, 67340, 67341, 67342, 67343, 67344, 67345, 67346, 67347, 67348, 67349, 67350, 67351, 67352, 67353, 67354, 67355, 67356, 67357, 67358, 67359, 67360, 67361, 67362, 67363, 67364, 67365, 67366, 67367, 67368, 67369, 67370, 67371, 67372, 67373, 67374, 67375, 67376, 67377, 67378, 67379, 67380, 67381, 67382, 67392, 67393, 67394, 67395, 67396, 67397, 67398, 67399, 67400, 67401, 67402, 67403, 67404, 67405, 67406, 67407, 67408, 67409, 67410, 67411, 67412, 67413, 67424, 67425, 67426, 67427, 67428, 67429, 67430, 67431, 67584, 67585, 67586, 67587, 67588, 67589, 67592, 67594, 67595, 67596, 67597, 67598, 67599, 67600, 67601, 67602, 67603, 67604, 67605, 67606, 67607, 67608, 67609, 67610, 67611, 67612, 67613, 67614, 67615, 67616, 67617, 67618, 67619, 67620, 67621, 67622, 67623, 67624, 67625, 67626, 67627, 67628, 67629, 67630, 67631, 67632, 67633, 67634, 67635, 67636, 67637, 67639, 67640, 67644, 67647, 67648, 67649, 67650, 67651, 67652, 67653, 67654, 67655, 67656, 67657, 67658, 67659, 67660, 67661, 67662, 67663, 67664, 67665, 67666, 67667, 67668, 67669, 67680, 67681, 67682, 67683, 67684, 67685, 67686, 67687, 67688, 67689, 67690, 67691, 67692, 67693, 67694, 67695, 67696, 67697, 67698, 67699, 67700, 67701, 67702, 67712, 67713, 67714, 67715, 67716, 67717, 67718, 67719, 67720, 67721, 67722, 67723, 67724, 67725, 67726, 67727, 67728, 67729, 67730, 67731, 67732, 67733, 67734, 67735, 67736, 67737, 67738, 67739, 67740, 67741, 67742, 67808, 67809, 67810, 67811, 67812, 67813, 67814, 67815, 67816, 67817, 67818, 67819, 67820, 67821, 67822, 67823, 67824, 67825, 67826, 67828, 67829, 67840, 67841, 67842, 67843, 67844, 67845, 67846, 67847, 67848, 67849, 67850, 67851, 67852, 67853, 67854, 67855, 67856, 67857, 67858, 67859, 67860, 67861, 67872, 67873, 67874, 67875, 67876, 67877, 67878, 67879, 67880, 67881, 67882, 67883, 67884, 67885, 67886, 67887, 67888, 67889, 67890, 67891, 67892, 67893, 67894, 67895, 67896, 67897, 67968, 67969, 67970, 67971, 67972, 67973, 67974, 67975, 67976, 67977, 67978, 67979, 67980, 67981, 67982, 67983, 67984, 67985, 67986, 67987, 67988, 67989, 67990, 67991, 67992, 67993, 67994, 67995, 67996, 67997, 67998, 67999, 68000, 68001, 68002, 68003, 68004, 68005, 68006, 68007, 68008, 68009, 68010, 68011, 68012, 68013, 68014, 68015, 68016, 68017, 68018, 68019, 68020, 68021, 68022, 68023, 68030, 68031, 68096, 68112, 68113, 68114, 68115, 68117, 68118, 68119, 68121, 68122, 68123, 68124, 68125, 68126, 68127, 68128, 68129, 68130, 68131, 68132, 68133, 68134, 68135, 68136, 68137, 68138, 68139, 68140, 68141, 68142, 68143, 68144, 68145, 68146, 68147, 68192, 68193, 68194, 68195, 68196, 68197, 68198, 68199, 68200, 68201, 68202, 68203, 68204, 68205, 68206, 68207, 68208, 68209, 68210, 68211, 68212, 68213, 68214, 68215, 68216, 68217, 68218, 68219, 68220, 68224, 68225, 68226, 68227, 68228, 68229, 68230, 68231, 68232, 68233, 68234, 68235, 68236, 68237, 68238, 68239, 68240, 68241, 68242, 68243, 68244, 68245, 68246, 68247, 68248, 68249, 68250, 68251, 68252, 68288, 68289, 68290, 68291, 68292, 68293, 68294, 68295, 68297, 68298, 68299, 68300, 68301, 68302, 68303, 68304, 68305, 68306, 68307, 68308, 68309, 68310, 68311, 68312, 68313, 68314, 68315, 68316, 68317, 68318, 68319, 68320, 68321, 68322, 68323, 68324, 68352, 68353, 68354, 68355, 68356, 68357, 68358, 68359, 68360, 68361, 68362, 68363, 68364, 68365, 68366, 68367, 68368, 68369, 68370, 68371, 68372, 68373, 68374, 68375, 68376, 68377, 68378, 68379, 68380, 68381, 68382, 68383, 68384, 68385, 68386, 68387, 68388, 68389, 68390, 68391, 68392, 68393, 68394, 68395, 68396, 68397, 68398, 68399, 68400, 68401, 68402, 68403, 68404, 68405, 68416, 68417, 68418, 68419, 68420, 68421, 68422, 68423, 68424, 68425, 68426, 68427, 68428, 68429, 68430, 68431, 68432, 68433, 68434, 68435, 68436, 68437, 68448, 68449, 68450, 68451, 68452, 68453, 68454, 68455, 68456, 68457, 68458, 68459, 68460, 68461, 68462, 68463, 68464, 68465, 68466, 68480, 68481, 68482, 68483, 68484, 68485, 68486, 68487, 68488, 68489, 68490, 68491, 68492, 68493, 68494, 68495, 68496, 68497, 68608, 68609, 68610, 68611, 68612, 68613, 68614, 68615, 68616, 68617, 68618, 68619, 68620, 68621, 68622, 68623, 68624, 68625, 68626, 68627, 68628, 68629, 68630, 68631, 68632, 68633, 68634, 68635, 68636, 68637, 68638, 68639, 68640, 68641, 68642, 68643, 68644, 68645, 68646, 68647, 68648, 68649, 68650, 68651, 68652, 68653, 68654, 68655, 68656, 68657, 68658, 68659, 68660, 68661, 68662, 68663, 68664, 68665, 68666, 68667, 68668, 68669, 68670, 68671, 68672, 68673, 68674, 68675, 68676, 68677, 68678, 68679, 68680, 68736, 68737, 68738, 68739, 68740, 68741, 68742, 68743, 68744, 68745, 68746, 68747, 68748, 68749, 68750, 68751, 68752, 68753, 68754, 68755, 68756, 68757, 68758, 68759, 68760, 68761, 68762, 68763, 68764, 68765, 68766, 68767, 68768, 68769, 68770, 68771, 68772, 68773, 68774, 68775, 68776, 68777, 68778, 68779, 68780, 68781, 68782, 68783, 68784, 68785, 68786, 68800, 68801, 68802, 68803, 68804, 68805, 68806, 68807, 68808, 68809, 68810, 68811, 68812, 68813, 68814, 68815, 68816, 68817, 68818, 68819, 68820, 68821, 68822, 68823, 68824, 68825, 68826, 68827, 68828, 68829, 68830, 68831, 68832, 68833, 68834, 68835, 68836, 68837, 68838, 68839, 68840, 68841, 68842, 68843, 68844, 68845, 68846, 68847, 68848, 68849, 68850, 69635, 69636, 69637, 69638, 69639, 69640, 69641, 69642, 69643, 69644, 69645, 69646, 69647, 69648, 69649, 69650, 69651, 69652, 69653, 69654, 69655, 69656, 69657, 69658, 69659, 69660, 69661, 69662, 69663, 69664, 69665, 69666, 69667, 69668, 69669, 69670, 69671, 69672, 69673, 69674, 69675, 69676, 69677, 69678, 69679, 69680, 69681, 69682, 69683, 69684, 69685, 69686, 69687, 69763, 69764, 69765, 69766, 69767, 69768, 69769, 69770, 69771, 69772, 69773, 69774, 69775, 69776, 69777, 69778, 69779, 69780, 69781, 69782, 69783, 69784, 69785, 69786, 69787, 69788, 69789, 69790, 69791, 69792, 69793, 69794, 69795, 69796, 69797, 69798, 69799, 69800, 69801, 69802, 69803, 69804, 69805, 69806, 69807, 69840, 69841, 69842, 69843, 69844, 69845, 69846, 69847, 69848, 69849, 69850, 69851, 69852, 69853, 69854, 69855, 69856, 69857, 69858, 69859, 69860, 69861, 69862, 69863, 69864, 69891, 69892, 69893, 69894, 69895, 69896, 69897, 69898, 69899, 69900, 69901, 69902, 69903, 69904, 69905, 69906, 69907, 69908, 69909, 69910, 69911, 69912, 69913, 69914, 69915, 69916, 69917, 69918, 69919, 69920, 69921, 69922, 69923, 69924, 69925, 69926, 69968, 69969, 69970, 69971, 69972, 69973, 69974, 69975, 69976, 69977, 69978, 69979, 69980, 69981, 69982, 69983, 69984, 69985, 69986, 69987, 69988, 69989, 69990, 69991, 69992, 69993, 69994, 69995, 69996, 69997, 69998, 69999, 70000, 70001, 70002, 70006, 70019, 70020, 70021, 70022, 70023, 70024, 70025, 70026, 70027, 70028, 70029, 70030, 70031, 70032, 70033, 70034, 70035, 70036, 70037, 70038, 70039, 70040, 70041, 70042, 70043, 70044, 70045, 70046, 70047, 70048, 70049, 70050, 70051, 70052, 70053, 70054, 70055, 70056, 70057, 70058, 70059, 70060, 70061, 70062, 70063, 70064, 70065, 70066, 70081, 70082, 70083, 70084, 70106, 70108, 70144, 70145, 70146, 70147, 70148, 70149, 70150, 70151, 70152, 70153, 70154, 70155, 70156, 70157, 70158, 70159, 70160, 70161, 70163, 70164, 70165, 70166, 70167, 70168, 70169, 70170, 70171, 70172, 70173, 70174, 70175, 70176, 70177, 70178, 70179, 70180, 70181, 70182, 70183, 70184, 70185, 70186, 70187, 70272, 70273, 70274, 70275, 70276, 70277, 70278, 70280, 70282, 70283, 70284, 70285, 70287, 70288, 70289, 70290, 70291, 70292, 70293, 70294, 70295, 70296, 70297, 70298, 70299, 70300, 70301, 70303, 70304, 70305, 70306, 70307, 70308, 70309, 70310, 70311, 70312, 70320, 70321, 70322, 70323, 70324, 70325, 70326, 70327, 70328, 70329, 70330, 70331, 70332, 70333, 70334, 70335, 70336, 70337, 70338, 70339, 70340, 70341, 70342, 70343, 70344, 70345, 70346, 70347, 70348, 70349, 70350, 70351, 70352, 70353, 70354, 70355, 70356, 70357, 70358, 70359, 70360, 70361, 70362, 70363, 70364, 70365, 70366, 70405, 70406, 70407, 70408, 70409, 70410, 70411, 70412, 70415, 70416, 70419, 70420, 70421, 70422, 70423, 70424, 70425, 70426, 70427, 70428, 70429, 70430, 70431, 70432, 70433, 70434, 70435, 70436, 70437, 70438, 70439, 70440, 70442, 70443, 70444, 70445, 70446, 70447, 70448, 70450, 70451, 70453, 70454, 70455, 70456, 70457, 70461, 70480, 70493, 70494, 70495, 70496, 70497, 70784, 70785, 70786, 70787, 70788, 70789, 70790, 70791, 70792, 70793, 70794, 70795, 70796, 70797, 70798, 70799, 70800, 70801, 70802, 70803, 70804, 70805, 70806, 70807, 70808, 70809, 70810, 70811, 70812, 70813, 70814, 70815, 70816, 70817, 70818, 70819, 70820, 70821, 70822, 70823, 70824, 70825, 70826, 70827, 70828, 70829, 70830, 70831, 70852, 70853, 70855, 71040, 71041, 71042, 71043, 71044, 71045, 71046, 71047, 71048, 71049, 71050, 71051, 71052, 71053, 71054, 71055, 71056, 71057, 71058, 71059, 71060, 71061, 71062, 71063, 71064, 71065, 71066, 71067, 71068, 71069, 71070, 71071, 71072, 71073, 71074, 71075, 71076, 71077, 71078, 71079, 71080, 71081, 71082, 71083, 71084, 71085, 71086, 71128, 71129, 71130, 71131, 71168, 71169, 71170, 71171, 71172, 71173, 71174, 71175, 71176, 71177, 71178, 71179, 71180, 71181, 71182, 71183, 71184, 71185, 71186, 71187, 71188, 71189, 71190, 71191, 71192, 71193, 71194, 71195, 71196, 71197, 71198, 71199, 71200, 71201, 71202, 71203, 71204, 71205, 71206, 71207, 71208, 71209, 71210, 71211, 71212, 71213, 71214, 71215, 71236, 71296, 71297, 71298, 71299, 71300, 71301, 71302, 71303, 71304, 71305, 71306, 71307, 71308, 71309, 71310, 71311, 71312, 71313, 71314, 71315, 71316, 71317, 71318, 71319, 71320, 71321, 71322, 71323, 71324, 71325, 71326, 71327, 71328, 71329, 71330, 71331, 71332, 71333, 71334, 71335, 71336, 71337, 71338, 71424, 71425, 71426, 71427, 71428, 71429, 71430, 71431, 71432, 71433, 71434, 71435, 71436, 71437, 71438, 71439, 71440, 71441, 71442, 71443, 71444, 71445, 71446, 71447, 71448, 71449, 71840, 71841, 71842, 71843, 71844, 71845, 71846, 71847, 71848, 71849, 71850, 71851, 71852, 71853, 71854, 71855, 71856, 71857, 71858, 71859, 71860, 71861, 71862, 71863, 71864, 71865, 71866, 71867, 71868, 71869, 71870, 71871, 71872, 71873, 71874, 71875, 71876, 71877, 71878, 71879, 71880, 71881, 71882, 71883, 71884, 71885, 71886, 71887, 71888, 71889, 71890, 71891, 71892, 71893, 71894, 71895, 71896, 71897, 71898, 71899, 71900, 71901, 71902, 71903, 71935, 72384, 72385, 72386, 72387, 72388, 72389, 72390, 72391, 72392, 72393, 72394, 72395, 72396, 72397, 72398, 72399, 72400, 72401, 72402, 72403, 72404, 72405, 72406, 72407, 72408, 72409, 72410, 72411, 72412, 72413, 72414, 72415, 72416, 72417, 72418, 72419, 72420, 72421, 72422, 72423, 72424, 72425, 72426, 72427, 72428, 72429, 72430, 72431, 72432, 72433, 72434, 72435, 72436, 72437, 72438, 72439, 72440, 73728, 73729, 73730, 73731, 73732, 73733, 73734, 73735, 73736, 73737, 73738, 73739, 73740, 73741, 73742, 73743, 73744, 73745, 73746, 73747, 73748, 73749, 73750, 73751, 73752, 73753, 73754, 73755, 73756, 73757, 73758, 73759, 73760, 73761, 73762, 73763, 73764, 73765, 73766, 73767, 73768, 73769, 73770, 73771, 73772, 73773, 73774, 73775, 73776, 73777, 73778, 73779, 73780, 73781, 73782, 73783, 73784, 73785, 73786, 73787, 73788, 73789, 73790, 73791, 73792, 73793, 73794, 73795, 73796, 73797, 73798, 73799, 73800, 73801, 73802, 73803, 73804, 73805, 73806, 73807, 73808, 73809, 73810, 73811, 73812, 73813, 73814, 73815, 73816, 73817, 73818, 73819, 73820, 73821, 73822, 73823, 73824, 73825, 73826, 73827, 73828, 73829, 73830, 73831, 73832, 73833, 73834, 73835, 73836, 73837, 73838, 73839, 73840, 73841, 73842, 73843, 73844, 73845, 73846, 73847, 73848, 73849, 73850, 73851, 73852, 73853, 73854, 73855, 73856, 73857, 73858, 73859, 73860, 73861, 73862, 73863, 73864, 73865, 73866, 73867, 73868, 73869, 73870, 73871, 73872, 73873, 73874, 73875, 73876, 73877, 73878, 73879, 73880, 73881, 73882, 73883, 73884, 73885, 73886, 73887, 73888, 73889, 73890, 73891, 73892, 73893, 73894, 73895, 73896, 73897, 73898, 73899, 73900, 73901, 73902, 73903, 73904, 73905, 73906, 73907, 73908, 73909, 73910, 73911, 73912, 73913, 73914, 73915, 73916, 73917, 73918, 73919, 73920, 73921, 73922, 73923, 73924, 73925, 73926, 73927, 73928, 73929, 73930, 73931, 73932, 73933, 73934, 73935, 73936, 73937, 73938, 73939, 73940, 73941, 73942, 73943, 73944, 73945, 73946, 73947, 73948, 73949, 73950, 73951, 73952, 73953, 73954, 73955, 73956, 73957, 73958, 73959, 73960, 73961, 73962, 73963, 73964, 73965, 73966, 73967, 73968, 73969, 73970, 73971, 73972, 73973, 73974, 73975, 73976, 73977, 73978, 73979, 73980, 73981, 73982, 73983, 73984, 73985, 73986, 73987, 73988, 73989, 73990, 73991, 73992, 73993, 73994, 73995, 73996, 73997, 73998, 73999, 74000, 74001, 74002, 74003, 74004, 74005, 74006, 74007, 74008, 74009, 74010, 74011, 74012, 74013, 74014, 74015, 74016, 74017, 74018, 74019, 74020, 74021, 74022, 74023, 74024, 74025, 74026, 74027, 74028, 74029, 74030, 74031, 74032, 74033, 74034, 74035, 74036, 74037, 74038, 74039, 74040, 74041, 74042, 74043, 74044, 74045, 74046, 74047, 74048, 74049, 74050, 74051, 74052, 74053, 74054, 74055, 74056, 74057, 74058, 74059, 74060, 74061, 74062, 74063, 74064, 74065, 74066, 74067, 74068, 74069, 74070, 74071, 74072, 74073, 74074, 74075, 74076, 74077, 74078, 74079, 74080, 74081, 74082, 74083, 74084, 74085, 74086, 74087, 74088, 74089, 74090, 74091, 74092, 74093, 74094, 74095, 74096, 74097, 74098, 74099, 74100, 74101, 74102, 74103, 74104, 74105, 74106, 74107, 74108, 74109, 74110, 74111, 74112, 74113, 74114, 74115, 74116, 74117, 74118, 74119, 74120, 74121, 74122, 74123, 74124, 74125, 74126, 74127, 74128, 74129, 74130, 74131, 74132, 74133, 74134, 74135, 74136, 74137, 74138, 74139, 74140, 74141, 74142, 74143, 74144, 74145, 74146, 74147, 74148, 74149, 74150, 74151, 74152, 74153, 74154, 74155, 74156, 74157, 74158, 74159, 74160, 74161, 74162, 74163, 74164, 74165, 74166, 74167, 74168, 74169, 74170, 74171, 74172, 74173, 74174, 74175, 74176, 74177, 74178, 74179, 74180, 74181, 74182, 74183, 74184, 74185, 74186, 74187, 74188, 74189, 74190, 74191, 74192, 74193, 74194, 74195, 74196, 74197, 74198, 74199, 74200, 74201, 74202, 74203, 74204, 74205, 74206, 74207, 74208, 74209, 74210, 74211, 74212, 74213, 74214, 74215, 74216, 74217, 74218, 74219, 74220, 74221, 74222, 74223, 74224, 74225, 74226, 74227, 74228, 74229, 74230, 74231, 74232, 74233, 74234, 74235, 74236, 74237, 74238, 74239, 74240, 74241, 74242, 74243, 74244, 74245, 74246, 74247, 74248, 74249, 74250, 74251, 74252, 74253, 74254, 74255, 74256, 74257, 74258, 74259, 74260, 74261, 74262, 74263, 74264, 74265, 74266, 74267, 74268, 74269, 74270, 74271, 74272, 74273, 74274, 74275, 74276, 74277, 74278, 74279, 74280, 74281, 74282, 74283, 74284, 74285, 74286, 74287, 74288, 74289, 74290, 74291, 74292, 74293, 74294, 74295, 74296, 74297, 74298, 74299, 74300, 74301, 74302, 74303, 74304, 74305, 74306, 74307, 74308, 74309, 74310, 74311, 74312, 74313, 74314, 74315, 74316, 74317, 74318, 74319, 74320, 74321, 74322, 74323, 74324, 74325, 74326, 74327, 74328, 74329, 74330, 74331, 74332, 74333, 74334, 74335, 74336, 74337, 74338, 74339, 74340, 74341, 74342, 74343, 74344, 74345, 74346, 74347, 74348, 74349, 74350, 74351, 74352, 74353, 74354, 74355, 74356, 74357, 74358, 74359, 74360, 74361, 74362, 74363, 74364, 74365, 74366, 74367, 74368, 74369, 74370, 74371, 74372, 74373, 74374, 74375, 74376, 74377, 74378, 74379, 74380, 74381, 74382, 74383, 74384, 74385, 74386, 74387, 74388, 74389, 74390, 74391, 74392, 74393, 74394, 74395, 74396, 74397, 74398, 74399, 74400, 74401, 74402, 74403, 74404, 74405, 74406, 74407, 74408, 74409, 74410, 74411, 74412, 74413, 74414, 74415, 74416, 74417, 74418, 74419, 74420, 74421, 74422, 74423, 74424, 74425, 74426, 74427, 74428, 74429, 74430, 74431, 74432, 74433, 74434, 74435, 74436, 74437, 74438, 74439, 74440, 74441, 74442, 74443, 74444, 74445, 74446, 74447, 74448, 74449, 74450, 74451, 74452, 74453, 74454, 74455, 74456, 74457, 74458, 74459, 74460, 74461, 74462, 74463, 74464, 74465, 74466, 74467, 74468, 74469, 74470, 74471, 74472, 74473, 74474, 74475, 74476, 74477, 74478, 74479, 74480, 74481, 74482, 74483, 74484, 74485, 74486, 74487, 74488, 74489, 74490, 74491, 74492, 74493, 74494, 74495, 74496, 74497, 74498, 74499, 74500, 74501, 74502, 74503, 74504, 74505, 74506, 74507, 74508, 74509, 74510, 74511, 74512, 74513, 74514, 74515, 74516, 74517, 74518, 74519, 74520, 74521, 74522, 74523, 74524, 74525, 74526, 74527, 74528, 74529, 74530, 74531, 74532, 74533, 74534, 74535, 74536, 74537, 74538, 74539, 74540, 74541, 74542, 74543, 74544, 74545, 74546, 74547, 74548, 74549, 74550, 74551, 74552, 74553, 74554, 74555, 74556, 74557, 74558, 74559, 74560, 74561, 74562, 74563, 74564, 74565, 74566, 74567, 74568, 74569, 74570, 74571, 74572, 74573, 74574, 74575, 74576, 74577, 74578, 74579, 74580, 74581, 74582, 74583, 74584, 74585, 74586, 74587, 74588, 74589, 74590, 74591, 74592, 74593, 74594, 74595, 74596, 74597, 74598, 74599, 74600, 74601, 74602, 74603, 74604, 74605, 74606, 74607, 74608, 74609, 74610, 74611, 74612, 74613, 74614, 74615, 74616, 74617, 74618, 74619, 74620, 74621, 74622, 74623, 74624, 74625, 74626, 74627, 74628, 74629, 74630, 74631, 74632, 74633, 74634, 74635, 74636, 74637, 74638, 74639, 74640, 74641, 74642, 74643, 74644, 74645, 74646, 74647, 74648, 74649, 74880, 74881, 74882, 74883, 74884, 74885, 74886, 74887, 74888, 74889, 74890, 74891, 74892, 74893, 74894, 74895, 74896, 74897, 74898, 74899, 74900, 74901, 74902, 74903, 74904, 74905, 74906, 74907, 74908, 74909, 74910, 74911, 74912, 74913, 74914, 74915, 74916, 74917, 74918, 74919, 74920, 74921, 74922, 74923, 74924, 74925, 74926, 74927, 74928, 74929, 74930, 74931, 74932, 74933, 74934, 74935, 74936, 74937, 74938, 74939, 74940, 74941, 74942, 74943, 74944, 74945, 74946, 74947, 74948, 74949, 74950, 74951, 74952, 74953, 74954, 74955, 74956, 74957, 74958, 74959, 74960, 74961, 74962, 74963, 74964, 74965, 74966, 74967, 74968, 74969, 74970, 74971, 74972, 74973, 74974, 74975, 74976, 74977, 74978, 74979, 74980, 74981, 74982, 74983, 74984, 74985, 74986, 74987, 74988, 74989, 74990, 74991, 74992, 74993, 74994, 74995, 74996, 74997, 74998, 74999, 75000, 75001, 75002, 75003, 75004, 75005, 75006, 75007, 75008, 75009, 75010, 75011, 75012, 75013, 75014, 75015, 75016, 75017, 75018, 75019, 75020, 75021, 75022, 75023, 75024, 75025, 75026, 75027, 75028, 75029, 75030, 75031, 75032, 75033, 75034, 75035, 75036, 75037, 75038, 75039, 75040, 75041, 75042, 75043, 75044, 75045, 75046, 75047, 75048, 75049, 75050, 75051, 75052, 75053, 75054, 75055, 75056, 75057, 75058, 75059, 75060, 75061, 75062, 75063, 75064, 75065, 75066, 75067, 75068, 75069, 75070, 75071, 75072, 75073, 75074, 75075, 77824, 77825, 77826, 77827, 77828, 77829, 77830, 77831, 77832, 77833, 77834, 77835, 77836, 77837, 77838, 77839, 77840, 77841, 77842, 77843, 77844, 77845, 77846, 77847, 77848, 77849, 77850, 77851, 77852, 77853, 77854, 77855, 77856, 77857, 77858, 77859, 77860, 77861, 77862, 77863, 77864, 77865, 77866, 77867, 77868, 77869, 77870, 77871, 77872, 77873, 77874, 77875, 77876, 77877, 77878, 77879, 77880, 77881, 77882, 77883, 77884, 77885, 77886, 77887, 77888, 77889, 77890, 77891, 77892, 77893, 77894, 77895, 77896, 77897, 77898, 77899, 77900, 77901, 77902, 77903, 77904, 77905, 77906, 77907, 77908, 77909, 77910, 77911, 77912, 77913, 77914, 77915, 77916, 77917, 77918, 77919, 77920, 77921, 77922, 77923, 77924, 77925, 77926, 77927, 77928, 77929, 77930, 77931, 77932, 77933, 77934, 77935, 77936, 77937, 77938, 77939, 77940, 77941, 77942, 77943, 77944, 77945, 77946, 77947, 77948, 77949, 77950, 77951, 77952, 77953, 77954, 77955, 77956, 77957, 77958, 77959, 77960, 77961, 77962, 77963, 77964, 77965, 77966, 77967, 77968, 77969, 77970, 77971, 77972, 77973, 77974, 77975, 77976, 77977, 77978, 77979, 77980, 77981, 77982, 77983, 77984, 77985, 77986, 77987, 77988, 77989, 77990, 77991, 77992, 77993, 77994, 77995, 77996, 77997, 77998, 77999, 78000, 78001, 78002, 78003, 78004, 78005, 78006, 78007, 78008, 78009, 78010, 78011, 78012, 78013, 78014, 78015, 78016, 78017, 78018, 78019, 78020, 78021, 78022, 78023, 78024, 78025, 78026, 78027, 78028, 78029, 78030, 78031, 78032, 78033, 78034, 78035, 78036, 78037, 78038, 78039, 78040, 78041, 78042, 78043, 78044, 78045, 78046, 78047, 78048, 78049, 78050, 78051, 78052, 78053, 78054, 78055, 78056, 78057, 78058, 78059, 78060, 78061, 78062, 78063, 78064, 78065, 78066, 78067, 78068, 78069, 78070, 78071, 78072, 78073, 78074, 78075, 78076, 78077, 78078, 78079, 78080, 78081, 78082, 78083, 78084, 78085, 78086, 78087, 78088, 78089, 78090, 78091, 78092, 78093, 78094, 78095, 78096, 78097, 78098, 78099, 78100, 78101, 78102, 78103, 78104, 78105, 78106, 78107, 78108, 78109, 78110, 78111, 78112, 78113, 78114, 78115, 78116, 78117, 78118, 78119, 78120, 78121, 78122, 78123, 78124, 78125, 78126, 78127, 78128, 78129, 78130, 78131, 78132, 78133, 78134, 78135, 78136, 78137, 78138, 78139, 78140, 78141, 78142, 78143, 78144, 78145, 78146, 78147, 78148, 78149, 78150, 78151, 78152, 78153, 78154, 78155, 78156, 78157, 78158, 78159, 78160, 78161, 78162, 78163, 78164, 78165, 78166, 78167, 78168, 78169, 78170, 78171, 78172, 78173, 78174, 78175, 78176, 78177, 78178, 78179, 78180, 78181, 78182, 78183, 78184, 78185, 78186, 78187, 78188, 78189, 78190, 78191, 78192, 78193, 78194, 78195, 78196, 78197, 78198, 78199, 78200, 78201, 78202, 78203, 78204, 78205, 78206, 78207, 78208, 78209, 78210, 78211, 78212, 78213, 78214, 78215, 78216, 78217, 78218, 78219, 78220, 78221, 78222, 78223, 78224, 78225, 78226, 78227, 78228, 78229, 78230, 78231, 78232, 78233, 78234, 78235, 78236, 78237, 78238, 78239, 78240, 78241, 78242, 78243, 78244, 78245, 78246, 78247, 78248, 78249, 78250, 78251, 78252, 78253, 78254, 78255, 78256, 78257, 78258, 78259, 78260, 78261, 78262, 78263, 78264, 78265, 78266, 78267, 78268, 78269, 78270, 78271, 78272, 78273, 78274, 78275, 78276, 78277, 78278, 78279, 78280, 78281, 78282, 78283, 78284, 78285, 78286, 78287, 78288, 78289, 78290, 78291, 78292, 78293, 78294, 78295, 78296, 78297, 78298, 78299, 78300, 78301, 78302, 78303, 78304, 78305, 78306, 78307, 78308, 78309, 78310, 78311, 78312, 78313, 78314, 78315, 78316, 78317, 78318, 78319, 78320, 78321, 78322, 78323, 78324, 78325, 78326, 78327, 78328, 78329, 78330, 78331, 78332, 78333, 78334, 78335, 78336, 78337, 78338, 78339, 78340, 78341, 78342, 78343, 78344, 78345, 78346, 78347, 78348, 78349, 78350, 78351, 78352, 78353, 78354, 78355, 78356, 78357, 78358, 78359, 78360, 78361, 78362, 78363, 78364, 78365, 78366, 78367, 78368, 78369, 78370, 78371, 78372, 78373, 78374, 78375, 78376, 78377, 78378, 78379, 78380, 78381, 78382, 78383, 78384, 78385, 78386, 78387, 78388, 78389, 78390, 78391, 78392, 78393, 78394, 78395, 78396, 78397, 78398, 78399, 78400, 78401, 78402, 78403, 78404, 78405, 78406, 78407, 78408, 78409, 78410, 78411, 78412, 78413, 78414, 78415, 78416, 78417, 78418, 78419, 78420, 78421, 78422, 78423, 78424, 78425, 78426, 78427, 78428, 78429, 78430, 78431, 78432, 78433, 78434, 78435, 78436, 78437, 78438, 78439, 78440, 78441, 78442, 78443, 78444, 78445, 78446, 78447, 78448, 78449, 78450, 78451, 78452, 78453, 78454, 78455, 78456, 78457, 78458, 78459, 78460, 78461, 78462, 78463, 78464, 78465, 78466, 78467, 78468, 78469, 78470, 78471, 78472, 78473, 78474, 78475, 78476, 78477, 78478, 78479, 78480, 78481, 78482, 78483, 78484, 78485, 78486, 78487, 78488, 78489, 78490, 78491, 78492, 78493, 78494, 78495, 78496, 78497, 78498, 78499, 78500, 78501, 78502, 78503, 78504, 78505, 78506, 78507, 78508, 78509, 78510, 78511, 78512, 78513, 78514, 78515, 78516, 78517, 78518, 78519, 78520, 78521, 78522, 78523, 78524, 78525, 78526, 78527, 78528, 78529, 78530, 78531, 78532, 78533, 78534, 78535, 78536, 78537, 78538, 78539, 78540, 78541, 78542, 78543, 78544, 78545, 78546, 78547, 78548, 78549, 78550, 78551, 78552, 78553, 78554, 78555, 78556, 78557, 78558, 78559, 78560, 78561, 78562, 78563, 78564, 78565, 78566, 78567, 78568, 78569, 78570, 78571, 78572, 78573, 78574, 78575, 78576, 78577, 78578, 78579, 78580, 78581, 78582, 78583, 78584, 78585, 78586, 78587, 78588, 78589, 78590, 78591, 78592, 78593, 78594, 78595, 78596, 78597, 78598, 78599, 78600, 78601, 78602, 78603, 78604, 78605, 78606, 78607, 78608, 78609, 78610, 78611, 78612, 78613, 78614, 78615, 78616, 78617, 78618, 78619, 78620, 78621, 78622, 78623, 78624, 78625, 78626, 78627, 78628, 78629, 78630, 78631, 78632, 78633, 78634, 78635, 78636, 78637, 78638, 78639, 78640, 78641, 78642, 78643, 78644, 78645, 78646, 78647, 78648, 78649, 78650, 78651, 78652, 78653, 78654, 78655, 78656, 78657, 78658, 78659, 78660, 78661, 78662, 78663, 78664, 78665, 78666, 78667, 78668, 78669, 78670, 78671, 78672, 78673, 78674, 78675, 78676, 78677, 78678, 78679, 78680, 78681, 78682, 78683, 78684, 78685, 78686, 78687, 78688, 78689, 78690, 78691, 78692, 78693, 78694, 78695, 78696, 78697, 78698, 78699, 78700, 78701, 78702, 78703, 78704, 78705, 78706, 78707, 78708, 78709, 78710, 78711, 78712, 78713, 78714, 78715, 78716, 78717, 78718, 78719, 78720, 78721, 78722, 78723, 78724, 78725, 78726, 78727, 78728, 78729, 78730, 78731, 78732, 78733, 78734, 78735, 78736, 78737, 78738, 78739, 78740, 78741, 78742, 78743, 78744, 78745, 78746, 78747, 78748, 78749, 78750, 78751, 78752, 78753, 78754, 78755, 78756, 78757, 78758, 78759, 78760, 78761, 78762, 78763, 78764, 78765, 78766, 78767, 78768, 78769, 78770, 78771, 78772, 78773, 78774, 78775, 78776, 78777, 78778, 78779, 78780, 78781, 78782, 78783, 78784, 78785, 78786, 78787, 78788, 78789, 78790, 78791, 78792, 78793, 78794, 78795, 78796, 78797, 78798, 78799, 78800, 78801, 78802, 78803, 78804, 78805, 78806, 78807, 78808, 78809, 78810, 78811, 78812, 78813, 78814, 78815, 78816, 78817, 78818, 78819, 78820, 78821, 78822, 78823, 78824, 78825, 78826, 78827, 78828, 78829, 78830, 78831, 78832, 78833, 78834, 78835, 78836, 78837, 78838, 78839, 78840, 78841, 78842, 78843, 78844, 78845, 78846, 78847, 78848, 78849, 78850, 78851, 78852, 78853, 78854, 78855, 78856, 78857, 78858, 78859, 78860, 78861, 78862, 78863, 78864, 78865, 78866, 78867, 78868, 78869, 78870, 78871, 78872, 78873, 78874, 78875, 78876, 78877, 78878, 78879, 78880, 78881, 78882, 78883, 78884, 78885, 78886, 78887, 78888, 78889, 78890, 78891, 78892, 78893, 78894, 82944, 82945, 82946, 82947, 82948, 82949, 82950, 82951, 82952, 82953, 82954, 82955, 82956, 82957, 82958, 82959, 82960, 82961, 82962, 82963, 82964, 82965, 82966, 82967, 82968, 82969, 82970, 82971, 82972, 82973, 82974, 82975, 82976, 82977, 82978, 82979, 82980, 82981, 82982, 82983, 82984, 82985, 82986, 82987, 82988, 82989, 82990, 82991, 82992, 82993, 82994, 82995, 82996, 82997, 82998, 82999, 83000, 83001, 83002, 83003, 83004, 83005, 83006, 83007, 83008, 83009, 83010, 83011, 83012, 83013, 83014, 83015, 83016, 83017, 83018, 83019, 83020, 83021, 83022, 83023, 83024, 83025, 83026, 83027, 83028, 83029, 83030, 83031, 83032, 83033, 83034, 83035, 83036, 83037, 83038, 83039, 83040, 83041, 83042, 83043, 83044, 83045, 83046, 83047, 83048, 83049, 83050, 83051, 83052, 83053, 83054, 83055, 83056, 83057, 83058, 83059, 83060, 83061, 83062, 83063, 83064, 83065, 83066, 83067, 83068, 83069, 83070, 83071, 83072, 83073, 83074, 83075, 83076, 83077, 83078, 83079, 83080, 83081, 83082, 83083, 83084, 83085, 83086, 83087, 83088, 83089, 83090, 83091, 83092, 83093, 83094, 83095, 83096, 83097, 83098, 83099, 83100, 83101, 83102, 83103, 83104, 83105, 83106, 83107, 83108, 83109, 83110, 83111, 83112, 83113, 83114, 83115, 83116, 83117, 83118, 83119, 83120, 83121, 83122, 83123, 83124, 83125, 83126, 83127, 83128, 83129, 83130, 83131, 83132, 83133, 83134, 83135, 83136, 83137, 83138, 83139, 83140, 83141, 83142, 83143, 83144, 83145, 83146, 83147, 83148, 83149, 83150, 83151, 83152, 83153, 83154, 83155, 83156, 83157, 83158, 83159, 83160, 83161, 83162, 83163, 83164, 83165, 83166, 83167, 83168, 83169, 83170, 83171, 83172, 83173, 83174, 83175, 83176, 83177, 83178, 83179, 83180, 83181, 83182, 83183, 83184, 83185, 83186, 83187, 83188, 83189, 83190, 83191, 83192, 83193, 83194, 83195, 83196, 83197, 83198, 83199, 83200, 83201, 83202, 83203, 83204, 83205, 83206, 83207, 83208, 83209, 83210, 83211, 83212, 83213, 83214, 83215, 83216, 83217, 83218, 83219, 83220, 83221, 83222, 83223, 83224, 83225, 83226, 83227, 83228, 83229, 83230, 83231, 83232, 83233, 83234, 83235, 83236, 83237, 83238, 83239, 83240, 83241, 83242, 83243, 83244, 83245, 83246, 83247, 83248, 83249, 83250, 83251, 83252, 83253, 83254, 83255, 83256, 83257, 83258, 83259, 83260, 83261, 83262, 83263, 83264, 83265, 83266, 83267, 83268, 83269, 83270, 83271, 83272, 83273, 83274, 83275, 83276, 83277, 83278, 83279, 83280, 83281, 83282, 83283, 83284, 83285, 83286, 83287, 83288, 83289, 83290, 83291, 83292, 83293, 83294, 83295, 83296, 83297, 83298, 83299, 83300, 83301, 83302, 83303, 83304, 83305, 83306, 83307, 83308, 83309, 83310, 83311, 83312, 83313, 83314, 83315, 83316, 83317, 83318, 83319, 83320, 83321, 83322, 83323, 83324, 83325, 83326, 83327, 83328, 83329, 83330, 83331, 83332, 83333, 83334, 83335, 83336, 83337, 83338, 83339, 83340, 83341, 83342, 83343, 83344, 83345, 83346, 83347, 83348, 83349, 83350, 83351, 83352, 83353, 83354, 83355, 83356, 83357, 83358, 83359, 83360, 83361, 83362, 83363, 83364, 83365, 83366, 83367, 83368, 83369, 83370, 83371, 83372, 83373, 83374, 83375, 83376, 83377, 83378, 83379, 83380, 83381, 83382, 83383, 83384, 83385, 83386, 83387, 83388, 83389, 83390, 83391, 83392, 83393, 83394, 83395, 83396, 83397, 83398, 83399, 83400, 83401, 83402, 83403, 83404, 83405, 83406, 83407, 83408, 83409, 83410, 83411, 83412, 83413, 83414, 83415, 83416, 83417, 83418, 83419, 83420, 83421, 83422, 83423, 83424, 83425, 83426, 83427, 83428, 83429, 83430, 83431, 83432, 83433, 83434, 83435, 83436, 83437, 83438, 83439, 83440, 83441, 83442, 83443, 83444, 83445, 83446, 83447, 83448, 83449, 83450, 83451, 83452, 83453, 83454, 83455, 83456, 83457, 83458, 83459, 83460, 83461, 83462, 83463, 83464, 83465, 83466, 83467, 83468, 83469, 83470, 83471, 83472, 83473, 83474, 83475, 83476, 83477, 83478, 83479, 83480, 83481, 83482, 83483, 83484, 83485, 83486, 83487, 83488, 83489, 83490, 83491, 83492, 83493, 83494, 83495, 83496, 83497, 83498, 83499, 83500, 83501, 83502, 83503, 83504, 83505, 83506, 83507, 83508, 83509, 83510, 83511, 83512, 83513, 83514, 83515, 83516, 83517, 83518, 83519, 83520, 83521, 83522, 83523, 83524, 83525, 83526, 92160, 92161, 92162, 92163, 92164, 92165, 92166, 92167, 92168, 92169, 92170, 92171, 92172, 92173, 92174, 92175, 92176, 92177, 92178, 92179, 92180, 92181, 92182, 92183, 92184, 92185, 92186, 92187, 92188, 92189, 92190, 92191, 92192, 92193, 92194, 92195, 92196, 92197, 92198, 92199, 92200, 92201, 92202, 92203, 92204, 92205, 92206, 92207, 92208, 92209, 92210, 92211, 92212, 92213, 92214, 92215, 92216, 92217, 92218, 92219, 92220, 92221, 92222, 92223, 92224, 92225, 92226, 92227, 92228, 92229, 92230, 92231, 92232, 92233, 92234, 92235, 92236, 92237, 92238, 92239, 92240, 92241, 92242, 92243, 92244, 92245, 92246, 92247, 92248, 92249, 92250, 92251, 92252, 92253, 92254, 92255, 92256, 92257, 92258, 92259, 92260, 92261, 92262, 92263, 92264, 92265, 92266, 92267, 92268, 92269, 92270, 92271, 92272, 92273, 92274, 92275, 92276, 92277, 92278, 92279, 92280, 92281, 92282, 92283, 92284, 92285, 92286, 92287, 92288, 92289, 92290, 92291, 92292, 92293, 92294, 92295, 92296, 92297, 92298, 92299, 92300, 92301, 92302, 92303, 92304, 92305, 92306, 92307, 92308, 92309, 92310, 92311, 92312, 92313, 92314, 92315, 92316, 92317, 92318, 92319, 92320, 92321, 92322, 92323, 92324, 92325, 92326, 92327, 92328, 92329, 92330, 92331, 92332, 92333, 92334, 92335, 92336, 92337, 92338, 92339, 92340, 92341, 92342, 92343, 92344, 92345, 92346, 92347, 92348, 92349, 92350, 92351, 92352, 92353, 92354, 92355, 92356, 92357, 92358, 92359, 92360, 92361, 92362, 92363, 92364, 92365, 92366, 92367, 92368, 92369, 92370, 92371, 92372, 92373, 92374, 92375, 92376, 92377, 92378, 92379, 92380, 92381, 92382, 92383, 92384, 92385, 92386, 92387, 92388, 92389, 92390, 92391, 92392, 92393, 92394, 92395, 92396, 92397, 92398, 92399, 92400, 92401, 92402, 92403, 92404, 92405, 92406, 92407, 92408, 92409, 92410, 92411, 92412, 92413, 92414, 92415, 92416, 92417, 92418, 92419, 92420, 92421, 92422, 92423, 92424, 92425, 92426, 92427, 92428, 92429, 92430, 92431, 92432, 92433, 92434, 92435, 92436, 92437, 92438, 92439, 92440, 92441, 92442, 92443, 92444, 92445, 92446, 92447, 92448, 92449, 92450, 92451, 92452, 92453, 92454, 92455, 92456, 92457, 92458, 92459, 92460, 92461, 92462, 92463, 92464, 92465, 92466, 92467, 92468, 92469, 92470, 92471, 92472, 92473, 92474, 92475, 92476, 92477, 92478, 92479, 92480, 92481, 92482, 92483, 92484, 92485, 92486, 92487, 92488, 92489, 92490, 92491, 92492, 92493, 92494, 92495, 92496, 92497, 92498, 92499, 92500, 92501, 92502, 92503, 92504, 92505, 92506, 92507, 92508, 92509, 92510, 92511, 92512, 92513, 92514, 92515, 92516, 92517, 92518, 92519, 92520, 92521, 92522, 92523, 92524, 92525, 92526, 92527, 92528, 92529, 92530, 92531, 92532, 92533, 92534, 92535, 92536, 92537, 92538, 92539, 92540, 92541, 92542, 92543, 92544, 92545, 92546, 92547, 92548, 92549, 92550, 92551, 92552, 92553, 92554, 92555, 92556, 92557, 92558, 92559, 92560, 92561, 92562, 92563, 92564, 92565, 92566, 92567, 92568, 92569, 92570, 92571, 92572, 92573, 92574, 92575, 92576, 92577, 92578, 92579, 92580, 92581, 92582, 92583, 92584, 92585, 92586, 92587, 92588, 92589, 92590, 92591, 92592, 92593, 92594, 92595, 92596, 92597, 92598, 92599, 92600, 92601, 92602, 92603, 92604, 92605, 92606, 92607, 92608, 92609, 92610, 92611, 92612, 92613, 92614, 92615, 92616, 92617, 92618, 92619, 92620, 92621, 92622, 92623, 92624, 92625, 92626, 92627, 92628, 92629, 92630, 92631, 92632, 92633, 92634, 92635, 92636, 92637, 92638, 92639, 92640, 92641, 92642, 92643, 92644, 92645, 92646, 92647, 92648, 92649, 92650, 92651, 92652, 92653, 92654, 92655, 92656, 92657, 92658, 92659, 92660, 92661, 92662, 92663, 92664, 92665, 92666, 92667, 92668, 92669, 92670, 92671, 92672, 92673, 92674, 92675, 92676, 92677, 92678, 92679, 92680, 92681, 92682, 92683, 92684, 92685, 92686, 92687, 92688, 92689, 92690, 92691, 92692, 92693, 92694, 92695, 92696, 92697, 92698, 92699, 92700, 92701, 92702, 92703, 92704, 92705, 92706, 92707, 92708, 92709, 92710, 92711, 92712, 92713, 92714, 92715, 92716, 92717, 92718, 92719, 92720, 92721, 92722, 92723, 92724, 92725, 92726, 92727, 92728, 92736, 92737, 92738, 92739, 92740, 92741, 92742, 92743, 92744, 92745, 92746, 92747, 92748, 92749, 92750, 92751, 92752, 92753, 92754, 92755, 92756, 92757, 92758, 92759, 92760, 92761, 92762, 92763, 92764, 92765, 92766, 92880, 92881, 92882, 92883, 92884, 92885, 92886, 92887, 92888, 92889, 92890, 92891, 92892, 92893, 92894, 92895, 92896, 92897, 92898, 92899, 92900, 92901, 92902, 92903, 92904, 92905, 92906, 92907, 92908, 92909, 92928, 92929, 92930, 92931, 92932, 92933, 92934, 92935, 92936, 92937, 92938, 92939, 92940, 92941, 92942, 92943, 92944, 92945, 92946, 92947, 92948, 92949, 92950, 92951, 92952, 92953, 92954, 92955, 92956, 92957, 92958, 92959, 92960, 92961, 92962, 92963, 92964, 92965, 92966, 92967, 92968, 92969, 92970, 92971, 92972, 92973, 92974, 92975, 92992, 92993, 92994, 92995, 93027, 93028, 93029, 93030, 93031, 93032, 93033, 93034, 93035, 93036, 93037, 93038, 93039, 93040, 93041, 93042, 93043, 93044, 93045, 93046, 93047, 93053, 93054, 93055, 93056, 93057, 93058, 93059, 93060, 93061, 93062, 93063, 93064, 93065, 93066, 93067, 93068, 93069, 93070, 93071, 93952, 93953, 93954, 93955, 93956, 93957, 93958, 93959, 93960, 93961, 93962, 93963, 93964, 93965, 93966, 93967, 93968, 93969, 93970, 93971, 93972, 93973, 93974, 93975, 93976, 93977, 93978, 93979, 93980, 93981, 93982, 93983, 93984, 93985, 93986, 93987, 93988, 93989, 93990, 93991, 93992, 93993, 93994, 93995, 93996, 93997, 93998, 93999, 94000, 94001, 94002, 94003, 94004, 94005, 94006, 94007, 94008, 94009, 94010, 94011, 94012, 94013, 94014, 94015, 94016, 94017, 94018, 94019, 94020, 94032, 94099, 94100, 94101, 94102, 94103, 94104, 94105, 94106, 94107, 94108, 94109, 94110, 94111, 110592, 110593, 113664, 113665, 113666, 113667, 113668, 113669, 113670, 113671, 113672, 113673, 113674, 113675, 113676, 113677, 113678, 113679, 113680, 113681, 113682, 113683, 113684, 113685, 113686, 113687, 113688, 113689, 113690, 113691, 113692, 113693, 113694, 113695, 113696, 113697, 113698, 113699, 113700, 113701, 113702, 113703, 113704, 113705, 113706, 113707, 113708, 113709, 113710, 113711, 113712, 113713, 113714, 113715, 113716, 113717, 113718, 113719, 113720, 113721, 113722, 113723, 113724, 113725, 113726, 113727, 113728, 113729, 113730, 113731, 113732, 113733, 113734, 113735, 113736, 113737, 113738, 113739, 113740, 113741, 113742, 113743, 113744, 113745, 113746, 113747, 113748, 113749, 113750, 113751, 113752, 113753, 113754, 113755, 113756, 113757, 113758, 113759, 113760, 113761, 113762, 113763, 113764, 113765, 113766, 113767, 113768, 113769, 113770, 113776, 113777, 113778, 113779, 113780, 113781, 113782, 113783, 113784, 113785, 113786, 113787, 113788, 113792, 113793, 113794, 113795, 113796, 113797, 113798, 113799, 113800, 113808, 113809, 113810, 113811, 113812, 113813, 113814, 113815, 113816, 113817, 119808, 119809, 119810, 119811, 119812, 119813, 119814, 119815, 119816, 119817, 119818, 119819, 119820, 119821, 119822, 119823, 119824, 119825, 119826, 119827, 119828, 119829, 119830, 119831, 119832, 119833, 119834, 119835, 119836, 119837, 119838, 119839, 119840, 119841, 119842, 119843, 119844, 119845, 119846, 119847, 119848, 119849, 119850, 119851, 119852, 119853, 119854, 119855, 119856, 119857, 119858, 119859, 119860, 119861, 119862, 119863, 119864, 119865, 119866, 119867, 119868, 119869, 119870, 119871, 119872, 119873, 119874, 119875, 119876, 119877, 119878, 119879, 119880, 119881, 119882, 119883, 119884, 119885, 119886, 119887, 119888, 119889, 119890, 119891, 119892, 119894, 119895, 119896, 119897, 119898, 119899, 119900, 119901, 119902, 119903, 119904, 119905, 119906, 119907, 119908, 119909, 119910, 119911, 119912, 119913, 119914, 119915, 119916, 119917, 119918, 119919, 119920, 119921, 119922, 119923, 119924, 119925, 119926, 119927, 119928, 119929, 119930, 119931, 119932, 119933, 119934, 119935, 119936, 119937, 119938, 119939, 119940, 119941, 119942, 119943, 119944, 119945, 119946, 119947, 119948, 119949, 119950, 119951, 119952, 119953, 119954, 119955, 119956, 119957, 119958, 119959, 119960, 119961, 119962, 119963, 119964, 119966, 119967, 119970, 119973, 119974, 119977, 119978, 119979, 119980, 119982, 119983, 119984, 119985, 119986, 119987, 119988, 119989, 119990, 119991, 119992, 119993, 119995, 119997, 119998, 119999, 120000, 120001, 120002, 120003, 120005, 120006, 120007, 120008, 120009, 120010, 120011, 120012, 120013, 120014, 120015, 120016, 120017, 120018, 120019, 120020, 120021, 120022, 120023, 120024, 120025, 120026, 120027, 120028, 120029, 120030, 120031, 120032, 120033, 120034, 120035, 120036, 120037, 120038, 120039, 120040, 120041, 120042, 120043, 120044, 120045, 120046, 120047, 120048, 120049, 120050, 120051, 120052, 120053, 120054, 120055, 120056, 120057, 120058, 120059, 120060, 120061, 120062, 120063, 120064, 120065, 120066, 120067, 120068, 120069, 120071, 120072, 120073, 120074, 120077, 120078, 120079, 120080, 120081, 120082, 120083, 120084, 120086, 120087, 120088, 120089, 120090, 120091, 120092, 120094, 120095, 120096, 120097, 120098, 120099, 120100, 120101, 120102, 120103, 120104, 120105, 120106, 120107, 120108, 120109, 120110, 120111, 120112, 120113, 120114, 120115, 120116, 120117, 120118, 120119, 120120, 120121, 120123, 120124, 120125, 120126, 120128, 120129, 120130, 120131, 120132, 120134, 120138, 120139, 120140, 120141, 120142, 120143, 120144, 120146, 120147, 120148, 120149, 120150, 120151, 120152, 120153, 120154, 120155, 120156, 120157, 120158, 120159, 120160, 120161, 120162, 120163, 120164, 120165, 120166, 120167, 120168, 120169, 120170, 120171, 120172, 120173, 120174, 120175, 120176, 120177, 120178, 120179, 120180, 120181, 120182, 120183, 120184, 120185, 120186, 120187, 120188, 120189, 120190, 120191, 120192, 120193, 120194, 120195, 120196, 120197, 120198, 120199, 120200, 120201, 120202, 120203, 120204, 120205, 120206, 120207, 120208, 120209, 120210, 120211, 120212, 120213, 120214, 120215, 120216, 120217, 120218, 120219, 120220, 120221, 120222, 120223, 120224, 120225, 120226, 120227, 120228, 120229, 120230, 120231, 120232, 120233, 120234, 120235, 120236, 120237, 120238, 120239, 120240, 120241, 120242, 120243, 120244, 120245, 120246, 120247, 120248, 120249, 120250, 120251, 120252, 120253, 120254, 120255, 120256, 120257, 120258, 120259, 120260, 120261, 120262, 120263, 120264, 120265, 120266, 120267, 120268, 120269, 120270, 120271, 120272, 120273, 120274, 120275, 120276, 120277, 120278, 120279, 120280, 120281, 120282, 120283, 120284, 120285, 120286, 120287, 120288, 120289, 120290, 120291, 120292, 120293, 120294, 120295, 120296, 120297, 120298, 120299, 120300, 120301, 120302, 120303, 120304, 120305, 120306, 120307, 120308, 120309, 120310, 120311, 120312, 120313, 120314, 120315, 120316, 120317, 120318, 120319, 120320, 120321, 120322, 120323, 120324, 120325, 120326, 120327, 120328, 120329, 120330, 120331, 120332, 120333, 120334, 120335, 120336, 120337, 120338, 120339, 120340, 120341, 120342, 120343, 120344, 120345, 120346, 120347, 120348, 120349, 120350, 120351, 120352, 120353, 120354, 120355, 120356, 120357, 120358, 120359, 120360, 120361, 120362, 120363, 120364, 120365, 120366, 120367, 120368, 120369, 120370, 120371, 120372, 120373, 120374, 120375, 120376, 120377, 120378, 120379, 120380, 120381, 120382, 120383, 120384, 120385, 120386, 120387, 120388, 120389, 120390, 120391, 120392, 120393, 120394, 120395, 120396, 120397, 120398, 120399, 120400, 120401, 120402, 120403, 120404, 120405, 120406, 120407, 120408, 120409, 120410, 120411, 120412, 120413, 120414, 120415, 120416, 120417, 120418, 120419, 120420, 120421, 120422, 120423, 120424, 120425, 120426, 120427, 120428, 120429, 120430, 120431, 120432, 120433, 120434, 120435, 120436, 120437, 120438, 120439, 120440, 120441, 120442, 120443, 120444, 120445, 120446, 120447, 120448, 120449, 120450, 120451, 120452, 120453, 120454, 120455, 120456, 120457, 120458, 120459, 120460, 120461, 120462, 120463, 120464, 120465, 120466, 120467, 120468, 120469, 120470, 120471, 120472, 120473, 120474, 120475, 120476, 120477, 120478, 120479, 120480, 120481, 120482, 120483, 120484, 120485, 120488, 120489, 120490, 120491, 120492, 120493, 120494, 120495, 120496, 120497, 120498, 120499, 120500, 120501, 120502, 120503, 120504, 120505, 120506, 120507, 120508, 120509, 120510, 120511, 120512, 120514, 120515, 120516, 120517, 120518, 120519, 120520, 120521, 120522, 120523, 120524, 120525, 120526, 120527, 120528, 120529, 120530, 120531, 120532, 120533, 120534, 120535, 120536, 120537, 120538, 120540, 120541, 120542, 120543, 120544, 120545, 120546, 120547, 120548, 120549, 120550, 120551, 120552, 120553, 120554, 120555, 120556, 120557, 120558, 120559, 120560, 120561, 120562, 120563, 120564, 120565, 120566, 120567, 120568, 120569, 120570, 120572, 120573, 120574, 120575, 120576, 120577, 120578, 120579, 120580, 120581, 120582, 120583, 120584, 120585, 120586, 120587, 120588, 120589, 120590, 120591, 120592, 120593, 120594, 120595, 120596, 120598, 120599, 120600, 120601, 120602, 120603, 120604, 120605, 120606, 120607, 120608, 120609, 120610, 120611, 120612, 120613, 120614, 120615, 120616, 120617, 120618, 120619, 120620, 120621, 120622, 120623, 120624, 120625, 120626, 120627, 120628, 120630, 120631, 120632, 120633, 120634, 120635, 120636, 120637, 120638, 120639, 120640, 120641, 120642, 120643, 120644, 120645, 120646, 120647, 120648, 120649, 120650, 120651, 120652, 120653, 120654, 120656, 120657, 120658, 120659, 120660, 120661, 120662, 120663, 120664, 120665, 120666, 120667, 120668, 120669, 120670, 120671, 120672, 120673, 120674, 120675, 120676, 120677, 120678, 120679, 120680, 120681, 120682, 120683, 120684, 120685, 120686, 120688, 120689, 120690, 120691, 120692, 120693, 120694, 120695, 120696, 120697, 120698, 120699, 120700, 120701, 120702, 120703, 120704, 120705, 120706, 120707, 120708, 120709, 120710, 120711, 120712, 120714, 120715, 120716, 120717, 120718, 120719, 120720, 120721, 120722, 120723, 120724, 120725, 120726, 120727, 120728, 120729, 120730, 120731, 120732, 120733, 120734, 120735, 120736, 120737, 120738, 120739, 120740, 120741, 120742, 120743, 120744, 120746, 120747, 120748, 120749, 120750, 120751, 120752, 120753, 120754, 120755, 120756, 120757, 120758, 120759, 120760, 120761, 120762, 120763, 120764, 120765, 120766, 120767, 120768, 120769, 120770, 120772, 120773, 120774, 120775, 120776, 120777, 120778, 120779, 124928, 124929, 124930, 124931, 124932, 124933, 124934, 124935, 124936, 124937, 124938, 124939, 124940, 124941, 124942, 124943, 124944, 124945, 124946, 124947, 124948, 124949, 124950, 124951, 124952, 124953, 124954, 124955, 124956, 124957, 124958, 124959, 124960, 124961, 124962, 124963, 124964, 124965, 124966, 124967, 124968, 124969, 124970, 124971, 124972, 124973, 124974, 124975, 124976, 124977, 124978, 124979, 124980, 124981, 124982, 124983, 124984, 124985, 124986, 124987, 124988, 124989, 124990, 124991, 124992, 124993, 124994, 124995, 124996, 124997, 124998, 124999, 125000, 125001, 125002, 125003, 125004, 125005, 125006, 125007, 125008, 125009, 125010, 125011, 125012, 125013, 125014, 125015, 125016, 125017, 125018, 125019, 125020, 125021, 125022, 125023, 125024, 125025, 125026, 125027, 125028, 125029, 125030, 125031, 125032, 125033, 125034, 125035, 125036, 125037, 125038, 125039, 125040, 125041, 125042, 125043, 125044, 125045, 125046, 125047, 125048, 125049, 125050, 125051, 125052, 125053, 125054, 125055, 125056, 125057, 125058, 125059, 125060, 125061, 125062, 125063, 125064, 125065, 125066, 125067, 125068, 125069, 125070, 125071, 125072, 125073, 125074, 125075, 125076, 125077, 125078, 125079, 125080, 125081, 125082, 125083, 125084, 125085, 125086, 125087, 125088, 125089, 125090, 125091, 125092, 125093, 125094, 125095, 125096, 125097, 125098, 125099, 125100, 125101, 125102, 125103, 125104, 125105, 125106, 125107, 125108, 125109, 125110, 125111, 125112, 125113, 125114, 125115, 125116, 125117, 125118, 125119, 125120, 125121, 125122, 125123, 125124, 126464, 126465, 126466, 126467, 126469, 126470, 126471, 126472, 126473, 126474, 126475, 126476, 126477, 126478, 126479, 126480, 126481, 126482, 126483, 126484, 126485, 126486, 126487, 126488, 126489, 126490, 126491, 126492, 126493, 126494, 126495, 126497, 126498, 126500, 126503, 126505, 126506, 126507, 126508, 126509, 126510, 126511, 126512, 126513, 126514, 126516, 126517, 126518, 126519, 126521, 126523, 126530, 126535, 126537, 126539, 126541, 126542, 126543, 126545, 126546, 126548, 126551, 126553, 126555, 126557, 126559, 126561, 126562, 126564, 126567, 126568, 126569, 126570, 126572, 126573, 126574, 126575, 126576, 126577, 126578, 126580, 126581, 126582, 126583, 126585, 126586, 126587, 126588, 126590, 126592, 126593, 126594, 126595, 126596, 126597, 126598, 126599, 126600, 126601, 126603, 126604, 126605, 126606, 126607, 126608, 126609, 126610, 126611, 126612, 126613, 126614, 126615, 126616, 126617, 126618, 126619, 126625, 126626, 126627, 126629, 126630, 126631, 126632, 126633, 126635, 126636, 126637, 126638, 126639, 126640, 126641, 126642, 126643, 126644, 126645, 126646, 126647, 126648, 126649, 126650, 126651, 131072, 173782, 173824, 177972, 177984, 178205, 178208, 183969, 194560, 194561, 194562, 194563, 194564, 194565, 194566, 194567, 194568, 194569, 194570, 194571, 194572, 194573, 194574, 194575, 194576, 194577, 194578, 194579, 194580, 194581, 194582, 194583, 194584, 194585, 194586, 194587, 194588, 194589, 194590, 194591, 194592, 194593, 194594, 194595, 194596, 194597, 194598, 194599, 194600, 194601, 194602, 194603, 194604, 194605, 194606, 194607, 194608, 194609, 194610, 194611, 194612, 194613, 194614, 194615, 194616, 194617, 194618, 194619, 194620, 194621, 194622, 194623, 194624, 194625, 194626, 194627, 194628, 194629, 194630, 194631, 194632, 194633, 194634, 194635, 194636, 194637, 194638, 194639, 194640, 194641, 194642, 194643, 194644, 194645, 194646, 194647, 194648, 194649, 194650, 194651, 194652, 194653, 194654, 194655, 194656, 194657, 194658, 194659, 194660, 194661, 194662, 194663, 194664, 194665, 194666, 194667, 194668, 194669, 194670, 194671, 194672, 194673, 194674, 194675, 194676, 194677, 194678, 194679, 194680, 194681, 194682, 194683, 194684, 194685, 194686, 194687, 194688, 194689, 194690, 194691, 194692, 194693, 194694, 194695, 194696, 194697, 194698, 194699, 194700, 194701, 194702, 194703, 194704, 194705, 194706, 194707, 194708, 194709, 194710, 194711, 194712, 194713, 194714, 194715, 194716, 194717, 194718, 194719, 194720, 194721, 194722, 194723, 194724, 194725, 194726, 194727, 194728, 194729, 194730, 194731, 194732, 194733, 194734, 194735, 194736, 194737, 194738, 194739, 194740, 194741, 194742, 194743, 194744, 194745, 194746, 194747, 194748, 194749, 194750, 194751, 194752, 194753, 194754, 194755, 194756, 194757, 194758, 194759, 194760, 194761, 194762, 194763, 194764, 194765, 194766, 194767, 194768, 194769, 194770, 194771, 194772, 194773, 194774, 194775, 194776, 194777, 194778, 194779, 194780, 194781, 194782, 194783, 194784, 194785, 194786, 194787, 194788, 194789, 194790, 194791, 194792, 194793, 194794, 194795, 194796, 194797, 194798, 194799, 194800, 194801, 194802, 194803, 194804, 194805, 194806, 194807, 194808, 194809, 194810, 194811, 194812, 194813, 194814, 194815, 194816, 194817, 194818, 194819, 194820, 194821, 194822, 194823, 194824, 194825, 194826, 194827, 194828, 194829, 194830, 194831, 194832, 194833, 194834, 194835, 194836, 194837, 194838, 194839, 194840, 194841, 194842, 194843, 194844, 194845, 194846, 194847, 194848, 194849, 194850, 194851, 194852, 194853, 194854, 194855, 194856, 194857, 194858, 194859, 194860, 194861, 194862, 194863, 194864, 194865, 194866, 194867, 194868, 194869, 194870, 194871, 194872, 194873, 194874, 194875, 194876, 194877, 194878, 194879, 194880, 194881, 194882, 194883, 194884, 194885, 194886, 194887, 194888, 194889, 194890, 194891, 194892, 194893, 194894, 194895, 194896, 194897, 194898, 194899, 194900, 194901, 194902, 194903, 194904, 194905, 194906, 194907, 194908, 194909, 194910, 194911, 194912, 194913, 194914, 194915, 194916, 194917, 194918, 194919, 194920, 194921, 194922, 194923, 194924, 194925, 194926, 194927, 194928, 194929, 194930, 194931, 194932, 194933, 194934, 194935, 194936, 194937, 194938, 194939, 194940, 194941, 194942, 194943, 194944, 194945, 194946, 194947, 194948, 194949, 194950, 194951, 194952, 194953, 194954, 194955, 194956, 194957, 194958, 194959, 194960, 194961, 194962, 194963, 194964, 194965, 194966, 194967, 194968, 194969, 194970, 194971, 194972, 194973, 194974, 194975, 194976, 194977, 194978, 194979, 194980, 194981, 194982, 194983, 194984, 194985, 194986, 194987, 194988, 194989, 194990, 194991, 194992, 194993, 194994, 194995, 194996, 194997, 194998, 194999, 195000, 195001, 195002, 195003, 195004, 195005, 195006, 195007, 195008, 195009, 195010, 195011, 195012, 195013, 195014, 195015, 195016, 195017, 195018, 195019, 195020, 195021, 195022, 195023, 195024, 195025, 195026, 195027, 195028, 195029, 195030, 195031, 195032, 195033, 195034, 195035, 195036, 195037, 195038, 195039, 195040, 195041, 195042, 195043, 195044, 195045, 195046, 195047, 195048, 195049, 195050, 195051, 195052, 195053, 195054, 195055, 195056, 195057, 195058, 195059, 195060, 195061, 195062, 195063, 195064, 195065, 195066, 195067, 195068, 195069, 195070, 195071, 195072, 195073, 195074, 195075, 195076, 195077, 195078, 195079, 195080, 195081, 195082, 195083, 195084, 195085, 195086, 195087, 195088, 195089, 195090, 195091, 195092, 195093, 195094, 195095, 195096, 195097, 195098, 195099, 195100, 195101];


/***/ }),
/* 149 */
/***/ (function(module, exports) {

	/*
	 * List of Unicode code that are flagged as number.
	 *
	 * Contains Unicode code of:
	 * - Nd = Number, decimal digit
	 * - Nl = Number, letter
	 * - No = Number, other
	 *
	 * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt
	 * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Nd;|;Nl;|;No;' | cut -d \; -f 1 | xargs -I{} printf '%d, ' 0x{}
	 *
	 */
	exports.N = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 178, 179, 185, 188, 189, 190, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2548, 2549, 2550, 2551, 2552, 2553, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2930, 2931, 2932, 2933, 2934, 2935, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 5870, 5871, 5872, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 7001, 7088, 7089, 7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 8304, 8308, 8309, 8310, 8311, 8312, 8313, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8581, 8582, 8583, 8584, 8585, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9450, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 10102, 10103, 10104, 10105, 10106, 10107, 10108, 10109, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118, 10119, 10120, 10121, 10122, 10123, 10124, 10125, 10126, 10127, 10128, 10129, 10130, 10131, 11517, 12295, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 12344, 12345, 12346, 12690, 12691, 12692, 12693, 12832, 12833, 12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 12872, 12873, 12874, 12875, 12876, 12877, 12878, 12879, 12881, 12882, 12883, 12884, 12885, 12886, 12887, 12888, 12889, 12890, 12891, 12892, 12893, 12894, 12895, 12928, 12929, 12930, 12931, 12932, 12933, 12934, 12935, 12936, 12937, 12977, 12978, 12979, 12980, 12981, 12982, 12983, 12984, 12985, 12986, 12987, 12988, 12989, 12990, 12991, 42528, 42529, 42530, 42531, 42532, 42533, 42534, 42535, 42536, 42537, 42726, 42727, 42728, 42729, 42730, 42731, 42732, 42733, 42734, 42735, 43056, 43057, 43058, 43059, 43060, 43061, 43216, 43217, 43218, 43219, 43220, 43221, 43222, 43223, 43224, 43225, 43264, 43265, 43266, 43267, 43268, 43269, 43270, 43271, 43272, 43273, 43472, 43473, 43474, 43475, 43476, 43477, 43478, 43479, 43480, 43481, 43504, 43505, 43506, 43507, 43508, 43509, 43510, 43511, 43512, 43513, 43600, 43601, 43602, 43603, 43604, 43605, 43606, 43607, 43608, 43609, 44016, 44017, 44018, 44019, 44020, 44021, 44022, 44023, 44024, 44025, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 65799, 65800, 65801, 65802, 65803, 65804, 65805, 65806, 65807, 65808, 65809, 65810, 65811, 65812, 65813, 65814, 65815, 65816, 65817, 65818, 65819, 65820, 65821, 65822, 65823, 65824, 65825, 65826, 65827, 65828, 65829, 65830, 65831, 65832, 65833, 65834, 65835, 65836, 65837, 65838, 65839, 65840, 65841, 65842, 65843, 65856, 65857, 65858, 65859, 65860, 65861, 65862, 65863, 65864, 65865, 65866, 65867, 65868, 65869, 65870, 65871, 65872, 65873, 65874, 65875, 65876, 65877, 65878, 65879, 65880, 65881, 65882, 65883, 65884, 65885, 65886, 65887, 65888, 65889, 65890, 65891, 65892, 65893, 65894, 65895, 65896, 65897, 65898, 65899, 65900, 65901, 65902, 65903, 65904, 65905, 65906, 65907, 65908, 65909, 65910, 65911, 65912, 65930, 65931, 66273, 66274, 66275, 66276, 66277, 66278, 66279, 66280, 66281, 66282, 66283, 66284, 66285, 66286, 66287, 66288, 66289, 66290, 66291, 66292, 66293, 66294, 66295, 66296, 66297, 66298, 66299, 66336, 66337, 66338, 66339, 66369, 66378, 66513, 66514, 66515, 66516, 66517, 66720, 66721, 66722, 66723, 66724, 66725, 66726, 66727, 66728, 66729, 67672, 67673, 67674, 67675, 67676, 67677, 67678, 67679, 67705, 67706, 67707, 67708, 67709, 67710, 67711, 67751, 67752, 67753, 67754, 67755, 67756, 67757, 67758, 67759, 67835, 67836, 67837, 67838, 67839, 67862, 67863, 67864, 67865, 67866, 67867, 68028, 68029, 68032, 68033, 68034, 68035, 68036, 68037, 68038, 68039, 68040, 68041, 68042, 68043, 68044, 68045, 68046, 68047, 68050, 68051, 68052, 68053, 68054, 68055, 68056, 68057, 68058, 68059, 68060, 68061, 68062, 68063, 68064, 68065, 68066, 68067, 68068, 68069, 68070, 68071, 68072, 68073, 68074, 68075, 68076, 68077, 68078, 68079, 68080, 68081, 68082, 68083, 68084, 68085, 68086, 68087, 68088, 68089, 68090, 68091, 68092, 68093, 68094, 68095, 68160, 68161, 68162, 68163, 68164, 68165, 68166, 68167, 68221, 68222, 68253, 68254, 68255, 68331, 68332, 68333, 68334, 68335, 68440, 68441, 68442, 68443, 68444, 68445, 68446, 68447, 68472, 68473, 68474, 68475, 68476, 68477, 68478, 68479, 68521, 68522, 68523, 68524, 68525, 68526, 68527, 68858, 68859, 68860, 68861, 68862, 68863, 69216, 69217, 69218, 69219, 69220, 69221, 69222, 69223, 69224, 69225, 69226, 69227, 69228, 69229, 69230, 69231, 69232, 69233, 69234, 69235, 69236, 69237, 69238, 69239, 69240, 69241, 69242, 69243, 69244, 69245, 69246, 69714, 69715, 69716, 69717, 69718, 69719, 69720, 69721, 69722, 69723, 69724, 69725, 69726, 69727, 69728, 69729, 69730, 69731, 69732, 69733, 69734, 69735, 69736, 69737, 69738, 69739, 69740, 69741, 69742, 69743, 69872, 69873, 69874, 69875, 69876, 69877, 69878, 69879, 69880, 69881, 69942, 69943, 69944, 69945, 69946, 69947, 69948, 69949, 69950, 69951, 70096, 70097, 70098, 70099, 70100, 70101, 70102, 70103, 70104, 70105, 70113, 70114, 70115, 70116, 70117, 70118, 70119, 70120, 70121, 70122, 70123, 70124, 70125, 70126, 70127, 70128, 70129, 70130, 70131, 70132, 70384, 70385, 70386, 70387, 70388, 70389, 70390, 70391, 70392, 70393, 70864, 70865, 70866, 70867, 70868, 70869, 70870, 70871, 70872, 70873, 71248, 71249, 71250, 71251, 71252, 71253, 71254, 71255, 71256, 71257, 71360, 71361, 71362, 71363, 71364, 71365, 71366, 71367, 71368, 71369, 71472, 71473, 71474, 71475, 71476, 71477, 71478, 71479, 71480, 71481, 71482, 71483, 71904, 71905, 71906, 71907, 71908, 71909, 71910, 71911, 71912, 71913, 71914, 71915, 71916, 71917, 71918, 71919, 71920, 71921, 71922, 74752, 74753, 74754, 74755, 74756, 74757, 74758, 74759, 74760, 74761, 74762, 74763, 74764, 74765, 74766, 74767, 74768, 74769, 74770, 74771, 74772, 74773, 74774, 74775, 74776, 74777, 74778, 74779, 74780, 74781, 74782, 74783, 74784, 74785, 74786, 74787, 74788, 74789, 74790, 74791, 74792, 74793, 74794, 74795, 74796, 74797, 74798, 74799, 74800, 74801, 74802, 74803, 74804, 74805, 74806, 74807, 74808, 74809, 74810, 74811, 74812, 74813, 74814, 74815, 74816, 74817, 74818, 74819, 74820, 74821, 74822, 74823, 74824, 74825, 74826, 74827, 74828, 74829, 74830, 74831, 74832, 74833, 74834, 74835, 74836, 74837, 74838, 74839, 74840, 74841, 74842, 74843, 74844, 74845, 74846, 74847, 74848, 74849, 74850, 74851, 74852, 74853, 74854, 74855, 74856, 74857, 74858, 74859, 74860, 74861, 74862, 92768, 92769, 92770, 92771, 92772, 92773, 92774, 92775, 92776, 92777, 93008, 93009, 93010, 93011, 93012, 93013, 93014, 93015, 93016, 93017, 93019, 93020, 93021, 93022, 93023, 93024, 93025, 119648, 119649, 119650, 119651, 119652, 119653, 119654, 119655, 119656, 119657, 119658, 119659, 119660, 119661, 119662, 119663, 119664, 119665, 120782, 120783, 120784, 120785, 120786, 120787, 120788, 120789, 120790, 120791, 120792, 120793, 120794, 120795, 120796, 120797, 120798, 120799, 120800, 120801, 120802, 120803, 120804, 120805, 120806, 120807, 120808, 120809, 120810, 120811, 120812, 120813, 120814, 120815, 120816, 120817, 120818, 120819, 120820, 120821, 120822, 120823, 120824, 120825, 120826, 120827, 120828, 120829, 120830, 120831, 125127, 125128, 125129, 125130, 125131, 125132, 125133, 125134, 125135, 127232, 127233, 127234, 127235, 127236, 127237, 127238, 127239, 127240, 127241, 127242, 127243, 127244];


/***/ }),
/* 150 */
/***/ (function(module, exports) {

	/*
	 * List of Unicode code that are flagged as separator.
	 *
	 * Contains Unicode code of:
	 * - Zs = Separator, space
	 * - Zl = Separator, line
	 * - Zp = Separator, paragraph
	 *
	 * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt
	 * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Zs;|;Zl;|;Zp;' | cut -d \; -f 1 | xargs -I{} printf '%d, ' 0x{}
	 *
	 */
	exports.Z = [32, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];


/***/ }),
/* 151 */
/***/ (function(module, exports) {

	/*
	 * List of Unicode code that are flagged as mark.
	 *
	 * Contains Unicode code of:
	 * - Mc = Mark, spacing combining
	 * - Me = Mark, enclosing
	 * - Mn = Mark, nonspacing
	 *
	 * This list has been computed from http://unicode.org/Public/UNIDATA/UnicodeData.txt
	 * curl -s http://unicode.org/Public/UNIDATA/UnicodeData.txt | grep -E ';Mc;|;Me;|;Mn;' | cut -d \; -f 1 | xargs -I{} printf '%d, ' 0x{}
	 *
	 */
	exports.M = [768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474, 1476, 1477, 1479, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1648, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1770, 1771, 1772, 1773, 1809, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2085, 2086, 2087, 2089, 2090, 2091, 2092, 2093, 2137, 2138, 2139, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2362, 2363, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2402, 2403, 2433, 2434, 2435, 2492, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2503, 2504, 2507, 2508, 2509, 2519, 2530, 2531, 2561, 2562, 2563, 2620, 2622, 2623, 2624, 2625, 2626, 2631, 2632, 2635, 2636, 2637, 2641, 2672, 2673, 2677, 2689, 2690, 2691, 2748, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2759, 2760, 2761, 2763, 2764, 2765, 2786, 2787, 2817, 2818, 2819, 2876, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2887, 2888, 2891, 2892, 2893, 2902, 2903, 2914, 2915, 2946, 3006, 3007, 3008, 3009, 3010, 3014, 3015, 3016, 3018, 3019, 3020, 3021, 3031, 3072, 3073, 3074, 3075, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3142, 3143, 3144, 3146, 3147, 3148, 3149, 3157, 3158, 3170, 3171, 3201, 3202, 3203, 3260, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3270, 3271, 3272, 3274, 3275, 3276, 3277, 3285, 3286, 3298, 3299, 3329, 3330, 3331, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3398, 3399, 3400, 3402, 3403, 3404, 3405, 3415, 3426, 3427, 3458, 3459, 3530, 3535, 3536, 3537, 3538, 3539, 3540, 3542, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3570, 3571, 3633, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3761, 3764, 3765, 3766, 3767, 3768, 3769, 3771, 3772, 3784, 3785, 3786, 3787, 3788, 3789, 3864, 3865, 3893, 3895, 3897, 3902, 3903, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3974, 3975, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4038, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4158, 4182, 4183, 4184, 4185, 4190, 4191, 4192, 4194, 4195, 4196, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4209, 4210, 4211, 4212, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4239, 4250, 4251, 4252, 4253, 4957, 4958, 4959, 5906, 5907, 5908, 5938, 5939, 5940, 5970, 5971, 6002, 6003, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6109, 6155, 6156, 6157, 6313, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459, 6679, 6680, 6681, 6682, 6683, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6783, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6912, 6913, 6914, 6915, 6916, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7040, 7041, 7042, 7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 7084, 7085, 7142, 7143, 7144, 7145, 7146, 7147, 7148, 7149, 7150, 7151, 7152, 7153, 7154, 7155, 7204, 7205, 7206, 7207, 7208, 7209, 7210, 7211, 7212, 7213, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7376, 7377, 7378, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7405, 7410, 7411, 7412, 7416, 7417, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7676, 7677, 7678, 7679, 8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 8423, 8424, 8425, 8426, 8427, 8428, 8429, 8430, 8431, 8432, 11503, 11504, 11505, 11647, 11744, 11745, 11746, 11747, 11748, 11749, 11750, 11751, 11752, 11753, 11754, 11755, 11756, 11757, 11758, 11759, 11760, 11761, 11762, 11763, 11764, 11765, 11766, 11767, 11768, 11769, 11770, 11771, 11772, 11773, 11774, 11775, 12330, 12331, 12332, 12333, 12334, 12335, 12441, 12442, 42607, 42608, 42609, 42610, 42612, 42613, 42614, 42615, 42616, 42617, 42618, 42619, 42620, 42621, 42654, 42655, 42736, 42737, 43010, 43014, 43019, 43043, 43044, 43045, 43046, 43047, 43136, 43137, 43188, 43189, 43190, 43191, 43192, 43193, 43194, 43195, 43196, 43197, 43198, 43199, 43200, 43201, 43202, 43203, 43204, 43232, 43233, 43234, 43235, 43236, 43237, 43238, 43239, 43240, 43241, 43242, 43243, 43244, 43245, 43246, 43247, 43248, 43249, 43302, 43303, 43304, 43305, 43306, 43307, 43308, 43309, 43335, 43336, 43337, 43338, 43339, 43340, 43341, 43342, 43343, 43344, 43345, 43346, 43347, 43392, 43393, 43394, 43395, 43443, 43444, 43445, 43446, 43447, 43448, 43449, 43450, 43451, 43452, 43453, 43454, 43455, 43456, 43493, 43561, 43562, 43563, 43564, 43565, 43566, 43567, 43568, 43569, 43570, 43571, 43572, 43573, 43574, 43587, 43596, 43597, 43643, 43644, 43645, 43696, 43698, 43699, 43700, 43703, 43704, 43710, 43711, 43713, 43755, 43756, 43757, 43758, 43759, 43765, 43766, 44003, 44004, 44005, 44006, 44007, 44008, 44009, 44010, 44012, 44013, 64286, 65024, 65025, 65026, 65027, 65028, 65029, 65030, 65031, 65032, 65033, 65034, 65035, 65036, 65037, 65038, 65039, 65056, 65057, 65058, 65059, 65060, 65061, 65062, 65063, 65064, 65065, 65066, 65067, 65068, 65069, 65070, 65071, 66045, 66272, 66422, 66423, 66424, 66425, 66426, 68097, 68098, 68099, 68101, 68102, 68108, 68109, 68110, 68111, 68152, 68153, 68154, 68159, 68325, 68326, 69632, 69633, 69634, 69688, 69689, 69690, 69691, 69692, 69693, 69694, 69695, 69696, 69697, 69698, 69699, 69700, 69701, 69702, 69759, 69760, 69761, 69762, 69808, 69809, 69810, 69811, 69812, 69813, 69814, 69815, 69816, 69817, 69818, 69888, 69889, 69890, 69927, 69928, 69929, 69930, 69931, 69932, 69933, 69934, 69935, 69936, 69937, 69938, 69939, 69940, 70003, 70016, 70017, 70018, 70067, 70068, 70069, 70070, 70071, 70072, 70073, 70074, 70075, 70076, 70077, 70078, 70079, 70080, 70090, 70091, 70092, 70188, 70189, 70190, 70191, 70192, 70193, 70194, 70195, 70196, 70197, 70198, 70199, 70367, 70368, 70369, 70370, 70371, 70372, 70373, 70374, 70375, 70376, 70377, 70378, 70400, 70401, 70402, 70403, 70460, 70462, 70463, 70464, 70465, 70466, 70467, 70468, 70471, 70472, 70475, 70476, 70477, 70487, 70498, 70499, 70502, 70503, 70504, 70505, 70506, 70507, 70508, 70512, 70513, 70514, 70515, 70516, 70832, 70833, 70834, 70835, 70836, 70837, 70838, 70839, 70840, 70841, 70842, 70843, 70844, 70845, 70846, 70847, 70848, 70849, 70850, 70851, 71087, 71088, 71089, 71090, 71091, 71092, 71093, 71096, 71097, 71098, 71099, 71100, 71101, 71102, 71103, 71104, 71132, 71133, 71216, 71217, 71218, 71219, 71220, 71221, 71222, 71223, 71224, 71225, 71226, 71227, 71228, 71229, 71230, 71231, 71232, 71339, 71340, 71341, 71342, 71343, 71344, 71345, 71346, 71347, 71348, 71349, 71350, 71351, 71453, 71454, 71455, 71456, 71457, 71458, 71459, 71460, 71461, 71462, 71463, 71464, 71465, 71466, 71467, 92912, 92913, 92914, 92915, 92916, 92976, 92977, 92978, 92979, 92980, 92981, 92982, 94033, 94034, 94035, 94036, 94037, 94038, 94039, 94040, 94041, 94042, 94043, 94044, 94045, 94046, 94047, 94048, 94049, 94050, 94051, 94052, 94053, 94054, 94055, 94056, 94057, 94058, 94059, 94060, 94061, 94062, 94063, 94064, 94065, 94066, 94067, 94068, 94069, 94070, 94071, 94072, 94073, 94074, 94075, 94076, 94077, 94078, 94095, 94096, 94097, 94098, 113821, 113822, 119141, 119142, 119143, 119144, 119145, 119149, 119150, 119151, 119152, 119153, 119154, 119163, 119164, 119165, 119166, 119167, 119168, 119169, 119170, 119173, 119174, 119175, 119176, 119177, 119178, 119179, 119210, 119211, 119212, 119213, 119362, 119363, 119364, 121344, 121345, 121346, 121347, 121348, 121349, 121350, 121351, 121352, 121353, 121354, 121355, 121356, 121357, 121358, 121359, 121360, 121361, 121362, 121363, 121364, 121365, 121366, 121367, 121368, 121369, 121370, 121371, 121372, 121373, 121374, 121375, 121376, 121377, 121378, 121379, 121380, 121381, 121382, 121383, 121384, 121385, 121386, 121387, 121388, 121389, 121390, 121391, 121392, 121393, 121394, 121395, 121396, 121397, 121398, 121403, 121404, 121405, 121406, 121407, 121408, 121409, 121410, 121411, 121412, 121413, 121414, 121415, 121416, 121417, 121418, 121419, 121420, 121421, 121422, 121423, 121424, 121425, 121426, 121427, 121428, 121429, 121430, 121431, 121432, 121433, 121434, 121435, 121436, 121437, 121438, 121439, 121440, 121441, 121442, 121443, 121444, 121445, 121446, 121447, 121448, 121449, 121450, 121451, 121452, 121461, 121476, 121499, 121500, 121501, 121502, 121503, 121505, 121506, 121507, 121508, 121509, 121510, 121511, 121512, 121513, 121514, 121515, 121516, 121517, 121518, 121519, 125136, 125137, 125138, 125139, 125140, 125141, 125142, 917760, 917761, 917762, 917763, 917764, 917765, 917766, 917767, 917768, 917769, 917770, 917771, 917772, 917773, 917774, 917775, 917776, 917777, 917778, 917779, 917780, 917781, 917782, 917783, 917784, 917785, 917786, 917787, 917788, 917789, 917790, 917791, 917792, 917793, 917794, 917795, 917796, 917797, 917798, 917799, 917800, 917801, 917802, 917803, 917804, 917805, 917806, 917807, 917808, 917809, 917810, 917811, 917812, 917813, 917814, 917815, 917816, 917817, 917818, 917819, 917820, 917821, 917822, 917823, 917824, 917825, 917826, 917827, 917828, 917829, 917830, 917831, 917832, 917833, 917834, 917835, 917836, 917837, 917838, 917839, 917840, 917841, 917842, 917843, 917844, 917845, 917846, 917847, 917848, 917849, 917850, 917851, 917852, 917853, 917854, 917855, 917856, 917857, 917858, 917859, 917860, 917861, 917862, 917863, 917864, 917865, 917866, 917867, 917868, 917869, 917870, 917871, 917872, 917873, 917874, 917875, 917876, 917877, 917878, 917879, 917880, 917881, 917882, 917883, 917884, 917885, 917886, 917887, 917888, 917889, 917890, 917891, 917892, 917893, 917894, 917895, 917896, 917897, 917898, 917899, 917900, 917901, 917902, 917903, 917904, 917905, 917906, 917907, 917908, 917909, 917910, 917911, 917912, 917913, 917914, 917915, 917916, 917917, 917918, 917919, 917920, 917921, 917922, 917923, 917924, 917925, 917926, 917927, 917928, 917929, 917930, 917931, 917932, 917933, 917934, 917935, 917936, 917937, 917938, 917939, 917940, 917941, 917942, 917943, 917944, 917945, 917946, 917947, 917948, 917949, 917950, 917951, 917952, 917953, 917954, 917955, 917956, 917957, 917958, 917959, 917960, 917961, 917962, 917963, 917964, 917965, 917966, 917967, 917968, 917969, 917970, 917971, 917972, 917973, 917974, 917975, 917976, 917977, 917978, 917979, 917980, 917981, 917982, 917983, 917984, 917985, 917986, 917987, 917988, 917989, 917990, 917991, 917992, 917993, 917994, 917995, 917996, 917997, 917998, 917999];


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	(function (root) {
	   "use strict";

	/***** unorm.js *****/

	/*
	 * UnicodeNormalizer 1.0.0
	 * Copyright (c) 2008 Matsuza
	 * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.
	 * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $
	 * $Rev: 13309 $
	 */

	   var DEFAULT_FEATURE = [null, 0, {}];
	   var CACHE_THRESHOLD = 10;
	   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;
	   var NCount = VCount * TCount; // 588
	   var SCount = LCount * NCount; // 11172

	   var UChar = function(cp, feature){
	      this.codepoint = cp;
	      this.feature = feature;
	   };

	   // Strategies
	   var cache = {};
	   var cacheCounter = [];
	   for (var i = 0; i <= 0xFF; ++i){
	      cacheCounter[i] = 0;
	   }

	   function fromCache(next, cp, needFeature){
	      var ret = cache[cp];
	      if(!ret){
	         ret = next(cp, needFeature);
	         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){
	            cache[cp] = ret;
	         }
	      }
	      return ret;
	   }

	   function fromData(next, cp, needFeature){
	      var hash = cp & 0xFF00;
	      var dunit = UChar.udata[hash] || {};
	      var f = dunit[cp];
	      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);
	   }
	   function fromCpOnly(next, cp, needFeature){
	      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);
	   }
	   function fromRuleBasedJamo(next, cp, needFeature){
	      var j;
	      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){
	         return next(cp, needFeature);
	      }
	      if(LBase <= cp && cp < LBase + LCount){
	         var c = {};
	         var base = (cp - LBase) * VCount;
	         for (j = 0; j < VCount; ++j){
	            c[VBase + j] = SBase + TCount * (j + base);
	         }
	         return new UChar(cp, [,,c]);
	      }

	      var SIndex = cp - SBase;
	      var TIndex = SIndex % TCount;
	      var feature = [];
	      if(TIndex !== 0){
	         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];
	      } else {
	         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];
	         feature[2] = {};
	         for (j = 1; j < TCount; ++j){
	            feature[2][TBase + j] = cp + j;
	         }
	      }
	      return new UChar(cp, feature);
	   }
	   function fromCpFilter(next, cp, needFeature){
	      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);
	   }

	   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];

	   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {
	      return function (cp, needFeature) {
	         return strategy(next, cp, needFeature);
	      };
	   }, null);

	   UChar.isHighSurrogate = function(cp){
	      return cp >= 0xD800 && cp <= 0xDBFF;
	   };
	   UChar.isLowSurrogate = function(cp){
	      return cp >= 0xDC00 && cp <= 0xDFFF;
	   };

	   UChar.prototype.prepFeature = function(){
	      if(!this.feature){
	         this.feature = UChar.fromCharCode(this.codepoint, true).feature;
	      }
	   };

	   UChar.prototype.toString = function(){
	      if(this.codepoint < 0x10000){
	         return String.fromCharCode(this.codepoint);
	      } else {
	         var x = this.codepoint - 0x10000;
	         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);
	      }
	   };

	   UChar.prototype.getDecomp = function(){
	      this.prepFeature();
	      return this.feature[0] || null;
	   };

	   UChar.prototype.isCompatibility = function(){
	      this.prepFeature();
	      return !!this.feature[1] && (this.feature[1] & (1 << 8));
	   };
	   UChar.prototype.isExclude = function(){
	      this.prepFeature();
	      return !!this.feature[1] && (this.feature[1] & (1 << 9));
	   };
	   UChar.prototype.getCanonicalClass = function(){
	      this.prepFeature();
	      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;
	   };
	   UChar.prototype.getComposite = function(following){
	      this.prepFeature();
	      if(!this.feature[2]){
	         return null;
	      }
	      var cp = this.feature[2][following.codepoint];
	      return cp ? UChar.fromCharCode(cp) : null;
	   };

	   var UCharIterator = function(str){
	      this.str = str;
	      this.cursor = 0;
	   };
	   UCharIterator.prototype.next = function(){
	      if(!!this.str && this.cursor < this.str.length){
	         var cp = this.str.charCodeAt(this.cursor++);
	         var d;
	         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){
	            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;
	            ++this.cursor;
	         }
	         return UChar.fromCharCode(cp);
	      } else {
	         this.str = null;
	         return null;
	      }
	   };

	   var RecursDecompIterator = function(it, cano){
	      this.it = it;
	      this.canonical = cano;
	      this.resBuf = [];
	   };

	   RecursDecompIterator.prototype.next = function(){
	      function recursiveDecomp(cano, uchar){
	         var decomp = uchar.getDecomp();
	         if(!!decomp && !(cano && uchar.isCompatibility())){
	            var ret = [];
	            for(var i = 0; i < decomp.length; ++i){
	               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));
	                ret = ret.concat(a);
	            }
	            return ret;
	         } else {
	            return [uchar];
	         }
	      }
	      if(this.resBuf.length === 0){
	         var uchar = this.it.next();
	         if(!uchar){
	            return null;
	         }
	         this.resBuf = recursiveDecomp(this.canonical, uchar);
	      }
	      return this.resBuf.shift();
	   };

	   var DecompIterator = function(it){
	      this.it = it;
	      this.resBuf = [];
	   };

	   DecompIterator.prototype.next = function(){
	      var cc;
	      if(this.resBuf.length === 0){
	         do{
	            var uchar = this.it.next();
	            if(!uchar){
	               break;
	            }
	            cc = uchar.getCanonicalClass();
	            var inspt = this.resBuf.length;
	            if(cc !== 0){
	               for(; inspt > 0; --inspt){
	                  var uchar2 = this.resBuf[inspt - 1];
	                  var cc2 = uchar2.getCanonicalClass();
	                  if(cc2 <= cc){
	                     break;
	                  }
	               }
	            }
	            this.resBuf.splice(inspt, 0, uchar);
	         } while(cc !== 0);
	      }
	      return this.resBuf.shift();
	   };

	   var CompIterator = function(it){
	      this.it = it;
	      this.procBuf = [];
	      this.resBuf = [];
	      this.lastClass = null;
	   };

	   CompIterator.prototype.next = function(){
	      while(this.resBuf.length === 0){
	         var uchar = this.it.next();
	         if(!uchar){
	            this.resBuf = this.procBuf;
	            this.procBuf = [];
	            break;
	         }
	         if(this.procBuf.length === 0){
	            this.lastClass = uchar.getCanonicalClass();
	            this.procBuf.push(uchar);
	         } else {
	            var starter = this.procBuf[0];
	            var composite = starter.getComposite(uchar);
	            var cc = uchar.getCanonicalClass();
	            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){
	               this.procBuf[0] = composite;
	            } else {
	               if(cc === 0){
	                  this.resBuf = this.procBuf;
	                  this.procBuf = [];
	               }
	               this.lastClass = cc;
	               this.procBuf.push(uchar);
	            }
	         }
	      }
	      return this.resBuf.shift();
	   };

	   var createIterator = function(mode, str){
	      switch(mode){
	         case "NFD":
	            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));
	         case "NFKD":
	            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));
	         case "NFC":
	            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));
	         case "NFKC":
	            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));
	      }
	      throw mode + " is invalid";
	   };
	   var normalize = function(mode, str){
	      var it = createIterator(mode, str);
	      var ret = "";
	      var uchar;
	      while(!!(uchar = it.next())){
	         ret += uchar.toString();
	      }
	      return ret;
	   };

	   /* API functions */
	   function nfd(str){
	      return normalize("NFD", str);
	   }

	   function nfkd(str){
	      return normalize("NFKD", str);
	   }

	   function nfc(str){
	      return normalize("NFC", str);
	   }

	   function nfkc(str){
	      return normalize("NFKC", str);
	   }

	/* Unicode data */
	UChar.udata={
	0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},
	256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},
	512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},
	768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},
	1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},
	1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},
	1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},
	1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},
	2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},
	2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},
	2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},
	2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},
	3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},
	3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},
	3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},
	3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},
	4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},
	4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},
	4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},
	4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},
	5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},
	5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},
	5632:{71231:[,9],71350:[,9],71351:[,7]},
	5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},
	6144:{6313:[,228]},
	6400:{6457:[,222],6458:[,230],6459:[,220]},
	6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},
	6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},
	7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},
	7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},
	7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},
	7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},
	8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},
	8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},
	8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},
	8960:{9001:[[12296]],9002:[[12297]]},
	9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},
	10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},
	11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},
	11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},
	11776:{11935:[[27597],256],12019:[[40863],256]},
	12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},
	12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},
	12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},
	12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},
	13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},
	27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},
	27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},
	42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},
	42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},
	43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},
	43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},
	43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},
	43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},
	48128:{113822:[,1]},
	53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},
	53760:{119362:[,230],119363:[,230],119364:[,230]},
	54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},
	54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},
	54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},
	55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},
	59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},
	60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},
	61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},
	61952:{127488:[[12411,12363],256],127489:[[12467,12467],256],127490:[[12469],256],127504:[[25163],256],127505:[[23383],256],127506:[[21452],256],127507:[[12487],256],127508:[[20108],256],127509:[[22810],256],127510:[[35299],256],127511:[[22825],256],127512:[[20132],256],127513:[[26144],256],127514:[[28961],256],127515:[[26009],256],127516:[[21069],256],127517:[[24460],256],127518:[[20877],256],127519:[[26032],256],127520:[[21021],256],127521:[[32066],256],127522:[[29983],256],127523:[[36009],256],127524:[[22768],256],127525:[[21561],256],127526:[[28436],256],127527:[[25237],256],127528:[[25429],256],127529:[[19968],256],127530:[[19977],256],127531:[[36938],256],127532:[[24038],256],127533:[[20013],256],127534:[[21491],256],127535:[[25351],256],127536:[[36208],256],127537:[[25171],256],127538:[[31105],256],127539:[[31354],256],127540:[[21512],256],127541:[[28288],256],127542:[[26377],256],127543:[[26376],256],127544:[[30003],256],127545:[[21106],256],127546:[[21942],256],127552:[[12308,26412,12309],256],127553:[[12308,19977,12309],256],127554:[[12308,20108,12309],256],127555:[[12308,23433,12309],256],127556:[[12308,28857,12309],256],127557:[[12308,25171,12309],256],127558:[[12308,30423,12309],256],127559:[[12308,21213,12309],256],127560:[[12308,25943,12309],256],127568:[[24471],256],127569:[[21487],256]},
	63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},
	63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},
	64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},
	64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},
	64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},
	64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},
	65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},
	65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}

	};

	   /***** Module to export */
	   var unorm = {
	      nfc: nfc,
	      nfd: nfd,
	      nfkc: nfkc,
	      nfkd: nfkd
	   };

	   /*globals module:true,define:true*/

	   // CommonJS
	   if (true) {
	      module.exports = unorm;

	   // AMD
	   } else if (typeof define === "function" && define.amd) {
	      define("unorm", function () {
	         return unorm;
	      });

	   // Global
	   } else {
	      root.unorm = unorm;
	   }

	   /***** Export as shim for String::normalize method *****/
	   /*
	      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21

	      21.1.3.12 String.prototype.normalize(form="NFC")
	      When the normalize method is called with one argument form, the following steps are taken:

	      1. Let O be CheckObjectCoercible(this value).
	      2. Let S be ToString(O).
	      3. ReturnIfAbrupt(S).
	      4. If form is not provided or undefined let form be "NFC".
	      5. Let f be ToString(form).
	      6. ReturnIfAbrupt(f).
	      7. If f is not one of "NFC", "NFD", "NFKC", or "NFKD", then throw a RangeError Exception.
	      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.
	      9. Return ns.

	      The length property of the normalize method is 0.

	      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.
	   */
	    unorm.shimApplied = false;

	   if (!String.prototype.normalize) {
	      Object.defineProperty(String.prototype, "normalize", {
	         enumerable: false,
	         configurable: true,
	         writable: true,
	         value: function normalize (/*form*/) {
	            
	            var str = "" + this;
	            var form = arguments[0] === undefined ? "NFC" : arguments[0];

	            if (this === null || this === undefined) {
	               throw new TypeError("Cannot call method on " + Object.prototype.toString.call(this));
	            }

	            if (form === "NFC") {
	               return unorm.nfc(str);
	            } else if (form === "NFD") {
	               return unorm.nfd(str);
	            } else if (form === "NFKC") {
	               return unorm.nfkc(str);
	            } else if (form === "NFKD") {
	               return unorm.nfkd(str);
	            } else {
	               throw new RangeError("Invalid normalization form: " + form);
	            }
	         }
	      });

	      unorm.shimApplied = true;
	   }
	}(this));


/***/ }),
/* 153 */
/***/ (function(module, exports) {

	// Markdown-it plugin to render GitHub-style task lists; see
	//
	// https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments
	// https://github.com/blog/1825-task-lists-in-all-markdown-documents

	var disableCheckboxes = true;
	var useLabelWrapper = false;
	var useLabelAfter = false;

	module.exports = function(md, options) {
		if (options) {
			disableCheckboxes = !options.enabled;
			useLabelWrapper = !!options.label;
			useLabelAfter = !!options.labelAfter;
		}

		md.core.ruler.after('inline', 'github-task-lists', function(state) {
			var tokens = state.tokens;
			for (var i = 2; i < tokens.length; i++) {
				if (isTodoItem(tokens, i)) {
					todoify(tokens[i], state.Token);
					attrSet(tokens[i-2], 'class', 'task-list-item' + (!disableCheckboxes ? ' enabled' : ''));
					attrSet(tokens[parentToken(tokens, i-2)], 'class', 'contains-task-list');
				}
			}
		});
	};

	function attrSet(token, name, value) {
		var index = token.attrIndex(name);
		var attr = [name, value];

		if (index < 0) {
			token.attrPush(attr);
		} else {
			token.attrs[index] = attr;
		}
	}

	function parentToken(tokens, index) {
		var targetLevel = tokens[index].level - 1;
		for (var i = index - 1; i >= 0; i--) {
			if (tokens[i].level === targetLevel) {
				return i;
			}
		}
		return -1;
	}

	function isTodoItem(tokens, index) {
		return isInline(tokens[index]) &&
		       isParagraph(tokens[index - 1]) &&
		       isListItem(tokens[index - 2]) &&
		       startsWithTodoMarkdown(tokens[index]);
	}

	function todoify(token, TokenConstructor) {
		token.children.unshift(makeCheckbox(token, TokenConstructor));
		token.children[1].content = token.children[1].content.slice(3);
		token.content = token.content.slice(3);

		if (useLabelWrapper) {
			if (useLabelAfter) {
				token.children.pop();

				// Use large random number as id property of the checkbox.
				var id = 'task-item-' + Math.ceil(Math.random() * (10000 * 1000) - 1000);
				token.children[0].content = token.children[0].content.slice(0, -1) + ' id="' + id + '">';
				token.children.push(afterLabel(token.content, id, TokenConstructor));
			} else {
				token.children.unshift(beginLabel(TokenConstructor));
				token.children.push(endLabel(TokenConstructor));
			}
		}
	}

	function makeCheckbox(token, TokenConstructor) {
		var checkbox = new TokenConstructor('html_inline', '', 0);
		var disabledAttr = disableCheckboxes ? ' disabled="" ' : '';
		if (token.content.indexOf('[ ] ') === 0) {
			checkbox.content = '<input class="task-list-item-checkbox"' + disabledAttr + 'type="checkbox">';
		} else if (token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0) {
			checkbox.content = '<input class="task-list-item-checkbox" checked=""' + disabledAttr + 'type="checkbox">';
		}
		return checkbox;
	}

	// these next two functions are kind of hacky; probably should really be a
	// true block-level token with .tag=='label'
	function beginLabel(TokenConstructor) {
		var token = new TokenConstructor('html_inline', '', 0);
		token.content = '<label>';
		return token;
	}

	function endLabel(TokenConstructor) {
		var token = new TokenConstructor('html_inline', '', 0);
		token.content = '</label>';
		return token;
	}

	function afterLabel(content, id, TokenConstructor) {
		var token = new TokenConstructor('html_inline', '', 0);
		token.content = '<label class="task-list-item-label" for="' + id + '">' + content + '</label>';
		token.attrs = [{for: id}];
		return token;
	}

	function isInline(token) { return token.type === 'inline'; }
	function isParagraph(token) { return token.type === 'paragraph_open'; }
	function isListItem(token) { return token.type === 'list_item_open'; }

	function startsWithTodoMarkdown(token) {
		// leading whitespace in a list item is already trimmed off by markdown-it
		return token.content.indexOf('[ ] ') === 0 || token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0;
	}


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var HandlerList_js_1 = __webpack_require__(155);
	var Retries_js_1 = __webpack_require__(157);
	exports.mathjax = {
	    version: '3.0.5',
	    handlers: new HandlerList_js_1.HandlerList(),
	    document: function (document, options) {
	        return exports.mathjax.handlers.document(document, options);
	    },
	    handleRetriesFor: Retries_js_1.handleRetriesFor,
	    retryAfter: Retries_js_1.retryAfter,
	    asyncLoad: null,
	};
	//# sourceMappingURL=mathjax.js.map

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var PrioritizedList_js_1 = __webpack_require__(156);
	var HandlerList = (function (_super) {
	    __extends(HandlerList, _super);
	    function HandlerList() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    HandlerList.prototype.register = function (handler) {
	        return this.add(handler, handler.priority);
	    };
	    HandlerList.prototype.unregister = function (handler) {
	        this.remove(handler);
	    };
	    HandlerList.prototype.handlesDocument = function (document) {
	        var e_1, _a;
	        try {
	            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var item = _c.value;
	                var handler = item.item;
	                if (handler.handlesDocument(document)) {
	                    return handler;
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        throw new Error("Can't find handler for document");
	    };
	    HandlerList.prototype.document = function (document, options) {
	        if (options === void 0) { options = null; }
	        return this.handlesDocument(document).create(document, options);
	    };
	    return HandlerList;
	}(PrioritizedList_js_1.PrioritizedList));
	exports.HandlerList = HandlerList;
	//# sourceMappingURL=HandlerList.js.map

/***/ }),
/* 156 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var PrioritizedList = (function () {
	    function PrioritizedList() {
	        this.items = [];
	        this.items = [];
	    }
	    PrioritizedList.prototype[Symbol.iterator] = function () {
	        var i = 0;
	        var items = this.items;
	        return {
	            next: function () {
	                return { value: items[i++], done: (i > items.length) };
	            }
	        };
	    };
	    PrioritizedList.prototype.add = function (item, priority) {
	        if (priority === void 0) { priority = PrioritizedList.DEFAULTPRIORITY; }
	        var i = this.items.length;
	        do {
	            i--;
	        } while (i >= 0 && priority < this.items[i].priority);
	        this.items.splice(i + 1, 0, { item: item, priority: priority });
	        return item;
	    };
	    PrioritizedList.prototype.remove = function (item) {
	        var i = this.items.length;
	        do {
	            i--;
	        } while (i >= 0 && this.items[i].item !== item);
	        if (i >= 0) {
	            this.items.splice(i, 1);
	        }
	    };
	    PrioritizedList.prototype.toArray = function () {
	        return Array.from(this);
	    };
	    PrioritizedList.DEFAULTPRIORITY = 5;
	    return PrioritizedList;
	}());
	exports.PrioritizedList = PrioritizedList;
	//# sourceMappingURL=PrioritizedList.js.map

/***/ }),
/* 157 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	function handleRetriesFor(code) {
	    return new Promise(function run(ok, fail) {
	        try {
	            ok(code());
	        }
	        catch (err) {
	            if (err.retry && err.retry instanceof Promise) {
	                err.retry.then(function () { return run(ok, fail); })
	                    .catch(function (perr) { return fail(perr); });
	            }
	            else if (err.restart && err.restart.isCallback) {
	                MathJax.Callback.After(function () { return run(ok, fail); }, err.restart);
	            }
	            else {
	                fail(err);
	            }
	        }
	    });
	}
	exports.handleRetriesFor = handleRetriesFor;
	function retryAfter(promise) {
	    var err = new Error('MathJax retry');
	    err.retry = promise;
	    throw err;
	}
	exports.retryAfter = retryAfter;
	//# sourceMappingURL=Retries.js.map

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var InputJax_js_1 = __webpack_require__(159);
	var Options_js_1 = __webpack_require__(160);
	var FindTeX_js_1 = __webpack_require__(162);
	var FilterUtil_js_1 = __webpack_require__(166);
	var NodeUtil_js_1 = __webpack_require__(170);
	var TexParser_js_1 = __webpack_require__(173);
	var TexError_js_1 = __webpack_require__(175);
	var ParseOptions_js_1 = __webpack_require__(180);
	var Tags_js_1 = __webpack_require__(186);
	var Configuration_js_1 = __webpack_require__(187);
	__webpack_require__(192);
	var TeX = (function (_super) {
	    __extends(TeX, _super);
	    function TeX(options) {
	        if (options === void 0) { options = {}; }
	        var _this = this;
	        var _a = __read(Options_js_1.separateOptions(options, TeX.OPTIONS, FindTeX_js_1.FindTeX.OPTIONS), 3), rest = _a[0], tex = _a[1], find = _a[2];
	        _this = _super.call(this, tex) || this;
	        _this.findTeX = _this.options['FindTeX'] || new FindTeX_js_1.FindTeX(find);
	        var packages = _this.options.packages;
	        var configuration = _this.configuration = TeX.configure(packages);
	        var parseOptions = _this._parseOptions = new ParseOptions_js_1.default(configuration, [_this.options, Tags_js_1.TagsFactory.OPTIONS]);
	        Options_js_1.userOptions(parseOptions.options, rest);
	        configuration.config(configuration, _this);
	        TeX.tags(parseOptions, configuration);
	        _this.postFilters.add(FilterUtil_js_1.default.cleanSubSup, -6);
	        _this.postFilters.add(FilterUtil_js_1.default.setInherited, -5);
	        _this.postFilters.add(FilterUtil_js_1.default.moveLimits, -4);
	        _this.postFilters.add(FilterUtil_js_1.default.cleanStretchy, -3);
	        _this.postFilters.add(FilterUtil_js_1.default.cleanAttributes, -2);
	        _this.postFilters.add(FilterUtil_js_1.default.combineRelations, -1);
	        return _this;
	    }
	    TeX.configure = function (packages) {
	        var e_1, _a;
	        var configuration = Configuration_js_1.Configuration.empty();
	        try {
	            for (var packages_1 = __values(packages), packages_1_1 = packages_1.next(); !packages_1_1.done; packages_1_1 = packages_1.next()) {
	                var key = packages_1_1.value;
	                var conf = Configuration_js_1.ConfigurationHandler.get(key);
	                if (conf) {
	                    configuration.append(conf);
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (packages_1_1 && !packages_1_1.done && (_a = packages_1.return)) _a.call(packages_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        configuration.init(configuration);
	        return configuration;
	    };
	    TeX.tags = function (options, configuration) {
	        Tags_js_1.TagsFactory.addTags(configuration.tags);
	        Tags_js_1.TagsFactory.setDefault(options.options.tags);
	        options.tags = Tags_js_1.TagsFactory.getDefault();
	        options.tags.configuration = options;
	    };
	    TeX.prototype.setMmlFactory = function (mmlFactory) {
	        _super.prototype.setMmlFactory.call(this, mmlFactory);
	        this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);
	    };
	    Object.defineProperty(TeX.prototype, "parseOptions", {
	        get: function () {
	            return this._parseOptions;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TeX.prototype.compile = function (math, document) {
	        this.parseOptions.clear();
	        this.executeFilters(this.preFilters, math, document, this.parseOptions);
	        var display = math.display;
	        this.latex = math.math;
	        var node;
	        this.parseOptions.tags.startEquation(math);
	        try {
	            var parser = new TexParser_js_1.default(this.latex, { display: display, isInner: false }, this.parseOptions);
	            node = parser.mml();
	        }
	        catch (err) {
	            if (!(err instanceof TexError_js_1.default)) {
	                throw err;
	            }
	            this.parseOptions.error = true;
	            node = this.formatError(err);
	        }
	        node = this.parseOptions.nodeFactory.create('node', 'math', [node]);
	        if (display) {
	            NodeUtil_js_1.default.setAttribute(node, 'display', 'block');
	        }
	        this.parseOptions.tags.finishEquation(math);
	        this.parseOptions.root = node;
	        this.executeFilters(this.postFilters, math, document, this.parseOptions);
	        this.mathNode = this.parseOptions.root;
	        return this.mathNode;
	    };
	    ;
	    TeX.prototype.findMath = function (strings) {
	        return this.findTeX.findMath(strings);
	    };
	    TeX.prototype.formatError = function (err) {
	        var message = err.message.replace(/\n.*/, '');
	        return this.parseOptions.nodeFactory.create('error', message, err.id, this.latex);
	    };
	    ;
	    TeX.NAME = 'TeX';
	    TeX.OPTIONS = __assign(__assign({}, InputJax_js_1.AbstractInputJax.OPTIONS), { FindTeX: null, packages: ['base'], digits: /^(?:[0-9]+(?:\{,\}[0-9]{3})*(?:\.[0-9]*)?|\.[0-9]+)/, maxBuffer: 5 * 1024 });
	    return TeX;
	}(InputJax_js_1.AbstractInputJax));
	exports.TeX = TeX;
	//# sourceMappingURL=tex.js.map

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Options_js_1 = __webpack_require__(160);
	var FunctionList_js_1 = __webpack_require__(161);
	var AbstractInputJax = (function () {
	    function AbstractInputJax(options) {
	        if (options === void 0) { options = {}; }
	        this.adaptor = null;
	        this.mmlFactory = null;
	        var CLASS = this.constructor;
	        this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
	        this.preFilters = new FunctionList_js_1.FunctionList();
	        this.postFilters = new FunctionList_js_1.FunctionList();
	    }
	    Object.defineProperty(AbstractInputJax.prototype, "name", {
	        get: function () {
	            return this.constructor.NAME;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractInputJax.prototype.setAdaptor = function (adaptor) {
	        this.adaptor = adaptor;
	    };
	    AbstractInputJax.prototype.setMmlFactory = function (mmlFactory) {
	        this.mmlFactory = mmlFactory;
	    };
	    AbstractInputJax.prototype.initialize = function () {
	    };
	    Object.defineProperty(AbstractInputJax.prototype, "processStrings", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractInputJax.prototype.findMath = function (node, options) {
	        return [];
	    };
	    AbstractInputJax.prototype.executeFilters = function (filters, math, document, data) {
	        var args = { math: math, document: document, data: data };
	        filters.execute(args);
	        return args.data;
	    };
	    AbstractInputJax.NAME = 'generic';
	    AbstractInputJax.OPTIONS = {};
	    return AbstractInputJax;
	}());
	exports.AbstractInputJax = AbstractInputJax;
	//# sourceMappingURL=InputJax.js.map

/***/ }),
/* 160 */
/***/ (function(module, exports) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var OBJECT = {}.constructor;
	function isObject(obj) {
	    return typeof obj === 'object' && obj !== null &&
	        (obj.constructor === OBJECT || obj.constructor === Expandable);
	}
	exports.APPEND = '[+]';
	exports.REMOVE = '[-]';
	var Expandable = (function () {
	    function Expandable() {
	    }
	    return Expandable;
	}());
	exports.Expandable = Expandable;
	;
	function expandable(def) {
	    return Object.assign(Object.create(Expandable.prototype), def);
	}
	exports.expandable = expandable;
	function makeArray(x) {
	    return Array.isArray(x) ? x : [x];
	}
	exports.makeArray = makeArray;
	function keys(def) {
	    if (!def) {
	        return [];
	    }
	    return Object.keys(def).concat(Object.getOwnPropertySymbols(def));
	}
	exports.keys = keys;
	function copy(def) {
	    var e_1, _a;
	    var props = {};
	    try {
	        for (var _b = __values(keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var key = _c.value;
	            var prop = Object.getOwnPropertyDescriptor(def, key);
	            var value = prop.value;
	            if (Array.isArray(value)) {
	                prop.value = insert([], value, false);
	            }
	            else if (isObject(value)) {
	                prop.value = copy(value);
	            }
	            if (prop.enumerable) {
	                props[key] = prop;
	            }
	        }
	    }
	    catch (e_1_1) { e_1 = { error: e_1_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_1) throw e_1.error; }
	    }
	    return Object.defineProperties(def.constructor === Expandable ? expandable({}) : {}, props);
	}
	exports.copy = copy;
	function insert(dst, src, warn) {
	    var e_2, _a;
	    if (warn === void 0) { warn = true; }
	    var _loop_1 = function (key) {
	        if (warn && dst[key] === undefined && dst.constructor !== Expandable) {
	            if (typeof key === 'symbol') {
	                key = key.toString();
	            }
	            throw new Error('Invalid option "' + key + '" (no default value).');
	        }
	        var sval = src[key], dval = dst[key];
	        if (isObject(sval) && dval !== null &&
	            (typeof dval === 'object' || typeof dval === 'function')) {
	            var ids = keys(sval);
	            if (Array.isArray(dval) &&
	                ((ids.length === 1 && (ids[0] === exports.APPEND || ids[0] === exports.REMOVE) && Array.isArray(sval[ids[0]])) ||
	                    (ids.length === 2 && ids.sort().join(',') === exports.APPEND + ',' + exports.REMOVE &&
	                        Array.isArray(sval[exports.APPEND]) && Array.isArray(sval[exports.REMOVE])))) {
	                if (sval[exports.REMOVE]) {
	                    dval = dst[key] = dval.filter(function (x) { return sval[exports.REMOVE].indexOf(x) < 0; });
	                }
	                if (sval[exports.APPEND]) {
	                    dst[key] = __spread(dval, sval[exports.APPEND]);
	                }
	            }
	            else {
	                insert(dval, sval, warn);
	            }
	        }
	        else if (Array.isArray(sval)) {
	            dst[key] = [];
	            insert(dst[key], sval, false);
	        }
	        else if (isObject(sval)) {
	            dst[key] = copy(sval);
	        }
	        else {
	            dst[key] = sval;
	        }
	    };
	    try {
	        for (var _b = __values(keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var key = _c.value;
	            _loop_1(key);
	        }
	    }
	    catch (e_2_1) { e_2 = { error: e_2_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_2) throw e_2.error; }
	    }
	    return dst;
	}
	exports.insert = insert;
	function defaultOptions(options) {
	    var defs = [];
	    for (var _i = 1; _i < arguments.length; _i++) {
	        defs[_i - 1] = arguments[_i];
	    }
	    defs.forEach(function (def) { return insert(options, def, false); });
	    return options;
	}
	exports.defaultOptions = defaultOptions;
	function userOptions(options) {
	    var defs = [];
	    for (var _i = 1; _i < arguments.length; _i++) {
	        defs[_i - 1] = arguments[_i];
	    }
	    defs.forEach(function (def) { return insert(options, def, true); });
	    return options;
	}
	exports.userOptions = userOptions;
	function selectOptions(options) {
	    var e_3, _a;
	    var keys = [];
	    for (var _i = 1; _i < arguments.length; _i++) {
	        keys[_i - 1] = arguments[_i];
	    }
	    var subset = {};
	    try {
	        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {
	            var key = keys_1_1.value;
	            if (options.hasOwnProperty(key)) {
	                subset[key] = options[key];
	            }
	        }
	    }
	    catch (e_3_1) { e_3 = { error: e_3_1 }; }
	    finally {
	        try {
	            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);
	        }
	        finally { if (e_3) throw e_3.error; }
	    }
	    return subset;
	}
	exports.selectOptions = selectOptions;
	function selectOptionsFromKeys(options, object) {
	    return selectOptions.apply(void 0, __spread([options], Object.keys(object)));
	}
	exports.selectOptionsFromKeys = selectOptionsFromKeys;
	function separateOptions(options) {
	    var e_4, _a, e_5, _b;
	    var objects = [];
	    for (var _i = 1; _i < arguments.length; _i++) {
	        objects[_i - 1] = arguments[_i];
	    }
	    var results = [];
	    try {
	        for (var objects_1 = __values(objects), objects_1_1 = objects_1.next(); !objects_1_1.done; objects_1_1 = objects_1.next()) {
	            var object = objects_1_1.value;
	            var exists = {}, missing = {};
	            try {
	                for (var _c = (e_5 = void 0, __values(Object.keys(options || {}))), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var key = _d.value;
	                    (object[key] === undefined ? missing : exists)[key] = options[key];
	                }
	            }
	            catch (e_5_1) { e_5 = { error: e_5_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
	                }
	                finally { if (e_5) throw e_5.error; }
	            }
	            results.push(exists);
	            options = missing;
	        }
	    }
	    catch (e_4_1) { e_4 = { error: e_4_1 }; }
	    finally {
	        try {
	            if (objects_1_1 && !objects_1_1.done && (_a = objects_1.return)) _a.call(objects_1);
	        }
	        finally { if (e_4) throw e_4.error; }
	    }
	    results.unshift(options);
	    return results;
	}
	exports.separateOptions = separateOptions;
	//# sourceMappingURL=Options.js.map

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var PrioritizedList_js_1 = __webpack_require__(156);
	var FunctionList = (function (_super) {
	    __extends(FunctionList, _super);
	    function FunctionList() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    FunctionList.prototype.execute = function () {
	        var e_1, _a;
	        var data = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            data[_i] = arguments[_i];
	        }
	        try {
	            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var item = _c.value;
	                var result = item.item.apply(item, __spread(data));
	                if (result === false) {
	                    return false;
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return true;
	    };
	    FunctionList.prototype.asyncExecute = function () {
	        var data = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            data[_i] = arguments[_i];
	        }
	        var i = -1;
	        var items = this.items;
	        return new Promise(function (ok, fail) {
	            (function execute() {
	                var _a;
	                while (++i < items.length) {
	                    var result = (_a = items[i]).item.apply(_a, __spread(data));
	                    if (result instanceof Promise) {
	                        result.then(execute).catch(function (err) { return fail(err); });
	                        return;
	                    }
	                    if (result === false) {
	                        ok(false);
	                        return;
	                    }
	                }
	                ok(true);
	            })();
	        });
	    };
	    return FunctionList;
	}(PrioritizedList_js_1.PrioritizedList));
	exports.FunctionList = FunctionList;
	//# sourceMappingURL=FunctionList.js.map

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var FindMath_js_1 = __webpack_require__(163);
	var string_js_1 = __webpack_require__(164);
	var MathItem_js_1 = __webpack_require__(165);
	var FindTeX = (function (_super) {
	    __extends(FindTeX, _super);
	    function FindTeX(options) {
	        var _this = _super.call(this, options) || this;
	        _this.getPatterns();
	        return _this;
	    }
	    FindTeX.prototype.getPatterns = function () {
	        var _this = this;
	        var options = this.options;
	        var starts = [], parts = [], subparts = [];
	        this.end = {};
	        this.env = this.sub = 0;
	        var i = 1;
	        options['inlineMath'].forEach(function (delims) { return _this.addPattern(starts, delims, false); });
	        options['displayMath'].forEach(function (delims) { return _this.addPattern(starts, delims, true); });
	        if (starts.length) {
	            parts.push(starts.sort(string_js_1.sortLength).join('|'));
	        }
	        if (options['processEnvironments']) {
	            parts.push('\\\\begin\\{([^}]*)\\}');
	            this.env = i;
	            i++;
	        }
	        if (options['processEscapes']) {
	            subparts.push('\\\\([\\\\$])');
	        }
	        if (options['processRefs']) {
	            subparts.push('(\\\\(?:eq)?ref\\{[^}]*\\})');
	        }
	        if (subparts.length) {
	            parts.push('(' + subparts.join('|') + ')');
	            this.sub = i;
	        }
	        this.start = new RegExp(parts.join('|'), 'g');
	        this.hasPatterns = (parts.length > 0);
	    };
	    FindTeX.prototype.addPattern = function (starts, delims, display) {
	        var _a = __read(delims, 2), open = _a[0], close = _a[1];
	        starts.push(string_js_1.quotePattern(open));
	        this.end[open] = [close, display, this.endPattern(close)];
	    };
	    FindTeX.prototype.endPattern = function (end) {
	        return new RegExp(string_js_1.quotePattern(end) + '|\\\\(?:[a-zA-Z]|.)|[{}]', 'g');
	    };
	    FindTeX.prototype.findEnd = function (text, n, start, end) {
	        var _a = __read(end, 3), close = _a[0], display = _a[1], pattern = _a[2];
	        var i = pattern.lastIndex = start.index + start[0].length;
	        var match, braces = 0;
	        while ((match = pattern.exec(text))) {
	            if (match[0] === close && braces === 0) {
	                return MathItem_js_1.protoItem(start[0], text.substr(i, match.index - i), match[0], n, start.index, match.index + match[0].length, display);
	            }
	            else if (match[0] === '{') {
	                braces++;
	            }
	            else if (match[0] === '}' && braces) {
	                braces--;
	            }
	        }
	        return null;
	    };
	    FindTeX.prototype.findMathInString = function (math, n, text) {
	        var start, match;
	        this.start.lastIndex = 0;
	        while ((start = this.start.exec(text))) {
	            if (start[this.env] !== undefined && this.env) {
	                var end = '\\end{' + start[this.env] + '}';
	                match = this.findEnd(text, n, start, [end, true, this.endPattern(end)]);
	                if (match) {
	                    match.math = match.open + match.math + match.close;
	                    match.open = match.close = '';
	                }
	            }
	            else if (start[this.sub] !== undefined && this.sub) {
	                var math_1 = start[this.sub];
	                var end = start.index + start[this.sub].length;
	                if (math_1.length === 2) {
	                    match = MathItem_js_1.protoItem('', math_1.substr(1), '', n, start.index, end);
	                }
	                else {
	                    match = MathItem_js_1.protoItem('', math_1, '', n, start.index, end, false);
	                }
	            }
	            else {
	                match = this.findEnd(text, n, start, this.end[start[0]]);
	            }
	            if (match) {
	                math.push(match);
	                this.start.lastIndex = match.end.n;
	            }
	        }
	    };
	    FindTeX.prototype.findMath = function (strings) {
	        var math = [];
	        if (this.hasPatterns) {
	            for (var i = 0, m = strings.length; i < m; i++) {
	                this.findMathInString(math, i, strings[i]);
	            }
	        }
	        return math;
	    };
	    FindTeX.OPTIONS = {
	        inlineMath: [
	            ['\\(', '\\)']
	        ],
	        displayMath: [
	            ['$$', '$$'],
	            ['\\[', '\\]']
	        ],
	        processEscapes: true,
	        processEnvironments: true,
	        processRefs: true,
	    };
	    return FindTeX;
	}(FindMath_js_1.AbstractFindMath));
	exports.FindTeX = FindTeX;
	//# sourceMappingURL=FindTeX.js.map

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Options_js_1 = __webpack_require__(160);
	var AbstractFindMath = (function () {
	    function AbstractFindMath(options) {
	        var CLASS = this.constructor;
	        this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
	    }
	    AbstractFindMath.OPTIONS = {};
	    return AbstractFindMath;
	}());
	exports.AbstractFindMath = AbstractFindMath;
	//# sourceMappingURL=FindMath.js.map

/***/ }),
/* 164 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	function sortLength(a, b) {
	    return a.length !== b.length ? b.length - a.length : a === b ? 0 : a < b ? -1 : 1;
	}
	exports.sortLength = sortLength;
	function quotePattern(text) {
	    return text.replace(/([\^$(){}+*?\-|\[\]\:\\])/g, '\\$1');
	}
	exports.quotePattern = quotePattern;
	function unicodeChars(text) {
	    var unicode = [];
	    for (var i = 0, m = text.length; i < m; i++) {
	        var n = text.charCodeAt(i);
	        if (n >= 0xD800 && n < 0xDBFF) {
	            n = (((n - 0xD800) << 10) + (text.charCodeAt(++i) - 0xDC00)) + 0x10000;
	        }
	        unicode.push(n);
	    }
	    return unicode;
	}
	exports.unicodeChars = unicodeChars;
	function isPercent(x) {
	    return !!x.match(/%\s*$/);
	}
	exports.isPercent = isPercent;
	function split(x) {
	    return x.trim().split(/\s+/);
	}
	exports.split = split;
	//# sourceMappingURL=string.js.map

/***/ }),
/* 165 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	function protoItem(open, math, close, n, start, end, display) {
	    if (display === void 0) { display = null; }
	    var item = { open: open, math: math, close: close,
	        n: n, start: { n: start }, end: { n: end }, display: display };
	    return item;
	}
	exports.protoItem = protoItem;
	var AbstractMathItem = (function () {
	    function AbstractMathItem(math, jax, display, start, end) {
	        if (display === void 0) { display = true; }
	        if (start === void 0) { start = { i: 0, n: 0, delim: '' }; }
	        if (end === void 0) { end = { i: 0, n: 0, delim: '' }; }
	        this.root = null;
	        this.typesetRoot = null;
	        this._state = exports.STATE.UNPROCESSED;
	        this.metrics = {};
	        this.bbox = {};
	        this.inputData = {};
	        this.outputData = {};
	        this.math = math;
	        this.inputJax = jax;
	        this.display = display;
	        this.start = start;
	        this.end = end;
	        this.root = null;
	        this.typesetRoot = null;
	        this.metrics = {};
	        this.bbox = {};
	        this.inputData = {};
	        this.outputData = {};
	    }
	    Object.defineProperty(AbstractMathItem.prototype, "isEscaped", {
	        get: function () {
	            return this.display === null;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMathItem.prototype.render = function (document) {
	        document.renderActions.renderMath(this, document);
	    };
	    AbstractMathItem.prototype.rerender = function (document, start) {
	        if (start === void 0) { start = exports.STATE.RERENDER; }
	        if (this.state() >= start) {
	            this.state(start - 1);
	        }
	        document.renderActions.renderMath(this, document, start);
	    };
	    AbstractMathItem.prototype.convert = function (document, end) {
	        if (end === void 0) { end = exports.STATE.LAST; }
	        document.renderActions.renderConvert(this, document, end);
	    };
	    AbstractMathItem.prototype.compile = function (document) {
	        if (this.state() < exports.STATE.COMPILED) {
	            this.root = this.inputJax.compile(this, document);
	            this.state(exports.STATE.COMPILED);
	        }
	    };
	    AbstractMathItem.prototype.typeset = function (document) {
	        if (this.state() < exports.STATE.TYPESET) {
	            this.typesetRoot = document.outputJax[this.isEscaped ? 'escaped' : 'typeset'](this, document);
	            this.state(exports.STATE.TYPESET);
	        }
	    };
	    AbstractMathItem.prototype.updateDocument = function (document) { };
	    AbstractMathItem.prototype.removeFromDocument = function (restore) {
	        if (restore === void 0) { restore = false; }
	    };
	    AbstractMathItem.prototype.setMetrics = function (em, ex, cwidth, lwidth, scale) {
	        this.metrics = {
	            em: em, ex: ex,
	            containerWidth: cwidth,
	            lineWidth: lwidth,
	            scale: scale
	        };
	    };
	    AbstractMathItem.prototype.state = function (state, restore) {
	        if (state === void 0) { state = null; }
	        if (restore === void 0) { restore = false; }
	        if (state != null) {
	            if (state < exports.STATE.INSERTED && this._state >= exports.STATE.INSERTED) {
	                this.removeFromDocument(restore);
	            }
	            if (state < exports.STATE.TYPESET && this._state >= exports.STATE.TYPESET) {
	                this.bbox = {};
	                this.outputData = {};
	            }
	            if (state < exports.STATE.COMPILED && this._state >= exports.STATE.COMPILED) {
	                this.inputData = {};
	            }
	            this._state = state;
	        }
	        return this._state;
	    };
	    AbstractMathItem.prototype.reset = function (restore) {
	        if (restore === void 0) { restore = false; }
	        this.state(exports.STATE.UNPROCESSED);
	    };
	    return AbstractMathItem;
	}());
	exports.AbstractMathItem = AbstractMathItem;
	exports.STATE = {
	    UNPROCESSED: 0,
	    FINDMATH: 10,
	    COMPILED: 20,
	    CONVERT: 100,
	    METRICS: 110,
	    RERENDER: 125,
	    TYPESET: 150,
	    INSERTED: 200,
	    LAST: 10000
	};
	function newState(name, state) {
	    if (name in exports.STATE) {
	        throw Error('State ' + name + ' already exists');
	    }
	    exports.STATE[name] = state;
	}
	exports.newState = newState;
	//# sourceMappingURL=MathItem.js.map

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var NodeUtil_js_1 = __webpack_require__(170);
	var FilterUtil;
	(function (FilterUtil) {
	    FilterUtil.cleanStretchy = function (arg) {
	        var e_1, _a;
	        var options = arg.data;
	        try {
	            for (var _b = __values(options.getList('fixStretchy')), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var mo = _c.value;
	                if (NodeUtil_js_1.default.getProperty(mo, 'fixStretchy')) {
	                    var symbol = NodeUtil_js_1.default.getForm(mo);
	                    if (symbol && symbol[3] && symbol[3]['stretchy']) {
	                        NodeUtil_js_1.default.setAttribute(mo, 'stretchy', false);
	                    }
	                    var parent_1 = mo.parent;
	                    if (!NodeUtil_js_1.default.getTexClass(mo) && (!symbol || !symbol[2])) {
	                        var texAtom = options.nodeFactory.create('node', 'TeXAtom', [mo]);
	                        parent_1.replaceChild(texAtom, mo);
	                        texAtom.inheritAttributesFrom(mo);
	                    }
	                    NodeUtil_js_1.default.removeProperties(mo, 'fixStretchy');
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    FilterUtil.cleanAttributes = function (arg) {
	        var node = arg.data.root;
	        node.walkTree(function (mml, d) {
	            var e_2, _a;
	            var attribs = mml.attributes;
	            if (!attribs) {
	                return;
	            }
	            try {
	                for (var _b = __values(attribs.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var key = _c.value;
	                    if (attribs.attributes[key] === mml.attributes.getInherited(key)) {
	                        delete attribs.attributes[key];
	                    }
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	        }, {});
	    };
	    FilterUtil.combineRelations = function (arg) {
	        var e_3, _a;
	        try {
	            for (var _b = __values(arg.data.getList('mo')), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var mo = _c.value;
	                if (mo.getProperty('relationsCombined') || !mo.parent ||
	                    (mo.parent && !NodeUtil_js_1.default.isType(mo.parent, 'mrow')) ||
	                    NodeUtil_js_1.default.getTexClass(mo) !== MmlNode_js_1.TEXCLASS.REL) {
	                    continue;
	                }
	                var mml = mo.parent;
	                var m2 = void 0;
	                var children = mml.childNodes;
	                var next = children.indexOf(mo) + 1;
	                var variantForm = NodeUtil_js_1.default.getProperty(mo, 'variantForm');
	                while (next < children.length && (m2 = children[next]) &&
	                    NodeUtil_js_1.default.isType(m2, 'mo') &&
	                    NodeUtil_js_1.default.getTexClass(m2) === MmlNode_js_1.TEXCLASS.REL) {
	                    if (variantForm === NodeUtil_js_1.default.getProperty(m2, 'variantForm') &&
	                        _compareExplicit(mo, m2)) {
	                        NodeUtil_js_1.default.appendChildren(mo, NodeUtil_js_1.default.getChildren(m2));
	                        _copyExplicit(['stretchy', 'rspace'], mo, m2);
	                        NodeUtil_js_1.default.setProperties(mo, m2.getAllProperties());
	                        children.splice(next, 1);
	                        m2.parent = null;
	                        m2.setProperty('relationsCombined', true);
	                    }
	                    else {
	                        if (mo.attributes.getExplicit('rspace') == null) {
	                            NodeUtil_js_1.default.setAttribute(mo, 'rspace', '0pt');
	                        }
	                        if (m2.attributes.getExplicit('lspace') == null) {
	                            NodeUtil_js_1.default.setAttribute(m2, 'lspace', '0pt');
	                        }
	                        break;
	                    }
	                }
	                mo.attributes.setInherited('form', mo.getForms()[0]);
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	    };
	    var _copyExplicit = function (attrs, node1, node2) {
	        var attr1 = node1.attributes;
	        var attr2 = node2.attributes;
	        attrs.forEach(function (x) {
	            var attr = attr2.getExplicit(x);
	            if (attr != null) {
	                attr1.set(x, attr);
	            }
	        });
	    };
	    var _compareExplicit = function (node1, node2) {
	        var e_4, _a;
	        var filter = function (attr, space) {
	            var exp = attr.getExplicitNames();
	            return exp.filter(function (x) {
	                return x !== space &&
	                    (x !== 'stretchy' ||
	                        attr.getExplicit('stretchy'));
	            });
	        };
	        var attr1 = node1.attributes;
	        var attr2 = node2.attributes;
	        var exp1 = filter(attr1, 'lspace');
	        var exp2 = filter(attr2, 'rspace');
	        if (exp1.length !== exp2.length) {
	            return false;
	        }
	        try {
	            for (var exp1_1 = __values(exp1), exp1_1_1 = exp1_1.next(); !exp1_1_1.done; exp1_1_1 = exp1_1.next()) {
	                var name_1 = exp1_1_1.value;
	                if (attr1.getExplicit(name_1) !== attr2.getExplicit(name_1)) {
	                    return false;
	                }
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (exp1_1_1 && !exp1_1_1.done && (_a = exp1_1.return)) _a.call(exp1_1);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	        return true;
	    };
	    var _cleanSubSup = function (options, low, up) {
	        var e_5, _a;
	        try {
	            for (var _b = __values(options.getList('m' + low + up)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var mml = _c.value;
	                var children = mml.childNodes;
	                if (children[mml[low]] && children[mml[up]]) {
	                    continue;
	                }
	                var parent_2 = mml.parent;
	                var newNode = (children[mml[low]] ?
	                    options.nodeFactory.create('node', 'm' + low, [children[mml.base], children[mml[low]]]) :
	                    options.nodeFactory.create('node', 'm' + up, [children[mml.base], children[mml[up]]]));
	                NodeUtil_js_1.default.copyAttributes(mml, newNode);
	                if (parent_2) {
	                    parent_2.replaceChild(newNode, mml);
	                }
	                else {
	                    options.root = newNode;
	                }
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	    };
	    FilterUtil.cleanSubSup = function (arg) {
	        var options = arg.data;
	        if (options.error) {
	            return;
	        }
	        _cleanSubSup(options, 'sub', 'sup');
	        _cleanSubSup(options, 'under', 'over');
	    };
	    var _moveLimits = function (options, underover, subsup) {
	        var e_6, _a;
	        try {
	            for (var _b = __values(options.getList(underover)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var mml = _c.value;
	                if (mml.attributes.get('displaystyle')) {
	                    continue;
	                }
	                var base = mml.childNodes[mml.base];
	                var mo = base.coreMO();
	                if (base.getProperty('movablelimits') && !mo.attributes.getExplicit('movablelimits')) {
	                    var node = options.nodeFactory.create('node', subsup, mml.childNodes);
	                    NodeUtil_js_1.default.copyAttributes(mml, node);
	                    if (mml.parent) {
	                        mml.parent.replaceChild(node, mml);
	                    }
	                    else {
	                        options.root = node;
	                    }
	                }
	            }
	        }
	        catch (e_6_1) { e_6 = { error: e_6_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_6) throw e_6.error; }
	        }
	    };
	    FilterUtil.moveLimits = function (arg) {
	        var options = arg.data;
	        _moveLimits(options, 'munderover', 'msubsup');
	        _moveLimits(options, 'munder', 'msub');
	        _moveLimits(options, 'mover', 'msup');
	    };
	    FilterUtil.setInherited = function (arg) {
	        arg.data.root.setInheritedAttributes({}, arg.math['display'], 0, false);
	    };
	})(FilterUtil || (FilterUtil = {}));
	exports.default = FilterUtil;
	//# sourceMappingURL=FilterUtil.js.map

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Attributes_js_1 = __webpack_require__(168);
	var Node_js_1 = __webpack_require__(169);
	exports.TEXCLASS = {
	    ORD: 0,
	    OP: 1,
	    BIN: 2,
	    REL: 3,
	    OPEN: 4,
	    CLOSE: 5,
	    PUNCT: 6,
	    INNER: 7,
	    VCENTER: 8,
	    NONE: -1
	};
	exports.TEXCLASSNAMES = ['ORD', 'OP', 'BIN', 'REL', 'OPEN', 'CLOSE', 'PUNCT', 'INNER', 'VCENTER'];
	var TEXSPACELENGTH = ['', 'thinmathspace', 'mediummathspace', 'thickmathspace'];
	var TEXSPACE = [
	    [0, -1, 2, 3, 0, 0, 0, 1],
	    [-1, -1, 0, 3, 0, 0, 0, 1],
	    [2, 2, 0, 0, 2, 0, 0, 2],
	    [3, 3, 0, 0, 3, 0, 0, 3],
	    [0, 0, 0, 0, 0, 0, 0, 0],
	    [0, -1, 2, 3, 0, 0, 0, 1],
	    [1, 1, 0, 1, 1, 1, 1, 1],
	    [1, -1, 2, 3, 1, 0, 1, 1]
	];
	exports.indentAttributes = [
	    'indentalign', 'indentalignfirst',
	    'indentshift', 'indentshiftfirst'
	];
	var AbstractMmlNode = (function (_super) {
	    __extends(AbstractMmlNode, _super);
	    function AbstractMmlNode(factory, attributes, children) {
	        if (attributes === void 0) { attributes = {}; }
	        if (children === void 0) { children = []; }
	        var _this = _super.call(this, factory) || this;
	        _this.texClass = null;
	        _this.prevClass = null;
	        _this.prevLevel = null;
	        if (_this.arity < 0) {
	            _this.childNodes = [factory.create('inferredMrow')];
	            _this.childNodes[0].parent = _this;
	        }
	        _this.setChildren(children);
	        _this.attributes = new Attributes_js_1.Attributes(factory.getNodeClass(_this.kind).defaults, factory.getNodeClass('math').defaults);
	        _this.attributes.setList(attributes);
	        return _this;
	    }
	    Object.defineProperty(AbstractMmlNode.prototype, "isToken", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "isEmbellished", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "isSpacelike", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "linebreakContainer", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "hasNewLine", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "arity", {
	        get: function () {
	            return Infinity;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "isInferred", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "Parent", {
	        get: function () {
	            var parent = this.parent;
	            while (parent && parent.notParent) {
	                parent = parent.Parent;
	            }
	            return parent;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlNode.prototype, "notParent", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMmlNode.prototype.setChildren = function (children) {
	        if (this.arity < 0) {
	            return this.childNodes[0].setChildren(children);
	        }
	        return _super.prototype.setChildren.call(this, children);
	    };
	    AbstractMmlNode.prototype.appendChild = function (child) {
	        if (this.arity < 0) {
	            this.childNodes[0].appendChild(child);
	            return child;
	        }
	        return _super.prototype.appendChild.call(this, child);
	    };
	    AbstractMmlNode.prototype.replaceChild = function (newChild, oldChild) {
	        if (this.arity < 0) {
	            this.childNodes[0].replaceChild(newChild, oldChild);
	            return newChild;
	        }
	        return _super.prototype.replaceChild.call(this, newChild, oldChild);
	    };
	    AbstractMmlNode.prototype.core = function () {
	        return this;
	    };
	    AbstractMmlNode.prototype.coreMO = function () {
	        return this;
	    };
	    AbstractMmlNode.prototype.coreIndex = function () {
	        return 0;
	    };
	    AbstractMmlNode.prototype.childPosition = function () {
	        var e_1, _a;
	        var child = this;
	        var parent = child.parent;
	        while (parent && parent.notParent) {
	            child = parent;
	            parent = parent.parent;
	        }
	        if (parent) {
	            var i = 0;
	            try {
	                for (var _b = __values(parent.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var node = _c.value;
	                    if (node === child) {
	                        return i;
	                    }
	                    i++;
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	        }
	        return null;
	    };
	    AbstractMmlNode.prototype.setTeXclass = function (prev) {
	        this.getPrevClass(prev);
	        return (this.texClass != null ? this : prev);
	    };
	    AbstractMmlNode.prototype.updateTeXclass = function (core) {
	        if (core) {
	            this.prevClass = core.prevClass;
	            this.prevLevel = core.prevLevel;
	            core.prevClass = core.prevLevel = null;
	            this.texClass = core.texClass;
	        }
	    };
	    AbstractMmlNode.prototype.getPrevClass = function (prev) {
	        if (prev) {
	            this.prevClass = prev.texClass;
	            this.prevLevel = prev.attributes.get('scriptlevel');
	        }
	    };
	    AbstractMmlNode.prototype.texSpacing = function () {
	        var prevClass = (this.prevClass != null ? this.prevClass : exports.TEXCLASS.NONE);
	        var texClass = this.texClass || exports.TEXCLASS.ORD;
	        if (prevClass === exports.TEXCLASS.NONE || texClass === exports.TEXCLASS.NONE) {
	            return '';
	        }
	        if (prevClass === exports.TEXCLASS.VCENTER) {
	            prevClass = exports.TEXCLASS.ORD;
	        }
	        if (texClass === exports.TEXCLASS.VCENTER) {
	            texClass = exports.TEXCLASS.ORD;
	        }
	        var space = TEXSPACE[prevClass][texClass];
	        if ((this.prevLevel > 0 || this.attributes.get('scriptlevel') > 0) && space >= 0) {
	            return '';
	        }
	        return TEXSPACELENGTH[Math.abs(space)];
	    };
	    AbstractMmlNode.prototype.hasSpacingAttributes = function () {
	        return this.isEmbellished && this.coreMO().hasSpacingAttributes();
	    };
	    AbstractMmlNode.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
	        var e_2, _a;
	        if (attributes === void 0) { attributes = {}; }
	        if (display === void 0) { display = false; }
	        if (level === void 0) { level = 0; }
	        if (prime === void 0) { prime = false; }
	        var defaults = this.attributes.getAllDefaults();
	        try {
	            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var key = _c.value;
	                if (defaults.hasOwnProperty(key)) {
	                    var _d = __read(attributes[key], 2), node = _d[0], value = _d[1];
	                    var noinherit = (AbstractMmlNode.noInherit[node] || {})[this.kind] || {};
	                    if (!noinherit[key]) {
	                        this.attributes.setInherited(key, value);
	                    }
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        var displaystyle = this.attributes.getExplicit('displaystyle');
	        if (displaystyle === undefined) {
	            this.attributes.setInherited('displaystyle', display);
	        }
	        var scriptlevel = this.attributes.getExplicit('scriptlevel');
	        if (scriptlevel === undefined) {
	            this.attributes.setInherited('scriptlevel', level);
	        }
	        if (prime) {
	            this.setProperty('texprimestyle', prime);
	        }
	        var arity = this.arity;
	        if (arity >= 0 && arity !== Infinity && ((arity === 1 && this.childNodes.length === 0) ||
	            (arity !== 1 && this.childNodes.length !== arity))) {
	            if (arity < this.childNodes.length) {
	                this.childNodes = this.childNodes.slice(0, arity);
	            }
	            else {
	                while (this.childNodes.length < arity) {
	                    this.appendChild(this.factory.create('mrow'));
	                }
	            }
	        }
	        this.setChildInheritedAttributes(attributes, display, level, prime);
	    };
	    AbstractMmlNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var e_3, _a;
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.setInheritedAttributes(attributes, display, level, prime);
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	    };
	    AbstractMmlNode.prototype.addInheritedAttributes = function (current, attributes) {
	        var e_4, _a;
	        var updated = __assign({}, current);
	        try {
	            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var name_1 = _c.value;
	                if (name_1 !== 'displaystyle' && name_1 !== 'scriptlevel' && name_1 !== 'style') {
	                    updated[name_1] = [this.kind, attributes[name_1]];
	                }
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	        return updated;
	    };
	    AbstractMmlNode.prototype.inheritAttributesFrom = function (node) {
	        var attributes = node.attributes;
	        var display = attributes.get('displaystyle');
	        var scriptlevel = attributes.get('scriptlevel');
	        var defaults = (!attributes.isSet('mathsize') ? {} : {
	            mathsize: ['math', attributes.get('mathsize')]
	        });
	        var prime = node.getProperty('texprimestyle') || false;
	        this.setInheritedAttributes(defaults, display, scriptlevel, prime);
	    };
	    AbstractMmlNode.prototype.verifyTree = function (options) {
	        if (options === void 0) { options = null; }
	        if (options === null) {
	            return;
	        }
	        this.verifyAttributes(options);
	        var arity = this.arity;
	        if (options['checkArity']) {
	            if (arity >= 0 && arity !== Infinity &&
	                ((arity === 1 && this.childNodes.length === 0) ||
	                    (arity !== 1 && this.childNodes.length !== arity))) {
	                this.mError('Wrong number of children for "' + this.kind + '" node', options, true);
	            }
	        }
	        this.verifyChildren(options);
	    };
	    AbstractMmlNode.prototype.verifyAttributes = function (options) {
	        var e_5, _a;
	        if (options['checkAttributes']) {
	            var attributes = this.attributes;
	            var bad = [];
	            try {
	                for (var _b = __values(attributes.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var name_2 = _c.value;
	                    if (name_2.substr(0, 5) !== 'data-' && attributes.getDefault(name_2) === undefined &&
	                        !name_2.match(/^(?:class|style|id|(?:xlink:)?href)$/)) {
	                        bad.push(name_2);
	                    }
	                }
	            }
	            catch (e_5_1) { e_5 = { error: e_5_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_5) throw e_5.error; }
	            }
	            if (bad.length) {
	                this.mError('Unknown attributes for ' + this.kind + ' node: ' + bad.join(', '), options);
	            }
	        }
	    };
	    AbstractMmlNode.prototype.verifyChildren = function (options) {
	        var e_6, _a;
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.verifyTree(options);
	            }
	        }
	        catch (e_6_1) { e_6 = { error: e_6_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_6) throw e_6.error; }
	        }
	    };
	    AbstractMmlNode.prototype.mError = function (message, options, short) {
	        if (short === void 0) { short = false; }
	        if (this.parent && this.parent.isKind('merror')) {
	            return;
	        }
	        var merror = this.factory.create('merror');
	        if (options['fullErrors'] || short) {
	            var mtext = this.factory.create('mtext');
	            var text = this.factory.create('text');
	            text.setText(options['fullErrors'] ? message : this.kind);
	            mtext.appendChild(text);
	            merror.appendChild(mtext);
	            this.parent.replaceChild(merror, this);
	        }
	        else {
	            this.parent.replaceChild(merror, this);
	            merror.appendChild(this);
	        }
	        return merror;
	    };
	    AbstractMmlNode.defaults = {
	        mathbackground: Attributes_js_1.INHERIT,
	        mathcolor: Attributes_js_1.INHERIT,
	        mathsize: Attributes_js_1.INHERIT,
	        dir: Attributes_js_1.INHERIT
	    };
	    AbstractMmlNode.noInherit = {
	        mstyle: {
	            mpadded: { width: true, height: true, depth: true, lspace: true, voffset: true },
	            mtable: { width: true, height: true, depth: true, align: true }
	        },
	        maligngroup: {
	            mrow: { groupalign: true },
	            mtable: { groupalign: true }
	        }
	    };
	    AbstractMmlNode.verifyDefaults = {
	        checkArity: true,
	        checkAttributes: false,
	        fullErrors: false,
	        fixMmultiscripts: true,
	        fixMtables: true
	    };
	    return AbstractMmlNode;
	}(Node_js_1.AbstractNode));
	exports.AbstractMmlNode = AbstractMmlNode;
	var AbstractMmlTokenNode = (function (_super) {
	    __extends(AbstractMmlTokenNode, _super);
	    function AbstractMmlTokenNode() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(AbstractMmlTokenNode.prototype, "isToken", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMmlTokenNode.prototype.getText = function () {
	        var e_7, _a;
	        var text = '';
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child instanceof TextNode) {
	                    text += child.getText();
	                }
	            }
	        }
	        catch (e_7_1) { e_7 = { error: e_7_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_7) throw e_7.error; }
	        }
	        return text;
	    };
	    AbstractMmlTokenNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var e_8, _a;
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child instanceof AbstractMmlNode) {
	                    child.setInheritedAttributes(attributes, display, level, prime);
	                }
	            }
	        }
	        catch (e_8_1) { e_8 = { error: e_8_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_8) throw e_8.error; }
	        }
	    };
	    AbstractMmlTokenNode.prototype.walkTree = function (func, data) {
	        var e_9, _a;
	        func(this, data);
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child instanceof AbstractMmlNode) {
	                    child.walkTree(func, data);
	                }
	            }
	        }
	        catch (e_9_1) { e_9 = { error: e_9_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_9) throw e_9.error; }
	        }
	        return data;
	    };
	    AbstractMmlTokenNode.defaults = __assign(__assign({}, AbstractMmlNode.defaults), { mathvariant: 'normal', mathsize: Attributes_js_1.INHERIT });
	    return AbstractMmlTokenNode;
	}(AbstractMmlNode));
	exports.AbstractMmlTokenNode = AbstractMmlTokenNode;
	var AbstractMmlLayoutNode = (function (_super) {
	    __extends(AbstractMmlLayoutNode, _super);
	    function AbstractMmlLayoutNode() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(AbstractMmlLayoutNode.prototype, "isSpacelike", {
	        get: function () {
	            return this.childNodes[0].isSpacelike;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlLayoutNode.prototype, "isEmbellished", {
	        get: function () {
	            return this.childNodes[0].isEmbellished;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlLayoutNode.prototype, "arity", {
	        get: function () {
	            return -1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMmlLayoutNode.prototype.core = function () {
	        return this.childNodes[0];
	    };
	    AbstractMmlLayoutNode.prototype.coreMO = function () {
	        return this.childNodes[0].coreMO();
	    };
	    AbstractMmlLayoutNode.prototype.setTeXclass = function (prev) {
	        prev = this.childNodes[0].setTeXclass(prev);
	        this.updateTeXclass(this.childNodes[0]);
	        return prev;
	    };
	    AbstractMmlLayoutNode.defaults = AbstractMmlNode.defaults;
	    return AbstractMmlLayoutNode;
	}(AbstractMmlNode));
	exports.AbstractMmlLayoutNode = AbstractMmlLayoutNode;
	var AbstractMmlBaseNode = (function (_super) {
	    __extends(AbstractMmlBaseNode, _super);
	    function AbstractMmlBaseNode() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(AbstractMmlBaseNode.prototype, "isEmbellished", {
	        get: function () {
	            return this.childNodes[0].isEmbellished;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMmlBaseNode.prototype.core = function () {
	        return this.childNodes[0];
	    };
	    AbstractMmlBaseNode.prototype.coreMO = function () {
	        return this.childNodes[0].coreMO();
	    };
	    AbstractMmlBaseNode.prototype.setTeXclass = function (prev) {
	        var e_10, _a;
	        this.getPrevClass(prev);
	        this.texClass = exports.TEXCLASS.ORD;
	        var base = this.childNodes[0];
	        if (base) {
	            if (this.isEmbellished || base.isKind('mi')) {
	                prev = base.setTeXclass(prev);
	                this.updateTeXclass(this.core());
	            }
	            else {
	                base.setTeXclass(null);
	                prev = this;
	            }
	        }
	        else {
	            prev = this;
	        }
	        try {
	            for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child) {
	                    child.setTeXclass(null);
	                }
	            }
	        }
	        catch (e_10_1) { e_10 = { error: e_10_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_10) throw e_10.error; }
	        }
	        return prev;
	    };
	    AbstractMmlBaseNode.defaults = AbstractMmlNode.defaults;
	    return AbstractMmlBaseNode;
	}(AbstractMmlNode));
	exports.AbstractMmlBaseNode = AbstractMmlBaseNode;
	var AbstractMmlEmptyNode = (function (_super) {
	    __extends(AbstractMmlEmptyNode, _super);
	    function AbstractMmlEmptyNode() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isToken", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isEmbellished", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isSpacelike", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "linebreakContainer", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "hasNewLine", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "arity", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "isInferred", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "notParent", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "Parent", {
	        get: function () {
	            return this.parent;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "texClass", {
	        get: function () {
	            return exports.TEXCLASS.NONE;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "prevClass", {
	        get: function () {
	            return exports.TEXCLASS.NONE;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "prevLevel", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMmlEmptyNode.prototype.hasSpacingAttributes = function () {
	        return false;
	    };
	    Object.defineProperty(AbstractMmlEmptyNode.prototype, "attributes", {
	        get: function () {
	            return null;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMmlEmptyNode.prototype.core = function () {
	        return this;
	    };
	    AbstractMmlEmptyNode.prototype.coreMO = function () {
	        return this;
	    };
	    AbstractMmlEmptyNode.prototype.coreIndex = function () {
	        return 0;
	    };
	    AbstractMmlEmptyNode.prototype.childPosition = function () {
	        return 0;
	    };
	    AbstractMmlEmptyNode.prototype.setTeXclass = function (prev) {
	        return prev;
	    };
	    AbstractMmlEmptyNode.prototype.texSpacing = function () {
	        return '';
	    };
	    AbstractMmlEmptyNode.prototype.setInheritedAttributes = function (attributes, display, level, prime) { };
	    AbstractMmlEmptyNode.prototype.inheritAttributesFrom = function (node) { };
	    AbstractMmlEmptyNode.prototype.verifyTree = function (options) { };
	    AbstractMmlEmptyNode.prototype.mError = function (message, options, short) {
	        if (short === void 0) { short = false; }
	    };
	    return AbstractMmlEmptyNode;
	}(Node_js_1.AbstractEmptyNode));
	exports.AbstractMmlEmptyNode = AbstractMmlEmptyNode;
	var TextNode = (function (_super) {
	    __extends(TextNode, _super);
	    function TextNode() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.text = '';
	        return _this;
	    }
	    Object.defineProperty(TextNode.prototype, "kind", {
	        get: function () {
	            return 'text';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TextNode.prototype.getText = function () {
	        return this.text;
	    };
	    TextNode.prototype.setText = function (text) {
	        this.text = text;
	        return this;
	    };
	    TextNode.prototype.toString = function () {
	        return this.text;
	    };
	    return TextNode;
	}(AbstractMmlEmptyNode));
	exports.TextNode = TextNode;
	var XMLNode = (function (_super) {
	    __extends(XMLNode, _super);
	    function XMLNode() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.xml = null;
	        _this.adaptor = null;
	        return _this;
	    }
	    Object.defineProperty(XMLNode.prototype, "kind", {
	        get: function () {
	            return 'XML';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    XMLNode.prototype.getXML = function () {
	        return this.xml;
	    };
	    XMLNode.prototype.setXML = function (xml, adaptor) {
	        if (adaptor === void 0) { adaptor = null; }
	        this.xml = xml;
	        this.adaptor = adaptor;
	        return this;
	    };
	    XMLNode.prototype.getSerializedXML = function () {
	        return this.adaptor.outerHTML(this.xml);
	    };
	    XMLNode.prototype.toString = function () {
	        return 'XML data';
	    };
	    return XMLNode;
	}(AbstractMmlEmptyNode));
	exports.XMLNode = XMLNode;
	//# sourceMappingURL=MmlNode.js.map

/***/ }),
/* 168 */
/***/ (function(module, exports) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.INHERIT = '_inherit_';
	var Attributes = (function () {
	    function Attributes(defaults, global) {
	        this.global = global;
	        this.defaults = Object.create(global);
	        this.inherited = Object.create(this.defaults);
	        this.attributes = Object.create(this.inherited);
	        Object.assign(this.defaults, defaults);
	    }
	    Attributes.prototype.set = function (name, value) {
	        this.attributes[name] = value;
	    };
	    Attributes.prototype.setList = function (list) {
	        Object.assign(this.attributes, list);
	    };
	    Attributes.prototype.get = function (name) {
	        var value = this.attributes[name];
	        if (value === exports.INHERIT) {
	            value = this.global[name];
	        }
	        return value;
	    };
	    Attributes.prototype.getExplicit = function (name) {
	        if (!this.attributes.hasOwnProperty(name)) {
	            return undefined;
	        }
	        return this.attributes[name];
	    };
	    Attributes.prototype.getList = function () {
	        var e_1, _a;
	        var names = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            names[_i] = arguments[_i];
	        }
	        var values = {};
	        try {
	            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
	                var name_1 = names_1_1.value;
	                values[name_1] = this.get(name_1);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return values;
	    };
	    Attributes.prototype.setInherited = function (name, value) {
	        this.inherited[name] = value;
	    };
	    Attributes.prototype.getInherited = function (name) {
	        return this.inherited[name];
	    };
	    Attributes.prototype.getDefault = function (name) {
	        return this.defaults[name];
	    };
	    Attributes.prototype.isSet = function (name) {
	        return this.attributes.hasOwnProperty(name) || this.inherited.hasOwnProperty(name);
	    };
	    Attributes.prototype.hasDefault = function (name) {
	        return (name in this.defaults);
	    };
	    Attributes.prototype.getExplicitNames = function () {
	        return Object.keys(this.attributes);
	    };
	    Attributes.prototype.getInheritedNames = function () {
	        return Object.keys(this.inherited);
	    };
	    Attributes.prototype.getDefaultNames = function () {
	        return Object.keys(this.defaults);
	    };
	    Attributes.prototype.getGlobalNames = function () {
	        return Object.keys(this.global);
	    };
	    Attributes.prototype.getAllAttributes = function () {
	        return this.attributes;
	    };
	    Attributes.prototype.getAllInherited = function () {
	        return this.inherited;
	    };
	    Attributes.prototype.getAllDefaults = function () {
	        return this.defaults;
	    };
	    Attributes.prototype.getAllGlobals = function () {
	        return this.global;
	    };
	    return Attributes;
	}());
	exports.Attributes = Attributes;
	//# sourceMappingURL=Attributes.js.map

/***/ }),
/* 169 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var AbstractNode = (function () {
	    function AbstractNode(factory, properties, children) {
	        var e_1, _a;
	        if (properties === void 0) { properties = {}; }
	        if (children === void 0) { children = []; }
	        this.parent = null;
	        this.properties = {};
	        this._factory = null;
	        this.childNodes = [];
	        this._factory = factory;
	        try {
	            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var name_1 = _c.value;
	                this.setProperty(name_1, properties[name_1]);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        if (children.length) {
	            this.setChildren(children);
	        }
	    }
	    Object.defineProperty(AbstractNode.prototype, "factory", {
	        get: function () {
	            return this._factory;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractNode.prototype, "kind", {
	        get: function () {
	            return 'unknown';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractNode.prototype.setProperty = function (name, value) {
	        this.properties[name] = value;
	    };
	    AbstractNode.prototype.getProperty = function (name) {
	        return this.properties[name];
	    };
	    AbstractNode.prototype.getPropertyNames = function () {
	        return Object.keys(this.properties);
	    };
	    AbstractNode.prototype.getAllProperties = function () {
	        return this.properties;
	    };
	    AbstractNode.prototype.removeProperty = function () {
	        var e_2, _a;
	        var names = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            names[_i] = arguments[_i];
	        }
	        try {
	            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
	                var name_2 = names_1_1.value;
	                delete this.properties[name_2];
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    AbstractNode.prototype.isKind = function (kind) {
	        return this.factory.nodeIsKind(this, kind);
	    };
	    AbstractNode.prototype.setChildren = function (children) {
	        var e_3, _a;
	        this.childNodes = [];
	        try {
	            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
	                var child = children_1_1.value;
	                this.appendChild(child);
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	    };
	    AbstractNode.prototype.appendChild = function (child) {
	        this.childNodes.push(child);
	        child.parent = this;
	        return child;
	    };
	    AbstractNode.prototype.replaceChild = function (newChild, oldChild) {
	        var i = this.childIndex(oldChild);
	        if (i !== null) {
	            this.childNodes[i] = newChild;
	            newChild.parent = this;
	        }
	        return newChild;
	    };
	    AbstractNode.prototype.childIndex = function (node) {
	        var i = this.childNodes.indexOf(node);
	        return (i === -1 ? null : i);
	    };
	    AbstractNode.prototype.findNodes = function (kind) {
	        var nodes = [];
	        this.walkTree(function (node) {
	            if (node.isKind(kind)) {
	                nodes.push(node);
	            }
	        });
	        return nodes;
	    };
	    AbstractNode.prototype.walkTree = function (func, data) {
	        var e_4, _a;
	        func(this, data);
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child) {
	                    child.walkTree(func, data);
	                }
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	        return data;
	    };
	    AbstractNode.prototype.toString = function () {
	        return this.kind + '(' + this.childNodes.join(',') + ')';
	    };
	    return AbstractNode;
	}());
	exports.AbstractNode = AbstractNode;
	var AbstractEmptyNode = (function (_super) {
	    __extends(AbstractEmptyNode, _super);
	    function AbstractEmptyNode() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    AbstractEmptyNode.prototype.setChildren = function (children) {
	    };
	    AbstractEmptyNode.prototype.appendChild = function (child) {
	        return child;
	    };
	    AbstractEmptyNode.prototype.replaceChild = function (newChild, oldChild) {
	        return oldChild;
	    };
	    AbstractEmptyNode.prototype.childIndex = function (node) {
	        return null;
	    };
	    AbstractEmptyNode.prototype.walkTree = function (func, data) {
	        func(this, data);
	        return data;
	    };
	    AbstractEmptyNode.prototype.toString = function () {
	        return this.kind;
	    };
	    return AbstractEmptyNode;
	}(AbstractNode));
	exports.AbstractEmptyNode = AbstractEmptyNode;
	//# sourceMappingURL=Node.js.map

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var mo_js_1 = __webpack_require__(171);
	var NodeUtil;
	(function (NodeUtil) {
	    var attrs = new Map([
	        ['autoOP', true],
	        ['fnOP', true],
	        ['movesupsub', true],
	        ['subsupOK', true],
	        ['texprimestyle', true],
	        ['useHeight', true],
	        ['variantForm', true],
	        ['withDelims', true],
	        ['open', true],
	        ['close', true]
	    ]);
	    var methodOut = false;
	    function createEntity(code) {
	        return String.fromCharCode(parseInt(code, 16));
	    }
	    NodeUtil.createEntity = createEntity;
	    ;
	    function getChildren(node) {
	        return node.childNodes;
	    }
	    NodeUtil.getChildren = getChildren;
	    ;
	    function getText(node) {
	        return node.getText();
	    }
	    NodeUtil.getText = getText;
	    ;
	    function appendChildren(node, children) {
	        var e_1, _a;
	        try {
	            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
	                var child = children_1_1.value;
	                node.appendChild(child);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    }
	    NodeUtil.appendChildren = appendChildren;
	    ;
	    function setAttribute(node, attribute, value) {
	        node.attributes.set(attribute, value);
	    }
	    NodeUtil.setAttribute = setAttribute;
	    ;
	    function setProperty(node, property, value) {
	        node.setProperty(property, value);
	    }
	    NodeUtil.setProperty = setProperty;
	    ;
	    function setProperties(node, properties) {
	        var e_2, _a;
	        try {
	            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var name_1 = _c.value;
	                var value = properties[name_1];
	                if (name_1 === 'texClass') {
	                    node.texClass = value;
	                    node.setProperty(name_1, value);
	                }
	                else if (name_1 === 'movablelimits') {
	                    node.setProperty('movablelimits', value);
	                    if (node.isKind('mo') || node.isKind('mstyle')) {
	                        node.attributes.set('movablelimits', value);
	                    }
	                }
	                else if (name_1 === 'inferred') {
	                }
	                else if (attrs.has(name_1)) {
	                    node.setProperty(name_1, value);
	                }
	                else {
	                    node.attributes.set(name_1, value);
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    }
	    NodeUtil.setProperties = setProperties;
	    ;
	    function getProperty(node, property) {
	        return node.getProperty(property);
	    }
	    NodeUtil.getProperty = getProperty;
	    ;
	    function getAttribute(node, attr) {
	        return node.attributes.get(attr);
	    }
	    NodeUtil.getAttribute = getAttribute;
	    function removeProperties(node) {
	        var properties = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            properties[_i - 1] = arguments[_i];
	        }
	        node.removeProperty.apply(node, __spread(properties));
	    }
	    NodeUtil.removeProperties = removeProperties;
	    function getChildAt(node, position) {
	        return node.childNodes[position];
	    }
	    NodeUtil.getChildAt = getChildAt;
	    ;
	    function setChild(node, position, child) {
	        var children = node.childNodes;
	        children[position] = child;
	        if (child) {
	            child.parent = node;
	        }
	    }
	    NodeUtil.setChild = setChild;
	    ;
	    function copyChildren(oldNode, newNode) {
	        var children = oldNode.childNodes;
	        for (var i = 0; i < children.length; i++) {
	            setChild(newNode, i, children[i]);
	        }
	    }
	    NodeUtil.copyChildren = copyChildren;
	    ;
	    function copyAttributes(oldNode, newNode) {
	        newNode.attributes = oldNode.attributes;
	        setProperties(newNode, oldNode.getAllProperties());
	    }
	    NodeUtil.copyAttributes = copyAttributes;
	    ;
	    function isType(node, kind) {
	        return node.isKind(kind);
	    }
	    NodeUtil.isType = isType;
	    ;
	    function isEmbellished(node) {
	        return node.isEmbellished;
	    }
	    NodeUtil.isEmbellished = isEmbellished;
	    ;
	    function getTexClass(node) {
	        return node.texClass;
	    }
	    NodeUtil.getTexClass = getTexClass;
	    ;
	    function getCoreMO(node) {
	        return node.coreMO();
	    }
	    NodeUtil.getCoreMO = getCoreMO;
	    ;
	    function isNode(item) {
	        return item instanceof MmlNode_js_1.AbstractMmlNode || item instanceof MmlNode_js_1.AbstractMmlEmptyNode;
	    }
	    NodeUtil.isNode = isNode;
	    ;
	    function isInferred(node) {
	        return node.isInferred;
	    }
	    NodeUtil.isInferred = isInferred;
	    ;
	    function getForm(node) {
	        var e_3, _a;
	        if (!isType(node, 'mo')) {
	            return null;
	        }
	        var mo = node;
	        var forms = mo.getForms();
	        try {
	            for (var forms_1 = __values(forms), forms_1_1 = forms_1.next(); !forms_1_1.done; forms_1_1 = forms_1.next()) {
	                var form = forms_1_1.value;
	                var symbol = mo_js_1.MmlMo.OPTABLE[form][mo.getText()];
	                if (symbol) {
	                    return symbol;
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (forms_1_1 && !forms_1_1.done && (_a = forms_1.return)) _a.call(forms_1);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        return null;
	    }
	    NodeUtil.getForm = getForm;
	    ;
	})(NodeUtil || (NodeUtil = {}));
	exports.default = NodeUtil;
	//# sourceMappingURL=NodeUtil.js.map

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var OperatorDictionary_js_1 = __webpack_require__(172);
	var MmlMo = (function (_super) {
	    __extends(MmlMo, _super);
	    function MmlMo() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this._texClass = null;
	        _this.lspace = 5 / 18;
	        _this.rspace = 5 / 18;
	        return _this;
	    }
	    Object.defineProperty(MmlMo.prototype, "texClass", {
	        get: function () {
	            if (this._texClass === null) {
	                var mo = this.getText();
	                var _a = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _a[0], form2 = _a[1], form3 = _a[2];
	                var OPTABLE_1 = this.constructor.OPTABLE;
	                var def = OPTABLE_1[form1][mo] || OPTABLE_1[form2][mo] || OPTABLE_1[form3][mo];
	                return def ? def[2] : MmlNode_js_1.TEXCLASS.REL;
	            }
	            return this._texClass;
	        },
	        set: function (value) {
	            this._texClass = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMo.prototype, "kind", {
	        get: function () {
	            return 'mo';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMo.prototype, "isEmbellished", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMo.prototype, "hasNewLine", {
	        get: function () {
	            return this.attributes.get('linebreak') === 'newline';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMo.prototype.coreParent = function () {
	        var embellished = this;
	        var parent = this;
	        var math = this.factory.getNodeClass('math');
	        while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {
	            embellished = parent;
	            parent = parent.Parent;
	        }
	        return embellished;
	    };
	    MmlMo.prototype.coreText = function (parent) {
	        if (!parent) {
	            return '';
	        }
	        if (parent.isEmbellished) {
	            return parent.coreMO().getText();
	        }
	        while ((((parent.isKind('mrow') || parent.isKind('TeXAtom') || parent.isKind('mstyle') ||
	            parent.isKind('mphantom')) && parent.childNodes.length === 1) ||
	            parent.isKind('munderover')) && parent.childNodes[0]) {
	            parent = parent.childNodes[0];
	        }
	        return (parent.isToken ? parent.getText() : '');
	    };
	    MmlMo.prototype.hasSpacingAttributes = function () {
	        return this.attributes.isSet('lspace') ||
	            this.attributes.isSet('rspace');
	    };
	    Object.defineProperty(MmlMo.prototype, "isAccent", {
	        get: function () {
	            var accent = false;
	            var node = this.coreParent().parent;
	            if (node) {
	                var key = (node.isKind('mover') ?
	                    (node.childNodes[node.over].coreMO() ?
	                        'accent' : '') :
	                    node.isKind('munder') ?
	                        (node.childNodes[node.under].coreMO() ?
	                            'accentunder' : '') :
	                        node.isKind('munderover') ?
	                            (this === node.childNodes[node.over].coreMO() ?
	                                'accent' :
	                                this === node.childNodes[node.under].coreMO() ?
	                                    'accentunder' : '') :
	                            '');
	                if (key) {
	                    var value = node.attributes.getExplicit(key);
	                    accent = (value !== undefined ? accent : this.attributes.get('accent'));
	                }
	            }
	            return accent;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMo.prototype.setTeXclass = function (prev) {
	        var _a = this.attributes.getList('form', 'fence'), form = _a.form, fence = _a.fence;
	        if (this.getProperty('texClass') === undefined &&
	            (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {
	            this.texClass = MmlNode_js_1.TEXCLASS.NONE;
	            return null;
	        }
	        if (fence && this.texClass === MmlNode_js_1.TEXCLASS.REL) {
	            if (form === 'prefix') {
	                this.texClass = MmlNode_js_1.TEXCLASS.OPEN;
	            }
	            if (form === 'postfix') {
	                this.texClass = MmlNode_js_1.TEXCLASS.CLOSE;
	            }
	        }
	        if (this.getText() === '\u2061') {
	            if (prev) {
	                prev.texClass = MmlNode_js_1.TEXCLASS.OP;
	                prev.setProperty('fnOP', true);
	            }
	            this.texClass = this.prevClass = MmlNode_js_1.TEXCLASS.NONE;
	            return prev;
	        }
	        return this.adjustTeXclass(prev);
	    };
	    MmlMo.prototype.adjustTeXclass = function (prev) {
	        var texClass = this.texClass;
	        var prevClass = this.prevClass;
	        if (texClass === MmlNode_js_1.TEXCLASS.NONE) {
	            return prev;
	        }
	        if (prev) {
	            if (prev.getProperty('autoOp') && (texClass === MmlNode_js_1.TEXCLASS.BIN || texClass === MmlNode_js_1.TEXCLASS.REL)) {
	                texClass = this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	            }
	            prevClass = this.prevClass = (prev.texClass || MmlNode_js_1.TEXCLASS.ORD);
	            this.prevLevel = this.attributes.getInherited('scriptlevel');
	        }
	        else {
	            prevClass = this.prevClass = MmlNode_js_1.TEXCLASS.NONE;
	        }
	        if (texClass === MmlNode_js_1.TEXCLASS.BIN &&
	            (prevClass === MmlNode_js_1.TEXCLASS.NONE || prevClass === MmlNode_js_1.TEXCLASS.BIN || prevClass === MmlNode_js_1.TEXCLASS.OP ||
	                prevClass === MmlNode_js_1.TEXCLASS.REL || prevClass === MmlNode_js_1.TEXCLASS.OPEN || prevClass === MmlNode_js_1.TEXCLASS.PUNCT)) {
	            this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        }
	        else if (prevClass === MmlNode_js_1.TEXCLASS.BIN &&
	            (texClass === MmlNode_js_1.TEXCLASS.REL || texClass === MmlNode_js_1.TEXCLASS.CLOSE || texClass === MmlNode_js_1.TEXCLASS.PUNCT)) {
	            prev.texClass = this.prevClass = MmlNode_js_1.TEXCLASS.ORD;
	        }
	        else if (texClass === MmlNode_js_1.TEXCLASS.BIN) {
	            var child = this;
	            var parent_1 = this.parent;
	            while (parent_1 && parent_1.parent && parent_1.isEmbellished &&
	                (parent_1.childNodes.length === 1 ||
	                    (!parent_1.isKind('mrow') && parent_1.core() === child))) {
	                child = parent_1;
	                parent_1 = parent_1.parent;
	            }
	            if (parent_1.childNodes[parent_1.childNodes.length - 1] === child) {
	                this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	            }
	        }
	        return this;
	    };
	    MmlMo.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
	        var e_1, _a;
	        if (attributes === void 0) { attributes = {}; }
	        if (display === void 0) { display = false; }
	        if (level === void 0) { level = 0; }
	        if (prime === void 0) { prime = false; }
	        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);
	        var mo = this.getText();
	        var _b = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _b[0], form2 = _b[1], form3 = _b[2];
	        this.attributes.setInherited('form', form1);
	        var OPTABLE = this.constructor.OPTABLE;
	        var def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];
	        if (def) {
	            if (this.getProperty('texClass') === undefined) {
	                this.texClass = def[2];
	            }
	            try {
	                for (var _c = __values(Object.keys(def[3] || {})), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var name_1 = _d.value;
	                    this.attributes.setInherited(name_1, def[3][name_1]);
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	            this.lspace = (def[0] + 1) / 18;
	            this.rspace = (def[1] + 1) / 18;
	        }
	        else {
	            var range = this.getRange(mo);
	            if (range) {
	                if (this.getProperty('texClass') === undefined) {
	                    this.texClass = range[2];
	                }
	                var spacing = this.constructor.MMLSPACING[range[2]];
	                this.lspace = (spacing[0] + 1) / 18;
	                this.rspace = (spacing[1] + 1) / 18;
	            }
	        }
	    };
	    MmlMo.prototype.getForms = function () {
	        var core = this;
	        var parent = this.parent;
	        var Parent = this.Parent;
	        while (Parent && Parent.isEmbellished) {
	            core = parent;
	            parent = Parent.parent;
	            Parent = Parent.Parent;
	        }
	        if (parent && parent.isKind('mrow') && parent.nonSpaceLength() !== 1) {
	            if (parent.firstNonSpace() === core) {
	                return ['prefix', 'infix', 'postfix'];
	            }
	            if (parent.lastNonSpace() === core) {
	                return ['postfix', 'infix', 'prefix'];
	            }
	        }
	        return ['infix', 'prefix', 'postfix'];
	    };
	    MmlMo.prototype.handleExplicitForm = function (forms) {
	        if (this.attributes.isSet('form')) {
	            var form_1 = this.attributes.get('form');
	            forms = [form_1].concat(forms.filter(function (name) { return (name !== form_1); }));
	        }
	        return forms;
	    };
	    MmlMo.prototype.getRange = function (mo) {
	        var e_2, _a;
	        if (!mo.match(/^[\uD800-\uDBFF]?.$/)) {
	            return null;
	        }
	        var n = mo.charCodeAt(0);
	        if (mo.length === 2) {
	            n = (n - 0xD800) * 0x400 + mo.charCodeAt(1) - 0xDC00 + 0x10000;
	        }
	        var ranges = this.constructor.RANGES;
	        try {
	            for (var ranges_1 = __values(ranges), ranges_1_1 = ranges_1.next(); !ranges_1_1.done; ranges_1_1 = ranges_1.next()) {
	                var range = ranges_1_1.value;
	                if (range[0] <= n && n <= range[1]) {
	                    return range;
	                }
	                if (n < range[0]) {
	                    return null;
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (ranges_1_1 && !ranges_1_1.done && (_a = ranges_1.return)) _a.call(ranges_1);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        return null;
	    };
	    MmlMo.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { form: 'infix', fence: false, separator: false, lspace: 'thickmathspace', rspace: 'thickmathspace', stretchy: false, symmetric: false, maxsize: 'infinity', minsize: '0em', largeop: false, movablelimits: false, accent: false, linebreak: 'auto', lineleading: '1ex', linebreakstyle: 'before', indentalign: 'auto', indentshift: '0', indenttarget: '', indentalignfirst: 'indentalign', indentshiftfirst: 'indentshift', indentalignlast: 'indentalign', indentshiftlast: 'indentshift' });
	    MmlMo.RANGES = OperatorDictionary_js_1.RANGES;
	    MmlMo.MMLSPACING = OperatorDictionary_js_1.MMLSPACING;
	    MmlMo.OPTABLE = OperatorDictionary_js_1.OPTABLE;
	    return MmlMo;
	}(MmlNode_js_1.AbstractMmlTokenNode));
	exports.MmlMo = MmlMo;
	//# sourceMappingURL=mo.js.map

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	function OPDEF(lspace, rspace, texClass, properties) {
	    if (texClass === void 0) { texClass = MmlNode_js_1.TEXCLASS.BIN; }
	    if (properties === void 0) { properties = null; }
	    return [lspace, rspace, texClass, properties];
	}
	exports.OPDEF = OPDEF;
	exports.MO = {
	    ORD: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD),
	    ORD11: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.ORD),
	    ORD21: OPDEF(2, 1, MmlNode_js_1.TEXCLASS.ORD),
	    ORD02: OPDEF(0, 2, MmlNode_js_1.TEXCLASS.ORD),
	    ORD55: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.ORD),
	    OP: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true, symmetric: true }),
	    OPFIXED: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true }),
	    INTEGRAL: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),
	    INTEGRAL2: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),
	    BIN3: OPDEF(3, 3, MmlNode_js_1.TEXCLASS.BIN),
	    BIN4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN),
	    BIN01: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.BIN),
	    BIN5: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.BIN),
	    TALLBIN: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { stretchy: true }),
	    BINOP: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { largeop: true, movablelimits: true }),
	    REL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL),
	    REL1: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),
	    REL4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.REL),
	    RELSTRETCH: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),
	    RELACCENT: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true }),
	    WIDEREL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true, stretchy: true }),
	    OPEN: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true, stretchy: true, symmetric: true }),
	    CLOSE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true, stretchy: true, symmetric: true }),
	    INNER: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.INNER),
	    PUNCT: OPDEF(0, 3, MmlNode_js_1.TEXCLASS.PUNCT),
	    ACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true }),
	    WIDEACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true, stretchy: true })
	};
	exports.RANGES = [
	    [0x20, 0x7F, MmlNode_js_1.TEXCLASS.REL, 'BasicLatin'],
	    [0xA0, 0xFF, MmlNode_js_1.TEXCLASS.ORD, 'Latin1Supplement'],
	    [0x100, 0x17F, MmlNode_js_1.TEXCLASS.ORD, 'LatinExtendedA'],
	    [0x180, 0x24F, MmlNode_js_1.TEXCLASS.ORD, 'LatinExtendedB'],
	    [0x2B0, 0x2FF, MmlNode_js_1.TEXCLASS.ORD, 'SpacingModLetters'],
	    [0x300, 0x36F, MmlNode_js_1.TEXCLASS.ORD, 'CombDiacritMarks'],
	    [0x370, 0x3FF, MmlNode_js_1.TEXCLASS.ORD, 'GreekAndCoptic'],
	    [0x1E00, 0x1EFF, MmlNode_js_1.TEXCLASS.ORD, 'LatinExtendedAdditional'],
	    [0x2000, 0x206F, MmlNode_js_1.TEXCLASS.PUNCT, 'GeneralPunctuation'],
	    [0x2070, 0x209F, MmlNode_js_1.TEXCLASS.ORD, 'SuperAndSubscripts'],
	    [0x20A0, 0x20CF, MmlNode_js_1.TEXCLASS.ORD, 'Currency'],
	    [0x20D0, 0x20FF, MmlNode_js_1.TEXCLASS.ORD, 'CombDiactForSymbols'],
	    [0x2100, 0x214F, MmlNode_js_1.TEXCLASS.ORD, 'LetterlikeSymbols'],
	    [0x2150, 0x218F, MmlNode_js_1.TEXCLASS.ORD, 'NumberForms'],
	    [0x2190, 0x21FF, MmlNode_js_1.TEXCLASS.REL, 'Arrows'],
	    [0x2200, 0x22FF, MmlNode_js_1.TEXCLASS.BIN, 'MathOperators'],
	    [0x2300, 0x23FF, MmlNode_js_1.TEXCLASS.ORD, 'MiscTechnical'],
	    [0x2460, 0x24FF, MmlNode_js_1.TEXCLASS.ORD, 'EnclosedAlphaNums'],
	    [0x2500, 0x259F, MmlNode_js_1.TEXCLASS.ORD, 'BoxDrawing'],
	    [0x25A0, 0x25FF, MmlNode_js_1.TEXCLASS.ORD, 'GeometricShapes'],
	    [0x2700, 0x27BF, MmlNode_js_1.TEXCLASS.ORD, 'Dingbats'],
	    [0x27C0, 0x27EF, MmlNode_js_1.TEXCLASS.ORD, 'MiscMathSymbolsA'],
	    [0x27F0, 0x27FF, MmlNode_js_1.TEXCLASS.REL, 'SupplementalArrowsA'],
	    [0x2900, 0x297F, MmlNode_js_1.TEXCLASS.REL, 'SupplementalArrowsB'],
	    [0x2980, 0x29FF, MmlNode_js_1.TEXCLASS.ORD, 'MiscMathSymbolsB'],
	    [0x2A00, 0x2AFF, MmlNode_js_1.TEXCLASS.BIN, 'SuppMathOperators'],
	    [0x2B00, 0x2BFF, MmlNode_js_1.TEXCLASS.ORD, 'MiscSymbolsAndArrows'],
	    [0x1D400, 0x1D7FF, MmlNode_js_1.TEXCLASS.ORD, 'MathAlphabets']
	];
	exports.MMLSPACING = [
	    [0, 0],
	    [1, 2],
	    [3, 3],
	    [4, 4],
	    [0, 0],
	    [0, 0],
	    [0, 3]
	];
	exports.OPTABLE = {
	    prefix: {
	        '(': exports.MO.OPEN,
	        '+': exports.MO.BIN01,
	        '-': exports.MO.BIN01,
	        '[': exports.MO.OPEN,
	        '{': exports.MO.OPEN,
	        '|': exports.MO.OPEN,
	        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],
	        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
	        '\u00AC': exports.MO.ORD21,
	        '\u00B1': exports.MO.BIN01,
	        '\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
	        '\u2018': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],
	        '\u201C': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],
	        '\u2145': exports.MO.ORD21,
	        '\u2146': OPDEF(2, 0, MmlNode_js_1.TEXCLASS.ORD),
	        '\u2200': exports.MO.ORD21,
	        '\u2202': exports.MO.ORD21,
	        '\u2203': exports.MO.ORD21,
	        '\u2204': exports.MO.ORD21,
	        '\u2207': exports.MO.ORD21,
	        '\u220F': exports.MO.OP,
	        '\u2210': exports.MO.OP,
	        '\u2211': exports.MO.OP,
	        '\u2212': exports.MO.BIN01,
	        '\u2213': exports.MO.BIN01,
	        '\u221A': [1, 1, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
	        '\u221B': exports.MO.ORD11,
	        '\u221C': exports.MO.ORD11,
	        '\u2220': exports.MO.ORD,
	        '\u2221': exports.MO.ORD,
	        '\u2222': exports.MO.ORD,
	        '\u222B': exports.MO.INTEGRAL,
	        '\u222C': exports.MO.INTEGRAL,
	        '\u222D': exports.MO.INTEGRAL,
	        '\u222E': exports.MO.INTEGRAL,
	        '\u222F': exports.MO.INTEGRAL,
	        '\u2230': exports.MO.INTEGRAL,
	        '\u2231': exports.MO.INTEGRAL,
	        '\u2232': exports.MO.INTEGRAL,
	        '\u2233': exports.MO.INTEGRAL,
	        '\u22C0': exports.MO.OP,
	        '\u22C1': exports.MO.OP,
	        '\u22C2': exports.MO.OP,
	        '\u22C3': exports.MO.OP,
	        '\u2308': exports.MO.OPEN,
	        '\u230A': exports.MO.OPEN,
	        '\u2772': exports.MO.OPEN,
	        '\u27E6': exports.MO.OPEN,
	        '\u27E8': exports.MO.OPEN,
	        '\u27EA': exports.MO.OPEN,
	        '\u27EC': exports.MO.OPEN,
	        '\u27EE': exports.MO.OPEN,
	        '\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
	        '\u2983': exports.MO.OPEN,
	        '\u2985': exports.MO.OPEN,
	        '\u2987': exports.MO.OPEN,
	        '\u2989': exports.MO.OPEN,
	        '\u298B': exports.MO.OPEN,
	        '\u298D': exports.MO.OPEN,
	        '\u298F': exports.MO.OPEN,
	        '\u2991': exports.MO.OPEN,
	        '\u2993': exports.MO.OPEN,
	        '\u2995': exports.MO.OPEN,
	        '\u2997': exports.MO.OPEN,
	        '\u29FC': exports.MO.OPEN,
	        '\u2A00': exports.MO.OP,
	        '\u2A01': exports.MO.OP,
	        '\u2A02': exports.MO.OP,
	        '\u2A03': exports.MO.OP,
	        '\u2A04': exports.MO.OP,
	        '\u2A05': exports.MO.OP,
	        '\u2A06': exports.MO.OP,
	        '\u2A07': exports.MO.OP,
	        '\u2A08': exports.MO.OP,
	        '\u2A09': exports.MO.OP,
	        '\u2A0A': exports.MO.OP,
	        '\u2A0B': exports.MO.INTEGRAL2,
	        '\u2A0C': exports.MO.INTEGRAL,
	        '\u2A0D': exports.MO.INTEGRAL2,
	        '\u2A0E': exports.MO.INTEGRAL2,
	        '\u2A0F': exports.MO.INTEGRAL2,
	        '\u2A10': exports.MO.OP,
	        '\u2A11': exports.MO.OP,
	        '\u2A12': exports.MO.OP,
	        '\u2A13': exports.MO.OP,
	        '\u2A14': exports.MO.OP,
	        '\u2A15': exports.MO.INTEGRAL2,
	        '\u2A16': exports.MO.INTEGRAL2,
	        '\u2A17': exports.MO.INTEGRAL2,
	        '\u2A18': exports.MO.INTEGRAL2,
	        '\u2A19': exports.MO.INTEGRAL2,
	        '\u2A1A': exports.MO.INTEGRAL2,
	        '\u2A1B': exports.MO.INTEGRAL2,
	        '\u2A1C': exports.MO.INTEGRAL2,
	        '\u2AFC': exports.MO.OP,
	        '\u2AFF': exports.MO.OP,
	    },
	    postfix: {
	        '!!': OPDEF(1, 0),
	        '!': [1, 0, MmlNode_js_1.TEXCLASS.CLOSE, null],
	        '&': exports.MO.ORD,
	        ')': exports.MO.CLOSE,
	        '++': OPDEF(0, 0),
	        '--': OPDEF(0, 0),
	        '..': OPDEF(0, 0),
	        '...': exports.MO.ORD,
	        '\'': exports.MO.ACCENT,
	        ']': exports.MO.CLOSE,
	        '^': exports.MO.WIDEACCENT,
	        '_': exports.MO.WIDEACCENT,
	        '`': exports.MO.ACCENT,
	        '|': exports.MO.CLOSE,
	        '}': exports.MO.CLOSE,
	        '~': exports.MO.WIDEACCENT,
	        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],
	        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
	        '\u00A8': exports.MO.ACCENT,
	        '\u00AF': exports.MO.WIDEACCENT,
	        '\u00B0': exports.MO.ORD,
	        '\u00B4': exports.MO.ACCENT,
	        '\u00B8': exports.MO.ACCENT,
	        '\u02C6': exports.MO.WIDEACCENT,
	        '\u02C7': exports.MO.WIDEACCENT,
	        '\u02C9': exports.MO.WIDEACCENT,
	        '\u02CA': exports.MO.ACCENT,
	        '\u02CB': exports.MO.ACCENT,
	        '\u02CD': exports.MO.WIDEACCENT,
	        '\u02D8': exports.MO.ACCENT,
	        '\u02D9': exports.MO.ACCENT,
	        '\u02DA': exports.MO.ACCENT,
	        '\u02DC': exports.MO.WIDEACCENT,
	        '\u02DD': exports.MO.ACCENT,
	        '\u02F7': exports.MO.WIDEACCENT,
	        '\u0302': exports.MO.WIDEACCENT,
	        '\u0311': exports.MO.ACCENT,
	        '\u03F6': exports.MO.REL,
	        '\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
	        '\u2019': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],
	        '\u201D': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],
	        '\u2032': exports.MO.ORD02,
	        '\u203E': exports.MO.WIDEACCENT,
	        '\u20DB': exports.MO.ACCENT,
	        '\u20DC': exports.MO.ACCENT,
	        '\u2309': exports.MO.CLOSE,
	        '\u230B': exports.MO.CLOSE,
	        '\u23B4': exports.MO.WIDEACCENT,
	        '\u23B5': exports.MO.WIDEACCENT,
	        '\u23DC': exports.MO.WIDEACCENT,
	        '\u23DD': exports.MO.WIDEACCENT,
	        '\u23DE': exports.MO.WIDEACCENT,
	        '\u23DF': exports.MO.WIDEACCENT,
	        '\u23E0': exports.MO.WIDEACCENT,
	        '\u23E1': exports.MO.WIDEACCENT,
	        '\u25A0': exports.MO.BIN3,
	        '\u25A1': exports.MO.BIN3,
	        '\u25AA': exports.MO.BIN3,
	        '\u25AB': exports.MO.BIN3,
	        '\u25AD': exports.MO.BIN3,
	        '\u25AE': exports.MO.BIN3,
	        '\u25AF': exports.MO.BIN3,
	        '\u25B0': exports.MO.BIN3,
	        '\u25B1': exports.MO.BIN3,
	        '\u25B2': exports.MO.BIN4,
	        '\u25B4': exports.MO.BIN4,
	        '\u25B6': exports.MO.BIN4,
	        '\u25B7': exports.MO.BIN4,
	        '\u25B8': exports.MO.BIN4,
	        '\u25BC': exports.MO.BIN4,
	        '\u25BE': exports.MO.BIN4,
	        '\u25C0': exports.MO.BIN4,
	        '\u25C1': exports.MO.BIN4,
	        '\u25C2': exports.MO.BIN4,
	        '\u25C4': exports.MO.BIN4,
	        '\u25C5': exports.MO.BIN4,
	        '\u25C6': exports.MO.BIN4,
	        '\u25C7': exports.MO.BIN4,
	        '\u25C8': exports.MO.BIN4,
	        '\u25C9': exports.MO.BIN4,
	        '\u25CC': exports.MO.BIN4,
	        '\u25CD': exports.MO.BIN4,
	        '\u25CE': exports.MO.BIN4,
	        '\u25CF': exports.MO.BIN4,
	        '\u25D6': exports.MO.BIN4,
	        '\u25D7': exports.MO.BIN4,
	        '\u25E6': exports.MO.BIN4,
	        '\u266D': exports.MO.ORD02,
	        '\u266E': exports.MO.ORD02,
	        '\u266F': exports.MO.ORD02,
	        '\u2773': exports.MO.CLOSE,
	        '\u27E7': exports.MO.CLOSE,
	        '\u27E9': exports.MO.CLOSE,
	        '\u27EB': exports.MO.CLOSE,
	        '\u27ED': exports.MO.CLOSE,
	        '\u27EF': exports.MO.CLOSE,
	        '\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],
	        '\u2984': exports.MO.CLOSE,
	        '\u2986': exports.MO.CLOSE,
	        '\u2988': exports.MO.CLOSE,
	        '\u298A': exports.MO.CLOSE,
	        '\u298C': exports.MO.CLOSE,
	        '\u298E': exports.MO.CLOSE,
	        '\u2990': exports.MO.CLOSE,
	        '\u2992': exports.MO.CLOSE,
	        '\u2994': exports.MO.CLOSE,
	        '\u2996': exports.MO.CLOSE,
	        '\u2998': exports.MO.CLOSE,
	        '\u29FD': exports.MO.CLOSE,
	    },
	    infix: {
	        '!=': exports.MO.BIN4,
	        '#': exports.MO.ORD,
	        '$': exports.MO.ORD,
	        '%': [3, 3, MmlNode_js_1.TEXCLASS.ORD, null],
	        '&&': exports.MO.BIN4,
	        '': exports.MO.ORD,
	        '*': exports.MO.BIN3,
	        '**': OPDEF(1, 1),
	        '*=': exports.MO.BIN4,
	        '+': exports.MO.BIN4,
	        '+=': exports.MO.BIN4,
	        ',': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],
	        '-': exports.MO.BIN4,
	        '-=': exports.MO.BIN4,
	        '->': exports.MO.BIN5,
	        '.': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { separator: true }],
	        '/': exports.MO.ORD11,
	        '//': OPDEF(1, 1),
	        '/=': exports.MO.BIN4,
	        ':': [1, 2, MmlNode_js_1.TEXCLASS.REL, null],
	        ':=': exports.MO.BIN4,
	        ';': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],
	        '<': exports.MO.REL,
	        '<=': exports.MO.BIN5,
	        '<>': OPDEF(1, 1),
	        '=': exports.MO.REL,
	        '==': exports.MO.BIN4,
	        '>': exports.MO.REL,
	        '>=': exports.MO.BIN5,
	        '?': [1, 1, MmlNode_js_1.TEXCLASS.CLOSE, null],
	        '@': exports.MO.ORD11,
	        '\\': exports.MO.ORD,
	        '^': exports.MO.ORD11,
	        '_': exports.MO.ORD11,
	        '|': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
	        '||': [2, 2, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],
	        '|||': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],
	        '\u00B1': exports.MO.BIN4,
	        '\u00B7': exports.MO.BIN4,
	        '\u00D7': exports.MO.BIN4,
	        '\u00F7': exports.MO.BIN4,
	        '\u02B9': exports.MO.ORD,
	        '\u0300': exports.MO.ACCENT,
	        '\u0301': exports.MO.ACCENT,
	        '\u0303': exports.MO.WIDEACCENT,
	        '\u0304': exports.MO.ACCENT,
	        '\u0306': exports.MO.ACCENT,
	        '\u0307': exports.MO.ACCENT,
	        '\u0308': exports.MO.ACCENT,
	        '\u030C': exports.MO.ACCENT,
	        '\u0332': exports.MO.WIDEACCENT,
	        '\u0338': exports.MO.REL4,
	        '\u2015': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
	        '\u2017': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
	        '\u2020': exports.MO.BIN3,
	        '\u2021': exports.MO.BIN3,
	        '\u2022': exports.MO.BIN4,
	        '\u2026': exports.MO.INNER,
	        '\u2044': exports.MO.TALLBIN,
	        '\u2061': exports.MO.ORD,
	        '\u2062': exports.MO.ORD,
	        '\u2063': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { linebreakstyle: 'after', separator: true }],
	        '\u2064': exports.MO.ORD,
	        '\u20D7': exports.MO.ACCENT,
	        '\u2111': exports.MO.ORD,
	        '\u2113': exports.MO.ORD,
	        '\u2118': exports.MO.ORD,
	        '\u211C': exports.MO.ORD,
	        '\u2190': exports.MO.WIDEREL,
	        '\u2191': exports.MO.RELSTRETCH,
	        '\u2192': exports.MO.WIDEREL,
	        '\u2193': exports.MO.RELSTRETCH,
	        '\u2194': exports.MO.WIDEREL,
	        '\u2195': exports.MO.RELSTRETCH,
	        '\u2196': exports.MO.RELSTRETCH,
	        '\u2197': exports.MO.RELSTRETCH,
	        '\u2198': exports.MO.RELSTRETCH,
	        '\u2199': exports.MO.RELSTRETCH,
	        '\u219A': exports.MO.RELACCENT,
	        '\u219B': exports.MO.RELACCENT,
	        '\u219C': exports.MO.WIDEREL,
	        '\u219D': exports.MO.WIDEREL,
	        '\u219E': exports.MO.WIDEREL,
	        '\u219F': exports.MO.WIDEREL,
	        '\u21A0': exports.MO.WIDEREL,
	        '\u21A1': exports.MO.RELSTRETCH,
	        '\u21A2': exports.MO.WIDEREL,
	        '\u21A3': exports.MO.WIDEREL,
	        '\u21A4': exports.MO.WIDEREL,
	        '\u21A5': exports.MO.RELSTRETCH,
	        '\u21A6': exports.MO.WIDEREL,
	        '\u21A7': exports.MO.RELSTRETCH,
	        '\u21A8': exports.MO.RELSTRETCH,
	        '\u21A9': exports.MO.WIDEREL,
	        '\u21AA': exports.MO.WIDEREL,
	        '\u21AB': exports.MO.WIDEREL,
	        '\u21AC': exports.MO.WIDEREL,
	        '\u21AD': exports.MO.WIDEREL,
	        '\u21AE': exports.MO.RELACCENT,
	        '\u21AF': exports.MO.RELSTRETCH,
	        '\u21B0': exports.MO.RELSTRETCH,
	        '\u21B1': exports.MO.RELSTRETCH,
	        '\u21B2': exports.MO.RELSTRETCH,
	        '\u21B3': exports.MO.RELSTRETCH,
	        '\u21B4': exports.MO.RELSTRETCH,
	        '\u21B5': exports.MO.RELSTRETCH,
	        '\u21B6': exports.MO.RELACCENT,
	        '\u21B7': exports.MO.RELACCENT,
	        '\u21B8': exports.MO.REL,
	        '\u21B9': exports.MO.WIDEREL,
	        '\u21BA': exports.MO.REL,
	        '\u21BB': exports.MO.REL,
	        '\u21BC': exports.MO.WIDEREL,
	        '\u21BD': exports.MO.WIDEREL,
	        '\u21BE': exports.MO.RELSTRETCH,
	        '\u21BF': exports.MO.RELSTRETCH,
	        '\u21C0': exports.MO.WIDEREL,
	        '\u21C1': exports.MO.WIDEREL,
	        '\u21C2': exports.MO.RELSTRETCH,
	        '\u21C3': exports.MO.RELSTRETCH,
	        '\u21C4': exports.MO.WIDEREL,
	        '\u21C5': exports.MO.RELSTRETCH,
	        '\u21C6': exports.MO.WIDEREL,
	        '\u21C7': exports.MO.WIDEREL,
	        '\u21C8': exports.MO.RELSTRETCH,
	        '\u21C9': exports.MO.WIDEREL,
	        '\u21CA': exports.MO.RELSTRETCH,
	        '\u21CB': exports.MO.WIDEREL,
	        '\u21CC': exports.MO.WIDEREL,
	        '\u21CD': exports.MO.RELACCENT,
	        '\u21CE': exports.MO.RELACCENT,
	        '\u21CF': exports.MO.RELACCENT,
	        '\u21D0': exports.MO.WIDEREL,
	        '\u21D1': exports.MO.RELSTRETCH,
	        '\u21D2': exports.MO.WIDEREL,
	        '\u21D3': exports.MO.RELSTRETCH,
	        '\u21D4': exports.MO.WIDEREL,
	        '\u21D5': exports.MO.RELSTRETCH,
	        '\u21D6': exports.MO.RELSTRETCH,
	        '\u21D7': exports.MO.RELSTRETCH,
	        '\u21D8': exports.MO.RELSTRETCH,
	        '\u21D9': exports.MO.RELSTRETCH,
	        '\u21DA': exports.MO.WIDEREL,
	        '\u21DB': exports.MO.WIDEREL,
	        '\u21DC': exports.MO.WIDEREL,
	        '\u21DD': exports.MO.WIDEREL,
	        '\u21DE': exports.MO.REL,
	        '\u21DF': exports.MO.REL,
	        '\u21E0': exports.MO.WIDEREL,
	        '\u21E1': exports.MO.RELSTRETCH,
	        '\u21E2': exports.MO.WIDEREL,
	        '\u21E3': exports.MO.RELSTRETCH,
	        '\u21E4': exports.MO.WIDEREL,
	        '\u21E5': exports.MO.WIDEREL,
	        '\u21E6': exports.MO.WIDEREL,
	        '\u21E7': exports.MO.RELSTRETCH,
	        '\u21E8': exports.MO.WIDEREL,
	        '\u21E9': exports.MO.RELSTRETCH,
	        '\u21EA': exports.MO.RELSTRETCH,
	        '\u21EB': exports.MO.RELSTRETCH,
	        '\u21EC': exports.MO.RELSTRETCH,
	        '\u21ED': exports.MO.RELSTRETCH,
	        '\u21EE': exports.MO.RELSTRETCH,
	        '\u21EF': exports.MO.RELSTRETCH,
	        '\u21F0': exports.MO.WIDEREL,
	        '\u21F1': exports.MO.REL,
	        '\u21F2': exports.MO.REL,
	        '\u21F3': exports.MO.RELSTRETCH,
	        '\u21F4': exports.MO.RELACCENT,
	        '\u21F5': exports.MO.RELSTRETCH,
	        '\u21F6': exports.MO.WIDEREL,
	        '\u21F7': exports.MO.RELACCENT,
	        '\u21F8': exports.MO.RELACCENT,
	        '\u21F9': exports.MO.RELACCENT,
	        '\u21FA': exports.MO.RELACCENT,
	        '\u21FB': exports.MO.RELACCENT,
	        '\u21FC': exports.MO.RELACCENT,
	        '\u21FD': exports.MO.WIDEREL,
	        '\u21FE': exports.MO.WIDEREL,
	        '\u21FF': exports.MO.WIDEREL,
	        '\u2201': OPDEF(1, 2, MmlNode_js_1.TEXCLASS.ORD),
	        '\u2205': exports.MO.ORD,
	        '\u2206': exports.MO.BIN3,
	        '\u2208': exports.MO.REL,
	        '\u2209': exports.MO.REL,
	        '\u220A': exports.MO.REL,
	        '\u220B': exports.MO.REL,
	        '\u220C': exports.MO.REL,
	        '\u220D': exports.MO.REL,
	        '\u220E': exports.MO.BIN3,
	        '\u2212': exports.MO.BIN4,
	        '\u2213': exports.MO.BIN4,
	        '\u2214': exports.MO.BIN4,
	        '\u2215': exports.MO.TALLBIN,
	        '\u2216': exports.MO.BIN4,
	        '\u2217': exports.MO.BIN4,
	        '\u2218': exports.MO.BIN4,
	        '\u2219': exports.MO.BIN4,
	        '\u221D': exports.MO.REL,
	        '\u221E': exports.MO.ORD,
	        '\u221F': exports.MO.REL,
	        '\u2223': exports.MO.REL,
	        '\u2224': exports.MO.REL,
	        '\u2225': exports.MO.REL,
	        '\u2226': exports.MO.REL,
	        '\u2227': exports.MO.BIN4,
	        '\u2228': exports.MO.BIN4,
	        '\u2229': exports.MO.BIN4,
	        '\u222A': exports.MO.BIN4,
	        '\u2234': exports.MO.REL,
	        '\u2235': exports.MO.REL,
	        '\u2236': exports.MO.REL,
	        '\u2237': exports.MO.REL,
	        '\u2238': exports.MO.BIN4,
	        '\u2239': exports.MO.REL,
	        '\u223A': exports.MO.BIN4,
	        '\u223B': exports.MO.REL,
	        '\u223C': exports.MO.REL,
	        '\u223D': exports.MO.REL,
	        '\u223D\u0331': exports.MO.BIN3,
	        '\u223E': exports.MO.REL,
	        '\u223F': exports.MO.BIN3,
	        '\u2240': exports.MO.BIN4,
	        '\u2241': exports.MO.REL,
	        '\u2242': exports.MO.REL,
	        '\u2242\u0338': exports.MO.REL,
	        '\u2243': exports.MO.REL,
	        '\u2244': exports.MO.REL,
	        '\u2245': exports.MO.REL,
	        '\u2246': exports.MO.REL,
	        '\u2247': exports.MO.REL,
	        '\u2248': exports.MO.REL,
	        '\u2249': exports.MO.REL,
	        '\u224A': exports.MO.REL,
	        '\u224B': exports.MO.REL,
	        '\u224C': exports.MO.REL,
	        '\u224D': exports.MO.REL,
	        '\u224E': exports.MO.REL,
	        '\u224E\u0338': exports.MO.REL,
	        '\u224F': exports.MO.REL,
	        '\u224F\u0338': exports.MO.REL,
	        '\u2250': exports.MO.REL,
	        '\u2251': exports.MO.REL,
	        '\u2252': exports.MO.REL,
	        '\u2253': exports.MO.REL,
	        '\u2254': exports.MO.REL,
	        '\u2255': exports.MO.REL,
	        '\u2256': exports.MO.REL,
	        '\u2257': exports.MO.REL,
	        '\u2258': exports.MO.REL,
	        '\u2259': exports.MO.REL,
	        '\u225A': exports.MO.REL,
	        '\u225C': exports.MO.REL,
	        '\u225D': exports.MO.REL,
	        '\u225E': exports.MO.REL,
	        '\u225F': exports.MO.REL,
	        '\u2260': exports.MO.REL,
	        '\u2261': exports.MO.REL,
	        '\u2262': exports.MO.REL,
	        '\u2263': exports.MO.REL,
	        '\u2264': exports.MO.REL,
	        '\u2265': exports.MO.REL,
	        '\u2266': exports.MO.REL,
	        '\u2266\u0338': exports.MO.REL,
	        '\u2267': exports.MO.REL,
	        '\u2268': exports.MO.REL,
	        '\u2269': exports.MO.REL,
	        '\u226A': exports.MO.REL,
	        '\u226A\u0338': exports.MO.REL,
	        '\u226B': exports.MO.REL,
	        '\u226B\u0338': exports.MO.REL,
	        '\u226C': exports.MO.REL,
	        '\u226D': exports.MO.REL,
	        '\u226E': exports.MO.REL,
	        '\u226F': exports.MO.REL,
	        '\u2270': exports.MO.REL,
	        '\u2271': exports.MO.REL,
	        '\u2272': exports.MO.REL,
	        '\u2273': exports.MO.REL,
	        '\u2274': exports.MO.REL,
	        '\u2275': exports.MO.REL,
	        '\u2276': exports.MO.REL,
	        '\u2277': exports.MO.REL,
	        '\u2278': exports.MO.REL,
	        '\u2279': exports.MO.REL,
	        '\u227A': exports.MO.REL,
	        '\u227B': exports.MO.REL,
	        '\u227C': exports.MO.REL,
	        '\u227D': exports.MO.REL,
	        '\u227E': exports.MO.REL,
	        '\u227F': exports.MO.REL,
	        '\u227F\u0338': exports.MO.REL,
	        '\u2280': exports.MO.REL,
	        '\u2281': exports.MO.REL,
	        '\u2282': exports.MO.REL,
	        '\u2282\u20D2': exports.MO.REL,
	        '\u2283': exports.MO.REL,
	        '\u2283\u20D2': exports.MO.REL,
	        '\u2284': exports.MO.REL,
	        '\u2285': exports.MO.REL,
	        '\u2286': exports.MO.REL,
	        '\u2287': exports.MO.REL,
	        '\u2288': exports.MO.REL,
	        '\u2289': exports.MO.REL,
	        '\u228A': exports.MO.REL,
	        '\u228B': exports.MO.REL,
	        '\u228C': exports.MO.BIN4,
	        '\u228D': exports.MO.BIN4,
	        '\u228E': exports.MO.BIN4,
	        '\u228F': exports.MO.REL,
	        '\u228F\u0338': exports.MO.REL,
	        '\u2290': exports.MO.REL,
	        '\u2290\u0338': exports.MO.REL,
	        '\u2291': exports.MO.REL,
	        '\u2292': exports.MO.REL,
	        '\u2293': exports.MO.BIN4,
	        '\u2294': exports.MO.BIN4,
	        '\u2295': exports.MO.BIN4,
	        '\u2296': exports.MO.BIN4,
	        '\u2297': exports.MO.BIN4,
	        '\u2298': exports.MO.BIN4,
	        '\u2299': exports.MO.BIN4,
	        '\u229A': exports.MO.BIN4,
	        '\u229B': exports.MO.BIN4,
	        '\u229C': exports.MO.BIN4,
	        '\u229D': exports.MO.BIN4,
	        '\u229E': exports.MO.BIN4,
	        '\u229F': exports.MO.BIN4,
	        '\u22A0': exports.MO.BIN4,
	        '\u22A1': exports.MO.BIN4,
	        '\u22A2': exports.MO.REL,
	        '\u22A3': exports.MO.REL,
	        '\u22A4': exports.MO.ORD55,
	        '\u22A5': exports.MO.REL,
	        '\u22A6': exports.MO.REL,
	        '\u22A7': exports.MO.REL,
	        '\u22A8': exports.MO.REL,
	        '\u22A9': exports.MO.REL,
	        '\u22AA': exports.MO.REL,
	        '\u22AB': exports.MO.REL,
	        '\u22AC': exports.MO.REL,
	        '\u22AD': exports.MO.REL,
	        '\u22AE': exports.MO.REL,
	        '\u22AF': exports.MO.REL,
	        '\u22B0': exports.MO.REL,
	        '\u22B1': exports.MO.REL,
	        '\u22B2': exports.MO.REL,
	        '\u22B3': exports.MO.REL,
	        '\u22B4': exports.MO.REL,
	        '\u22B5': exports.MO.REL,
	        '\u22B6': exports.MO.REL,
	        '\u22B7': exports.MO.REL,
	        '\u22B8': exports.MO.REL,
	        '\u22B9': exports.MO.REL,
	        '\u22BA': exports.MO.BIN4,
	        '\u22BB': exports.MO.BIN4,
	        '\u22BC': exports.MO.BIN4,
	        '\u22BD': exports.MO.BIN4,
	        '\u22BE': exports.MO.BIN3,
	        '\u22BF': exports.MO.BIN3,
	        '\u22C4': exports.MO.BIN4,
	        '\u22C5': exports.MO.BIN4,
	        '\u22C6': exports.MO.BIN4,
	        '\u22C7': exports.MO.BIN4,
	        '\u22C8': exports.MO.REL,
	        '\u22C9': exports.MO.BIN4,
	        '\u22CA': exports.MO.BIN4,
	        '\u22CB': exports.MO.BIN4,
	        '\u22CC': exports.MO.BIN4,
	        '\u22CD': exports.MO.REL,
	        '\u22CE': exports.MO.BIN4,
	        '\u22CF': exports.MO.BIN4,
	        '\u22D0': exports.MO.REL,
	        '\u22D1': exports.MO.REL,
	        '\u22D2': exports.MO.BIN4,
	        '\u22D3': exports.MO.BIN4,
	        '\u22D4': exports.MO.REL,
	        '\u22D5': exports.MO.REL,
	        '\u22D6': exports.MO.REL,
	        '\u22D7': exports.MO.REL,
	        '\u22D8': exports.MO.REL,
	        '\u22D9': exports.MO.REL,
	        '\u22DA': exports.MO.REL,
	        '\u22DB': exports.MO.REL,
	        '\u22DC': exports.MO.REL,
	        '\u22DD': exports.MO.REL,
	        '\u22DE': exports.MO.REL,
	        '\u22DF': exports.MO.REL,
	        '\u22E0': exports.MO.REL,
	        '\u22E1': exports.MO.REL,
	        '\u22E2': exports.MO.REL,
	        '\u22E3': exports.MO.REL,
	        '\u22E4': exports.MO.REL,
	        '\u22E5': exports.MO.REL,
	        '\u22E6': exports.MO.REL,
	        '\u22E7': exports.MO.REL,
	        '\u22E8': exports.MO.REL,
	        '\u22E9': exports.MO.REL,
	        '\u22EA': exports.MO.REL,
	        '\u22EB': exports.MO.REL,
	        '\u22EC': exports.MO.REL,
	        '\u22ED': exports.MO.REL,
	        '\u22EE': exports.MO.ORD55,
	        '\u22EF': exports.MO.INNER,
	        '\u22F0': exports.MO.REL,
	        '\u22F1': [5, 5, MmlNode_js_1.TEXCLASS.INNER, null],
	        '\u22F2': exports.MO.REL,
	        '\u22F3': exports.MO.REL,
	        '\u22F4': exports.MO.REL,
	        '\u22F5': exports.MO.REL,
	        '\u22F6': exports.MO.REL,
	        '\u22F7': exports.MO.REL,
	        '\u22F8': exports.MO.REL,
	        '\u22F9': exports.MO.REL,
	        '\u22FA': exports.MO.REL,
	        '\u22FB': exports.MO.REL,
	        '\u22FC': exports.MO.REL,
	        '\u22FD': exports.MO.REL,
	        '\u22FE': exports.MO.REL,
	        '\u22FF': exports.MO.REL,
	        '\u2305': exports.MO.BIN3,
	        '\u2306': exports.MO.BIN3,
	        '\u2322': exports.MO.REL4,
	        '\u2323': exports.MO.REL4,
	        '\u2329': exports.MO.OPEN,
	        '\u232A': exports.MO.CLOSE,
	        '\u23AA': exports.MO.ORD,
	        '\u23AF': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],
	        '\u23B0': exports.MO.OPEN,
	        '\u23B1': exports.MO.CLOSE,
	        '\u2500': exports.MO.ORD,
	        '\u25B3': exports.MO.BIN4,
	        '\u25B5': exports.MO.BIN4,
	        '\u25B9': exports.MO.BIN4,
	        '\u25BD': exports.MO.BIN4,
	        '\u25BF': exports.MO.BIN4,
	        '\u25C3': exports.MO.BIN4,
	        '\u25EF': exports.MO.BIN3,
	        '\u2660': exports.MO.ORD,
	        '\u2661': exports.MO.ORD,
	        '\u2662': exports.MO.ORD,
	        '\u2663': exports.MO.ORD,
	        '\u2758': exports.MO.REL,
	        '\u27F0': exports.MO.RELSTRETCH,
	        '\u27F1': exports.MO.RELSTRETCH,
	        '\u27F5': exports.MO.WIDEREL,
	        '\u27F6': exports.MO.WIDEREL,
	        '\u27F7': exports.MO.WIDEREL,
	        '\u27F8': exports.MO.WIDEREL,
	        '\u27F9': exports.MO.WIDEREL,
	        '\u27FA': exports.MO.WIDEREL,
	        '\u27FB': exports.MO.WIDEREL,
	        '\u27FC': exports.MO.WIDEREL,
	        '\u27FD': exports.MO.WIDEREL,
	        '\u27FE': exports.MO.WIDEREL,
	        '\u27FF': exports.MO.WIDEREL,
	        '\u2900': exports.MO.RELACCENT,
	        '\u2901': exports.MO.RELACCENT,
	        '\u2902': exports.MO.RELACCENT,
	        '\u2903': exports.MO.RELACCENT,
	        '\u2904': exports.MO.RELACCENT,
	        '\u2905': exports.MO.RELACCENT,
	        '\u2906': exports.MO.RELACCENT,
	        '\u2907': exports.MO.RELACCENT,
	        '\u2908': exports.MO.REL,
	        '\u2909': exports.MO.REL,
	        '\u290A': exports.MO.RELSTRETCH,
	        '\u290B': exports.MO.RELSTRETCH,
	        '\u290C': exports.MO.WIDEREL,
	        '\u290D': exports.MO.WIDEREL,
	        '\u290E': exports.MO.WIDEREL,
	        '\u290F': exports.MO.WIDEREL,
	        '\u2910': exports.MO.WIDEREL,
	        '\u2911': exports.MO.RELACCENT,
	        '\u2912': exports.MO.RELSTRETCH,
	        '\u2913': exports.MO.RELSTRETCH,
	        '\u2914': exports.MO.RELACCENT,
	        '\u2915': exports.MO.RELACCENT,
	        '\u2916': exports.MO.RELACCENT,
	        '\u2917': exports.MO.RELACCENT,
	        '\u2918': exports.MO.RELACCENT,
	        '\u2919': exports.MO.RELACCENT,
	        '\u291A': exports.MO.RELACCENT,
	        '\u291B': exports.MO.RELACCENT,
	        '\u291C': exports.MO.RELACCENT,
	        '\u291D': exports.MO.RELACCENT,
	        '\u291E': exports.MO.RELACCENT,
	        '\u291F': exports.MO.RELACCENT,
	        '\u2920': exports.MO.RELACCENT,
	        '\u2921': exports.MO.RELSTRETCH,
	        '\u2922': exports.MO.RELSTRETCH,
	        '\u2923': exports.MO.REL,
	        '\u2924': exports.MO.REL,
	        '\u2925': exports.MO.REL,
	        '\u2926': exports.MO.REL,
	        '\u2927': exports.MO.REL,
	        '\u2928': exports.MO.REL,
	        '\u2929': exports.MO.REL,
	        '\u292A': exports.MO.REL,
	        '\u292B': exports.MO.REL,
	        '\u292C': exports.MO.REL,
	        '\u292D': exports.MO.REL,
	        '\u292E': exports.MO.REL,
	        '\u292F': exports.MO.REL,
	        '\u2930': exports.MO.REL,
	        '\u2931': exports.MO.REL,
	        '\u2932': exports.MO.REL,
	        '\u2933': exports.MO.RELACCENT,
	        '\u2934': exports.MO.REL,
	        '\u2935': exports.MO.REL,
	        '\u2936': exports.MO.REL,
	        '\u2937': exports.MO.REL,
	        '\u2938': exports.MO.REL,
	        '\u2939': exports.MO.REL,
	        '\u293A': exports.MO.RELACCENT,
	        '\u293B': exports.MO.RELACCENT,
	        '\u293C': exports.MO.RELACCENT,
	        '\u293D': exports.MO.RELACCENT,
	        '\u293E': exports.MO.REL,
	        '\u293F': exports.MO.REL,
	        '\u2940': exports.MO.REL,
	        '\u2941': exports.MO.REL,
	        '\u2942': exports.MO.RELACCENT,
	        '\u2943': exports.MO.RELACCENT,
	        '\u2944': exports.MO.RELACCENT,
	        '\u2945': exports.MO.RELACCENT,
	        '\u2946': exports.MO.RELACCENT,
	        '\u2947': exports.MO.RELACCENT,
	        '\u2948': exports.MO.RELACCENT,
	        '\u2949': exports.MO.REL,
	        '\u294A': exports.MO.RELACCENT,
	        '\u294B': exports.MO.RELACCENT,
	        '\u294C': exports.MO.REL,
	        '\u294D': exports.MO.REL,
	        '\u294E': exports.MO.WIDEREL,
	        '\u294F': exports.MO.RELSTRETCH,
	        '\u2950': exports.MO.WIDEREL,
	        '\u2951': exports.MO.RELSTRETCH,
	        '\u2952': exports.MO.WIDEREL,
	        '\u2953': exports.MO.WIDEREL,
	        '\u2954': exports.MO.RELSTRETCH,
	        '\u2955': exports.MO.RELSTRETCH,
	        '\u2956': exports.MO.RELSTRETCH,
	        '\u2957': exports.MO.RELSTRETCH,
	        '\u2958': exports.MO.RELSTRETCH,
	        '\u2959': exports.MO.RELSTRETCH,
	        '\u295A': exports.MO.WIDEREL,
	        '\u295B': exports.MO.WIDEREL,
	        '\u295C': exports.MO.RELSTRETCH,
	        '\u295D': exports.MO.RELSTRETCH,
	        '\u295E': exports.MO.WIDEREL,
	        '\u295F': exports.MO.WIDEREL,
	        '\u2960': exports.MO.RELSTRETCH,
	        '\u2961': exports.MO.RELSTRETCH,
	        '\u2962': exports.MO.RELACCENT,
	        '\u2963': exports.MO.REL,
	        '\u2964': exports.MO.RELACCENT,
	        '\u2965': exports.MO.REL,
	        '\u2966': exports.MO.RELACCENT,
	        '\u2967': exports.MO.RELACCENT,
	        '\u2968': exports.MO.RELACCENT,
	        '\u2969': exports.MO.RELACCENT,
	        '\u296A': exports.MO.RELACCENT,
	        '\u296B': exports.MO.RELACCENT,
	        '\u296C': exports.MO.RELACCENT,
	        '\u296D': exports.MO.RELACCENT,
	        '\u296E': exports.MO.RELSTRETCH,
	        '\u296F': exports.MO.RELSTRETCH,
	        '\u2970': exports.MO.RELACCENT,
	        '\u2971': exports.MO.RELACCENT,
	        '\u2972': exports.MO.RELACCENT,
	        '\u2973': exports.MO.RELACCENT,
	        '\u2974': exports.MO.RELACCENT,
	        '\u2975': exports.MO.RELACCENT,
	        '\u2976': exports.MO.RELACCENT,
	        '\u2977': exports.MO.RELACCENT,
	        '\u2978': exports.MO.RELACCENT,
	        '\u2979': exports.MO.RELACCENT,
	        '\u297A': exports.MO.RELACCENT,
	        '\u297B': exports.MO.RELACCENT,
	        '\u297C': exports.MO.RELACCENT,
	        '\u297D': exports.MO.RELACCENT,
	        '\u297E': exports.MO.REL,
	        '\u297F': exports.MO.REL,
	        '\u2981': exports.MO.BIN3,
	        '\u2982': exports.MO.BIN3,
	        '\u2999': exports.MO.BIN3,
	        '\u299A': exports.MO.BIN3,
	        '\u299B': exports.MO.BIN3,
	        '\u299C': exports.MO.BIN3,
	        '\u299D': exports.MO.BIN3,
	        '\u299E': exports.MO.BIN3,
	        '\u299F': exports.MO.BIN3,
	        '\u29A0': exports.MO.BIN3,
	        '\u29A1': exports.MO.BIN3,
	        '\u29A2': exports.MO.BIN3,
	        '\u29A3': exports.MO.BIN3,
	        '\u29A4': exports.MO.BIN3,
	        '\u29A5': exports.MO.BIN3,
	        '\u29A6': exports.MO.BIN3,
	        '\u29A7': exports.MO.BIN3,
	        '\u29A8': exports.MO.BIN3,
	        '\u29A9': exports.MO.BIN3,
	        '\u29AA': exports.MO.BIN3,
	        '\u29AB': exports.MO.BIN3,
	        '\u29AC': exports.MO.BIN3,
	        '\u29AD': exports.MO.BIN3,
	        '\u29AE': exports.MO.BIN3,
	        '\u29AF': exports.MO.BIN3,
	        '\u29B0': exports.MO.BIN3,
	        '\u29B1': exports.MO.BIN3,
	        '\u29B2': exports.MO.BIN3,
	        '\u29B3': exports.MO.BIN3,
	        '\u29B4': exports.MO.BIN3,
	        '\u29B5': exports.MO.BIN3,
	        '\u29B6': exports.MO.BIN4,
	        '\u29B7': exports.MO.BIN4,
	        '\u29B8': exports.MO.BIN4,
	        '\u29B9': exports.MO.BIN4,
	        '\u29BA': exports.MO.BIN4,
	        '\u29BB': exports.MO.BIN4,
	        '\u29BC': exports.MO.BIN4,
	        '\u29BD': exports.MO.BIN4,
	        '\u29BE': exports.MO.BIN4,
	        '\u29BF': exports.MO.BIN4,
	        '\u29C0': exports.MO.REL,
	        '\u29C1': exports.MO.REL,
	        '\u29C2': exports.MO.BIN3,
	        '\u29C3': exports.MO.BIN3,
	        '\u29C4': exports.MO.BIN4,
	        '\u29C5': exports.MO.BIN4,
	        '\u29C6': exports.MO.BIN4,
	        '\u29C7': exports.MO.BIN4,
	        '\u29C8': exports.MO.BIN4,
	        '\u29C9': exports.MO.BIN3,
	        '\u29CA': exports.MO.BIN3,
	        '\u29CB': exports.MO.BIN3,
	        '\u29CC': exports.MO.BIN3,
	        '\u29CD': exports.MO.BIN3,
	        '\u29CE': exports.MO.REL,
	        '\u29CF': exports.MO.REL,
	        '\u29CF\u0338': exports.MO.REL,
	        '\u29D0': exports.MO.REL,
	        '\u29D0\u0338': exports.MO.REL,
	        '\u29D1': exports.MO.REL,
	        '\u29D2': exports.MO.REL,
	        '\u29D3': exports.MO.REL,
	        '\u29D4': exports.MO.REL,
	        '\u29D5': exports.MO.REL,
	        '\u29D6': exports.MO.BIN4,
	        '\u29D7': exports.MO.BIN4,
	        '\u29D8': exports.MO.BIN3,
	        '\u29D9': exports.MO.BIN3,
	        '\u29DB': exports.MO.BIN3,
	        '\u29DC': exports.MO.BIN3,
	        '\u29DD': exports.MO.BIN3,
	        '\u29DE': exports.MO.REL,
	        '\u29DF': exports.MO.BIN3,
	        '\u29E0': exports.MO.BIN3,
	        '\u29E1': exports.MO.REL,
	        '\u29E2': exports.MO.BIN4,
	        '\u29E3': exports.MO.REL,
	        '\u29E4': exports.MO.REL,
	        '\u29E5': exports.MO.REL,
	        '\u29E6': exports.MO.REL,
	        '\u29E7': exports.MO.BIN3,
	        '\u29E8': exports.MO.BIN3,
	        '\u29E9': exports.MO.BIN3,
	        '\u29EA': exports.MO.BIN3,
	        '\u29EB': exports.MO.BIN3,
	        '\u29EC': exports.MO.BIN3,
	        '\u29ED': exports.MO.BIN3,
	        '\u29EE': exports.MO.BIN3,
	        '\u29EF': exports.MO.BIN3,
	        '\u29F0': exports.MO.BIN3,
	        '\u29F1': exports.MO.BIN3,
	        '\u29F2': exports.MO.BIN3,
	        '\u29F3': exports.MO.BIN3,
	        '\u29F4': exports.MO.REL,
	        '\u29F5': exports.MO.BIN4,
	        '\u29F6': exports.MO.BIN4,
	        '\u29F7': exports.MO.BIN4,
	        '\u29F8': exports.MO.BIN3,
	        '\u29F9': exports.MO.BIN3,
	        '\u29FA': exports.MO.BIN3,
	        '\u29FB': exports.MO.BIN3,
	        '\u29FE': exports.MO.BIN4,
	        '\u29FF': exports.MO.BIN4,
	        '\u2A1D': exports.MO.BIN3,
	        '\u2A1E': exports.MO.BIN3,
	        '\u2A1F': exports.MO.BIN3,
	        '\u2A20': exports.MO.BIN3,
	        '\u2A21': exports.MO.BIN3,
	        '\u2A22': exports.MO.BIN4,
	        '\u2A23': exports.MO.BIN4,
	        '\u2A24': exports.MO.BIN4,
	        '\u2A25': exports.MO.BIN4,
	        '\u2A26': exports.MO.BIN4,
	        '\u2A27': exports.MO.BIN4,
	        '\u2A28': exports.MO.BIN4,
	        '\u2A29': exports.MO.BIN4,
	        '\u2A2A': exports.MO.BIN4,
	        '\u2A2B': exports.MO.BIN4,
	        '\u2A2C': exports.MO.BIN4,
	        '\u2A2D': exports.MO.BIN4,
	        '\u2A2E': exports.MO.BIN4,
	        '\u2A2F': exports.MO.BIN4,
	        '\u2A30': exports.MO.BIN4,
	        '\u2A31': exports.MO.BIN4,
	        '\u2A32': exports.MO.BIN4,
	        '\u2A33': exports.MO.BIN4,
	        '\u2A34': exports.MO.BIN4,
	        '\u2A35': exports.MO.BIN4,
	        '\u2A36': exports.MO.BIN4,
	        '\u2A37': exports.MO.BIN4,
	        '\u2A38': exports.MO.BIN4,
	        '\u2A39': exports.MO.BIN4,
	        '\u2A3A': exports.MO.BIN4,
	        '\u2A3B': exports.MO.BIN4,
	        '\u2A3C': exports.MO.BIN4,
	        '\u2A3D': exports.MO.BIN4,
	        '\u2A3E': exports.MO.BIN4,
	        '\u2A3F': exports.MO.BIN4,
	        '\u2A40': exports.MO.BIN4,
	        '\u2A41': exports.MO.BIN4,
	        '\u2A42': exports.MO.BIN4,
	        '\u2A43': exports.MO.BIN4,
	        '\u2A44': exports.MO.BIN4,
	        '\u2A45': exports.MO.BIN4,
	        '\u2A46': exports.MO.BIN4,
	        '\u2A47': exports.MO.BIN4,
	        '\u2A48': exports.MO.BIN4,
	        '\u2A49': exports.MO.BIN4,
	        '\u2A4A': exports.MO.BIN4,
	        '\u2A4B': exports.MO.BIN4,
	        '\u2A4C': exports.MO.BIN4,
	        '\u2A4D': exports.MO.BIN4,
	        '\u2A4E': exports.MO.BIN4,
	        '\u2A4F': exports.MO.BIN4,
	        '\u2A50': exports.MO.BIN4,
	        '\u2A51': exports.MO.BIN4,
	        '\u2A52': exports.MO.BIN4,
	        '\u2A53': exports.MO.BIN4,
	        '\u2A54': exports.MO.BIN4,
	        '\u2A55': exports.MO.BIN4,
	        '\u2A56': exports.MO.BIN4,
	        '\u2A57': exports.MO.BIN4,
	        '\u2A58': exports.MO.BIN4,
	        '\u2A59': exports.MO.REL,
	        '\u2A5A': exports.MO.BIN4,
	        '\u2A5B': exports.MO.BIN4,
	        '\u2A5C': exports.MO.BIN4,
	        '\u2A5D': exports.MO.BIN4,
	        '\u2A5E': exports.MO.BIN4,
	        '\u2A5F': exports.MO.BIN4,
	        '\u2A60': exports.MO.BIN4,
	        '\u2A61': exports.MO.BIN4,
	        '\u2A62': exports.MO.BIN4,
	        '\u2A63': exports.MO.BIN4,
	        '\u2A64': exports.MO.BIN4,
	        '\u2A65': exports.MO.BIN4,
	        '\u2A66': exports.MO.REL,
	        '\u2A67': exports.MO.REL,
	        '\u2A68': exports.MO.REL,
	        '\u2A69': exports.MO.REL,
	        '\u2A6A': exports.MO.REL,
	        '\u2A6B': exports.MO.REL,
	        '\u2A6C': exports.MO.REL,
	        '\u2A6D': exports.MO.REL,
	        '\u2A6E': exports.MO.REL,
	        '\u2A6F': exports.MO.REL,
	        '\u2A70': exports.MO.REL,
	        '\u2A71': exports.MO.BIN4,
	        '\u2A72': exports.MO.BIN4,
	        '\u2A73': exports.MO.REL,
	        '\u2A74': exports.MO.REL,
	        '\u2A75': exports.MO.REL,
	        '\u2A76': exports.MO.REL,
	        '\u2A77': exports.MO.REL,
	        '\u2A78': exports.MO.REL,
	        '\u2A79': exports.MO.REL,
	        '\u2A7A': exports.MO.REL,
	        '\u2A7B': exports.MO.REL,
	        '\u2A7C': exports.MO.REL,
	        '\u2A7D': exports.MO.REL,
	        '\u2A7D\u0338': exports.MO.REL,
	        '\u2A7E': exports.MO.REL,
	        '\u2A7E\u0338': exports.MO.REL,
	        '\u2A7F': exports.MO.REL,
	        '\u2A80': exports.MO.REL,
	        '\u2A81': exports.MO.REL,
	        '\u2A82': exports.MO.REL,
	        '\u2A83': exports.MO.REL,
	        '\u2A84': exports.MO.REL,
	        '\u2A85': exports.MO.REL,
	        '\u2A86': exports.MO.REL,
	        '\u2A87': exports.MO.REL,
	        '\u2A88': exports.MO.REL,
	        '\u2A89': exports.MO.REL,
	        '\u2A8A': exports.MO.REL,
	        '\u2A8B': exports.MO.REL,
	        '\u2A8C': exports.MO.REL,
	        '\u2A8D': exports.MO.REL,
	        '\u2A8E': exports.MO.REL,
	        '\u2A8F': exports.MO.REL,
	        '\u2A90': exports.MO.REL,
	        '\u2A91': exports.MO.REL,
	        '\u2A92': exports.MO.REL,
	        '\u2A93': exports.MO.REL,
	        '\u2A94': exports.MO.REL,
	        '\u2A95': exports.MO.REL,
	        '\u2A96': exports.MO.REL,
	        '\u2A97': exports.MO.REL,
	        '\u2A98': exports.MO.REL,
	        '\u2A99': exports.MO.REL,
	        '\u2A9A': exports.MO.REL,
	        '\u2A9B': exports.MO.REL,
	        '\u2A9C': exports.MO.REL,
	        '\u2A9D': exports.MO.REL,
	        '\u2A9E': exports.MO.REL,
	        '\u2A9F': exports.MO.REL,
	        '\u2AA0': exports.MO.REL,
	        '\u2AA1': exports.MO.REL,
	        '\u2AA1\u0338': exports.MO.REL,
	        '\u2AA2': exports.MO.REL,
	        '\u2AA2\u0338': exports.MO.REL,
	        '\u2AA3': exports.MO.REL,
	        '\u2AA4': exports.MO.REL,
	        '\u2AA5': exports.MO.REL,
	        '\u2AA6': exports.MO.REL,
	        '\u2AA7': exports.MO.REL,
	        '\u2AA8': exports.MO.REL,
	        '\u2AA9': exports.MO.REL,
	        '\u2AAA': exports.MO.REL,
	        '\u2AAB': exports.MO.REL,
	        '\u2AAC': exports.MO.REL,
	        '\u2AAD': exports.MO.REL,
	        '\u2AAE': exports.MO.REL,
	        '\u2AAF': exports.MO.REL,
	        '\u2AAF\u0338': exports.MO.REL,
	        '\u2AB0': exports.MO.REL,
	        '\u2AB0\u0338': exports.MO.REL,
	        '\u2AB1': exports.MO.REL,
	        '\u2AB2': exports.MO.REL,
	        '\u2AB3': exports.MO.REL,
	        '\u2AB4': exports.MO.REL,
	        '\u2AB5': exports.MO.REL,
	        '\u2AB6': exports.MO.REL,
	        '\u2AB7': exports.MO.REL,
	        '\u2AB8': exports.MO.REL,
	        '\u2AB9': exports.MO.REL,
	        '\u2ABA': exports.MO.REL,
	        '\u2ABB': exports.MO.REL,
	        '\u2ABC': exports.MO.REL,
	        '\u2ABD': exports.MO.REL,
	        '\u2ABE': exports.MO.REL,
	        '\u2ABF': exports.MO.REL,
	        '\u2AC0': exports.MO.REL,
	        '\u2AC1': exports.MO.REL,
	        '\u2AC2': exports.MO.REL,
	        '\u2AC3': exports.MO.REL,
	        '\u2AC4': exports.MO.REL,
	        '\u2AC5': exports.MO.REL,
	        '\u2AC6': exports.MO.REL,
	        '\u2AC7': exports.MO.REL,
	        '\u2AC8': exports.MO.REL,
	        '\u2AC9': exports.MO.REL,
	        '\u2ACA': exports.MO.REL,
	        '\u2ACB': exports.MO.REL,
	        '\u2ACC': exports.MO.REL,
	        '\u2ACD': exports.MO.REL,
	        '\u2ACE': exports.MO.REL,
	        '\u2ACF': exports.MO.REL,
	        '\u2AD0': exports.MO.REL,
	        '\u2AD1': exports.MO.REL,
	        '\u2AD2': exports.MO.REL,
	        '\u2AD3': exports.MO.REL,
	        '\u2AD4': exports.MO.REL,
	        '\u2AD5': exports.MO.REL,
	        '\u2AD6': exports.MO.REL,
	        '\u2AD7': exports.MO.REL,
	        '\u2AD8': exports.MO.REL,
	        '\u2AD9': exports.MO.REL,
	        '\u2ADA': exports.MO.REL,
	        '\u2ADB': exports.MO.REL,
	        '\u2ADC': exports.MO.REL,
	        '\u2ADD': exports.MO.REL,
	        '\u2ADE': exports.MO.REL,
	        '\u2ADF': exports.MO.REL,
	        '\u2AE0': exports.MO.REL,
	        '\u2AE1': exports.MO.REL,
	        '\u2AE2': exports.MO.REL,
	        '\u2AE3': exports.MO.REL,
	        '\u2AE4': exports.MO.REL,
	        '\u2AE5': exports.MO.REL,
	        '\u2AE6': exports.MO.REL,
	        '\u2AE7': exports.MO.REL,
	        '\u2AE8': exports.MO.REL,
	        '\u2AE9': exports.MO.REL,
	        '\u2AEA': exports.MO.REL,
	        '\u2AEB': exports.MO.REL,
	        '\u2AEC': exports.MO.REL,
	        '\u2AED': exports.MO.REL,
	        '\u2AEE': exports.MO.REL,
	        '\u2AEF': exports.MO.REL,
	        '\u2AF0': exports.MO.REL,
	        '\u2AF1': exports.MO.REL,
	        '\u2AF2': exports.MO.REL,
	        '\u2AF3': exports.MO.REL,
	        '\u2AF4': exports.MO.BIN4,
	        '\u2AF5': exports.MO.BIN4,
	        '\u2AF6': exports.MO.BIN4,
	        '\u2AF7': exports.MO.REL,
	        '\u2AF8': exports.MO.REL,
	        '\u2AF9': exports.MO.REL,
	        '\u2AFA': exports.MO.REL,
	        '\u2AFB': exports.MO.BIN4,
	        '\u2AFD': exports.MO.BIN4,
	        '\u2AFE': exports.MO.BIN3,
	        '\u2B45': exports.MO.RELSTRETCH,
	        '\u2B46': exports.MO.RELSTRETCH,
	        '\u3008': exports.MO.OPEN,
	        '\u3009': exports.MO.CLOSE,
	        '\uFE37': exports.MO.WIDEACCENT,
	        '\uFE38': exports.MO.WIDEACCENT,
	    }
	};
	exports.OPTABLE['infix']['^'] = exports.MO.WIDEREL;
	exports.OPTABLE['infix']['_'] = exports.MO.WIDEREL;
	exports.OPTABLE['prefix']['\u2223'] = exports.MO.OPEN;
	exports.OPTABLE['prefix']['\u2225'] = exports.MO.OPEN;
	exports.OPTABLE['postfix']['\u2223'] = exports.MO.CLOSE;
	exports.OPTABLE['postfix']['\u2225'] = exports.MO.CLOSE;
	//# sourceMappingURL=OperatorDictionary.js.map

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var ParseUtil_js_1 = __webpack_require__(174);
	var Stack_js_1 = __webpack_require__(179);
	var TexError_js_1 = __webpack_require__(175);
	var MmlNode_js_1 = __webpack_require__(167);
	var TexParser = (function () {
	    function TexParser(_string, env, configuration) {
	        var e_1, _a;
	        this._string = _string;
	        this.configuration = configuration;
	        this.macroCount = 0;
	        this.i = 0;
	        this.currentCS = '';
	        var inner = env.hasOwnProperty('isInner');
	        var isInner = env['isInner'];
	        delete env['isInner'];
	        var ENV;
	        if (env) {
	            ENV = {};
	            try {
	                for (var _b = __values(Object.keys(env)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var id = _c.value;
	                    ENV[id] = env[id];
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	        }
	        this.configuration.pushParser(this);
	        this.stack = new Stack_js_1.default(this.itemFactory, ENV, inner ? isInner : true);
	        this.Parse();
	        this.Push(this.itemFactory.create('stop'));
	    }
	    Object.defineProperty(TexParser.prototype, "options", {
	        get: function () {
	            return this.configuration.options;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TexParser.prototype, "itemFactory", {
	        get: function () {
	            return this.configuration.itemFactory;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TexParser.prototype, "tags", {
	        get: function () {
	            return this.configuration.tags;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TexParser.prototype, "string", {
	        get: function () {
	            return this._string;
	        },
	        set: function (str) {
	            this._string = str;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TexParser.prototype.parse = function (kind, input) {
	        return this.configuration.handlers.get(kind).parse(input);
	    };
	    TexParser.prototype.lookup = function (kind, symbol) {
	        return this.configuration.handlers.get(kind).lookup(symbol);
	    };
	    TexParser.prototype.contains = function (kind, symbol) {
	        return this.configuration.handlers.get(kind).contains(symbol);
	    };
	    TexParser.prototype.toString = function () {
	        var e_2, _a;
	        var str = '';
	        try {
	            for (var _b = __values(Array.from(this.configuration.handlers.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var config = _c.value;
	                str += config + ': ' +
	                    this.configuration.handlers.get(config) + '\n';
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        return str;
	    };
	    TexParser.prototype.Parse = function () {
	        var c;
	        var n;
	        while (this.i < this.string.length) {
	            c = this.string.charAt(this.i++);
	            n = c.charCodeAt(0);
	            if (n >= 0xD800 && n < 0xDC00) {
	                c += this.string.charAt(this.i++);
	            }
	            this.parse('character', [this, c]);
	        }
	    };
	    TexParser.prototype.Push = function (arg) {
	        if (arg instanceof MmlNode_js_1.AbstractMmlNode && arg.isInferred) {
	            this.PushAll(arg.childNodes);
	        }
	        else {
	            this.stack.Push(arg);
	        }
	    };
	    TexParser.prototype.PushAll = function (args) {
	        var e_3, _a;
	        try {
	            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
	                var arg = args_1_1.value;
	                this.stack.Push(arg);
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	    };
	    TexParser.prototype.mml = function () {
	        if (!this.stack.Top().isKind('mml')) {
	            return null;
	        }
	        var node = this.stack.Top().First;
	        this.configuration.popParser();
	        return node;
	    };
	    TexParser.prototype.convertDelimiter = function (c) {
	        var symbol = this.lookup('delimiter', c);
	        return symbol ? symbol.char : null;
	    };
	    TexParser.prototype.nextIsSpace = function () {
	        return this.string.charAt(this.i).match(/\s/);
	    };
	    TexParser.prototype.GetNext = function () {
	        while (this.nextIsSpace()) {
	            this.i++;
	        }
	        return this.string.charAt(this.i);
	    };
	    TexParser.prototype.GetCS = function () {
	        var CS = this.string.slice(this.i).match(/^([a-z]+|.) ?/i);
	        if (CS) {
	            this.i += CS[1].length;
	            return CS[1];
	        }
	        else {
	            this.i++;
	            return ' ';
	        }
	    };
	    TexParser.prototype.GetArgument = function (name, noneOK) {
	        switch (this.GetNext()) {
	            case '':
	                if (!noneOK) {
	                    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', this.currentCS);
	                }
	                return null;
	            case '}':
	                if (!noneOK) {
	                    throw new TexError_js_1.default('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');
	                }
	                return null;
	            case '\\':
	                this.i++;
	                return '\\' + this.GetCS();
	            case '{':
	                var j = ++this.i, parens = 1;
	                while (this.i < this.string.length) {
	                    switch (this.string.charAt(this.i++)) {
	                        case '\\':
	                            this.i++;
	                            break;
	                        case '{':
	                            parens++;
	                            break;
	                        case '}':
	                            if (--parens === 0) {
	                                return this.string.slice(j, this.i - 1);
	                            }
	                            break;
	                    }
	                }
	                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');
	        }
	        return this.string.charAt(this.i++);
	    };
	    TexParser.prototype.GetBrackets = function (name, def) {
	        if (this.GetNext() !== '[') {
	            return def;
	        }
	        var j = ++this.i, parens = 0;
	        while (this.i < this.string.length) {
	            switch (this.string.charAt(this.i++)) {
	                case '{':
	                    parens++;
	                    break;
	                case '\\':
	                    this.i++;
	                    break;
	                case '}':
	                    if (parens-- <= 0) {
	                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', '\']\'');
	                    }
	                    break;
	                case ']':
	                    if (parens === 0) {
	                        return this.string.slice(j, this.i - 1);
	                    }
	                    break;
	            }
	        }
	        throw new TexError_js_1.default('MissingCloseBracket', 'Could not find closing \']\' for argument to %1', this.currentCS);
	    };
	    TexParser.prototype.GetDelimiter = function (name, braceOK) {
	        while (this.nextIsSpace()) {
	            this.i++;
	        }
	        var c = this.string.charAt(this.i);
	        this.i++;
	        if (this.i <= this.string.length) {
	            if (c === '\\') {
	                c += this.GetCS();
	            }
	            else if (c === '{' && braceOK) {
	                this.i--;
	                c = this.GetArgument(name);
	            }
	            if (this.contains('delimiter', c)) {
	                return this.convertDelimiter(c);
	            }
	        }
	        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);
	    };
	    TexParser.prototype.GetDimen = function (name) {
	        if (this.nextIsSpace()) {
	            this.i++;
	        }
	        if (this.string.charAt(this.i) === '{') {
	            var dimen = this.GetArgument(name);
	            var _a = __read(ParseUtil_js_1.default.matchDimen(dimen), 3), value = _a[0], unit = _a[1], _ = _a[2];
	            if (value) {
	                return value + unit;
	            }
	        }
	        else {
	            var dimen = this.string.slice(this.i);
	            var _b = __read(ParseUtil_js_1.default.matchDimen(dimen, true), 3), value = _b[0], unit = _b[1], length_1 = _b[2];
	            if (value) {
	                this.i += length_1;
	                return value + unit;
	            }
	        }
	        throw new TexError_js_1.default('MissingDimOrUnits', 'Missing dimension or its units for %1', this.currentCS);
	    };
	    TexParser.prototype.GetUpTo = function (name, token) {
	        while (this.nextIsSpace()) {
	            this.i++;
	        }
	        var j = this.i;
	        var parens = 0;
	        while (this.i < this.string.length) {
	            var k = this.i;
	            var c = this.string.charAt(this.i++);
	            switch (c) {
	                case '\\':
	                    c += this.GetCS();
	                    break;
	                case '{':
	                    parens++;
	                    break;
	                case '}':
	                    if (parens === 0) {
	                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', token);
	                    }
	                    parens--;
	                    break;
	            }
	            if (parens === 0 && c === token) {
	                return this.string.slice(j, k);
	            }
	        }
	        throw new TexError_js_1.default('TokenNotFoundForCommand', 'Could not find %1 for %2', token, this.currentCS);
	    };
	    TexParser.prototype.ParseArg = function (name) {
	        return new TexParser(this.GetArgument(name), this.stack.env, this.configuration).mml();
	    };
	    TexParser.prototype.ParseUpTo = function (name, token) {
	        return new TexParser(this.GetUpTo(name, token), this.stack.env, this.configuration).mml();
	    };
	    TexParser.prototype.GetDelimiterArg = function (name) {
	        var c = ParseUtil_js_1.default.trimSpaces(this.GetArgument(name));
	        if (c === '') {
	            return null;
	        }
	        if (this.contains('delimiter', c)) {
	            return c;
	        }
	        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);
	    };
	    TexParser.prototype.GetStar = function () {
	        var star = (this.GetNext() === '*');
	        if (star) {
	            this.i++;
	        }
	        return star;
	    };
	    TexParser.prototype.create = function (kind) {
	        var _a;
	        var rest = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            rest[_i - 1] = arguments[_i];
	        }
	        return (_a = this.configuration.nodeFactory).create.apply(_a, __spread([kind], rest));
	    };
	    return TexParser;
	}());
	exports.default = TexParser;
	//# sourceMappingURL=TexParser.js.map

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var NodeUtil_js_1 = __webpack_require__(170);
	var TexParser_js_1 = __webpack_require__(173);
	var TexError_js_1 = __webpack_require__(175);
	var Entities_js_1 = __webpack_require__(176);
	__webpack_require__(178);
	var ParseUtil;
	(function (ParseUtil) {
	    var emPerInch = 7.2;
	    var pxPerInch = 72;
	    var UNIT_CASES = {
	        'em': function (m) { return m; },
	        'ex': function (m) { return m * .43; },
	        'pt': function (m) { return m / 10; },
	        'pc': function (m) { return m * 1.2; },
	        'px': function (m) { return m * emPerInch / pxPerInch; },
	        'in': function (m) { return m * emPerInch; },
	        'cm': function (m) { return m * emPerInch / 2.54; },
	        'mm': function (m) { return m * emPerInch / 25.4; },
	        'mu': function (m) { return m / 18; },
	    };
	    var num = '([-+]?([.,]\\d+|\\d+([.,]\\d*)?))';
	    var unit = '(pt|em|ex|mu|px|mm|cm|in|pc)';
	    var dimenEnd = RegExp('^\\s*' + num + '\\s*' + unit + '\\s*$');
	    var dimenRest = RegExp('^\\s*' + num + '\\s*' + unit + ' ?');
	    function matchDimen(dim, rest) {
	        if (rest === void 0) { rest = false; }
	        var match = dim.match(rest ? dimenRest : dimenEnd);
	        return match ?
	            muReplace([match[1].replace(/,/, '.'), match[4], match[0].length]) :
	            [null, null, 0];
	    }
	    ParseUtil.matchDimen = matchDimen;
	    function muReplace(_a) {
	        var _b = __read(_a, 3), value = _b[0], unit = _b[1], length = _b[2];
	        if (unit !== 'mu') {
	            return [value, unit, length];
	        }
	        var em = Em(UNIT_CASES[unit](parseFloat(value || '1')));
	        return [em.slice(0, -2), 'em', length];
	    }
	    ;
	    function dimen2em(dim) {
	        var _a = __read(matchDimen(dim), 3), value = _a[0], unit = _a[1], _ = _a[2];
	        var m = parseFloat(value || '1');
	        var func = UNIT_CASES[unit];
	        return func ? func(m) : 0;
	    }
	    ParseUtil.dimen2em = dimen2em;
	    function Em(m) {
	        if (Math.abs(m) < .0006) {
	            return '0em';
	        }
	        return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
	    }
	    ParseUtil.Em = Em;
	    function fenced(configuration, open, mml, close, big) {
	        if (big === void 0) { big = ''; }
	        var nf = configuration.nodeFactory;
	        var mrow = nf.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.INNER });
	        var mo;
	        if (big) {
	            mo = new TexParser_js_1.default('\\' + big + 'l' + open, configuration.parser.stack.env, configuration).mml();
	        }
	        else {
	            var openNode = nf.create('text', open);
	            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.OPEN }, openNode);
	        }
	        NodeUtil_js_1.default.appendChildren(mrow, [mo]);
	        if (NodeUtil_js_1.default.isType(mml, 'mrow') && NodeUtil_js_1.default.isInferred(mml)) {
	            NodeUtil_js_1.default.appendChildren(mrow, NodeUtil_js_1.default.getChildren(mml));
	        }
	        else {
	            NodeUtil_js_1.default.appendChildren(mrow, [mml]);
	        }
	        if (big) {
	            mo = new TexParser_js_1.default('\\' + big + 'r' + close, configuration.parser.stack.env, configuration).mml();
	        }
	        else {
	            var closeNode = nf.create('text', close);
	            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.CLOSE }, closeNode);
	        }
	        NodeUtil_js_1.default.appendChildren(mrow, [mo]);
	        return mrow;
	    }
	    ParseUtil.fenced = fenced;
	    function fixedFence(configuration, open, mml, close) {
	        var mrow = configuration.nodeFactory.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.ORD });
	        if (open) {
	            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, open, 'l')]);
	        }
	        if (NodeUtil_js_1.default.isType(mml, 'mrow')) {
	            NodeUtil_js_1.default.appendChildren(mrow, NodeUtil_js_1.default.getChildren(mml));
	        }
	        else {
	            NodeUtil_js_1.default.appendChildren(mrow, [mml]);
	        }
	        if (close) {
	            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, close, 'r')]);
	        }
	        return mrow;
	    }
	    ParseUtil.fixedFence = fixedFence;
	    function mathPalette(configuration, fence, side) {
	        if (fence === '{' || fence === '}') {
	            fence = '\\' + fence;
	        }
	        var D = '{\\bigg' + side + ' ' + fence + '}';
	        var T = '{\\big' + side + ' ' + fence + '}';
	        return new TexParser_js_1.default('\\mathchoice' + D + T + T + T, {}, configuration).mml();
	    }
	    ParseUtil.mathPalette = mathPalette;
	    function fixInitialMO(configuration, nodes) {
	        for (var i = 0, m = nodes.length; i < m; i++) {
	            var child = nodes[i];
	            if (child && (!NodeUtil_js_1.default.isType(child, 'mspace') &&
	                (!NodeUtil_js_1.default.isType(child, 'TeXAtom') ||
	                    (NodeUtil_js_1.default.getChildren(child)[0] &&
	                        NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(child)[0]).length)))) {
	                if (NodeUtil_js_1.default.isEmbellished(child) ||
	                    (NodeUtil_js_1.default.isType(child, 'TeXAtom') && NodeUtil_js_1.default.getTexClass(child) === MmlNode_js_1.TEXCLASS.REL)) {
	                    var mi = configuration.nodeFactory.create('node', 'mi');
	                    nodes.unshift(mi);
	                }
	                break;
	            }
	        }
	    }
	    ParseUtil.fixInitialMO = fixInitialMO;
	    function internalMath(parser, text, level) {
	        var def = (parser.stack.env['font'] ? { mathvariant: parser.stack.env['font'] } : {});
	        var mml = [], i = 0, k = 0, c, node, match = '', braces = 0;
	        if (text.match(/\\?[${}\\]|\\\(|\\(eq)?ref\s*\{/)) {
	            while (i < text.length) {
	                c = text.charAt(i++);
	                if (c === '$') {
	                    if (match === '$' && braces === 0) {
	                        node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 1), {}, parser.configuration)).mml()]);
	                        mml.push(node);
	                        match = '';
	                        k = i;
	                    }
	                    else if (match === '') {
	                        if (k < i - 1) {
	                            mml.push(internalText(parser, text.slice(k, i - 1), def));
	                        }
	                        match = '$';
	                        k = i;
	                    }
	                }
	                else if (c === '{' && match !== '') {
	                    braces++;
	                }
	                else if (c === '}') {
	                    if (match === '}' && braces === 0) {
	                        var atom = (new TexParser_js_1.default(text.slice(k, i), {}, parser.configuration)).mml();
	                        node = parser.create('node', 'TeXAtom', [atom], def);
	                        mml.push(node);
	                        match = '';
	                        k = i;
	                    }
	                    else if (match !== '') {
	                        if (braces) {
	                            braces--;
	                        }
	                    }
	                }
	                else if (c === '\\') {
	                    if (match === '' && text.substr(i).match(/^(eq)?ref\s*\{/)) {
	                        var len = RegExp['$&'].length;
	                        if (k < i - 1) {
	                            mml.push(internalText(parser, text.slice(k, i - 1), def));
	                        }
	                        match = '}';
	                        k = i - 1;
	                        i += len;
	                    }
	                    else {
	                        c = text.charAt(i++);
	                        if (c === '(' && match === '') {
	                            if (k < i - 2) {
	                                mml.push(internalText(parser, text.slice(k, i - 2), def));
	                            }
	                            match = ')';
	                            k = i;
	                        }
	                        else if (c === ')' && match === ')' && braces === 0) {
	                            node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 2), {}, parser.configuration)).mml()]);
	                            mml.push(node);
	                            match = '';
	                            k = i;
	                        }
	                        else if (c.match(/[${}\\]/) && match === '') {
	                            i--;
	                            text = text.substr(0, i - 1) + text.substr(i);
	                        }
	                    }
	                }
	            }
	            if (match !== '') {
	                throw new TexError_js_1.default('MathNotTerminated', 'Math not terminated in text box');
	            }
	        }
	        if (k < text.length) {
	            mml.push(internalText(parser, text.slice(k), def));
	        }
	        if (level != null) {
	            mml = [parser.create('node', 'mstyle', mml, { displaystyle: false, scriptlevel: level })];
	        }
	        else if (mml.length > 1) {
	            mml = [parser.create('node', 'mrow', mml)];
	        }
	        return mml;
	    }
	    ParseUtil.internalMath = internalMath;
	    function internalText(parser, text, def) {
	        text = text.replace(/^\s+/, Entities_js_1.entities.nbsp).replace(/\s+$/, Entities_js_1.entities.nbsp);
	        var textNode = parser.create('text', text);
	        return parser.create('node', 'mtext', [], def, textNode);
	    }
	    function trimSpaces(text) {
	        if (typeof (text) !== 'string') {
	            return text;
	        }
	        var TEXT = text.trim();
	        if (TEXT.match(/\\$/) && text.match(/ $/)) {
	            TEXT += ' ';
	        }
	        return TEXT;
	    }
	    ParseUtil.trimSpaces = trimSpaces;
	    function setArrayAlign(array, align) {
	        align = ParseUtil.trimSpaces(align || '');
	        if (align === 't') {
	            array.arraydef.align = 'baseline 1';
	        }
	        else if (align === 'b') {
	            array.arraydef.align = 'baseline -1';
	        }
	        else if (align === 'c') {
	            array.arraydef.align = 'center';
	        }
	        else if (align) {
	            array.arraydef.align = align;
	        }
	        return array;
	    }
	    ParseUtil.setArrayAlign = setArrayAlign;
	    function substituteArgs(parser, args, str) {
	        var text = '';
	        var newstring = '';
	        var i = 0;
	        while (i < str.length) {
	            var c = str.charAt(i++);
	            if (c === '\\') {
	                text += c + str.charAt(i++);
	            }
	            else if (c === '#') {
	                c = str.charAt(i++);
	                if (c === '#') {
	                    text += c;
	                }
	                else {
	                    if (!c.match(/[1-9]/) || parseInt(c, 10) > args.length) {
	                        throw new TexError_js_1.default('IllegalMacroParam', 'Illegal macro parameter reference');
	                    }
	                    newstring = addArgs(parser, addArgs(parser, newstring, text), args[parseInt(c, 10) - 1]);
	                    text = '';
	                }
	            }
	            else {
	                text += c;
	            }
	        }
	        return addArgs(parser, newstring, text);
	    }
	    ParseUtil.substituteArgs = substituteArgs;
	    function addArgs(parser, s1, s2) {
	        if (s2.match(/^[a-z]/i) && s1.match(/(^|[^\\])(\\\\)*\\[a-z]+$/i)) {
	            s1 += ' ';
	        }
	        if (s1.length + s2.length > parser.configuration.options['maxBuffer']) {
	            throw new TexError_js_1.default('MaxBufferSize', 'MathJax internal buffer size exceeded; is there a' +
	                ' recursive macro call?');
	        }
	        return s1 + s2;
	    }
	    ParseUtil.addArgs = addArgs;
	    function checkEqnEnv(parser) {
	        if (parser.stack.global.eqnenv) {
	            throw new TexError_js_1.default('ErroneousNestingEq', 'Erroneous nesting of equation structures');
	        }
	        parser.stack.global.eqnenv = true;
	    }
	    ParseUtil.checkEqnEnv = checkEqnEnv;
	    ;
	    function MmlFilterAttribute(parser, name, value) {
	        return value;
	    }
	    ParseUtil.MmlFilterAttribute = MmlFilterAttribute;
	    ;
	    function getFontDef(parser) {
	        var font = parser.stack.env['font'];
	        return (font ? { mathvariant: font } : {});
	    }
	    ParseUtil.getFontDef = getFontDef;
	    ;
	    function keyvalOptions(attrib, allowed, error) {
	        var e_1, _a;
	        if (allowed === void 0) { allowed = null; }
	        if (error === void 0) { error = false; }
	        var def = readKeyval(attrib);
	        if (allowed) {
	            try {
	                for (var _b = __values(Object.keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var key = _c.value;
	                    if (!allowed.hasOwnProperty(key)) {
	                        if (error) {
	                            throw new TexError_js_1.default('InvalidOption', 'Invalid optional argument: %1', key);
	                        }
	                        delete def[key];
	                    }
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	        }
	        return def;
	    }
	    ParseUtil.keyvalOptions = keyvalOptions;
	    function readKeyval(text) {
	        var _a, _b;
	        var options = {};
	        var rest = text;
	        var end, key, val;
	        while (rest) {
	            _a = __read(readValue(rest, ['=', ',']), 3), key = _a[0], end = _a[1], rest = _a[2];
	            if (end === '=') {
	                _b = __read(readValue(rest, [',']), 3), val = _b[0], end = _b[1], rest = _b[2];
	                val = (val === 'false' || val === 'true') ?
	                    JSON.parse(val) : val;
	                options[key] = val;
	            }
	            else if (key) {
	                options[key] = true;
	            }
	        }
	        return options;
	    }
	    function removeBraces(text, count) {
	        while (count > 0) {
	            text = text.trim().slice(1, -1);
	            count--;
	        }
	        return text.trim();
	    }
	    function readValue(text, end) {
	        var length = text.length;
	        var braces = 0;
	        var value = '';
	        var index = 0;
	        var start = 0;
	        var startCount = true;
	        var stopCount = false;
	        while (index < length) {
	            var c = text[index++];
	            switch (c) {
	                case ' ':
	                    break;
	                case '{':
	                    if (startCount) {
	                        start++;
	                    }
	                    else {
	                        stopCount = false;
	                        if (start > braces) {
	                            start = braces;
	                        }
	                    }
	                    braces++;
	                    break;
	                case '}':
	                    if (braces) {
	                        braces--;
	                    }
	                    if (startCount || stopCount) {
	                        start--;
	                        stopCount = true;
	                    }
	                    startCount = false;
	                    break;
	                default:
	                    if (!braces && end.indexOf(c) !== -1) {
	                        return [stopCount ? 'true' :
	                                removeBraces(value, start), c, text.slice(index)];
	                    }
	                    startCount = false;
	                    stopCount = false;
	            }
	            value += c;
	        }
	        if (braces) {
	            throw new TexError_js_1.default('ExtraOpenMissingClose', 'Extra open brace or missing close brace');
	        }
	        return [stopCount ? 'true' : removeBraces(value, start), '', text.slice(index)];
	    }
	    ;
	})(ParseUtil || (ParseUtil = {}));
	exports.default = ParseUtil;
	//# sourceMappingURL=ParseUtil.js.map

/***/ }),
/* 175 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexError = (function () {
	    function TexError(id, message) {
	        var rest = [];
	        for (var _i = 2; _i < arguments.length; _i++) {
	            rest[_i - 2] = arguments[_i];
	        }
	        this.id = id;
	        this.message = TexError.processString(message, rest);
	    }
	    TexError.processString = function (str, args) {
	        var parts = str.split(TexError.pattern);
	        for (var i = 1, m = parts.length; i < m; i += 2) {
	            var c = parts[i].charAt(0);
	            if (c >= '0' && c <= '9') {
	                parts[i] = args[parseInt(parts[i], 10) - 1];
	                if (typeof parts[i] === 'number') {
	                    parts[i] = parts[i].toString();
	                }
	            }
	            else if (c === '{') {
	                c = parts[i].substr(1);
	                if (c >= '0' && c <= '9') {
	                    parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];
	                    if (typeof parts[i] === 'number') {
	                        parts[i] = parts[i].toString();
	                    }
	                }
	                else {
	                    var match = parts[i].match(/^\{([a-z]+):%(\d+)\|(.*)\}$/);
	                    if (match) {
	                        parts[i] = '%' + parts[i];
	                    }
	                }
	            }
	            if (parts[i] == null) {
	                parts[i] = '???';
	            }
	        }
	        return parts.join('');
	    };
	    TexError.pattern = /%(\d+|\{\d+\}|\{[a-z]+:\%\d+(?:\|(?:%\{\d+\}|%.|[^\}])*)+\}|.)/g;
	    return TexError;
	}());
	exports.default = TexError;
	//# sourceMappingURL=TexError.js.map

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Retries_js_1 = __webpack_require__(157);
	var AsyncLoad_js_1 = __webpack_require__(177);
	exports.options = {
	    loadMissingEntities: true
	};
	exports.entities = {
	    ApplyFunction: '\u2061',
	    Backslash: '\u2216',
	    Because: '\u2235',
	    Breve: '\u02D8',
	    Cap: '\u22D2',
	    CenterDot: '\u00B7',
	    CircleDot: '\u2299',
	    CircleMinus: '\u2296',
	    CirclePlus: '\u2295',
	    CircleTimes: '\u2297',
	    Congruent: '\u2261',
	    ContourIntegral: '\u222E',
	    Coproduct: '\u2210',
	    Cross: '\u2A2F',
	    Cup: '\u22D3',
	    CupCap: '\u224D',
	    Dagger: '\u2021',
	    Del: '\u2207',
	    Delta: '\u0394',
	    Diamond: '\u22C4',
	    DifferentialD: '\u2146',
	    DotEqual: '\u2250',
	    DoubleDot: '\u00A8',
	    DoubleRightTee: '\u22A8',
	    DoubleVerticalBar: '\u2225',
	    DownArrow: '\u2193',
	    DownLeftVector: '\u21BD',
	    DownRightVector: '\u21C1',
	    DownTee: '\u22A4',
	    Downarrow: '\u21D3',
	    Element: '\u2208',
	    EqualTilde: '\u2242',
	    Equilibrium: '\u21CC',
	    Exists: '\u2203',
	    ExponentialE: '\u2147',
	    FilledVerySmallSquare: '\u25AA',
	    ForAll: '\u2200',
	    Gamma: '\u0393',
	    Gg: '\u22D9',
	    GreaterEqual: '\u2265',
	    GreaterEqualLess: '\u22DB',
	    GreaterFullEqual: '\u2267',
	    GreaterLess: '\u2277',
	    GreaterSlantEqual: '\u2A7E',
	    GreaterTilde: '\u2273',
	    Hacek: '\u02C7',
	    Hat: '\u005E',
	    HumpDownHump: '\u224E',
	    HumpEqual: '\u224F',
	    Im: '\u2111',
	    ImaginaryI: '\u2148',
	    Integral: '\u222B',
	    Intersection: '\u22C2',
	    InvisibleComma: '\u2063',
	    InvisibleTimes: '\u2062',
	    Lambda: '\u039B',
	    Larr: '\u219E',
	    LeftAngleBracket: '\u27E8',
	    LeftArrow: '\u2190',
	    LeftArrowRightArrow: '\u21C6',
	    LeftCeiling: '\u2308',
	    LeftDownVector: '\u21C3',
	    LeftFloor: '\u230A',
	    LeftRightArrow: '\u2194',
	    LeftTee: '\u22A3',
	    LeftTriangle: '\u22B2',
	    LeftTriangleEqual: '\u22B4',
	    LeftUpVector: '\u21BF',
	    LeftVector: '\u21BC',
	    Leftarrow: '\u21D0',
	    Leftrightarrow: '\u21D4',
	    LessEqualGreater: '\u22DA',
	    LessFullEqual: '\u2266',
	    LessGreater: '\u2276',
	    LessSlantEqual: '\u2A7D',
	    LessTilde: '\u2272',
	    Ll: '\u22D8',
	    Lleftarrow: '\u21DA',
	    LongLeftArrow: '\u27F5',
	    LongLeftRightArrow: '\u27F7',
	    LongRightArrow: '\u27F6',
	    Longleftarrow: '\u27F8',
	    Longleftrightarrow: '\u27FA',
	    Longrightarrow: '\u27F9',
	    Lsh: '\u21B0',
	    MinusPlus: '\u2213',
	    NestedGreaterGreater: '\u226B',
	    NestedLessLess: '\u226A',
	    NotDoubleVerticalBar: '\u2226',
	    NotElement: '\u2209',
	    NotEqual: '\u2260',
	    NotExists: '\u2204',
	    NotGreater: '\u226F',
	    NotGreaterEqual: '\u2271',
	    NotLeftTriangle: '\u22EA',
	    NotLeftTriangleEqual: '\u22EC',
	    NotLess: '\u226E',
	    NotLessEqual: '\u2270',
	    NotPrecedes: '\u2280',
	    NotPrecedesSlantEqual: '\u22E0',
	    NotRightTriangle: '\u22EB',
	    NotRightTriangleEqual: '\u22ED',
	    NotSubsetEqual: '\u2288',
	    NotSucceeds: '\u2281',
	    NotSucceedsSlantEqual: '\u22E1',
	    NotSupersetEqual: '\u2289',
	    NotTilde: '\u2241',
	    NotVerticalBar: '\u2224',
	    Omega: '\u03A9',
	    OverBar: '\u203E',
	    OverBrace: '\u23DE',
	    PartialD: '\u2202',
	    Phi: '\u03A6',
	    Pi: '\u03A0',
	    PlusMinus: '\u00B1',
	    Precedes: '\u227A',
	    PrecedesEqual: '\u2AAF',
	    PrecedesSlantEqual: '\u227C',
	    PrecedesTilde: '\u227E',
	    Product: '\u220F',
	    Proportional: '\u221D',
	    Psi: '\u03A8',
	    Rarr: '\u21A0',
	    Re: '\u211C',
	    ReverseEquilibrium: '\u21CB',
	    RightAngleBracket: '\u27E9',
	    RightArrow: '\u2192',
	    RightArrowLeftArrow: '\u21C4',
	    RightCeiling: '\u2309',
	    RightDownVector: '\u21C2',
	    RightFloor: '\u230B',
	    RightTee: '\u22A2',
	    RightTeeArrow: '\u21A6',
	    RightTriangle: '\u22B3',
	    RightTriangleEqual: '\u22B5',
	    RightUpVector: '\u21BE',
	    RightVector: '\u21C0',
	    Rightarrow: '\u21D2',
	    Rrightarrow: '\u21DB',
	    Rsh: '\u21B1',
	    Sigma: '\u03A3',
	    SmallCircle: '\u2218',
	    Sqrt: '\u221A',
	    Square: '\u25A1',
	    SquareIntersection: '\u2293',
	    SquareSubset: '\u228F',
	    SquareSubsetEqual: '\u2291',
	    SquareSuperset: '\u2290',
	    SquareSupersetEqual: '\u2292',
	    SquareUnion: '\u2294',
	    Star: '\u22C6',
	    Subset: '\u22D0',
	    SubsetEqual: '\u2286',
	    Succeeds: '\u227B',
	    SucceedsEqual: '\u2AB0',
	    SucceedsSlantEqual: '\u227D',
	    SucceedsTilde: '\u227F',
	    SuchThat: '\u220B',
	    Sum: '\u2211',
	    Superset: '\u2283',
	    SupersetEqual: '\u2287',
	    Supset: '\u22D1',
	    Therefore: '\u2234',
	    Theta: '\u0398',
	    Tilde: '\u223C',
	    TildeEqual: '\u2243',
	    TildeFullEqual: '\u2245',
	    TildeTilde: '\u2248',
	    UnderBar: '\u005F',
	    UnderBrace: '\u23DF',
	    Union: '\u22C3',
	    UnionPlus: '\u228E',
	    UpArrow: '\u2191',
	    UpDownArrow: '\u2195',
	    UpTee: '\u22A5',
	    Uparrow: '\u21D1',
	    Updownarrow: '\u21D5',
	    Upsilon: '\u03A5',
	    Vdash: '\u22A9',
	    Vee: '\u22C1',
	    VerticalBar: '\u2223',
	    VerticalTilde: '\u2240',
	    Vvdash: '\u22AA',
	    Wedge: '\u22C0',
	    Xi: '\u039E',
	    amp: '\u0026',
	    acute: '\u00B4',
	    aleph: '\u2135',
	    alpha: '\u03B1',
	    amalg: '\u2A3F',
	    and: '\u2227',
	    ang: '\u2220',
	    angmsd: '\u2221',
	    angsph: '\u2222',
	    ape: '\u224A',
	    backprime: '\u2035',
	    backsim: '\u223D',
	    backsimeq: '\u22CD',
	    beta: '\u03B2',
	    beth: '\u2136',
	    between: '\u226C',
	    bigcirc: '\u25EF',
	    bigodot: '\u2A00',
	    bigoplus: '\u2A01',
	    bigotimes: '\u2A02',
	    bigsqcup: '\u2A06',
	    bigstar: '\u2605',
	    bigtriangledown: '\u25BD',
	    bigtriangleup: '\u25B3',
	    biguplus: '\u2A04',
	    blacklozenge: '\u29EB',
	    blacktriangle: '\u25B4',
	    blacktriangledown: '\u25BE',
	    blacktriangleleft: '\u25C2',
	    bowtie: '\u22C8',
	    boxdl: '\u2510',
	    boxdr: '\u250C',
	    boxminus: '\u229F',
	    boxplus: '\u229E',
	    boxtimes: '\u22A0',
	    boxul: '\u2518',
	    boxur: '\u2514',
	    bsol: '\u005C',
	    bull: '\u2022',
	    cap: '\u2229',
	    check: '\u2713',
	    chi: '\u03C7',
	    circ: '\u02C6',
	    circeq: '\u2257',
	    circlearrowleft: '\u21BA',
	    circlearrowright: '\u21BB',
	    circledR: '\u00AE',
	    circledS: '\u24C8',
	    circledast: '\u229B',
	    circledcirc: '\u229A',
	    circleddash: '\u229D',
	    clubs: '\u2663',
	    colon: '\u003A',
	    comp: '\u2201',
	    ctdot: '\u22EF',
	    cuepr: '\u22DE',
	    cuesc: '\u22DF',
	    cularr: '\u21B6',
	    cup: '\u222A',
	    curarr: '\u21B7',
	    curlyvee: '\u22CE',
	    curlywedge: '\u22CF',
	    dagger: '\u2020',
	    daleth: '\u2138',
	    ddarr: '\u21CA',
	    deg: '\u00B0',
	    delta: '\u03B4',
	    digamma: '\u03DD',
	    div: '\u00F7',
	    divideontimes: '\u22C7',
	    dot: '\u02D9',
	    doteqdot: '\u2251',
	    dotplus: '\u2214',
	    dotsquare: '\u22A1',
	    dtdot: '\u22F1',
	    ecir: '\u2256',
	    efDot: '\u2252',
	    egs: '\u2A96',
	    ell: '\u2113',
	    els: '\u2A95',
	    empty: '\u2205',
	    epsi: '\u03B5',
	    epsiv: '\u03F5',
	    erDot: '\u2253',
	    eta: '\u03B7',
	    eth: '\u00F0',
	    flat: '\u266D',
	    fork: '\u22D4',
	    frown: '\u2322',
	    gEl: '\u2A8C',
	    gamma: '\u03B3',
	    gap: '\u2A86',
	    gimel: '\u2137',
	    gnE: '\u2269',
	    gnap: '\u2A8A',
	    gne: '\u2A88',
	    gnsim: '\u22E7',
	    gt: '\u003E',
	    gtdot: '\u22D7',
	    harrw: '\u21AD',
	    hbar: '\u210F',
	    hellip: '\u2026',
	    hookleftarrow: '\u21A9',
	    hookrightarrow: '\u21AA',
	    imath: '\u0131',
	    infin: '\u221E',
	    intcal: '\u22BA',
	    iota: '\u03B9',
	    jmath: '\u0237',
	    kappa: '\u03BA',
	    kappav: '\u03F0',
	    lEg: '\u2A8B',
	    lambda: '\u03BB',
	    lap: '\u2A85',
	    larrlp: '\u21AB',
	    larrtl: '\u21A2',
	    lbrace: '\u007B',
	    lbrack: '\u005B',
	    le: '\u2264',
	    leftleftarrows: '\u21C7',
	    leftthreetimes: '\u22CB',
	    lessdot: '\u22D6',
	    lmoust: '\u23B0',
	    lnE: '\u2268',
	    lnap: '\u2A89',
	    lne: '\u2A87',
	    lnsim: '\u22E6',
	    longmapsto: '\u27FC',
	    looparrowright: '\u21AC',
	    lowast: '\u2217',
	    loz: '\u25CA',
	    lt: '\u003C',
	    ltimes: '\u22C9',
	    ltri: '\u25C3',
	    macr: '\u00AF',
	    malt: '\u2720',
	    mho: '\u2127',
	    mu: '\u03BC',
	    multimap: '\u22B8',
	    nLeftarrow: '\u21CD',
	    nLeftrightarrow: '\u21CE',
	    nRightarrow: '\u21CF',
	    nVDash: '\u22AF',
	    nVdash: '\u22AE',
	    natur: '\u266E',
	    nearr: '\u2197',
	    nharr: '\u21AE',
	    nlarr: '\u219A',
	    not: '\u00AC',
	    nrarr: '\u219B',
	    nu: '\u03BD',
	    nvDash: '\u22AD',
	    nvdash: '\u22AC',
	    nwarr: '\u2196',
	    omega: '\u03C9',
	    omicron: '\u03BF',
	    or: '\u2228',
	    osol: '\u2298',
	    period: '\u002E',
	    phi: '\u03C6',
	    phiv: '\u03D5',
	    pi: '\u03C0',
	    piv: '\u03D6',
	    prap: '\u2AB7',
	    precnapprox: '\u2AB9',
	    precneqq: '\u2AB5',
	    precnsim: '\u22E8',
	    prime: '\u2032',
	    psi: '\u03C8',
	    quot: '\u0022',
	    rarrtl: '\u21A3',
	    rbrace: '\u007D',
	    rbrack: '\u005D',
	    rho: '\u03C1',
	    rhov: '\u03F1',
	    rightrightarrows: '\u21C9',
	    rightthreetimes: '\u22CC',
	    ring: '\u02DA',
	    rmoust: '\u23B1',
	    rtimes: '\u22CA',
	    rtri: '\u25B9',
	    scap: '\u2AB8',
	    scnE: '\u2AB6',
	    scnap: '\u2ABA',
	    scnsim: '\u22E9',
	    sdot: '\u22C5',
	    searr: '\u2198',
	    sect: '\u00A7',
	    sharp: '\u266F',
	    sigma: '\u03C3',
	    sigmav: '\u03C2',
	    simne: '\u2246',
	    smile: '\u2323',
	    spades: '\u2660',
	    sub: '\u2282',
	    subE: '\u2AC5',
	    subnE: '\u2ACB',
	    subne: '\u228A',
	    supE: '\u2AC6',
	    supnE: '\u2ACC',
	    supne: '\u228B',
	    swarr: '\u2199',
	    tau: '\u03C4',
	    theta: '\u03B8',
	    thetav: '\u03D1',
	    tilde: '\u02DC',
	    times: '\u00D7',
	    triangle: '\u25B5',
	    triangleq: '\u225C',
	    upsi: '\u03C5',
	    upuparrows: '\u21C8',
	    veebar: '\u22BB',
	    vellip: '\u22EE',
	    weierp: '\u2118',
	    xi: '\u03BE',
	    yen: '\u00A5',
	    zeta: '\u03B6',
	    zigrarr: '\u21DD'
	};
	var loaded = {};
	function add(additions, file) {
	    Object.assign(exports.entities, additions);
	    loaded[file] = true;
	}
	exports.add = add;
	function remove(entity) {
	    delete exports.entities[entity];
	}
	exports.remove = remove;
	function translate(text) {
	    return text.replace(/&([a-z][a-z0-9]*|#(?:[0-9]+|x[0-9a-f]+));/ig, replace);
	}
	exports.translate = translate;
	function replace(match, entity) {
	    if (entity.charAt(0) === '#') {
	        return numeric(entity.slice(1));
	    }
	    if (exports.entities[entity]) {
	        return exports.entities[entity];
	    }
	    if (exports.options['loadMissingEntities']) {
	        var file = (entity.match(/^[a-zA-Z](fr|scr|opf)$/) ? RegExp.$1 : entity.charAt(0).toLowerCase());
	        if (!loaded[file]) {
	            loaded[file] = true;
	            Retries_js_1.retryAfter(AsyncLoad_js_1.asyncLoad('./util/entities/' + file + '.js'));
	        }
	    }
	    return match;
	}
	function numeric(entity) {
	    var n = (entity.charAt(0) === 'x' ?
	        parseInt(entity.slice(1), 16) :
	        parseInt(entity));
	    if (n < 0x10000) {
	        return String.fromCharCode(n);
	    }
	    n -= 0x10000;
	    var hi = (n >> 10) + 0xD800;
	    var lo = (n & 0x3FF) + 0xDC00;
	    return String.fromCharCode(hi, lo);
	}
	exports.numeric = numeric;
	//# sourceMappingURL=Entities.js.map

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var mathjax_js_1 = __webpack_require__(154);
	function asyncLoad(name) {
	    if (!mathjax_js_1.mathjax.asyncLoad) {
	        return Promise.reject("Can't load '" + name + "': No asyncLoad method specified");
	    }
	    return new Promise(function (ok, fail) {
	        var result = mathjax_js_1.mathjax.asyncLoad(name);
	        if (result instanceof Promise) {
	            result.then(function (value) { return ok(value); }).catch(function (err) { return fail(err); });
	        }
	        else {
	            ok(result);
	        }
	    });
	}
	exports.asyncLoad = asyncLoad;
	//# sourceMappingURL=AsyncLoad.js.map

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Entities = __webpack_require__(176);
	Entities.add({
	    NJcy: '\u040A',
	    Nacute: '\u0143',
	    Ncaron: '\u0147',
	    Ncedil: '\u0145',
	    Ncy: '\u041D',
	    NegativeMediumSpace: '\u200B',
	    NegativeThickSpace: '\u200B',
	    NegativeThinSpace: '\u200B',
	    NegativeVeryThinSpace: '\u200B',
	    NewLine: '\u000A',
	    NoBreak: '\u2060',
	    NonBreakingSpace: '\u00A0',
	    Not: '\u2AEC',
	    NotCongruent: '\u2262',
	    NotCupCap: '\u226D',
	    NotEqualTilde: '\u2242\u0338',
	    NotGreaterFullEqual: '\u2267\u0338',
	    NotGreaterGreater: '\u226B\u0338',
	    NotGreaterLess: '\u2279',
	    NotGreaterSlantEqual: '\u2A7E\u0338',
	    NotGreaterTilde: '\u2275',
	    NotHumpDownHump: '\u224E\u0338',
	    NotHumpEqual: '\u224F\u0338',
	    NotLeftTriangleBar: '\u29CF\u0338',
	    NotLessGreater: '\u2278',
	    NotLessLess: '\u226A\u0338',
	    NotLessSlantEqual: '\u2A7D\u0338',
	    NotLessTilde: '\u2274',
	    NotNestedGreaterGreater: '\u2AA2\u0338',
	    NotNestedLessLess: '\u2AA1\u0338',
	    NotPrecedesEqual: '\u2AAF\u0338',
	    NotReverseElement: '\u220C',
	    NotRightTriangleBar: '\u29D0\u0338',
	    NotSquareSubset: '\u228F\u0338',
	    NotSquareSubsetEqual: '\u22E2',
	    NotSquareSuperset: '\u2290\u0338',
	    NotSquareSupersetEqual: '\u22E3',
	    NotSubset: '\u2282\u20D2',
	    NotSucceedsEqual: '\u2AB0\u0338',
	    NotSucceedsTilde: '\u227F\u0338',
	    NotSuperset: '\u2283\u20D2',
	    NotTildeEqual: '\u2244',
	    NotTildeFullEqual: '\u2247',
	    NotTildeTilde: '\u2249',
	    Ntilde: '\u00D1',
	    Nu: '\u039D',
	    nGg: '\u22D9\u0338',
	    nGt: '\u226B\u20D2',
	    nGtv: '\u226B\u0338',
	    nLl: '\u22D8\u0338',
	    nLt: '\u226A\u20D2',
	    nLtv: '\u226A\u0338',
	    nabla: '\u2207',
	    nacute: '\u0144',
	    nang: '\u2220\u20D2',
	    nap: '\u2249',
	    napE: '\u2A70\u0338',
	    napid: '\u224B\u0338',
	    napos: '\u0149',
	    napprox: '\u2249',
	    natural: '\u266E',
	    naturals: '\u2115',
	    nbsp: '\u00A0',
	    nbump: '\u224E\u0338',
	    nbumpe: '\u224F\u0338',
	    ncap: '\u2A43',
	    ncaron: '\u0148',
	    ncedil: '\u0146',
	    ncong: '\u2247',
	    ncongdot: '\u2A6D\u0338',
	    ncup: '\u2A42',
	    ncy: '\u043D',
	    ndash: '\u2013',
	    ne: '\u2260',
	    neArr: '\u21D7',
	    nearhk: '\u2924',
	    nearrow: '\u2197',
	    nedot: '\u2250\u0338',
	    nequiv: '\u2262',
	    nesear: '\u2928',
	    nesim: '\u2242\u0338',
	    nexist: '\u2204',
	    nexists: '\u2204',
	    ngE: '\u2267\u0338',
	    nge: '\u2271',
	    ngeq: '\u2271',
	    ngeqq: '\u2267\u0338',
	    ngeqslant: '\u2A7E\u0338',
	    nges: '\u2A7E\u0338',
	    ngsim: '\u2275',
	    ngt: '\u226F',
	    ngtr: '\u226F',
	    nhArr: '\u21CE',
	    nhpar: '\u2AF2',
	    ni: '\u220B',
	    nis: '\u22FC',
	    nisd: '\u22FA',
	    niv: '\u220B',
	    njcy: '\u045A',
	    nlArr: '\u21CD',
	    nlE: '\u2266\u0338',
	    nldr: '\u2025',
	    nle: '\u2270',
	    nleftarrow: '\u219A',
	    nleftrightarrow: '\u21AE',
	    nleq: '\u2270',
	    nleqq: '\u2266\u0338',
	    nleqslant: '\u2A7D\u0338',
	    nles: '\u2A7D\u0338',
	    nless: '\u226E',
	    nlsim: '\u2274',
	    nlt: '\u226E',
	    nltri: '\u22EA',
	    nltrie: '\u22EC',
	    nmid: '\u2224',
	    notin: '\u2209',
	    notinE: '\u22F9\u0338',
	    notindot: '\u22F5\u0338',
	    notinva: '\u2209',
	    notinvb: '\u22F7',
	    notinvc: '\u22F6',
	    notni: '\u220C',
	    notniva: '\u220C',
	    notnivb: '\u22FE',
	    notnivc: '\u22FD',
	    npar: '\u2226',
	    nparallel: '\u2226',
	    nparsl: '\u2AFD\u20E5',
	    npart: '\u2202\u0338',
	    npolint: '\u2A14',
	    npr: '\u2280',
	    nprcue: '\u22E0',
	    npre: '\u2AAF\u0338',
	    nprec: '\u2280',
	    npreceq: '\u2AAF\u0338',
	    nrArr: '\u21CF',
	    nrarrc: '\u2933\u0338',
	    nrarrw: '\u219D\u0338',
	    nrightarrow: '\u219B',
	    nrtri: '\u22EB',
	    nrtrie: '\u22ED',
	    nsc: '\u2281',
	    nsccue: '\u22E1',
	    nsce: '\u2AB0\u0338',
	    nshortmid: '\u2224',
	    nshortparallel: '\u2226',
	    nsim: '\u2241',
	    nsime: '\u2244',
	    nsimeq: '\u2244',
	    nsmid: '\u2224',
	    nspar: '\u2226',
	    nsqsube: '\u22E2',
	    nsqsupe: '\u22E3',
	    nsub: '\u2284',
	    nsubE: '\u2AC5\u0338',
	    nsube: '\u2288',
	    nsubset: '\u2282\u20D2',
	    nsubseteq: '\u2288',
	    nsubseteqq: '\u2AC5\u0338',
	    nsucc: '\u2281',
	    nsucceq: '\u2AB0\u0338',
	    nsup: '\u2285',
	    nsupE: '\u2AC6\u0338',
	    nsupe: '\u2289',
	    nsupset: '\u2283\u20D2',
	    nsupseteq: '\u2289',
	    nsupseteqq: '\u2AC6\u0338',
	    ntgl: '\u2279',
	    ntilde: '\u00F1',
	    ntlg: '\u2278',
	    ntriangleleft: '\u22EA',
	    ntrianglelefteq: '\u22EC',
	    ntriangleright: '\u22EB',
	    ntrianglerighteq: '\u22ED',
	    num: '\u0023',
	    numero: '\u2116',
	    numsp: '\u2007',
	    nvHarr: '\u2904',
	    nvap: '\u224D\u20D2',
	    nvge: '\u2265\u20D2',
	    nvgt: '\u003E\u20D2',
	    nvinfin: '\u29DE',
	    nvlArr: '\u2902',
	    nvle: '\u2264\u20D2',
	    nvlt: '\u003C\u20D2',
	    nvltrie: '\u22B4\u20D2',
	    nvrArr: '\u2903',
	    nvrtrie: '\u22B5\u20D2',
	    nvsim: '\u223C\u20D2',
	    nwArr: '\u21D6',
	    nwarhk: '\u2923',
	    nwarrow: '\u2196',
	    nwnear: '\u2927'
	}, 'n');
	//# sourceMappingURL=n.js.map

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var NodeUtil_js_1 = __webpack_require__(170);
	var Stack = (function () {
	    function Stack(_factory, _env, inner) {
	        this._factory = _factory;
	        this._env = _env;
	        this.global = {};
	        this.stack = [];
	        this.global = { isInner: inner };
	        this.stack = [this._factory.create('start', this.global)];
	        if (_env) {
	            this.stack[0].env = _env;
	        }
	        this.env = this.stack[0].env;
	    }
	    Object.defineProperty(Stack.prototype, "env", {
	        get: function () {
	            return this._env;
	        },
	        set: function (env) {
	            this._env = env;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Stack.prototype.Push = function () {
	        var e_1, _a;
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        try {
	            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
	                var node = args_1_1.value;
	                if (!node) {
	                    continue;
	                }
	                var item = NodeUtil_js_1.default.isNode(node) ?
	                    this._factory.create('mml', node) : node;
	                item.global = this.global;
	                var _b = __read(this.stack.length ? this.Top().checkItem(item) : [null, true], 2), top_1 = _b[0], success = _b[1];
	                if (!success) {
	                    continue;
	                }
	                if (top_1) {
	                    this.Pop();
	                    this.Push.apply(this, __spread(top_1));
	                    continue;
	                }
	                this.stack.push(item);
	                if (item.env) {
	                    if (item.copyEnv) {
	                        Object.assign(item.env, this.env);
	                    }
	                    this.env = item.env;
	                }
	                else {
	                    item.env = this.env;
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    Stack.prototype.Pop = function () {
	        var item = this.stack.pop();
	        if (!item.isOpen) {
	            delete item.env;
	        }
	        this.env = (this.stack.length ? this.Top().env : {});
	        return item;
	    };
	    Stack.prototype.Top = function (n) {
	        if (n === void 0) { n = 1; }
	        return this.stack.length < n ? null : this.stack[this.stack.length - n];
	    };
	    Stack.prototype.Prev = function (noPop) {
	        var top = this.Top();
	        return noPop ? top.First : top.Pop();
	    };
	    Stack.prototype.toString = function () {
	        return 'stack[\n  ' + this.stack.join('\n  ') + '\n]';
	    };
	    return Stack;
	}());
	exports.default = Stack;
	//# sourceMappingURL=Stack.js.map

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var StackItemFactory_js_1 = __webpack_require__(181);
	var MapHandler_js_1 = __webpack_require__(184);
	var NodeFactory_js_1 = __webpack_require__(185);
	var Options_js_1 = __webpack_require__(160);
	var ParseOptions = (function () {
	    function ParseOptions(configuration, options) {
	        if (options === void 0) { options = []; }
	        this.options = {};
	        this.parsers = [];
	        this.root = null;
	        this.nodeLists = {};
	        this.error = false;
	        this.handlers = new MapHandler_js_1.SubHandlers(configuration);
	        this.nodeFactory = new NodeFactory_js_1.NodeFactory();
	        this.nodeFactory.configuration = this;
	        this.nodeFactory.setCreators(configuration.nodes);
	        this.itemFactory = new StackItemFactory_js_1.default(configuration.items);
	        this.itemFactory.configuration = this;
	        Options_js_1.defaultOptions.apply(void 0, __spread([this.options], options));
	        Options_js_1.defaultOptions(this.options, configuration.options);
	    }
	    ParseOptions.prototype.pushParser = function (parser) {
	        this.parsers.unshift(parser);
	    };
	    ParseOptions.prototype.popParser = function () {
	        this.parsers.shift();
	    };
	    Object.defineProperty(ParseOptions.prototype, "parser", {
	        get: function () {
	            return this.parsers[0];
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ParseOptions.prototype.clear = function () {
	        this.parsers = [];
	        this.root = null;
	        this.nodeLists = {};
	        this.error = false;
	        this.tags.resetTag();
	    };
	    ParseOptions.prototype.addNode = function (property, node) {
	        var list = this.nodeLists[property];
	        if (!list) {
	            list = this.nodeLists[property] = [];
	        }
	        list.push(node);
	    };
	    ParseOptions.prototype.getList = function (property) {
	        var e_1, _a;
	        var list = this.nodeLists[property] || [];
	        var result = [];
	        try {
	            for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {
	                var node = list_1_1.value;
	                if (this.inTree(node)) {
	                    result.push(node);
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        this.nodeLists[property] = result;
	        return result;
	    };
	    ParseOptions.prototype.inTree = function (node) {
	        while (node && node !== this.root) {
	            node = node.parent;
	        }
	        return !!node;
	    };
	    return ParseOptions;
	}());
	exports.default = ParseOptions;
	//# sourceMappingURL=ParseOptions.js.map

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var StackItem_js_1 = __webpack_require__(182);
	var Factory_js_1 = __webpack_require__(183);
	var DummyItem = (function (_super) {
	    __extends(DummyItem, _super);
	    function DummyItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    return DummyItem;
	}(StackItem_js_1.BaseItem));
	var StackItemFactory = (function (_super) {
	    __extends(StackItemFactory, _super);
	    function StackItemFactory() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.defaultKind = 'dummy';
	        _this.configuration = null;
	        return _this;
	    }
	    StackItemFactory.DefaultStackItems = (_a = {},
	        _a[DummyItem.prototype.kind] = DummyItem,
	        _a);
	    return StackItemFactory;
	}(Factory_js_1.AbstractFactory));
	exports.default = StackItemFactory;
	//# sourceMappingURL=StackItemFactory.js.map

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexError_js_1 = __webpack_require__(175);
	var MmlStack = (function () {
	    function MmlStack(_nodes) {
	        this._nodes = _nodes;
	    }
	    Object.defineProperty(MmlStack.prototype, "nodes", {
	        get: function () {
	            return this._nodes;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlStack.prototype.Push = function () {
	        var _a;
	        var nodes = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            nodes[_i] = arguments[_i];
	        }
	        (_a = this._nodes).push.apply(_a, __spread(nodes));
	    };
	    MmlStack.prototype.Pop = function () {
	        return this._nodes.pop();
	    };
	    Object.defineProperty(MmlStack.prototype, "First", {
	        get: function () {
	            return this._nodes[this.Size() - 1];
	        },
	        set: function (node) {
	            this._nodes[this.Size() - 1] = node;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlStack.prototype, "Last", {
	        get: function () {
	            return this._nodes[0];
	        },
	        set: function (node) {
	            this._nodes[0] = node;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlStack.prototype.Peek = function (n) {
	        if (n == null) {
	            n = 1;
	        }
	        return this._nodes.slice(this.Size() - n);
	    };
	    MmlStack.prototype.Size = function () {
	        return this._nodes.length;
	    };
	    MmlStack.prototype.Clear = function () {
	        this._nodes = [];
	    };
	    MmlStack.prototype.toMml = function (inferred, forceRow) {
	        if (inferred === void 0) { inferred = true; }
	        if (this._nodes.length === 1 && !forceRow) {
	            return this.First;
	        }
	        return this.create('node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});
	    };
	    MmlStack.prototype.create = function (kind) {
	        var _a;
	        var rest = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            rest[_i - 1] = arguments[_i];
	        }
	        return (_a = this.factory.configuration.nodeFactory).create.apply(_a, __spread([kind], rest));
	    };
	    return MmlStack;
	}());
	exports.MmlStack = MmlStack;
	var BaseItem = (function (_super) {
	    __extends(BaseItem, _super);
	    function BaseItem(factory) {
	        var nodes = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            nodes[_i - 1] = arguments[_i];
	        }
	        var _this = _super.call(this, nodes) || this;
	        _this.factory = factory;
	        _this.global = {};
	        _this._properties = {};
	        if (_this.isOpen) {
	            _this._env = {};
	        }
	        return _this;
	    }
	    Object.defineProperty(BaseItem.prototype, "kind", {
	        get: function () {
	            return 'base';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseItem.prototype, "env", {
	        get: function () {
	            return this._env;
	        },
	        set: function (value) {
	            this._env = value;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseItem.prototype, "copyEnv", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BaseItem.prototype.getProperty = function (key) {
	        return this._properties[key];
	    };
	    BaseItem.prototype.setProperty = function (key, value) {
	        this._properties[key] = value;
	        return this;
	    };
	    Object.defineProperty(BaseItem.prototype, "isOpen", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseItem.prototype, "isClose", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BaseItem.prototype, "isFinal", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BaseItem.prototype.isKind = function (kind) {
	        return kind === this.kind;
	    };
	    BaseItem.prototype.checkItem = function (item) {
	        if (item.isKind('over') && this.isOpen) {
	            item.setProperty('num', this.toMml(false));
	            this.Clear();
	        }
	        if (item.isKind('cell') && this.isOpen) {
	            if (item.getProperty('linebreak')) {
	                return BaseItem.fail;
	            }
	            throw new TexError_js_1.default('Misplaced', 'Misplaced %1', item.getName());
	        }
	        if (item.isClose && this.getErrors(item.kind)) {
	            var _a = __read(this.getErrors(item.kind), 2), id = _a[0], message = _a[1];
	            throw new TexError_js_1.default(id, message, item.getName());
	        }
	        if (!item.isFinal) {
	            return BaseItem.success;
	        }
	        this.Push(item.First);
	        return BaseItem.fail;
	    };
	    BaseItem.prototype.clearEnv = function () {
	        var e_1, _a;
	        try {
	            for (var _b = __values(Object.keys(this.env)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var id = _c.value;
	                delete this.env[id];
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    BaseItem.prototype.setProperties = function (def) {
	        Object.assign(this._properties, def);
	        return this;
	    };
	    BaseItem.prototype.getName = function () {
	        return this.getProperty('name');
	    };
	    BaseItem.prototype.toString = function () {
	        return this.kind + '[' + this.nodes.join('; ') + ']';
	    };
	    BaseItem.prototype.getErrors = function (kind) {
	        var CLASS = this.constructor;
	        return (CLASS.errors || {})[kind] || BaseItem.errors[kind];
	    };
	    BaseItem.fail = [null, false];
	    BaseItem.success = [null, true];
	    BaseItem.errors = {
	        end: ['MissingBeginExtraEnd', 'Missing \\begin{%1} or extra \\end{%1}'],
	        close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],
	        right: ['MissingLeftExtraRight', 'Missing \\left or extra \\right']
	    };
	    return BaseItem;
	}(MmlStack));
	exports.BaseItem = BaseItem;
	//# sourceMappingURL=StackItem.js.map

/***/ }),
/* 183 */
/***/ (function(module, exports) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var AbstractFactory = (function () {
	    function AbstractFactory(nodes) {
	        var e_1, _a;
	        if (nodes === void 0) { nodes = null; }
	        this.defaultKind = 'unknown';
	        this.nodeMap = new Map();
	        this.node = {};
	        if (nodes === null) {
	            nodes = this.constructor.defaultNodes;
	        }
	        try {
	            for (var _b = __values(Object.keys(nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var kind = _c.value;
	                this.setNodeClass(kind, nodes[kind]);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    }
	    AbstractFactory.prototype.create = function (kind) {
	        var args = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            args[_i - 1] = arguments[_i];
	        }
	        return (this.node[kind] || this.node[this.defaultKind]).apply(void 0, __spread(args));
	    };
	    AbstractFactory.prototype.setNodeClass = function (kind, nodeClass) {
	        this.nodeMap.set(kind, nodeClass);
	        var THIS = this;
	        var KIND = this.nodeMap.get(kind);
	        this.node[kind] = function () {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            return new (KIND.bind.apply(KIND, __spread([void 0, THIS], args)))();
	        };
	    };
	    AbstractFactory.prototype.getNodeClass = function (kind) {
	        return this.nodeMap.get(kind);
	    };
	    AbstractFactory.prototype.deleteNodeClass = function (kind) {
	        this.nodeMap.delete(kind);
	        delete this.node[kind];
	    };
	    AbstractFactory.prototype.nodeIsKind = function (node, kind) {
	        return (node instanceof this.getNodeClass(kind));
	    };
	    AbstractFactory.prototype.getKinds = function () {
	        return Array.from(this.nodeMap.keys());
	    };
	    AbstractFactory.defaultNodes = {};
	    return AbstractFactory;
	}());
	exports.AbstractFactory = AbstractFactory;
	//# sourceMappingURL=Factory.js.map

/***/ }),
/* 184 */
/***/ (function(module, exports) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MapHandler;
	(function (MapHandler) {
	    var maps = new Map();
	    MapHandler.register = function (map) {
	        maps.set(map.name, map);
	    };
	    MapHandler.getMap = function (name) {
	        return maps.get(name);
	    };
	})(MapHandler = exports.MapHandler || (exports.MapHandler = {}));
	exports.ExtensionMaps = {
	    NEW_MACRO: 'new-Macro',
	    NEW_DELIMITER: 'new-Delimiter',
	    NEW_COMMAND: 'new-Command',
	    NEW_ENVIRONMENT: 'new-Environment'
	};
	var SubHandler = (function () {
	    function SubHandler(maps, _fallback) {
	        var e_1, _a;
	        this._fallback = _fallback;
	        this._configuration = [];
	        try {
	            for (var maps_1 = __values(maps), maps_1_1 = maps_1.next(); !maps_1_1.done; maps_1_1 = maps_1.next()) {
	                var name_1 = maps_1_1.value;
	                this.add(name_1);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (maps_1_1 && !maps_1_1.done && (_a = maps_1.return)) _a.call(maps_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    }
	    SubHandler.prototype.add = function (name) {
	        var map = MapHandler.getMap(name);
	        if (!map) {
	            this.warn('Configuration ' + name + ' not found! Omitted.');
	            return;
	        }
	        this._configuration.push(map);
	    };
	    SubHandler.prototype.parse = function (input) {
	        var e_2, _a;
	        try {
	            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var map = _c.value;
	                var result = map.parse(input);
	                if (result) {
	                    return result;
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        var _d = __read(input, 2), env = _d[0], symbol = _d[1];
	        this._fallback(env, symbol);
	    };
	    SubHandler.prototype.lookup = function (symbol) {
	        var map = this.applicable(symbol);
	        return map ? map.lookup(symbol) : null;
	    };
	    SubHandler.prototype.contains = function (symbol) {
	        return this.applicable(symbol) ? true : false;
	    };
	    SubHandler.prototype.toString = function () {
	        return this._configuration
	            .map(function (x) { return x.name; })
	            .join(', ');
	    };
	    SubHandler.prototype.applicable = function (symbol) {
	        var e_3, _a;
	        try {
	            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var map = _c.value;
	                if (map.contains(symbol)) {
	                    return map;
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        return null;
	    };
	    SubHandler.prototype.retrieve = function (name) {
	        return this._configuration.find(function (x) { return x.name === name; });
	    };
	    SubHandler.prototype.warn = function (message) {
	        console.log('TexParser Warning: ' + message);
	    };
	    return SubHandler;
	}());
	exports.SubHandler = SubHandler;
	var SubHandlers = (function () {
	    function SubHandlers(config) {
	        var e_4, _a;
	        this.map = new Map();
	        try {
	            for (var _b = __values(Object.keys(config.handler)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var key = _c.value;
	                var name_2 = key;
	                var subHandler = new SubHandler(config.handler[name_2] || [], config.fallback[name_2]);
	                this.set(name_2, subHandler);
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	    }
	    SubHandlers.prototype.set = function (name, subHandler) {
	        this.map.set(name, subHandler);
	    };
	    SubHandlers.prototype.get = function (name) {
	        return this.map.get(name);
	    };
	    SubHandlers.prototype.retrieve = function (name) {
	        var e_5, _a;
	        try {
	            for (var _b = __values(this.map.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var handler = _c.value;
	                var map = handler.retrieve(name);
	                if (map) {
	                    return map;
	                }
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	        return null;
	    };
	    SubHandlers.prototype.keys = function () {
	        return this.map.keys();
	    };
	    return SubHandlers;
	}());
	exports.SubHandlers = SubHandlers;
	//# sourceMappingURL=MapHandler.js.map

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var NodeUtil_js_1 = __webpack_require__(170);
	var NodeFactory = (function () {
	    function NodeFactory() {
	        this.mmlFactory = null;
	        this.factory = { 'node': NodeFactory.createNode,
	            'token': NodeFactory.createToken,
	            'text': NodeFactory.createText,
	            'error': NodeFactory.createError
	        };
	    }
	    NodeFactory.prototype.setMmlFactory = function (mmlFactory) {
	        this.mmlFactory = mmlFactory;
	    };
	    NodeFactory.createNode = function (factory, kind, children, def, text) {
	        if (children === void 0) { children = []; }
	        if (def === void 0) { def = {}; }
	        var node = factory.mmlFactory.create(kind);
	        var arity = node.arity;
	        if (arity === Infinity || arity === -1) {
	            if (children.length === 1 && children[0].isInferred) {
	                node.setChildren(NodeUtil_js_1.default.getChildren(children[0]));
	            }
	            else {
	                node.setChildren(children);
	            }
	        }
	        else {
	            var cleanChildren = [];
	            for (var i = 0, child = void 0; child = children[i]; i++) {
	                if (child.isInferred) {
	                    var mrow = factory.mmlFactory.create('mrow', {}, NodeUtil_js_1.default.getChildren(child));
	                    NodeUtil_js_1.default.copyAttributes(child, mrow);
	                    cleanChildren.push(mrow);
	                }
	                else {
	                    cleanChildren.push(child);
	                }
	            }
	            node.setChildren(cleanChildren);
	        }
	        if (text) {
	            node.appendChild(text);
	        }
	        NodeUtil_js_1.default.setProperties(node, def);
	        return node;
	    };
	    ;
	    NodeFactory.createToken = function (factory, kind, def, text) {
	        if (def === void 0) { def = {}; }
	        if (text === void 0) { text = ''; }
	        var textNode = factory.create('text', text);
	        return factory.create('node', kind, [], def, textNode);
	    };
	    NodeFactory.createText = function (factory, text) {
	        if (text == null) {
	            return null;
	        }
	        return factory.mmlFactory.create('text').setText(text);
	    };
	    ;
	    NodeFactory.createError = function (factory, message) {
	        var text = factory.create('text', message);
	        var mtext = factory.create('node', 'mtext', [], {}, text);
	        var error = factory.create('node', 'merror', [mtext]);
	        return error;
	    };
	    ;
	    NodeFactory.prototype.set = function (kind, func) {
	        this.factory[kind] = func;
	    };
	    NodeFactory.prototype.setCreators = function (maps) {
	        for (var kind in maps) {
	            this.set(kind, maps[kind]);
	        }
	    };
	    NodeFactory.prototype.create = function (kind) {
	        var rest = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            rest[_i - 1] = arguments[_i];
	        }
	        var func = this.factory[kind] || this.factory['node'];
	        var node = func.apply(void 0, __spread([this, rest[0]], rest.slice(1)));
	        if (kind === 'node') {
	            this.configuration.addNode(rest[0], node);
	        }
	        return node;
	    };
	    NodeFactory.prototype.get = function (kind) {
	        return this.factory[kind];
	    };
	    return NodeFactory;
	}());
	exports.NodeFactory = NodeFactory;
	//# sourceMappingURL=NodeFactory.js.map

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexParser_js_1 = __webpack_require__(173);
	var Label = (function () {
	    function Label(tag, id) {
	        if (tag === void 0) { tag = '???'; }
	        if (id === void 0) { id = ''; }
	        this.tag = tag;
	        this.id = id;
	    }
	    return Label;
	}());
	exports.Label = Label;
	var TagInfo = (function () {
	    function TagInfo(env, taggable, defaultTags, tag, tagId, tagFormat, noTag, labelId) {
	        if (env === void 0) { env = ''; }
	        if (taggable === void 0) { taggable = false; }
	        if (defaultTags === void 0) { defaultTags = false; }
	        if (tag === void 0) { tag = null; }
	        if (tagId === void 0) { tagId = ''; }
	        if (tagFormat === void 0) { tagFormat = ''; }
	        if (noTag === void 0) { noTag = false; }
	        if (labelId === void 0) { labelId = ''; }
	        this.env = env;
	        this.taggable = taggable;
	        this.defaultTags = defaultTags;
	        this.tag = tag;
	        this.tagId = tagId;
	        this.tagFormat = tagFormat;
	        this.noTag = noTag;
	        this.labelId = labelId;
	    }
	    return TagInfo;
	}());
	exports.TagInfo = TagInfo;
	var AbstractTags = (function () {
	    function AbstractTags() {
	        this.counter = 0;
	        this.allCounter = 0;
	        this.configuration = null;
	        this.ids = {};
	        this.allIds = {};
	        this.labels = {};
	        this.allLabels = {};
	        this.redo = false;
	        this.refUpdate = false;
	        this.currentTag = new TagInfo();
	        this.history = [];
	        this.stack = [];
	        this.enTag = function (node, tag) {
	            var nf = this.configuration.nodeFactory;
	            var cell = nf.create('node', 'mtd', [node]);
	            var row = nf.create('node', 'mlabeledtr', [tag, cell]);
	            var table = nf.create('node', 'mtable', [row], {
	                side: this.configuration.options['tagSide'],
	                minlabelspacing: this.configuration.options['tagIndent'],
	                displaystyle: true
	            });
	            return table;
	        };
	    }
	    AbstractTags.prototype.start = function (env, taggable, defaultTags) {
	        if (this.currentTag) {
	            this.stack.push(this.currentTag);
	        }
	        this.currentTag = new TagInfo(env, taggable, defaultTags);
	    };
	    Object.defineProperty(AbstractTags.prototype, "env", {
	        get: function () {
	            return this.currentTag.env;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractTags.prototype.end = function () {
	        this.history.push(this.currentTag);
	        this.currentTag = this.stack.pop();
	    };
	    AbstractTags.prototype.tag = function (tag, noFormat) {
	        this.currentTag.tag = tag;
	        this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);
	        this.currentTag.noTag = false;
	    };
	    AbstractTags.prototype.notag = function () {
	        this.tag('', true);
	        this.currentTag.noTag = true;
	    };
	    Object.defineProperty(AbstractTags.prototype, "noTag", {
	        get: function () {
	            return this.currentTag.noTag;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AbstractTags.prototype, "label", {
	        get: function () {
	            return this.currentTag.labelId;
	        },
	        set: function (label) {
	            this.currentTag.labelId = label;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractTags.prototype.formatUrl = function (id, base) {
	        return base + '#' + encodeURIComponent(id);
	    };
	    AbstractTags.prototype.formatTag = function (tag) {
	        return '(' + tag + ')';
	    };
	    AbstractTags.prototype.formatId = function (id) {
	        return 'mjx-eqn-' + id.replace(/\s/g, '_');
	    };
	    AbstractTags.prototype.formatNumber = function (n) {
	        return n.toString();
	    };
	    AbstractTags.prototype.autoTag = function () {
	        if (this.currentTag.tag == null) {
	            this.counter++;
	            this.tag(this.formatNumber(this.counter), false);
	        }
	    };
	    AbstractTags.prototype.clearTag = function () {
	        this.label = '';
	        this.tag(null, true);
	        this.currentTag.tagId = '';
	    };
	    AbstractTags.prototype.getTag = function (force) {
	        if (force === void 0) { force = false; }
	        if (force) {
	            this.autoTag();
	            return this.makeTag();
	        }
	        var ct = this.currentTag;
	        if (ct.taggable && !ct.noTag) {
	            if (ct.defaultTags) {
	                this.autoTag();
	            }
	            if (ct.tag) {
	                return this.makeTag();
	            }
	        }
	        return null;
	    };
	    AbstractTags.prototype.resetTag = function () {
	        this.history = [];
	        this.redo = false;
	        this.refUpdate = false;
	        this.clearTag();
	    };
	    AbstractTags.prototype.reset = function (offset) {
	        if (offset === void 0) { offset = 0; }
	        this.resetTag();
	        this.counter = this.allCounter = offset;
	        this.allLabels = {};
	        this.allIds = {};
	    };
	    AbstractTags.prototype.startEquation = function (math) {
	        this.labels = {};
	        this.ids = {};
	        this.counter = this.allCounter;
	        this.redo = false;
	        var recompile = math.inputData.recompile;
	        if (recompile) {
	            this.refUpdate = true;
	            this.counter = recompile.counter;
	        }
	    };
	    AbstractTags.prototype.finishEquation = function (math) {
	        if (this.redo) {
	            math.inputData.recompile = {
	                state: math.state(),
	                counter: this.allCounter
	            };
	        }
	        if (!this.refUpdate) {
	            this.allCounter = this.counter;
	        }
	        Object.assign(this.allIds, this.ids);
	        Object.assign(this.allLabels, this.labels);
	    };
	    AbstractTags.prototype.finalize = function (node, env) {
	        if (!env.display || this.currentTag.env ||
	            this.currentTag.tag == null) {
	            return node;
	        }
	        var tag = this.makeTag();
	        var table = this.enTag(node, tag);
	        return table;
	    };
	    AbstractTags.prototype.makeId = function () {
	        this.currentTag.tagId = this.formatId(this.configuration.options['useLabelIds'] ?
	            (this.label || this.currentTag.tag) : this.currentTag.tag);
	    };
	    AbstractTags.prototype.makeTag = function () {
	        this.makeId();
	        if (this.label) {
	            this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);
	        }
	        var mml = new TexParser_js_1.default('\\text{' + this.currentTag.tagFormat + '}', {}, this.configuration).mml();
	        return this.configuration.nodeFactory.create('node', 'mtd', [mml], { id: this.currentTag.tagId });
	    };
	    return AbstractTags;
	}());
	exports.AbstractTags = AbstractTags;
	;
	var NoTags = (function (_super) {
	    __extends(NoTags, _super);
	    function NoTags() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    NoTags.prototype.autoTag = function () { };
	    NoTags.prototype.getTag = function () {
	        return !this.currentTag.tag ? null : _super.prototype.getTag.call(this);
	    };
	    return NoTags;
	}(AbstractTags));
	exports.NoTags = NoTags;
	var AllTags = (function (_super) {
	    __extends(AllTags, _super);
	    function AllTags() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    AllTags.prototype.finalize = function (node, env) {
	        if (!env.display || this.history.find(function (x) { return x.taggable; })) {
	            return node;
	        }
	        var tag = this.getTag(true);
	        return this.enTag(node, tag);
	    };
	    return AllTags;
	}(AbstractTags));
	exports.AllTags = AllTags;
	var TagsFactory;
	(function (TagsFactory) {
	    var tagsMapping = new Map([
	        ['none', NoTags],
	        ['all', AllTags]
	    ]);
	    var defaultTags = 'none';
	    TagsFactory.OPTIONS = {
	        tags: defaultTags,
	        tagSide: 'right',
	        tagIndent: '0.8em',
	        multlineWidth: '85%',
	        useLabelIds: true,
	        ignoreDuplicateLabels: false
	    };
	    TagsFactory.add = function (name, constr) {
	        tagsMapping.set(name, constr);
	    };
	    TagsFactory.addTags = function (tags) {
	        var e_1, _a;
	        try {
	            for (var _b = __values(Object.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var key = _c.value;
	                TagsFactory.add(key, tags[key]);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    TagsFactory.create = function (name) {
	        var constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);
	        if (!constr) {
	            throw Error('Unknown tags class');
	        }
	        return new constr();
	    };
	    TagsFactory.setDefault = function (name) {
	        defaultTags = name;
	    };
	    TagsFactory.getDefault = function () {
	        return TagsFactory.create(defaultTags);
	    };
	})(TagsFactory = exports.TagsFactory || (exports.TagsFactory = {}));
	//# sourceMappingURL=Tags.js.map

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var ParseMethods_js_1 = __webpack_require__(188);
	var MapHandler_js_1 = __webpack_require__(184);
	var Options_js_1 = __webpack_require__(160);
	var sm = __webpack_require__(190);
	var MapHandler_js_2 = __webpack_require__(184);
	var FunctionList_js_1 = __webpack_require__(161);
	var Configuration = (function () {
	    function Configuration(name, handler, fallback, items, tags, options, nodes, preprocessors, postprocessors, _a, _b) {
	        if (handler === void 0) { handler = {}; }
	        if (fallback === void 0) { fallback = {}; }
	        if (items === void 0) { items = {}; }
	        if (tags === void 0) { tags = {}; }
	        if (options === void 0) { options = {}; }
	        if (nodes === void 0) { nodes = {}; }
	        if (preprocessors === void 0) { preprocessors = []; }
	        if (postprocessors === void 0) { postprocessors = []; }
	        var _c = __read(_a, 2), init = _c[0], priority = _c[1];
	        var _d = __read(_b, 2), config = _d[0], configPriority = _d[1];
	        this.name = name;
	        this.handler = handler;
	        this.fallback = fallback;
	        this.items = items;
	        this.tags = tags;
	        this.options = options;
	        this.nodes = nodes;
	        this.preprocessors = preprocessors;
	        this.postprocessors = postprocessors;
	        this.initMethod = new FunctionList_js_1.FunctionList();
	        this.configMethod = new FunctionList_js_1.FunctionList();
	        if (init) {
	            this.initMethod.add(init, priority || 0);
	        }
	        if (config) {
	            this.configMethod.add(config, configPriority || priority || 0);
	        }
	        this.handler = Object.assign({ character: [], delimiter: [], macro: [], environment: [] }, handler);
	        ConfigurationHandler.set(name, this);
	    }
	    Configuration.create = function (name, config) {
	        if (config === void 0) { config = {}; }
	        return new Configuration(name, config.handler || {}, config.fallback || {}, config.items || {}, config.tags || {}, config.options || {}, config.nodes || {}, config.preprocessors || [], config.postprocessors || [], [config.init, config.priority], [config.config, config.configPriority]);
	    };
	    Configuration.empty = function () {
	        return Configuration.create('empty');
	    };
	    ;
	    Configuration.extension = function () {
	        new sm.MacroMap(MapHandler_js_1.ExtensionMaps.NEW_MACRO, {}, {});
	        new sm.DelimiterMap(MapHandler_js_1.ExtensionMaps.NEW_DELIMITER, ParseMethods_js_1.default.delimiter, {});
	        new sm.CommandMap(MapHandler_js_1.ExtensionMaps.NEW_COMMAND, {}, {});
	        new sm.EnvironmentMap(MapHandler_js_1.ExtensionMaps.NEW_ENVIRONMENT, ParseMethods_js_1.default.environment, {}, {});
	        return Configuration.create('extension', { handler: { character: [],
	                delimiter: [MapHandler_js_1.ExtensionMaps.NEW_DELIMITER],
	                macro: [MapHandler_js_1.ExtensionMaps.NEW_DELIMITER,
	                    MapHandler_js_1.ExtensionMaps.NEW_COMMAND,
	                    MapHandler_js_1.ExtensionMaps.NEW_MACRO],
	                environment: [MapHandler_js_1.ExtensionMaps.NEW_ENVIRONMENT]
	            } });
	    };
	    ;
	    Configuration.prototype.init = function (configuration) {
	        this.initMethod.execute(configuration);
	    };
	    Configuration.prototype.config = function (configuration, jax) {
	        var e_1, _a, e_2, _b;
	        this.configMethod.execute(configuration, jax);
	        try {
	            for (var _c = __values(this.preprocessors), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var pre = _d.value;
	                typeof pre === 'function' ? jax.preFilters.add(pre) :
	                    jax.preFilters.add(pre[0], pre[1]);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        try {
	            for (var _e = __values(this.postprocessors), _f = _e.next(); !_f.done; _f = _e.next()) {
	                var post = _f.value;
	                typeof post === 'function' ? jax.postFilters.add(post) :
	                    jax.postFilters.add(post[0], post[1]);
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    Configuration.prototype.append = function (config) {
	        var e_3, _a, e_4, _b, e_5, _c, e_6, _d, e_7, _e, e_8, _f;
	        var handlers = Object.keys(config.handler);
	        try {
	            for (var handlers_1 = __values(handlers), handlers_1_1 = handlers_1.next(); !handlers_1_1.done; handlers_1_1 = handlers_1.next()) {
	                var key = handlers_1_1.value;
	                try {
	                    for (var _g = (e_4 = void 0, __values(config.handler[key])), _h = _g.next(); !_h.done; _h = _g.next()) {
	                        var map = _h.value;
	                        this.handler[key].unshift(map);
	                    }
	                }
	                catch (e_4_1) { e_4 = { error: e_4_1 }; }
	                finally {
	                    try {
	                        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
	                    }
	                    finally { if (e_4) throw e_4.error; }
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (handlers_1_1 && !handlers_1_1.done && (_a = handlers_1.return)) _a.call(handlers_1);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        Object.assign(this.fallback, config.fallback);
	        Object.assign(this.items, config.items);
	        Object.assign(this.tags, config.tags);
	        Options_js_1.defaultOptions(this.options, config.options);
	        Object.assign(this.nodes, config.nodes);
	        try {
	            for (var _j = __values(config.preprocessors), _k = _j.next(); !_k.done; _k = _j.next()) {
	                var pre = _k.value;
	                this.preprocessors.push(pre);
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	        ;
	        try {
	            for (var _l = __values(config.postprocessors), _m = _l.next(); !_m.done; _m = _l.next()) {
	                var post = _m.value;
	                this.postprocessors.push(post);
	            }
	        }
	        catch (e_6_1) { e_6 = { error: e_6_1 }; }
	        finally {
	            try {
	                if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
	            }
	            finally { if (e_6) throw e_6.error; }
	        }
	        ;
	        try {
	            for (var _o = __values(config.initMethod), _p = _o.next(); !_p.done; _p = _o.next()) {
	                var init = _p.value;
	                this.initMethod.add(init.item, init.priority);
	            }
	        }
	        catch (e_7_1) { e_7 = { error: e_7_1 }; }
	        finally {
	            try {
	                if (_p && !_p.done && (_e = _o.return)) _e.call(_o);
	            }
	            finally { if (e_7) throw e_7.error; }
	        }
	        ;
	        try {
	            for (var _q = __values(config.configMethod), _r = _q.next(); !_r.done; _r = _q.next()) {
	                var init = _r.value;
	                this.configMethod.add(init.item, init.priority);
	            }
	        }
	        catch (e_8_1) { e_8 = { error: e_8_1 }; }
	        finally {
	            try {
	                if (_r && !_r.done && (_f = _q.return)) _f.call(_q);
	            }
	            finally { if (e_8) throw e_8.error; }
	        }
	        ;
	    };
	    Configuration.prototype.register = function (config, jax, options) {
	        var e_9, _a;
	        if (options === void 0) { options = {}; }
	        this.append(config);
	        config.init(this);
	        var parser = jax.parseOptions;
	        parser.handlers = new MapHandler_js_2.SubHandlers(this);
	        parser.nodeFactory.setCreators(config.nodes);
	        try {
	            for (var _b = __values(Object.keys(config.items)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var kind = _c.value;
	                parser.itemFactory.setNodeClass(kind, config.items[kind]);
	            }
	        }
	        catch (e_9_1) { e_9 = { error: e_9_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_9) throw e_9.error; }
	        }
	        Options_js_1.defaultOptions(parser.options, config.options);
	        Options_js_1.userOptions(parser.options, options);
	        config.config(this, jax);
	    };
	    return Configuration;
	}());
	exports.Configuration = Configuration;
	;
	var ConfigurationHandler;
	(function (ConfigurationHandler) {
	    var maps = new Map();
	    ConfigurationHandler.set = function (name, map) {
	        maps.set(name, map);
	    };
	    ConfigurationHandler.get = function (name) {
	        return maps.get(name);
	    };
	    ConfigurationHandler.keys = function () {
	        return maps.keys();
	    };
	})(ConfigurationHandler = exports.ConfigurationHandler || (exports.ConfigurationHandler = {}));
	//# sourceMappingURL=Configuration.js.map

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var NodeUtil_js_1 = __webpack_require__(170);
	var TexConstants_js_1 = __webpack_require__(189);
	var ParseUtil_js_1 = __webpack_require__(174);
	var ParseMethods;
	(function (ParseMethods) {
	    function variable(parser, c) {
	        var def = ParseUtil_js_1.default.getFontDef(parser);
	        var node = parser.create('token', 'mi', def, c);
	        parser.Push(node);
	    }
	    ParseMethods.variable = variable;
	    ;
	    function digit(parser, c) {
	        var mml;
	        var pattern = parser.configuration.options['digits'];
	        var n = parser.string.slice(parser.i - 1).match(pattern);
	        var def = ParseUtil_js_1.default.getFontDef(parser);
	        if (n) {
	            mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));
	            parser.i += n[0].length - 1;
	        }
	        else {
	            mml = parser.create('token', 'mo', def, c);
	        }
	        parser.Push(mml);
	    }
	    ParseMethods.digit = digit;
	    ;
	    function controlSequence(parser, c) {
	        var name = parser.GetCS();
	        parser.parse('macro', [parser, name]);
	    }
	    ParseMethods.controlSequence = controlSequence;
	    ;
	    function mathchar0mi(parser, mchar) {
	        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC };
	        var node = parser.create('token', 'mi', def, mchar.char);
	        parser.Push(node);
	    }
	    ParseMethods.mathchar0mi = mathchar0mi;
	    ;
	    function mathchar0mo(parser, mchar) {
	        var def = mchar.attributes || {};
	        def['stretchy'] = false;
	        var node = parser.create('token', 'mo', def, mchar.char);
	        NodeUtil_js_1.default.setProperty(node, 'fixStretchy', true);
	        parser.configuration.addNode('fixStretchy', node);
	        parser.Push(node);
	    }
	    ParseMethods.mathchar0mo = mathchar0mo;
	    ;
	    function mathchar7(parser, mchar) {
	        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL };
	        if (parser.stack.env['font']) {
	            def['mathvariant'] = parser.stack.env['font'];
	        }
	        var node = parser.create('token', 'mi', def, mchar.char);
	        parser.Push(node);
	    }
	    ParseMethods.mathchar7 = mathchar7;
	    ;
	    function delimiter(parser, delim) {
	        var def = delim.attributes || {};
	        def = Object.assign({ fence: false, stretchy: false }, def);
	        var node = parser.create('token', 'mo', def, delim.char);
	        parser.Push(node);
	    }
	    ParseMethods.delimiter = delimiter;
	    ;
	    function environment(parser, env, func, args) {
	        var end = args[0];
	        var mml = parser.itemFactory.create('begin').setProperties({ name: env, end: end });
	        mml = func.apply(void 0, __spread([parser, mml], args.slice(1)));
	        parser.Push(mml);
	    }
	    ParseMethods.environment = environment;
	    ;
	})(ParseMethods || (ParseMethods = {}));
	exports.default = ParseMethods;
	//# sourceMappingURL=ParseMethods.js.map

/***/ }),
/* 189 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexConstant;
	(function (TexConstant) {
	    TexConstant.Variant = {
	        NORMAL: 'normal',
	        BOLD: 'bold',
	        ITALIC: 'italic',
	        BOLDITALIC: 'bold-italic',
	        DOUBLESTRUCK: 'double-struck',
	        FRAKTUR: 'fraktur',
	        BOLDFRAKTUR: 'bold-fraktur',
	        SCRIPT: 'script',
	        BOLDSCRIPT: 'bold-script',
	        SANSSERIF: 'sans-serif',
	        BOLDSANSSERIF: 'bold-sans-serif',
	        SANSSERIFITALIC: 'sans-serif-italic',
	        SANSSERIFBOLDITALIC: 'sans-serif-bold-italic',
	        MONOSPACE: 'monospace',
	        INITIAL: 'inital',
	        TAILED: 'tailed',
	        LOOPED: 'looped',
	        STRETCHED: 'stretched',
	        CALLIGRAPHIC: '-tex-calligraphic',
	        OLDSTYLE: '-tex-oldstyle'
	    };
	    TexConstant.Form = {
	        PREFIX: 'prefix',
	        INFIX: 'infix',
	        POSTFIX: 'postfix'
	    };
	    TexConstant.LineBreak = {
	        AUTO: 'auto',
	        NEWLINE: 'newline',
	        NOBREAK: 'nobreak',
	        GOODBREAK: 'goodbreak',
	        BADBREAK: 'badbreak'
	    };
	    TexConstant.LineBreakStyle = {
	        BEFORE: 'before',
	        AFTER: 'after',
	        DUPLICATE: 'duplicate',
	        INFIXLINBREAKSTYLE: 'infixlinebreakstyle'
	    };
	    TexConstant.IndentAlign = {
	        LEFT: 'left',
	        CENTER: 'center',
	        RIGHT: 'right',
	        AUTO: 'auto',
	        ID: 'id',
	        INDENTALIGN: 'indentalign'
	    };
	    TexConstant.IndentShift = {
	        INDENTSHIFT: 'indentshift'
	    };
	    TexConstant.LineThickness = {
	        THIN: 'thin',
	        MEDIUM: 'medium',
	        THICK: 'thick'
	    };
	    TexConstant.Notation = {
	        LONGDIV: 'longdiv',
	        ACTUARIAL: 'actuarial',
	        PHASORANGLE: 'phasorangle',
	        RADICAL: 'radical',
	        BOX: 'box',
	        ROUNDEDBOX: 'roundedbox',
	        CIRCLE: 'circle',
	        LEFT: 'left',
	        RIGHT: 'right',
	        TOP: 'top',
	        BOTTOM: 'bottom',
	        UPDIAGONALSTRIKE: 'updiagonalstrike',
	        DOWNDIAGONALSTRIKE: 'downdiagonalstrike',
	        VERTICALSTRIKE: 'verticalstrike',
	        HORIZONTALSTRIKE: 'horizontalstrike',
	        NORTHEASTARROW: 'northeastarrow',
	        MADRUWB: 'madruwb',
	        UPDIAGONALARROW: 'updiagonalarrow'
	    };
	    TexConstant.Align = {
	        TOP: 'top',
	        BOTTOM: 'bottom',
	        CENTER: 'center',
	        BASELINE: 'baseline',
	        AXIS: 'axis',
	        LEFT: 'left',
	        RIGHT: 'right'
	    };
	    TexConstant.Lines = {
	        NONE: 'none',
	        SOLID: 'solid',
	        DASHED: 'dashed'
	    };
	    TexConstant.Side = {
	        LEFT: 'left',
	        RIGHT: 'right',
	        LEFTOVERLAP: 'leftoverlap',
	        RIGHTOVERLAP: 'rightoverlap'
	    };
	    TexConstant.Width = {
	        AUTO: 'auto',
	        FIT: 'fit'
	    };
	    TexConstant.Actiontype = {
	        TOGGLE: 'toggle',
	        STATUSLINE: 'statusline',
	        TOOLTIP: 'tooltip',
	        INPUT: 'input'
	    };
	    TexConstant.Length = {
	        VERYVERYTHINMATHSPACE: 'veryverythinmathspace',
	        VERYTHINMATHSPACE: 'verythinmathspace',
	        THINMATHSPACE: 'thinmathspace',
	        MEDIUMMATHSPACE: 'mediummathspace',
	        THICKMATHSPACE: 'thickmathspace',
	        VERYTHICKMATHSPACE: 'verythickmathspace',
	        VERYVERYTHICKMATHSPACE: 'veryverythickmathspace',
	        NEGATIVEVERYVERYTHINMATHSPACE: 'negativeveryverythinmathspace',
	        NEGATIVEVERYTHINMATHSPACE: 'negativeverythinmathspace',
	        NEGATIVETHINMATHSPACE: 'negativethinmathspace',
	        NEGATIVEMEDIUMMATHSPACE: 'negativemediummathspace',
	        NEGATIVETHICKMATHSPACE: 'negativethickmathspace',
	        NEGATIVEVERYTHICKMATHSPACE: 'negativeverythickmathspace',
	        NEGATIVEVERYVERYTHICKMATHSPACE: 'negativeveryverythickmathspace'
	    };
	    TexConstant.Overflow = {
	        LINBREAK: 'linebreak',
	        SCROLL: 'scroll',
	        ELIDE: 'elide',
	        TRUNCATE: 'truncate',
	        SCALE: 'scale'
	    };
	    TexConstant.Unit = {
	        EM: 'em',
	        EX: 'ex',
	        PX: 'px',
	        IN: 'in',
	        CM: 'cm',
	        MM: 'mm',
	        PT: 'pt',
	        PC: 'pc'
	    };
	})(TexConstant = exports.TexConstant || (exports.TexConstant = {}));
	//# sourceMappingURL=TexConstants.js.map

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Symbol_js_1 = __webpack_require__(191);
	var MapHandler_js_1 = __webpack_require__(184);
	var AbstractSymbolMap = (function () {
	    function AbstractSymbolMap(_name, _parser) {
	        this._name = _name;
	        this._parser = _parser;
	        MapHandler_js_1.MapHandler.register(this);
	    }
	    ;
	    Object.defineProperty(AbstractSymbolMap.prototype, "name", {
	        get: function () {
	            return this._name;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractSymbolMap.prototype.parserFor = function (symbol) {
	        return this.contains(symbol) ? this.parser : null;
	    };
	    AbstractSymbolMap.prototype.parse = function (_a) {
	        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
	        var parser = this.parserFor(symbol);
	        var mapped = this.lookup(symbol);
	        return (parser && mapped) ?
	            parser(env, mapped) || true : null;
	    };
	    Object.defineProperty(AbstractSymbolMap.prototype, "parser", {
	        get: function () {
	            return this._parser;
	        },
	        set: function (parser) {
	            this._parser = parser;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return AbstractSymbolMap;
	}());
	exports.AbstractSymbolMap = AbstractSymbolMap;
	var RegExpMap = (function (_super) {
	    __extends(RegExpMap, _super);
	    function RegExpMap(name, parser, _regExp) {
	        var _this = _super.call(this, name, parser) || this;
	        _this._regExp = _regExp;
	        return _this;
	    }
	    ;
	    RegExpMap.prototype.contains = function (symbol) {
	        return this._regExp.test(symbol);
	    };
	    RegExpMap.prototype.lookup = function (symbol) {
	        return this.contains(symbol) ? symbol : null;
	    };
	    return RegExpMap;
	}(AbstractSymbolMap));
	exports.RegExpMap = RegExpMap;
	var AbstractParseMap = (function (_super) {
	    __extends(AbstractParseMap, _super);
	    function AbstractParseMap() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.map = new Map();
	        return _this;
	    }
	    AbstractParseMap.prototype.lookup = function (symbol) {
	        return this.map.get(symbol);
	    };
	    AbstractParseMap.prototype.contains = function (symbol) {
	        return this.map.has(symbol);
	    };
	    AbstractParseMap.prototype.add = function (symbol, object) {
	        this.map.set(symbol, object);
	    };
	    return AbstractParseMap;
	}(AbstractSymbolMap));
	exports.AbstractParseMap = AbstractParseMap;
	var CharacterMap = (function (_super) {
	    __extends(CharacterMap, _super);
	    function CharacterMap(name, parser, json) {
	        var e_1, _a;
	        var _this = _super.call(this, name, parser) || this;
	        try {
	            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var key = _c.value;
	                var value = json[key];
	                var _d = __read((typeof (value) === 'string') ? [value, null] : value, 2), char = _d[0], attrs = _d[1];
	                var character = new Symbol_js_1.Symbol(key, char, attrs);
	                _this.add(key, character);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return _this;
	    }
	    ;
	    return CharacterMap;
	}(AbstractParseMap));
	exports.CharacterMap = CharacterMap;
	var DelimiterMap = (function (_super) {
	    __extends(DelimiterMap, _super);
	    function DelimiterMap() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    DelimiterMap.prototype.parse = function (_a) {
	        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
	        return _super.prototype.parse.call(this, [env, '\\' + symbol]);
	    };
	    return DelimiterMap;
	}(CharacterMap));
	exports.DelimiterMap = DelimiterMap;
	var MacroMap = (function (_super) {
	    __extends(MacroMap, _super);
	    function MacroMap(name, json, functionMap) {
	        var e_2, _a;
	        var _this = _super.call(this, name, null) || this;
	        try {
	            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var key = _c.value;
	                var value = json[key];
	                var _d = __read((typeof (value) === 'string') ? [value] : value), func = _d[0], attrs = _d.slice(1);
	                var character = new Symbol_js_1.Macro(key, functionMap[func], attrs);
	                _this.add(key, character);
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        return _this;
	    }
	    ;
	    MacroMap.prototype.parserFor = function (symbol) {
	        var macro = this.lookup(symbol);
	        return macro ? macro.func : null;
	    };
	    MacroMap.prototype.parse = function (_a) {
	        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
	        var macro = this.lookup(symbol);
	        var parser = this.parserFor(symbol);
	        if (!macro || !parser) {
	            return null;
	        }
	        return parser.apply(void 0, __spread([env, macro.symbol], macro.args)) || true;
	    };
	    return MacroMap;
	}(AbstractParseMap));
	exports.MacroMap = MacroMap;
	var CommandMap = (function (_super) {
	    __extends(CommandMap, _super);
	    function CommandMap() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CommandMap.prototype.parse = function (_a) {
	        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
	        var macro = this.lookup(symbol);
	        var parser = this.parserFor(symbol);
	        if (!macro || !parser) {
	            return null;
	        }
	        var args = ['\\' + macro.symbol].concat(macro.args);
	        if (!parser) {
	            return null;
	        }
	        var saveCommand = env.currentCS;
	        env.currentCS = '\\' + symbol;
	        var result = parser.apply(void 0, __spread([env, '\\' + macro.symbol], macro.args));
	        env.currentCS = saveCommand;
	        return result || true;
	    };
	    return CommandMap;
	}(MacroMap));
	exports.CommandMap = CommandMap;
	var EnvironmentMap = (function (_super) {
	    __extends(EnvironmentMap, _super);
	    function EnvironmentMap(name, parser, json, functionMap) {
	        var _this = _super.call(this, name, json, functionMap) || this;
	        _this.parser = parser;
	        return _this;
	    }
	    ;
	    EnvironmentMap.prototype.parse = function (_a) {
	        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];
	        var macro = this.lookup(symbol);
	        var envParser = this.parserFor(symbol);
	        if (!macro || !envParser) {
	            return null;
	        }
	        this.parser(env, macro.symbol, envParser, macro.args);
	        return true;
	    };
	    return EnvironmentMap;
	}(MacroMap));
	exports.EnvironmentMap = EnvironmentMap;
	//# sourceMappingURL=SymbolMap.js.map

/***/ }),
/* 191 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Symbol = (function () {
	    function Symbol(_symbol, _char, _attributes) {
	        this._symbol = _symbol;
	        this._char = _char;
	        this._attributes = _attributes;
	    }
	    Object.defineProperty(Symbol.prototype, "symbol", {
	        get: function () {
	            return this._symbol;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Symbol.prototype, "char", {
	        get: function () {
	            return this._char;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Symbol.prototype, "attributes", {
	        get: function () {
	            return this._attributes;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Symbol;
	}());
	exports.Symbol = Symbol;
	;
	var Macro = (function () {
	    function Macro(_symbol, _func, _args) {
	        if (_args === void 0) { _args = []; }
	        this._symbol = _symbol;
	        this._func = _func;
	        this._args = _args;
	    }
	    Object.defineProperty(Macro.prototype, "symbol", {
	        get: function () {
	            return this._symbol;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Macro.prototype, "func", {
	        get: function () {
	            return this._func;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Macro.prototype, "args", {
	        get: function () {
	            return this._args;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Macro;
	}());
	exports.Macro = Macro;
	;
	//# sourceMappingURL=Symbol.js.map

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var MapHandler_js_1 = __webpack_require__(184);
	var TexError_js_1 = __webpack_require__(175);
	var NodeUtil_js_1 = __webpack_require__(170);
	var SymbolMap_js_1 = __webpack_require__(190);
	var bitem = __webpack_require__(193);
	var Tags_js_1 = __webpack_require__(186);
	__webpack_require__(194);
	new SymbolMap_js_1.CharacterMap('remap', null, {
	    '-': '\u2212',
	    '*': '\u2217',
	    '`': '\u2018'
	});
	function Other(parser, char) {
	    var font = parser.stack.env['font'];
	    var def = font ?
	        { mathvariant: parser.stack.env['font'] } : {};
	    var remap = MapHandler_js_1.MapHandler.getMap('remap').
	        lookup(char);
	    var mo = parser.create('token', 'mo', def, (remap ? remap.char : char));
	    NodeUtil_js_1.default.setProperty(mo, 'fixStretchy', true);
	    parser.configuration.addNode('fixStretchy', mo);
	    parser.Push(mo);
	}
	exports.Other = Other;
	;
	function csUndefined(parser, name) {
	    throw new TexError_js_1.default('UndefinedControlSequence', 'Undefined control sequence %1', '\\' + name);
	}
	;
	function envUndefined(parser, env) {
	    throw new TexError_js_1.default('UnknownEnv', 'Unknown environment \'%1\'', env);
	}
	;
	var BaseTags = (function (_super) {
	    __extends(BaseTags, _super);
	    function BaseTags() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    return BaseTags;
	}(Tags_js_1.AbstractTags));
	exports.BaseTags = BaseTags;
	exports.BaseConfiguration = Configuration_js_1.Configuration.create('base', { handler: {
	        character: ['command', 'special', 'letter', 'digit'],
	        delimiter: ['delimiter'],
	        macro: ['delimiter', 'macros', 'mathchar0mi', 'mathchar0mo', 'mathchar7'],
	        environment: ['environment']
	    },
	    fallback: {
	        character: Other,
	        macro: csUndefined,
	        environment: envUndefined
	    },
	    items: (_a = {},
	        _a[bitem.StartItem.prototype.kind] = bitem.StartItem,
	        _a[bitem.StopItem.prototype.kind] = bitem.StopItem,
	        _a[bitem.OpenItem.prototype.kind] = bitem.OpenItem,
	        _a[bitem.CloseItem.prototype.kind] = bitem.CloseItem,
	        _a[bitem.PrimeItem.prototype.kind] = bitem.PrimeItem,
	        _a[bitem.SubsupItem.prototype.kind] = bitem.SubsupItem,
	        _a[bitem.OverItem.prototype.kind] = bitem.OverItem,
	        _a[bitem.LeftItem.prototype.kind] = bitem.LeftItem,
	        _a[bitem.RightItem.prototype.kind] = bitem.RightItem,
	        _a[bitem.BeginItem.prototype.kind] = bitem.BeginItem,
	        _a[bitem.EndItem.prototype.kind] = bitem.EndItem,
	        _a[bitem.StyleItem.prototype.kind] = bitem.StyleItem,
	        _a[bitem.PositionItem.prototype.kind] = bitem.PositionItem,
	        _a[bitem.CellItem.prototype.kind] = bitem.CellItem,
	        _a[bitem.MmlItem.prototype.kind] = bitem.MmlItem,
	        _a[bitem.FnItem.prototype.kind] = bitem.FnItem,
	        _a[bitem.NotItem.prototype.kind] = bitem.NotItem,
	        _a[bitem.DotsItem.prototype.kind] = bitem.DotsItem,
	        _a[bitem.ArrayItem.prototype.kind] = bitem.ArrayItem,
	        _a[bitem.EqnArrayItem.prototype.kind] = bitem.EqnArrayItem,
	        _a[bitem.EquationItem.prototype.kind] = bitem.EquationItem,
	        _a),
	    options: { maxMacros: 1000,
	        baseURL: (typeof (document) === 'undefined' ||
	            document.getElementsByTagName('base').length === 0) ?
	            '' : String(document.location).replace(/#.*$/, '')
	    },
	    tags: { base: BaseTags } });
	//# sourceMappingURL=BaseConfiguration.js.map

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MapHandler_js_1 = __webpack_require__(184);
	var Entities_js_1 = __webpack_require__(176);
	var MmlNode_js_1 = __webpack_require__(167);
	var TexError_js_1 = __webpack_require__(175);
	var ParseUtil_js_1 = __webpack_require__(174);
	var NodeUtil_js_1 = __webpack_require__(170);
	var StackItem_js_1 = __webpack_require__(182);
	var StartItem = (function (_super) {
	    __extends(StartItem, _super);
	    function StartItem(factory, global) {
	        var _this = _super.call(this, factory) || this;
	        _this.global = global;
	        return _this;
	    }
	    Object.defineProperty(StartItem.prototype, "kind", {
	        get: function () {
	            return 'start';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(StartItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    StartItem.prototype.checkItem = function (item) {
	        if (item.isKind('stop')) {
	            var node = this.toMml();
	            if (!this.global.isInner) {
	                node = this.factory.configuration.tags.finalize(node, this.env);
	            }
	            return [[this.factory.create('mml', node)], true];
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    return StartItem;
	}(StackItem_js_1.BaseItem));
	exports.StartItem = StartItem;
	var StopItem = (function (_super) {
	    __extends(StopItem, _super);
	    function StopItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(StopItem.prototype, "kind", {
	        get: function () {
	            return 'stop';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(StopItem.prototype, "isClose", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return StopItem;
	}(StackItem_js_1.BaseItem));
	exports.StopItem = StopItem;
	var OpenItem = (function (_super) {
	    __extends(OpenItem, _super);
	    function OpenItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(OpenItem.prototype, "kind", {
	        get: function () {
	            return 'open';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(OpenItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    OpenItem.prototype.checkItem = function (item) {
	        if (item.isKind('close')) {
	            var mml = this.toMml();
	            var node = this.create('node', 'TeXAtom', [mml]);
	            return [[this.factory.create('mml', node)], true];
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    OpenItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
	        'stop': ['ExtraOpenMissingClose',
	            'Extra open brace or missing close brace']
	    });
	    return OpenItem;
	}(StackItem_js_1.BaseItem));
	exports.OpenItem = OpenItem;
	var CloseItem = (function (_super) {
	    __extends(CloseItem, _super);
	    function CloseItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(CloseItem.prototype, "kind", {
	        get: function () {
	            return 'close';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(CloseItem.prototype, "isClose", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return CloseItem;
	}(StackItem_js_1.BaseItem));
	exports.CloseItem = CloseItem;
	var PrimeItem = (function (_super) {
	    __extends(PrimeItem, _super);
	    function PrimeItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(PrimeItem.prototype, "kind", {
	        get: function () {
	            return 'prime';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    PrimeItem.prototype.checkItem = function (item) {
	        var _a = __read(this.Peek(2), 2), top0 = _a[0], top1 = _a[1];
	        if (!NodeUtil_js_1.default.isType(top0, 'msubsup') || NodeUtil_js_1.default.isType(top0, 'msup')) {
	            var node = this.create('node', 'msup', [top0, top1]);
	            return [[node, item], true];
	        }
	        NodeUtil_js_1.default.setChild(top0, top0.sup, top1);
	        return [[top0, item], true];
	    };
	    return PrimeItem;
	}(StackItem_js_1.BaseItem));
	exports.PrimeItem = PrimeItem;
	var SubsupItem = (function (_super) {
	    __extends(SubsupItem, _super);
	    function SubsupItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(SubsupItem.prototype, "kind", {
	        get: function () {
	            return 'subsup';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    SubsupItem.prototype.checkItem = function (item) {
	        if (item.isKind('open') || item.isKind('left')) {
	            return StackItem_js_1.BaseItem.success;
	        }
	        var top = this.First;
	        var position = this.getProperty('position');
	        if (item.isKind('mml')) {
	            if (this.getProperty('primes')) {
	                if (position !== 2) {
	                    NodeUtil_js_1.default.setChild(top, 2, this.getProperty('primes'));
	                }
	                else {
	                    NodeUtil_js_1.default.setProperty(this.getProperty('primes'), 'variantForm', true);
	                    var node = this.create('node', 'mrow', [this.getProperty('primes'), item.First]);
	                    item.First = node;
	                }
	            }
	            NodeUtil_js_1.default.setChild(top, position, item.First);
	            if (this.getProperty('movesupsub') != null) {
	                NodeUtil_js_1.default.setProperty(top, 'movesupsub', this.getProperty('movesupsub'));
	            }
	            var result = this.factory.create('mml', top);
	            return [[result], true];
	        }
	        if (_super.prototype.checkItem.call(this, item)[1]) {
	            var error = this.getErrors(['', 'sub', 'sup'][position]);
	            throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spread([void 0, error[0], error[1]], error.splice(2))))();
	        }
	    };
	    SubsupItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
	        'stop': ['MissingScript',
	            'Missing superscript or subscript argument'],
	        'sup': ['MissingOpenForSup',
	            'Missing open brace for superscript'],
	        'sub': ['MissingOpenForSub',
	            'Missing open brace for subscript']
	    });
	    return SubsupItem;
	}(StackItem_js_1.BaseItem));
	exports.SubsupItem = SubsupItem;
	var OverItem = (function (_super) {
	    __extends(OverItem, _super);
	    function OverItem(factory) {
	        var _this = _super.call(this, factory) || this;
	        _this.setProperty('name', '\\over');
	        return _this;
	    }
	    Object.defineProperty(OverItem.prototype, "kind", {
	        get: function () {
	            return 'over';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(OverItem.prototype, "isClose", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    OverItem.prototype.checkItem = function (item) {
	        if (item.isKind('over')) {
	            throw new TexError_js_1.default('AmbiguousUseOf', 'Ambiguous use of %1', item.getName());
	        }
	        if (item.isClose) {
	            var mml = this.create('node', 'mfrac', [this.getProperty('num'), this.toMml(false)]);
	            if (this.getProperty('thickness') != null) {
	                NodeUtil_js_1.default.setAttribute(mml, 'linethickness', this.getProperty('thickness'));
	            }
	            if (this.getProperty('open') || this.getProperty('close')) {
	                NodeUtil_js_1.default.setProperty(mml, 'withDelims', true);
	                mml = ParseUtil_js_1.default.fixedFence(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));
	            }
	            return [[this.factory.create('mml', mml), item], true];
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    OverItem.prototype.toString = function () {
	        return 'over[' + this.getProperty('num') +
	            ' / ' + this.nodes.join('; ') + ']';
	    };
	    return OverItem;
	}(StackItem_js_1.BaseItem));
	exports.OverItem = OverItem;
	var LeftItem = (function (_super) {
	    __extends(LeftItem, _super);
	    function LeftItem(factory) {
	        var _this = _super.call(this, factory) || this;
	        _this.setProperty('delim', '(');
	        return _this;
	    }
	    Object.defineProperty(LeftItem.prototype, "kind", {
	        get: function () {
	            return 'left';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(LeftItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    LeftItem.prototype.checkItem = function (item) {
	        if (item.isKind('right')) {
	            return [[this.factory.create('mml', ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('delim'), this.toMml(), item.getProperty('delim')))], true];
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    LeftItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {
	        'stop': ['ExtraLeftMissingRight',
	            'Extra \\left or missing \\right']
	    });
	    return LeftItem;
	}(StackItem_js_1.BaseItem));
	exports.LeftItem = LeftItem;
	var RightItem = (function (_super) {
	    __extends(RightItem, _super);
	    function RightItem(factory) {
	        var _this = _super.call(this, factory) || this;
	        _this.setProperty('delim', ')');
	        return _this;
	    }
	    Object.defineProperty(RightItem.prototype, "kind", {
	        get: function () {
	            return 'right';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(RightItem.prototype, "isClose", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return RightItem;
	}(StackItem_js_1.BaseItem));
	exports.RightItem = RightItem;
	var BeginItem = (function (_super) {
	    __extends(BeginItem, _super);
	    function BeginItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(BeginItem.prototype, "kind", {
	        get: function () {
	            return 'begin';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BeginItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BeginItem.prototype.checkItem = function (item) {
	        if (item.isKind('end')) {
	            if (item.getName() !== this.getName()) {
	                throw new TexError_js_1.default('EnvBadEnd', '\\begin{%1} ended with \\end{%2}', this.getName(), item.getName());
	            }
	            if (!this.getProperty('end')) {
	                return [[this.factory.create('mml', this.toMml())], true];
	            }
	            return StackItem_js_1.BaseItem.fail;
	        }
	        if (item.isKind('stop')) {
	            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    return BeginItem;
	}(StackItem_js_1.BaseItem));
	exports.BeginItem = BeginItem;
	var EndItem = (function (_super) {
	    __extends(EndItem, _super);
	    function EndItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(EndItem.prototype, "kind", {
	        get: function () {
	            return 'end';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EndItem.prototype, "isClose", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return EndItem;
	}(StackItem_js_1.BaseItem));
	exports.EndItem = EndItem;
	var StyleItem = (function (_super) {
	    __extends(StyleItem, _super);
	    function StyleItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(StyleItem.prototype, "kind", {
	        get: function () {
	            return 'style';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    StyleItem.prototype.checkItem = function (item) {
	        if (!item.isClose) {
	            return _super.prototype.checkItem.call(this, item);
	        }
	        var mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));
	        return [[this.factory.create('mml', mml), item], true];
	    };
	    return StyleItem;
	}(StackItem_js_1.BaseItem));
	exports.StyleItem = StyleItem;
	var PositionItem = (function (_super) {
	    __extends(PositionItem, _super);
	    function PositionItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(PositionItem.prototype, "kind", {
	        get: function () {
	            return 'position';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    PositionItem.prototype.checkItem = function (item) {
	        if (item.isClose) {
	            throw new TexError_js_1.default('MissingBoxFor', 'Missing box for %1', this.getName());
	        }
	        if (item.isFinal) {
	            var mml = item.toMml();
	            switch (this.getProperty('move')) {
	                case 'vertical':
	                    mml = this.create('node', 'mpadded', [mml], { height: this.getProperty('dh'),
	                        depth: this.getProperty('dd'),
	                        voffset: this.getProperty('dh') });
	                    return [[this.factory.create('mml', mml)], true];
	                case 'horizontal':
	                    return [[this.factory.create('mml', this.getProperty('left')), item,
	                            this.factory.create('mml', this.getProperty('right'))], true];
	            }
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    return PositionItem;
	}(StackItem_js_1.BaseItem));
	exports.PositionItem = PositionItem;
	var CellItem = (function (_super) {
	    __extends(CellItem, _super);
	    function CellItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(CellItem.prototype, "kind", {
	        get: function () {
	            return 'cell';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(CellItem.prototype, "isClose", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return CellItem;
	}(StackItem_js_1.BaseItem));
	exports.CellItem = CellItem;
	var MmlItem = (function (_super) {
	    __extends(MmlItem, _super);
	    function MmlItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlItem.prototype, "isFinal", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlItem.prototype, "kind", {
	        get: function () {
	            return 'mml';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return MmlItem;
	}(StackItem_js_1.BaseItem));
	exports.MmlItem = MmlItem;
	var FnItem = (function (_super) {
	    __extends(FnItem, _super);
	    function FnItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(FnItem.prototype, "kind", {
	        get: function () {
	            return 'fn';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    FnItem.prototype.checkItem = function (item) {
	        var top = this.First;
	        if (top) {
	            if (item.isOpen) {
	                return StackItem_js_1.BaseItem.success;
	            }
	            if (!item.isKind('fn')) {
	                var mml = item.First;
	                if (!item.isKind('mml') || !mml) {
	                    return [[top, item], true];
	                }
	                if ((NodeUtil_js_1.default.isType(mml, 'mstyle') && mml.childNodes.length &&
	                    NodeUtil_js_1.default.isType(mml.childNodes[0].childNodes[0], 'mspace')) ||
	                    NodeUtil_js_1.default.isType(mml, 'mspace')) {
	                    return [[top, item], true];
	                }
	                if (NodeUtil_js_1.default.isEmbellished(mml)) {
	                    mml = NodeUtil_js_1.default.getCoreMO(mml);
	                }
	                var form = NodeUtil_js_1.default.getForm(mml);
	                if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {
	                    return [[top, item], true];
	                }
	            }
	            var node = this.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.NONE }, Entities_js_1.entities.ApplyFunction);
	            return [[top, node, item], true];
	        }
	        return _super.prototype.checkItem.apply(this, arguments);
	    };
	    return FnItem;
	}(StackItem_js_1.BaseItem));
	exports.FnItem = FnItem;
	var NotItem = (function (_super) {
	    __extends(NotItem, _super);
	    function NotItem() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.remap = MapHandler_js_1.MapHandler.getMap('not_remap');
	        return _this;
	    }
	    Object.defineProperty(NotItem.prototype, "kind", {
	        get: function () {
	            return 'not';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    NotItem.prototype.checkItem = function (item) {
	        var mml;
	        var c;
	        var textNode;
	        if (item.isKind('open') || item.isKind('left')) {
	            return StackItem_js_1.BaseItem.success;
	        }
	        if (item.isKind('mml') &&
	            (NodeUtil_js_1.default.isType(item.First, 'mo') || NodeUtil_js_1.default.isType(item.First, 'mi') ||
	                NodeUtil_js_1.default.isType(item.First, 'mtext'))) {
	            mml = item.First;
	            c = NodeUtil_js_1.default.getText(mml);
	            if (c.length === 1 && !NodeUtil_js_1.default.getProperty(mml, 'movesupsub') &&
	                NodeUtil_js_1.default.getChildren(mml).length === 1) {
	                if (this.remap.contains(c)) {
	                    textNode = this.create('text', this.remap.lookup(c).char);
	                    NodeUtil_js_1.default.setChild(mml, 0, textNode);
	                }
	                else {
	                    textNode = this.create('text', '\u0338');
	                    NodeUtil_js_1.default.appendChildren(mml, [textNode]);
	                }
	                return [[item], true];
	            }
	        }
	        textNode = this.create('text', '\u29F8');
	        var mtextNode = this.create('node', 'mtext', [], {}, textNode);
	        var paddedNode = this.create('node', 'mpadded', [mtextNode], { width: 0 });
	        mml = this.create('node', 'TeXAtom', [paddedNode], { texClass: MmlNode_js_1.TEXCLASS.REL });
	        return [[mml, item], true];
	    };
	    return NotItem;
	}(StackItem_js_1.BaseItem));
	exports.NotItem = NotItem;
	var DotsItem = (function (_super) {
	    __extends(DotsItem, _super);
	    function DotsItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(DotsItem.prototype, "kind", {
	        get: function () {
	            return 'dots';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    DotsItem.prototype.checkItem = function (item) {
	        if (item.isKind('open') || item.isKind('left')) {
	            return StackItem_js_1.BaseItem.success;
	        }
	        var dots = this.getProperty('ldots');
	        var top = item.First;
	        if (item.isKind('mml') && NodeUtil_js_1.default.isEmbellished(top)) {
	            var tclass = NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(top));
	            if (tclass === MmlNode_js_1.TEXCLASS.BIN || tclass === MmlNode_js_1.TEXCLASS.REL) {
	                dots = this.getProperty('cdots');
	            }
	        }
	        return [[dots, item], true];
	    };
	    return DotsItem;
	}(StackItem_js_1.BaseItem));
	exports.DotsItem = DotsItem;
	var ArrayItem = (function (_super) {
	    __extends(ArrayItem, _super);
	    function ArrayItem() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.table = [];
	        _this.row = [];
	        _this.frame = [];
	        _this.hfill = [];
	        _this.arraydef = {};
	        _this.dashed = false;
	        return _this;
	    }
	    Object.defineProperty(ArrayItem.prototype, "kind", {
	        get: function () {
	            return 'array';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ArrayItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ArrayItem.prototype, "copyEnv", {
	        get: function () {
	            return false;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ArrayItem.prototype.checkItem = function (item) {
	        if (item.isClose && !item.isKind('over')) {
	            if (item.getProperty('isEntry')) {
	                this.EndEntry();
	                this.clearEnv();
	                return StackItem_js_1.BaseItem.fail;
	            }
	            if (item.getProperty('isCR')) {
	                this.EndEntry();
	                this.EndRow();
	                this.clearEnv();
	                return StackItem_js_1.BaseItem.fail;
	            }
	            this.EndTable();
	            this.clearEnv();
	            var scriptlevel = this.arraydef['scriptlevel'];
	            delete this.arraydef['scriptlevel'];
	            var mml = this.create('node', 'mtable', this.table, this.arraydef);
	            if (this.frame.length === 4) {
	                NodeUtil_js_1.default.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');
	            }
	            else if (this.frame.length) {
	                if (this.arraydef['rowlines']) {
	                    this.arraydef['rowlines'] =
	                        this.arraydef['rowlines'].replace(/none( none)+$/, 'none');
	                }
	                mml = this.create('node', 'menclose', [mml], { notation: this.frame.join(' '), isFrame: true });
	                if ((this.arraydef['columnlines'] || 'none') !== 'none' ||
	                    (this.arraydef['rowlines'] || 'none') !== 'none') {
	                    NodeUtil_js_1.default.setAttribute(mml, 'padding', 0);
	                }
	            }
	            if (scriptlevel) {
	                mml = this.create('node', 'mstyle', [mml], { scriptlevel: scriptlevel });
	            }
	            if (this.getProperty('open') || this.getProperty('close')) {
	                mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));
	            }
	            var newItem = this.factory.create('mml', mml);
	            if (this.getProperty('requireClose')) {
	                if (item.isKind('close')) {
	                    return [[newItem], true];
	                }
	                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');
	            }
	            return [[newItem, item], true];
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    ArrayItem.prototype.EndEntry = function () {
	        var mtd = this.create('node', 'mtd', this.nodes);
	        if (this.hfill.length) {
	            if (this.hfill[0] === 0) {
	                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', 'right');
	            }
	            if (this.hfill[this.hfill.length - 1] === this.Size()) {
	                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', NodeUtil_js_1.default.getAttribute(mtd, 'columnalign') ? 'center' : 'left');
	            }
	        }
	        this.row.push(mtd);
	        this.Clear();
	        this.hfill = [];
	    };
	    ArrayItem.prototype.EndRow = function () {
	        var node;
	        if (this.getProperty('isNumbered') && this.row.length === 3) {
	            this.row.unshift(this.row.pop());
	            node = this.create('node', 'mlabeledtr', this.row);
	        }
	        else {
	            node = this.create('node', 'mtr', this.row);
	        }
	        this.table.push(node);
	        this.row = [];
	    };
	    ArrayItem.prototype.EndTable = function () {
	        if (this.Size() || this.row.length) {
	            this.EndEntry();
	            this.EndRow();
	        }
	        this.checkLines();
	    };
	    ArrayItem.prototype.checkLines = function () {
	        if (this.arraydef['rowlines']) {
	            var lines = this.arraydef['rowlines'].split(/ /);
	            if (lines.length === this.table.length) {
	                this.frame.push('bottom');
	                lines.pop();
	                this.arraydef['rowlines'] = lines.join(' ');
	            }
	            else if (lines.length < this.table.length - 1) {
	                this.arraydef['rowlines'] += ' none';
	            }
	        }
	        if (this.getProperty('rowspacing')) {
	            var rows = this.arraydef['rowspacing'].split(/ /);
	            while (rows.length < this.table.length) {
	                rows.push(this.getProperty('rowspacing') + 'em');
	            }
	            this.arraydef['rowspacing'] = rows.join(' ');
	        }
	    };
	    return ArrayItem;
	}(StackItem_js_1.BaseItem));
	exports.ArrayItem = ArrayItem;
	var EqnArrayItem = (function (_super) {
	    __extends(EqnArrayItem, _super);
	    function EqnArrayItem(factory) {
	        var args = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            args[_i - 1] = arguments[_i];
	        }
	        var _this = _super.call(this, factory) || this;
	        _this.factory.configuration.tags.start(args[0], args[2], args[1]);
	        return _this;
	    }
	    Object.defineProperty(EqnArrayItem.prototype, "kind", {
	        get: function () {
	            return 'eqnarray';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    EqnArrayItem.prototype.EndEntry = function () {
	        if (this.row.length) {
	            ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);
	        }
	        var node = this.create('node', 'mtd', this.nodes);
	        this.row.push(node);
	        this.Clear();
	    };
	    EqnArrayItem.prototype.EndRow = function () {
	        var mtr = 'mtr';
	        var tag = this.factory.configuration.tags.getTag();
	        if (tag) {
	            this.row = [tag].concat(this.row);
	            mtr = 'mlabeledtr';
	        }
	        this.factory.configuration.tags.clearTag();
	        var node = this.create('node', mtr, this.row);
	        this.table.push(node);
	        this.row = [];
	    };
	    EqnArrayItem.prototype.EndTable = function () {
	        _super.prototype.EndTable.call(this);
	        this.factory.configuration.tags.end();
	    };
	    return EqnArrayItem;
	}(ArrayItem));
	exports.EqnArrayItem = EqnArrayItem;
	var EquationItem = (function (_super) {
	    __extends(EquationItem, _super);
	    function EquationItem(factory) {
	        var args = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            args[_i - 1] = arguments[_i];
	        }
	        var _this = _super.call(this, factory) || this;
	        _this.factory.configuration.tags.start('equation', true, args[0]);
	        return _this;
	    }
	    Object.defineProperty(EquationItem.prototype, "kind", {
	        get: function () {
	            return 'equation';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(EquationItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    EquationItem.prototype.checkItem = function (item) {
	        if (item.isKind('end')) {
	            var mml = this.toMml();
	            var tag = this.factory.configuration.tags.getTag();
	            this.factory.configuration.tags.end();
	            return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];
	        }
	        if (item.isKind('stop')) {
	            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    return EquationItem;
	}(StackItem_js_1.BaseItem));
	exports.EquationItem = EquationItem;
	//# sourceMappingURL=BaseItems.js.map

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var sm = __webpack_require__(190);
	var TexConstants_js_1 = __webpack_require__(189);
	var BaseMethods_js_1 = __webpack_require__(195);
	var ParseMethods_js_1 = __webpack_require__(188);
	var MmlNode_js_1 = __webpack_require__(167);
	new sm.RegExpMap('letter', ParseMethods_js_1.default.variable, /[a-z]/i);
	new sm.RegExpMap('digit', ParseMethods_js_1.default.digit, /[0-9.,]/);
	new sm.RegExpMap('command', ParseMethods_js_1.default.controlSequence, /^\\/);
	new sm.MacroMap('special', {
	    '{': 'Open',
	    '}': 'Close',
	    '~': 'Tilde',
	    '^': 'Superscript',
	    '_': 'Subscript',
	    ' ': 'Space',
	    '\t': 'Space',
	    '\r': 'Space',
	    '\n': 'Space',
	    '\'': 'Prime',
	    '%': 'Comment',
	    '&': 'Entry',
	    '#': 'Hash',
	    '\u00A0': 'Space',
	    '\u2019': 'Prime'
	}, BaseMethods_js_1.default);
	new sm.CharacterMap('mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {
	    alpha: '\u03B1',
	    beta: '\u03B2',
	    gamma: '\u03B3',
	    delta: '\u03B4',
	    epsilon: '\u03F5',
	    zeta: '\u03B6',
	    eta: '\u03B7',
	    theta: '\u03B8',
	    iota: '\u03B9',
	    kappa: '\u03BA',
	    lambda: '\u03BB',
	    mu: '\u03BC',
	    nu: '\u03BD',
	    xi: '\u03BE',
	    omicron: '\u03BF',
	    pi: '\u03C0',
	    rho: '\u03C1',
	    sigma: '\u03C3',
	    tau: '\u03C4',
	    upsilon: '\u03C5',
	    phi: '\u03D5',
	    chi: '\u03C7',
	    psi: '\u03C8',
	    omega: '\u03C9',
	    varepsilon: '\u03B5',
	    vartheta: '\u03D1',
	    varpi: '\u03D6',
	    varrho: '\u03F1',
	    varsigma: '\u03C2',
	    varphi: '\u03C6',
	    S: ['\u00A7', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    aleph: ['\u2135', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    hbar: ['\u210F', { variantForm: true }],
	    imath: '\u0131',
	    jmath: '\u0237',
	    ell: '\u2113',
	    wp: ['\u2118', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    Re: ['\u211C', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    Im: ['\u2111', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    partial: ['\u2202', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    infty: ['\u221E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    prime: ['\u2032', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL,
	            variantForm: true }],
	    emptyset: ['\u2205', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    nabla: ['\u2207', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    top: ['\u22A4', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    bot: ['\u22A5', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    angle: ['\u2220', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    triangle: ['\u25B3', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    backslash: ['\u2216', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL,
	            variantForm: true }],
	    forall: ['\u2200', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    exists: ['\u2203', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    neg: ['\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    lnot: ['\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    flat: ['\u266D', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    natural: ['\u266E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    sharp: ['\u266F', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    clubsuit: ['\u2663', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    diamondsuit: ['\u2662', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    heartsuit: ['\u2661', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    spadesuit: ['\u2660', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }]
	});
	new sm.CharacterMap('mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
	    surd: '\u221A',
	    coprod: ['\u2210', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    bigvee: ['\u22C1', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    bigwedge: ['\u22C0', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    biguplus: ['\u2A04', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    bigcap: ['\u22C2', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    bigcup: ['\u22C3', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    'int': ['\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP }],
	    intop: ['\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true, movablelimits: true }],
	    iint: ['\u222C', { texClass: MmlNode_js_1.TEXCLASS.OP }],
	    iiint: ['\u222D', { texClass: MmlNode_js_1.TEXCLASS.OP }],
	    prod: ['\u220F', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    sum: ['\u2211', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    bigotimes: ['\u2A02', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    bigoplus: ['\u2A01', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    bigodot: ['\u2A00', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    oint: ['\u222E', { texClass: MmlNode_js_1.TEXCLASS.OP }],
	    bigsqcup: ['\u2A06', { texClass: MmlNode_js_1.TEXCLASS.OP,
	            movesupsub: true }],
	    smallint: ['\u222B', { largeop: false }],
	    triangleleft: '\u25C3',
	    triangleright: '\u25B9',
	    bigtriangleup: '\u25B3',
	    bigtriangledown: '\u25BD',
	    wedge: '\u2227',
	    land: '\u2227',
	    vee: '\u2228',
	    lor: '\u2228',
	    cap: '\u2229',
	    cup: '\u222A',
	    ddagger: '\u2021',
	    dagger: '\u2020',
	    sqcap: '\u2293',
	    sqcup: '\u2294',
	    uplus: '\u228E',
	    amalg: '\u2A3F',
	    diamond: '\u22C4',
	    bullet: '\u2219',
	    wr: '\u2240',
	    div: '\u00F7',
	    odot: ['\u2299', { largeop: false }],
	    oslash: ['\u2298', { largeop: false }],
	    otimes: ['\u2297', { largeop: false }],
	    ominus: ['\u2296', { largeop: false }],
	    oplus: ['\u2295', { largeop: false }],
	    mp: '\u2213',
	    pm: '\u00B1',
	    circ: '\u2218',
	    bigcirc: '\u25EF',
	    setminus: '\u2216',
	    cdot: '\u22C5',
	    ast: '\u2217',
	    times: '\u00D7',
	    star: '\u22C6',
	    propto: '\u221D',
	    sqsubseteq: '\u2291',
	    sqsupseteq: '\u2292',
	    parallel: '\u2225',
	    mid: '\u2223',
	    dashv: '\u22A3',
	    vdash: '\u22A2',
	    leq: '\u2264',
	    le: '\u2264',
	    geq: '\u2265',
	    ge: '\u2265',
	    lt: '\u003C',
	    gt: '\u003E',
	    succ: '\u227B',
	    prec: '\u227A',
	    approx: '\u2248',
	    succeq: '\u2AB0',
	    preceq: '\u2AAF',
	    supset: '\u2283',
	    subset: '\u2282',
	    supseteq: '\u2287',
	    subseteq: '\u2286',
	    'in': '\u2208',
	    ni: '\u220B',
	    notin: '\u2209',
	    owns: '\u220B',
	    gg: '\u226B',
	    ll: '\u226A',
	    sim: '\u223C',
	    simeq: '\u2243',
	    perp: '\u22A5',
	    equiv: '\u2261',
	    asymp: '\u224D',
	    smile: '\u2323',
	    frown: '\u2322',
	    ne: '\u2260',
	    neq: '\u2260',
	    cong: '\u2245',
	    doteq: '\u2250',
	    bowtie: '\u22C8',
	    models: '\u22A8',
	    notChar: '\u29F8',
	    Leftrightarrow: '\u21D4',
	    Leftarrow: '\u21D0',
	    Rightarrow: '\u21D2',
	    leftrightarrow: '\u2194',
	    leftarrow: '\u2190',
	    gets: '\u2190',
	    rightarrow: '\u2192',
	    to: ['\u2192', { accent: false }],
	    mapsto: '\u21A6',
	    leftharpoonup: '\u21BC',
	    leftharpoondown: '\u21BD',
	    rightharpoonup: '\u21C0',
	    rightharpoondown: '\u21C1',
	    nearrow: '\u2197',
	    searrow: '\u2198',
	    nwarrow: '\u2196',
	    swarrow: '\u2199',
	    rightleftharpoons: '\u21CC',
	    hookrightarrow: '\u21AA',
	    hookleftarrow: '\u21A9',
	    longleftarrow: '\u27F5',
	    Longleftarrow: '\u27F8',
	    longrightarrow: '\u27F6',
	    Longrightarrow: '\u27F9',
	    Longleftrightarrow: '\u27FA',
	    longleftrightarrow: '\u27F7',
	    longmapsto: '\u27FC',
	    ldots: '\u2026',
	    cdots: '\u22EF',
	    vdots: '\u22EE',
	    ddots: '\u22F1',
	    dotsc: '\u2026',
	    dotsb: '\u22EF',
	    dotsm: '\u22EF',
	    dotsi: '\u22EF',
	    dotso: '\u2026',
	    ldotp: ['\u002E', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],
	    cdotp: ['\u22C5', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],
	    colon: ['\u003A', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }]
	});
	new sm.CharacterMap('mathchar7', ParseMethods_js_1.default.mathchar7, {
	    Gamma: '\u0393',
	    Delta: '\u0394',
	    Theta: '\u0398',
	    Lambda: '\u039B',
	    Xi: '\u039E',
	    Pi: '\u03A0',
	    Sigma: '\u03A3',
	    Upsilon: '\u03A5',
	    Phi: '\u03A6',
	    Psi: '\u03A8',
	    Omega: '\u03A9',
	    '_': '\u005F',
	    '#': '\u0023',
	    '$': '\u0024',
	    '%': '\u0025',
	    '&': '\u0026',
	    And: '\u0026'
	});
	new sm.DelimiterMap('delimiter', ParseMethods_js_1.default.delimiter, {
	    '(': '(',
	    ')': ')',
	    '[': '[',
	    ']': ']',
	    '<': '\u27E8',
	    '>': '\u27E9',
	    '\\lt': '\u27E8',
	    '\\gt': '\u27E9',
	    '/': '/',
	    '|': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
	    '.': '',
	    '\\\\': '\\',
	    '\\lmoustache': '\u23B0',
	    '\\rmoustache': '\u23B1',
	    '\\lgroup': '\u27EE',
	    '\\rgroup': '\u27EF',
	    '\\arrowvert': '\u23D0',
	    '\\Arrowvert': '\u2016',
	    '\\bracevert': '\u23AA',
	    '\\Vert': ['\u2225', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
	    '\\|': ['\u2225', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
	    '\\vert': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],
	    '\\uparrow': '\u2191',
	    '\\downarrow': '\u2193',
	    '\\updownarrow': '\u2195',
	    '\\Uparrow': '\u21D1',
	    '\\Downarrow': '\u21D3',
	    '\\Updownarrow': '\u21D5',
	    '\\backslash': '\\',
	    '\\rangle': '\u27E9',
	    '\\langle': '\u27E8',
	    '\\rbrace': '}',
	    '\\lbrace': '{',
	    '\\}': '}',
	    '\\{': '{',
	    '\\rceil': '\u2309',
	    '\\lceil': '\u2308',
	    '\\rfloor': '\u230B',
	    '\\lfloor': '\u230A',
	    '\\lbrack': '[',
	    '\\rbrack': ']'
	});
	new sm.CommandMap('macros', {
	    displaystyle: ['SetStyle', 'D', true, 0],
	    textstyle: ['SetStyle', 'T', false, 0],
	    scriptstyle: ['SetStyle', 'S', false, 1],
	    scriptscriptstyle: ['SetStyle', 'SS', false, 2],
	    rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],
	    mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],
	    oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],
	    cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
	    it: ['SetFont', '-tex-mathit'],
	    bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],
	    bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],
	    scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],
	    frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],
	    sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],
	    tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],
	    tiny: ['SetSize', 0.5],
	    Tiny: ['SetSize', 0.6],
	    scriptsize: ['SetSize', 0.7],
	    small: ['SetSize', 0.85],
	    normalsize: ['SetSize', 1.0],
	    large: ['SetSize', 1.2],
	    Large: ['SetSize', 1.44],
	    LARGE: ['SetSize', 1.73],
	    huge: ['SetSize', 2.07],
	    Huge: ['SetSize', 2.49],
	    arcsin: ['NamedFn'],
	    arccos: ['NamedFn'],
	    arctan: ['NamedFn'],
	    arg: ['NamedFn'],
	    cos: ['NamedFn'],
	    cosh: ['NamedFn'],
	    cot: ['NamedFn'],
	    coth: ['NamedFn'],
	    csc: ['NamedFn'],
	    deg: ['NamedFn'],
	    det: 'NamedOp',
	    dim: ['NamedFn'],
	    exp: ['NamedFn'],
	    gcd: 'NamedOp',
	    hom: ['NamedFn'],
	    inf: 'NamedOp',
	    ker: ['NamedFn'],
	    lg: ['NamedFn'],
	    lim: 'NamedOp',
	    liminf: ['NamedOp', 'lim&thinsp;inf'],
	    limsup: ['NamedOp', 'lim&thinsp;sup'],
	    ln: ['NamedFn'],
	    log: ['NamedFn'],
	    max: 'NamedOp',
	    min: 'NamedOp',
	    Pr: 'NamedOp',
	    sec: ['NamedFn'],
	    sin: ['NamedFn'],
	    sinh: ['NamedFn'],
	    sup: 'NamedOp',
	    tan: ['NamedFn'],
	    tanh: ['NamedFn'],
	    limits: ['Limits', 1],
	    nolimits: ['Limits', 0],
	    overline: ['UnderOver', '00AF', null, 1],
	    underline: ['UnderOver', '005F'],
	    overbrace: ['UnderOver', '23DE', 1],
	    underbrace: ['UnderOver', '23DF', 1],
	    overparen: ['UnderOver', '23DC'],
	    underparen: ['UnderOver', '23DD'],
	    overrightarrow: ['UnderOver', '2192'],
	    underrightarrow: ['UnderOver', '2192'],
	    overleftarrow: ['UnderOver', '2190'],
	    underleftarrow: ['UnderOver', '2190'],
	    overleftrightarrow: ['UnderOver', '2194'],
	    underleftrightarrow: ['UnderOver', '2194'],
	    overset: 'Overset',
	    underset: 'Underset',
	    stackrel: ['Macro', '\\mathrel{\\mathop{#2}\\limits^{#1}}', 2],
	    over: 'Over',
	    overwithdelims: 'Over',
	    atop: 'Over',
	    atopwithdelims: 'Over',
	    above: 'Over',
	    abovewithdelims: 'Over',
	    brace: ['Over', '{', '}'],
	    brack: ['Over', '[', ']'],
	    choose: ['Over', '(', ')'],
	    frac: 'Frac',
	    sqrt: 'Sqrt',
	    root: 'Root',
	    uproot: ['MoveRoot', 'upRoot'],
	    leftroot: ['MoveRoot', 'leftRoot'],
	    left: 'LeftRight',
	    right: 'LeftRight',
	    middle: 'Middle',
	    llap: 'Lap',
	    rlap: 'Lap',
	    raise: 'RaiseLower',
	    lower: 'RaiseLower',
	    moveleft: 'MoveLeftRight',
	    moveright: 'MoveLeftRight',
	    ',': ['Spacer', TexConstants_js_1.TexConstant.Length.THINMATHSPACE],
	    ':': ['Spacer', TexConstants_js_1.TexConstant.Length.MEDIUMMATHSPACE],
	    '>': ['Spacer', TexConstants_js_1.TexConstant.Length.MEDIUMMATHSPACE],
	    ';': ['Spacer', TexConstants_js_1.TexConstant.Length.THICKMATHSPACE],
	    '!': ['Spacer', TexConstants_js_1.TexConstant.Length.NEGATIVETHINMATHSPACE],
	    enspace: ['Spacer', '.5em'],
	    quad: ['Spacer', '1em'],
	    qquad: ['Spacer', '2em'],
	    thinspace: ['Spacer', TexConstants_js_1.TexConstant.Length.THINMATHSPACE],
	    negthinspace: ['Spacer', TexConstants_js_1.TexConstant.Length.NEGATIVETHINMATHSPACE],
	    hskip: 'Hskip',
	    hspace: 'Hskip',
	    kern: 'Hskip',
	    mskip: 'Hskip',
	    mspace: 'Hskip',
	    mkern: 'Hskip',
	    rule: 'rule',
	    Rule: ['Rule'],
	    Space: ['Rule', 'blank'],
	    big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 0.85],
	    Big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.15],
	    bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.45],
	    Bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.75],
	    bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 0.85],
	    Bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.15],
	    biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.45],
	    Biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.75],
	    bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 0.85],
	    Bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.15],
	    biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.45],
	    Biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.75],
	    bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 0.85],
	    Bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.15],
	    biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.45],
	    Biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.75],
	    mathord: ['TeXAtom', MmlNode_js_1.TEXCLASS.ORD],
	    mathop: ['TeXAtom', MmlNode_js_1.TEXCLASS.OP],
	    mathopen: ['TeXAtom', MmlNode_js_1.TEXCLASS.OPEN],
	    mathclose: ['TeXAtom', MmlNode_js_1.TEXCLASS.CLOSE],
	    mathbin: ['TeXAtom', MmlNode_js_1.TEXCLASS.BIN],
	    mathrel: ['TeXAtom', MmlNode_js_1.TEXCLASS.REL],
	    mathpunct: ['TeXAtom', MmlNode_js_1.TEXCLASS.PUNCT],
	    mathinner: ['TeXAtom', MmlNode_js_1.TEXCLASS.INNER],
	    vcenter: ['TeXAtom', MmlNode_js_1.TEXCLASS.VCENTER],
	    buildrel: 'BuildRel',
	    hbox: ['HBox', 0],
	    text: 'HBox',
	    mbox: ['HBox', 0],
	    fbox: 'FBox',
	    strut: 'Strut',
	    mathstrut: ['Macro', '\\vphantom{(}'],
	    phantom: 'Phantom',
	    vphantom: ['Phantom', 1, 0],
	    hphantom: ['Phantom', 0, 1],
	    smash: 'Smash',
	    acute: ['Accent', '00B4'],
	    grave: ['Accent', '0060'],
	    ddot: ['Accent', '00A8'],
	    tilde: ['Accent', '007E'],
	    bar: ['Accent', '00AF'],
	    breve: ['Accent', '02D8'],
	    check: ['Accent', '02C7'],
	    hat: ['Accent', '005E'],
	    vec: ['Accent', '2192'],
	    dot: ['Accent', '02D9'],
	    widetilde: ['Accent', '007E', 1],
	    widehat: ['Accent', '005E', 1],
	    matrix: 'Matrix',
	    array: 'Matrix',
	    pmatrix: ['Matrix', '(', ')'],
	    cases: ['Matrix', '{', '', 'left left', null, '.1em', null,
	        true],
	    eqalign: ['Matrix', null, null, 'right left',
	        TexConstants_js_1.TexConstant.Length.THICKMATHSPACE, '.5em', 'D'],
	    displaylines: ['Matrix', null, null, 'center', null, '.5em', 'D'],
	    cr: 'Cr',
	    '\\': 'CrLaTeX',
	    newline: ['CrLaTeX', true],
	    hline: ['HLine', 'solid'],
	    hdashline: ['HLine', 'dashed'],
	    eqalignno: ['Matrix', null, null, 'right left',
	        TexConstants_js_1.TexConstant.Length.THICKMATHSPACE, '.5em', 'D', null,
	        'right'],
	    leqalignno: ['Matrix', null, null, 'right left',
	        TexConstants_js_1.TexConstant.Length.THICKMATHSPACE, '.5em', 'D', null,
	        'left'],
	    hfill: 'HFill',
	    hfil: 'HFill',
	    hfilll: 'HFill',
	    bmod: ['Macro', '\\mmlToken{mo}[lspace="thickmathspace"' +
	            ' rspace="thickmathspace"]{mod}'],
	    pmod: ['Macro', '\\pod{\\mmlToken{mi}{mod}\\kern 6mu #1}', 1],
	    mod: ['Macro', '\\mathchoice{\\kern18mu}{\\kern12mu}' +
	            '{\\kern12mu}{\\kern12mu}\\mmlToken{mi}{mod}\\,\\,#1',
	        1],
	    pod: ['Macro', '\\mathchoice{\\kern18mu}{\\kern8mu}' +
	            '{\\kern8mu}{\\kern8mu}(#1)', 1],
	    iff: ['Macro', '\\;\\Longleftrightarrow\\;'],
	    skew: ['Macro', '{{#2{#3\\mkern#1mu}\\mkern-#1mu}{}}', 3],
	    mathcal: ['Macro', '{\\cal #1}', 1],
	    mathscr: ['Macro', '{\\scr #1}', 1],
	    mathrm: ['Macro', '{\\rm #1}', 1],
	    mathbf: ['Macro', '{\\bf #1}', 1],
	    mathbb: ['Macro', '{\\bbFont #1}', 1],
	    Bbb: ['Macro', '{\\bbFont #1}', 1],
	    mathit: ['Macro', '{\\it #1}', 1],
	    mathfrak: ['Macro', '{\\frak #1}', 1],
	    mathsf: ['Macro', '{\\sf #1}', 1],
	    mathtt: ['Macro', '{\\tt #1}', 1],
	    textrm: ['Macro', '\\mathord{\\rm\\text{#1}}', 1],
	    textit: ['Macro', '\\mathord{\\it\\text{#1}}', 1],
	    textbf: ['Macro', '\\mathord{\\bf\\text{#1}}', 1],
	    textsf: ['Macro', '\\mathord{\\sf\\text{#1}}', 1],
	    texttt: ['Macro', '\\mathord{\\tt\\text{#1}}', 1],
	    pmb: ['Macro', '\\rlap{#1}\\kern1px{#1}', 1],
	    TeX: ['Macro', 'T\\kern-.14em\\lower.5ex{E}\\kern-.115em X'],
	    LaTeX: ['Macro', 'L\\kern-.325em\\raise.21em' +
	            '{\\scriptstyle{A}}\\kern-.17em\\TeX'],
	    ' ': ['Macro', '\\text{ }'],
	    not: 'Not',
	    dots: 'Dots',
	    space: 'Tilde',
	    '\u00A0': 'Tilde',
	    begin: 'BeginEnd',
	    end: 'BeginEnd',
	    label: 'HandleLabel',
	    ref: 'HandleRef',
	    nonumber: 'HandleNoTag',
	    mathchoice: 'MathChoice',
	    mmlToken: 'MmlToken'
	}, BaseMethods_js_1.default);
	var envs = new sm.EnvironmentMap('environment', ParseMethods_js_1.default.environment, {
	    array: ['AlignedArray'],
	    equation: ['Equation', null, true],
	    'equation*': ['Equation', null, false],
	    eqnarray: ['EqnArray', null, true, true, 'rcl',
	        '0 ' + TexConstants_js_1.TexConstant.Length.THICKMATHSPACE, '.5em']
	}, BaseMethods_js_1.default);
	new sm.CharacterMap('not_remap', null, {
	    '\u2190': '\u219A',
	    '\u2192': '\u219B',
	    '\u2194': '\u21AE',
	    '\u21D0': '\u21CD',
	    '\u21D2': '\u21CF',
	    '\u21D4': '\u21CE',
	    '\u2208': '\u2209',
	    '\u220B': '\u220C',
	    '\u2223': '\u2224',
	    '\u2225': '\u2226',
	    '\u223C': '\u2241',
	    '\u007E': '\u2241',
	    '\u2243': '\u2244',
	    '\u2245': '\u2247',
	    '\u2248': '\u2249',
	    '\u224D': '\u226D',
	    '\u003D': '\u2260',
	    '\u2261': '\u2262',
	    '\u003C': '\u226E',
	    '\u003E': '\u226F',
	    '\u2264': '\u2270',
	    '\u2265': '\u2271',
	    '\u2272': '\u2274',
	    '\u2273': '\u2275',
	    '\u2276': '\u2278',
	    '\u2277': '\u2279',
	    '\u227A': '\u2280',
	    '\u227B': '\u2281',
	    '\u2282': '\u2284',
	    '\u2283': '\u2285',
	    '\u2286': '\u2288',
	    '\u2287': '\u2289',
	    '\u22A2': '\u22AC',
	    '\u22A8': '\u22AD',
	    '\u22A9': '\u22AE',
	    '\u22AB': '\u22AF',
	    '\u227C': '\u22E0',
	    '\u227D': '\u22E1',
	    '\u2291': '\u22E2',
	    '\u2292': '\u22E3',
	    '\u22B2': '\u22EA',
	    '\u22B3': '\u22EB',
	    '\u22B4': '\u22EC',
	    '\u22B5': '\u22ED',
	    '\u2203': '\u2204'
	});
	//# sourceMappingURL=BaseMappings.js.map

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var sitem = __webpack_require__(193);
	var NodeUtil_js_1 = __webpack_require__(170);
	var TexError_js_1 = __webpack_require__(175);
	var TexParser_js_1 = __webpack_require__(173);
	var TexConstants_js_1 = __webpack_require__(189);
	var ParseUtil_js_1 = __webpack_require__(174);
	var MmlNode_js_1 = __webpack_require__(167);
	var Tags_js_1 = __webpack_require__(186);
	var Entities_js_1 = __webpack_require__(176);
	__webpack_require__(178);
	__webpack_require__(196);
	__webpack_require__(197);
	var BaseMethods = {};
	var P_HEIGHT = 1.2 / .85;
	var MmlTokenAllow = {
	    fontfamily: 1, fontsize: 1, fontweight: 1, fontstyle: 1,
	    color: 1, background: 1,
	    id: 1, 'class': 1, href: 1, style: 1
	};
	BaseMethods.Open = function (parser, c) {
	    parser.Push(parser.itemFactory.create('open'));
	};
	BaseMethods.Close = function (parser, c) {
	    parser.Push(parser.itemFactory.create('close'));
	};
	BaseMethods.Tilde = function (parser, c) {
	    parser.Push(parser.create('token', 'mtext', {}, Entities_js_1.entities.nbsp));
	};
	BaseMethods.Space = function (parser, c) { };
	BaseMethods.Superscript = function (parser, c) {
	    var _a;
	    if (parser.GetNext().match(/\d/)) {
	        parser.string = parser.string.substr(0, parser.i + 1) +
	            ' ' + parser.string.substr(parser.i + 1);
	    }
	    var primes;
	    var base;
	    var top = parser.stack.Top();
	    if (top.isKind('prime')) {
	        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];
	        parser.stack.Pop();
	    }
	    else {
	        base = parser.stack.Prev();
	        if (!base) {
	            base = parser.create('token', 'mi', {}, '');
	        }
	    }
	    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');
	    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ? base.sup :
	        base.over;
	    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&
	        NodeUtil_js_1.default.getChildAt(base, base.sup)) ||
	        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&
	            NodeUtil_js_1.default.getChildAt(base, base.over) &&
	            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {
	        throw new TexError_js_1.default('DoubleExponent', 'Double exponent: use braces to clarify');
	    }
	    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {
	        if (movesupsub) {
	            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||
	                NodeUtil_js_1.default.getChildAt(base, base.over)) {
	                base = parser.create('node', 'munderover', [base], { movesupsub: true });
	            }
	            position = base.over;
	        }
	        else {
	            base = parser.create('node', 'msubsup', [base]);
	            position = base.sup;
	        }
	    }
	    parser.Push(parser.itemFactory.create('subsup', base).setProperties({
	        position: position, primes: primes, movesupsub: movesupsub
	    }));
	};
	BaseMethods.Subscript = function (parser, c) {
	    var _a;
	    if (parser.GetNext().match(/\d/)) {
	        parser.string =
	            parser.string.substr(0, parser.i + 1) + ' ' +
	                parser.string.substr(parser.i + 1);
	    }
	    var primes, base;
	    var top = parser.stack.Top();
	    if (top.isKind('prime')) {
	        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];
	        parser.stack.Pop();
	    }
	    else {
	        base = parser.stack.Prev();
	        if (!base) {
	            base = parser.create('token', 'mi', {}, '');
	        }
	    }
	    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');
	    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ?
	        base.sub : base.under;
	    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&
	        NodeUtil_js_1.default.getChildAt(base, base.sub)) ||
	        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&
	            NodeUtil_js_1.default.getChildAt(base, base.under) &&
	            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {
	        throw new TexError_js_1.default('DoubleSubscripts', 'Double subscripts: use braces to clarify');
	    }
	    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {
	        if (movesupsub) {
	            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||
	                NodeUtil_js_1.default.getChildAt(base, base.under)) {
	                base = parser.create('node', 'munderover', [base], { movesupsub: true });
	            }
	            position = base.under;
	        }
	        else {
	            base = parser.create('node', 'msubsup', [base]);
	            position = base.sub;
	        }
	    }
	    parser.Push(parser.itemFactory.create('subsup', base).setProperties({
	        position: position, primes: primes, movesupsub: movesupsub
	    }));
	};
	BaseMethods.Prime = function (parser, c) {
	    var base = parser.stack.Prev();
	    if (!base) {
	        base = parser.create('node', 'mi');
	    }
	    if (NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&
	        NodeUtil_js_1.default.getChildAt(base, base.sup)) {
	        throw new TexError_js_1.default('DoubleExponentPrime', 'Prime causes double exponent: use braces to clarify');
	    }
	    var sup = '';
	    parser.i--;
	    do {
	        sup += Entities_js_1.entities.prime;
	        parser.i++, c = parser.GetNext();
	    } while (c === '\'' || c === Entities_js_1.entities.rquote);
	    sup = ['', '\u2032', '\u2033', '\u2034', '\u2057'][sup.length] || sup;
	    var node = parser.create('token', 'mo', {}, sup);
	    parser.Push(parser.itemFactory.create('prime', base, node));
	};
	BaseMethods.Comment = function (parser, c) {
	    while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\n') {
	        parser.i++;
	    }
	};
	BaseMethods.Hash = function (parser, c) {
	    throw new TexError_js_1.default('CantUseHash1', 'You can\'t use \'macro parameter character #\' in math mode');
	};
	BaseMethods.SetFont = function (parser, name, font) {
	    parser.stack.env['font'] = font;
	};
	BaseMethods.SetStyle = function (parser, name, texStyle, style, level) {
	    parser.stack.env['style'] = texStyle;
	    parser.stack.env['level'] = level;
	    parser.Push(parser.itemFactory.create('style').setProperty('styles', { displaystyle: style, scriptlevel: level }));
	};
	BaseMethods.SetSize = function (parser, name, size) {
	    parser.stack.env['size'] = size;
	    parser.Push(parser.itemFactory.create('style').setProperty('styles', { mathsize: size + 'em' }));
	};
	BaseMethods.Spacer = function (parser, name, space) {
	    var node = parser.create('node', 'mspace', [], { width: space });
	    var style = parser.create('node', 'mstyle', [node], { scriptlevel: 0 });
	    parser.Push(style);
	};
	BaseMethods.LeftRight = function (parser, name) {
	    var first = name.substr(1);
	    parser.Push(parser.itemFactory.create(first)
	        .setProperty('delim', parser.GetDelimiter(name)));
	};
	BaseMethods.Middle = function (parser, name) {
	    var delim = parser.GetDelimiter(name);
	    var node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.CLOSE });
	    parser.Push(node);
	    if (!parser.stack.Top().isKind('left')) {
	        throw new TexError_js_1.default('MisplacedMiddle', '%1 must be within \\left and \\right', parser.currentCS);
	    }
	    node = parser.create('token', 'mo', { stretchy: true }, delim);
	    parser.Push(node);
	    node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OPEN });
	    parser.Push(node);
	};
	BaseMethods.NamedFn = function (parser, name, id) {
	    if (!id) {
	        id = name.substr(1);
	    }
	    var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, id);
	    parser.Push(parser.itemFactory.create('fn', mml));
	};
	BaseMethods.NamedOp = function (parser, name, id) {
	    if (!id) {
	        id = name.substr(1);
	    }
	    id = id.replace(/&thinsp;/, '\u2006');
	    var mml = parser.create('token', 'mo', {
	        movablelimits: true,
	        movesupsub: true,
	        form: TexConstants_js_1.TexConstant.Form.PREFIX,
	        texClass: MmlNode_js_1.TEXCLASS.OP
	    }, id);
	    parser.Push(mml);
	};
	BaseMethods.Limits = function (parser, name, limits) {
	    var op = parser.stack.Prev(true);
	    if (!op || (NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(op)) !== MmlNode_js_1.TEXCLASS.OP &&
	        NodeUtil_js_1.default.getProperty(op, 'movesupsub') == null)) {
	        throw new TexError_js_1.default('MisplacedLimits', '%1 is allowed only on operators', parser.currentCS);
	    }
	    var top = parser.stack.Top();
	    var node;
	    if (NodeUtil_js_1.default.isType(op, 'munderover') && !limits) {
	        node = parser.create('node', 'msubsup');
	        NodeUtil_js_1.default.copyChildren(op, node);
	        op = top.Last = node;
	    }
	    else if (NodeUtil_js_1.default.isType(op, 'msubsup') && limits) {
	        node = parser.create('node', 'munderover');
	        NodeUtil_js_1.default.copyChildren(op, node);
	        op = top.Last = node;
	    }
	    NodeUtil_js_1.default.setProperty(op, 'movesupsub', limits ? true : false);
	    NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(op), { 'movablelimits': false });
	    if (NodeUtil_js_1.default.getAttribute(op, 'movablelimits') ||
	        NodeUtil_js_1.default.getProperty(op, 'movablelimits')) {
	        NodeUtil_js_1.default.setProperties(op, { 'movablelimits': false });
	    }
	};
	BaseMethods.Over = function (parser, name, open, close) {
	    var mml = parser.itemFactory.create('over').setProperty('name', parser.currentCS);
	    if (open || close) {
	        mml.setProperty('open', open);
	        mml.setProperty('close', close);
	    }
	    else if (name.match(/withdelims$/)) {
	        mml.setProperty('open', parser.GetDelimiter(name));
	        mml.setProperty('close', parser.GetDelimiter(name));
	    }
	    if (name.match(/^\\above/)) {
	        mml.setProperty('thickness', parser.GetDimen(name));
	    }
	    else if (name.match(/^\\atop/) || open || close) {
	        mml.setProperty('thickness', 0);
	    }
	    parser.Push(mml);
	};
	BaseMethods.Frac = function (parser, name) {
	    var num = parser.ParseArg(name);
	    var den = parser.ParseArg(name);
	    var node = parser.create('node', 'mfrac', [num, den]);
	    parser.Push(node);
	};
	BaseMethods.Sqrt = function (parser, name) {
	    var n = parser.GetBrackets(name);
	    var arg = parser.GetArgument(name);
	    if (arg === '\\frac') {
	        arg += '{' + parser.GetArgument(arg) + '}{' + parser.GetArgument(arg) + '}';
	    }
	    var mml = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
	    if (!n) {
	        mml = parser.create('node', 'msqrt', [mml]);
	    }
	    else {
	        mml = parser.create('node', 'mroot', [mml, parseRoot(parser, n)]);
	    }
	    parser.Push(mml);
	};
	function parseRoot(parser, n) {
	    var env = parser.stack.env;
	    var inRoot = env['inRoot'];
	    env['inRoot'] = true;
	    var newParser = new TexParser_js_1.default(n, env, parser.configuration);
	    var node = newParser.mml();
	    var global = newParser.stack.global;
	    if (global['leftRoot'] || global['upRoot']) {
	        var def = {};
	        if (global['leftRoot']) {
	            def['width'] = global['leftRoot'];
	        }
	        if (global['upRoot']) {
	            def['voffset'] = global['upRoot'];
	            def['height'] = global['upRoot'];
	        }
	        node = parser.create('node', 'mpadded', [node], def);
	    }
	    env['inRoot'] = inRoot;
	    return node;
	}
	;
	BaseMethods.Root = function (parser, name) {
	    var n = parser.GetUpTo(name, '\\of');
	    var arg = parser.ParseArg(name);
	    var node = parser.create('node', 'mroot', [arg, parseRoot(parser, n)]);
	    parser.Push(node);
	};
	BaseMethods.MoveRoot = function (parser, name, id) {
	    if (!parser.stack.env['inRoot']) {
	        throw new TexError_js_1.default('MisplacedMoveRoot', '%1 can appear only within a root', parser.currentCS);
	    }
	    if (parser.stack.global[id]) {
	        throw new TexError_js_1.default('MultipleMoveRoot', 'Multiple use of %1', parser.currentCS);
	    }
	    var n = parser.GetArgument(name);
	    if (!n.match(/-?[0-9]+/)) {
	        throw new TexError_js_1.default('IntegerArg', 'The argument to %1 must be an integer', parser.currentCS);
	    }
	    n = (parseInt(n, 10) / 15) + 'em';
	    if (n.substr(0, 1) !== '-') {
	        n = '+' + n;
	    }
	    parser.stack.global[id] = n;
	};
	BaseMethods.Accent = function (parser, name, accent, stretchy) {
	    var c = parser.ParseArg(name);
	    var def = ParseUtil_js_1.default.getFontDef(parser);
	    def['accent'] = true;
	    var entity = NodeUtil_js_1.default.createEntity(accent);
	    var moNode = parser.create('token', 'mo', def, entity);
	    var mml = moNode;
	    NodeUtil_js_1.default.setAttribute(mml, 'stretchy', stretchy ? true : false);
	    var mo = (NodeUtil_js_1.default.isEmbellished(c) ? NodeUtil_js_1.default.getCoreMO(c) : c);
	    if (NodeUtil_js_1.default.isType(mo, 'mo')) {
	        NodeUtil_js_1.default.setProperties(mo, { 'movablelimits': false });
	    }
	    var muoNode = parser.create('node', 'munderover');
	    NodeUtil_js_1.default.setChild(muoNode, 0, c);
	    NodeUtil_js_1.default.setChild(muoNode, 1, null);
	    NodeUtil_js_1.default.setChild(muoNode, 2, mml);
	    var texAtom = parser.create('node', 'TeXAtom', [muoNode]);
	    parser.Push(texAtom);
	};
	BaseMethods.UnderOver = function (parser, name, c, stack, noaccent) {
	    var base = parser.ParseArg(name);
	    var symbol = NodeUtil_js_1.default.getForm(base);
	    if ((symbol && symbol[3] && symbol[3]['movablelimits'])
	        || NodeUtil_js_1.default.getProperty(base, 'movablelimits')) {
	        NodeUtil_js_1.default.setProperties(base, { 'movablelimits': false });
	    }
	    var mo;
	    if (NodeUtil_js_1.default.isType(base, 'munderover') && NodeUtil_js_1.default.isEmbellished(base)) {
	        NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(base), { lspace: 0, rspace: 0 });
	        mo = parser.create('node', 'mo', [], { rspace: 0 });
	        base = parser.create('node', 'mrow', [mo, base]);
	    }
	    var mml = parser.create('node', 'munderover', [base]);
	    var entity = NodeUtil_js_1.default.createEntity(c);
	    mo = parser.create('token', 'mo', { stretchy: true, accent: !noaccent }, entity);
	    NodeUtil_js_1.default.setChild(mml, name.charAt(1) === 'o' ? mml.over : mml.under, mo);
	    var node = mml;
	    if (stack) {
	        node = parser.create('node', 'TeXAtom', [mml], { texClass: MmlNode_js_1.TEXCLASS.OP, movesupsub: true });
	    }
	    NodeUtil_js_1.default.setProperty(node, 'subsupOK', true);
	    parser.Push(node);
	};
	BaseMethods.Overset = function (parser, name) {
	    var top = parser.ParseArg(name), base = parser.ParseArg(name);
	    if (NodeUtil_js_1.default.getAttribute(base, 'movablelimits') || NodeUtil_js_1.default.getProperty(base, 'movablelimits')) {
	        NodeUtil_js_1.default.setProperties(base, { 'movablelimits': false });
	    }
	    var node = parser.create('node', 'mover', [base, top]);
	    parser.Push(node);
	};
	BaseMethods.Underset = function (parser, name) {
	    var bot = parser.ParseArg(name), base = parser.ParseArg(name);
	    if (NodeUtil_js_1.default.getAttribute(base, 'movablelimits') || NodeUtil_js_1.default.getProperty(base, 'movablelimits')) {
	        NodeUtil_js_1.default.setProperties(base, { 'movablelimits': false });
	    }
	    var node = parser.create('node', 'munder', [base, bot]);
	    parser.Push(node);
	};
	BaseMethods.TeXAtom = function (parser, name, mclass) {
	    var def = { texClass: mclass };
	    var mml;
	    var node;
	    var parsed;
	    if (mclass === MmlNode_js_1.TEXCLASS.OP) {
	        def['movesupsub'] = def['movablelimits'] = true;
	        var arg = parser.GetArgument(name);
	        var match = arg.match(/^\s*\\rm\s+([a-zA-Z0-9 ]+)$/);
	        if (match) {
	            def['mathvariant'] = TexConstants_js_1.TexConstant.Variant.NORMAL;
	            node = parser.create('token', 'mi', def, match[1]);
	        }
	        else {
	            parsed = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
	            node = parser.create('node', 'TeXAtom', [parsed], def);
	        }
	        mml = parser.itemFactory.create('fn', node);
	    }
	    else {
	        parsed = parser.ParseArg(name);
	        mml = parser.create('node', 'TeXAtom', [parsed], def);
	    }
	    parser.Push(mml);
	};
	BaseMethods.MmlToken = function (parser, name) {
	    var kind = parser.GetArgument(name);
	    var attr = parser.GetBrackets(name, '').replace(/^\s+/, '');
	    var text = parser.GetArgument(name);
	    var def = {};
	    var node;
	    try {
	        node = parser.create('node', kind);
	    }
	    catch (e) {
	        node = null;
	    }
	    if (!node || !node.isToken) {
	        throw new TexError_js_1.default('NotMathMLToken', '%1 is not a token element', kind);
	    }
	    while (attr !== '') {
	        var match = attr.match(/^([a-z]+)\s*=\s*('[^']*'|"[^"]*"|[^ ,]*)\s*,?\s*/i);
	        if (!match) {
	            throw new TexError_js_1.default('InvalidMathMLAttr', 'Invalid MathML attribute: %1', attr);
	        }
	        if (!node.attributes.hasDefault(match[1]) && !MmlTokenAllow[match[1]]) {
	            throw new TexError_js_1.default('UnknownAttrForElement', '%1 is not a recognized attribute for %2', match[1], kind);
	        }
	        var value = ParseUtil_js_1.default.MmlFilterAttribute(parser, match[1], match[2].replace(/^(['"])(.*)\1$/, '$2'));
	        if (value) {
	            if (value.toLowerCase() === 'true') {
	                value = true;
	            }
	            else if (value.toLowerCase() === 'false') {
	                value = false;
	            }
	            def[match[1]] = value;
	        }
	        attr = attr.substr(match[0].length);
	    }
	    var textNode = parser.create('text', text);
	    node.appendChild(textNode);
	    NodeUtil_js_1.default.setProperties(node, def);
	    parser.Push(node);
	};
	BaseMethods.Strut = function (parser, name) {
	    var row = parser.create('node', 'mrow');
	    var padded = parser.create('node', 'mpadded', [row], { height: '8.6pt', depth: '3pt', width: 0 });
	    parser.Push(padded);
	};
	BaseMethods.Phantom = function (parser, name, v, h) {
	    var box = parser.create('node', 'mphantom', [parser.ParseArg(name)]);
	    if (v || h) {
	        box = parser.create('node', 'mpadded', [box]);
	        if (h) {
	            NodeUtil_js_1.default.setAttribute(box, 'height', 0);
	            NodeUtil_js_1.default.setAttribute(box, 'depth', 0);
	        }
	        if (v) {
	            NodeUtil_js_1.default.setAttribute(box, 'width', 0);
	        }
	    }
	    var atom = parser.create('node', 'TeXAtom', [box]);
	    parser.Push(atom);
	};
	BaseMethods.Smash = function (parser, name) {
	    var bt = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));
	    var smash = parser.create('node', 'mpadded', [parser.ParseArg(name)]);
	    switch (bt) {
	        case 'b':
	            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);
	            break;
	        case 't':
	            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);
	            break;
	        default:
	            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);
	            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);
	    }
	    var atom = parser.create('node', 'TeXAtom', [smash]);
	    parser.Push(atom);
	};
	BaseMethods.Lap = function (parser, name) {
	    var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)], { width: 0 });
	    if (name === '\\llap') {
	        NodeUtil_js_1.default.setAttribute(mml, 'lspace', '-1width');
	    }
	    var atom = parser.create('node', 'TeXAtom', [mml]);
	    parser.Push(atom);
	};
	BaseMethods.RaiseLower = function (parser, name) {
	    var h = parser.GetDimen(name);
	    var item = parser.itemFactory.create('position').setProperties({ name: parser.currentCS, move: 'vertical' });
	    if (h.charAt(0) === '-') {
	        h = h.slice(1);
	        name = name.substr(1) === 'raise' ? '\\lower' : '\\raise';
	    }
	    if (name === '\\lower') {
	        item.setProperty('dh', '-' + h);
	        item.setProperty('dd', '+' + h);
	    }
	    else {
	        item.setProperty('dh', '+' + h);
	        item.setProperty('dd', '-' + h);
	    }
	    parser.Push(item);
	};
	BaseMethods.MoveLeftRight = function (parser, name) {
	    var h = parser.GetDimen(name);
	    var nh = (h.charAt(0) === '-' ? h.slice(1) : '-' + h);
	    if (name === '\\moveleft') {
	        var tmp = h;
	        h = nh;
	        nh = tmp;
	    }
	    parser.Push(parser.itemFactory.create('position').setProperties({
	        name: parser.currentCS, move: 'horizontal',
	        left: parser.create('node', 'mspace', [], { width: h }),
	        right: parser.create('node', 'mspace', [], { width: nh })
	    }));
	};
	BaseMethods.Hskip = function (parser, name) {
	    var node = parser.create('node', 'mspace', [], { width: parser.GetDimen(name) });
	    parser.Push(node);
	};
	BaseMethods.Rule = function (parser, name, style) {
	    var w = parser.GetDimen(name), h = parser.GetDimen(name), d = parser.GetDimen(name);
	    var def = { width: w, height: h, depth: d };
	    if (style !== 'blank') {
	        def['mathbackground'] = (parser.stack.env['color'] || 'black');
	    }
	    var node = parser.create('node', 'mspace', [], def);
	    parser.Push(node);
	};
	BaseMethods.rule = function (parser, name) {
	    var v = parser.GetBrackets(name), w = parser.GetDimen(name), h = parser.GetDimen(name);
	    var mml = parser.create('node', 'mspace', [], {
	        width: w, height: h,
	        mathbackground: (parser.stack.env['color'] || 'black')
	    });
	    if (v) {
	        mml = parser.create('node', 'mpadded', [mml], { voffset: v });
	        if (v.match(/^\-/)) {
	            NodeUtil_js_1.default.setAttribute(mml, 'height', v);
	            NodeUtil_js_1.default.setAttribute(mml, 'depth', '+' + v.substr(1));
	        }
	        else {
	            NodeUtil_js_1.default.setAttribute(mml, 'height', '+' + v);
	        }
	    }
	    parser.Push(mml);
	};
	BaseMethods.MakeBig = function (parser, name, mclass, size) {
	    size *= P_HEIGHT;
	    var sizeStr = String(size).replace(/(\.\d\d\d).+/, '$1') + 'em';
	    var delim = parser.GetDelimiter(name, true);
	    var mo = parser.create('token', 'mo', {
	        minsize: sizeStr, maxsize: sizeStr,
	        fence: true, stretchy: true, symmetric: true
	    }, delim);
	    var node = parser.create('node', 'TeXAtom', [mo], { texClass: mclass });
	    parser.Push(node);
	};
	BaseMethods.BuildRel = function (parser, name) {
	    var top = parser.ParseUpTo(name, '\\over');
	    var bot = parser.ParseArg(name);
	    var node = parser.create('node', 'munderover');
	    NodeUtil_js_1.default.setChild(node, 0, bot);
	    NodeUtil_js_1.default.setChild(node, 1, null);
	    NodeUtil_js_1.default.setChild(node, 2, top);
	    var atom = parser.create('node', 'TeXAtom', [node], { texClass: MmlNode_js_1.TEXCLASS.REL });
	    parser.Push(atom);
	};
	BaseMethods.HBox = function (parser, name, style) {
	    parser.PushAll(ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), style));
	};
	BaseMethods.FBox = function (parser, name) {
	    var internal = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
	    var node = parser.create('node', 'menclose', internal, { notation: 'box' });
	    parser.Push(node);
	};
	BaseMethods.Not = function (parser, name) {
	    parser.Push(parser.itemFactory.create('not'));
	};
	BaseMethods.Dots = function (parser, name) {
	    var ldotsEntity = NodeUtil_js_1.default.createEntity('2026');
	    var cdotsEntity = NodeUtil_js_1.default.createEntity('22EF');
	    var ldots = parser.create('token', 'mo', { stretchy: false }, ldotsEntity);
	    var cdots = parser.create('token', 'mo', { stretchy: false }, cdotsEntity);
	    parser.Push(parser.itemFactory.create('dots').setProperties({
	        ldots: ldots,
	        cdots: cdots
	    }));
	};
	BaseMethods.Matrix = function (parser, name, open, close, align, spacing, vspacing, style, cases, numbered) {
	    var c = parser.GetNext();
	    if (c === '') {
	        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
	    }
	    if (c === '{') {
	        parser.i++;
	    }
	    else {
	        parser.string = c + '}' + parser.string.slice(parser.i + 1);
	        parser.i = 0;
	    }
	    var array = parser.itemFactory.create('array').setProperty('requireClose', true);
	    array.arraydef = {
	        rowspacing: (vspacing || '4pt'),
	        columnspacing: (spacing || '1em')
	    };
	    if (cases) {
	        array.setProperty('isCases', true);
	    }
	    if (numbered) {
	        array.setProperty('isNumbered', true);
	        array.arraydef.side = numbered;
	    }
	    if (open || close) {
	        array.setProperty('open', open);
	        array.setProperty('close', close);
	    }
	    if (style === 'D') {
	        array.arraydef.displaystyle = true;
	    }
	    if (align != null) {
	        array.arraydef.columnalign = align;
	    }
	    parser.Push(array);
	};
	BaseMethods.Entry = function (parser, name) {
	    parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));
	    if (parser.stack.Top().getProperty('isCases')) {
	        var str = parser.string;
	        var braces = 0, close_1 = -1, i = parser.i, m = str.length;
	        while (i < m) {
	            var c = str.charAt(i);
	            if (c === '{') {
	                braces++;
	                i++;
	            }
	            else if (c === '}') {
	                if (braces === 0) {
	                    m = 0;
	                }
	                else {
	                    braces--;
	                    if (braces === 0 && close_1 < 0) {
	                        close_1 = i - parser.i;
	                    }
	                    i++;
	                }
	            }
	            else if (c === '&' && braces === 0) {
	                throw new TexError_js_1.default('ExtraAlignTab', 'Extra alignment tab in \\cases text');
	            }
	            else if (c === '\\') {
	                if (str.substr(i).match(/^((\\cr)[^a-zA-Z]|\\\\)/)) {
	                    m = 0;
	                }
	                else {
	                    i += 2;
	                }
	            }
	            else {
	                i++;
	            }
	        }
	        var text = str.substr(parser.i, i - parser.i);
	        if (!text.match(/^\s*\\text[^a-zA-Z]/) || close_1 !== text.replace(/\s+$/, '').length - 1) {
	            var internal = ParseUtil_js_1.default.internalMath(parser, text, 0);
	            parser.PushAll(internal);
	            parser.i = i;
	        }
	    }
	};
	BaseMethods.Cr = function (parser, name) {
	    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name }));
	};
	BaseMethods.CrLaTeX = function (parser, name, nobrackets) {
	    if (nobrackets === void 0) { nobrackets = false; }
	    var n;
	    if (!nobrackets && parser.string.charAt(parser.i) === '[') {
	        var dim = parser.GetBrackets(name, '');
	        var _a = __read(ParseUtil_js_1.default.matchDimen(dim), 3), value = _a[0], unit = _a[1], _ = _a[2];
	        if (dim && !value) {
	            throw new TexError_js_1.default('BracketMustBeDimension', 'Bracket argument to %1 must be a dimension', parser.currentCS);
	        }
	        n = value + unit;
	    }
	    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name, linebreak: true }));
	    var top = parser.stack.Top();
	    var node;
	    if (top instanceof sitem.ArrayItem) {
	        if (n && top.arraydef['rowspacing']) {
	            var rows = top.arraydef['rowspacing'].split(/ /);
	            if (!top.getProperty('rowspacing')) {
	                var dimem = ParseUtil_js_1.default.dimen2em(rows[0]);
	                top.setProperty('rowspacing', dimem);
	            }
	            var rowspacing = top.getProperty('rowspacing');
	            while (rows.length < top.table.length) {
	                rows.push(ParseUtil_js_1.default.Em(rowspacing));
	            }
	            rows[top.table.length - 1] = ParseUtil_js_1.default.Em(Math.max(0, rowspacing + ParseUtil_js_1.default.dimen2em(n)));
	            top.arraydef['rowspacing'] = rows.join(' ');
	        }
	    }
	    else {
	        if (n) {
	            node = parser.create('node', 'mspace', [], { depth: n });
	            parser.Push(node);
	        }
	        node = parser.create('node', 'mspace', [], { linebreak: TexConstants_js_1.TexConstant.LineBreak.NEWLINE });
	        parser.Push(node);
	    }
	};
	BaseMethods.HLine = function (parser, name, style) {
	    if (style == null) {
	        style = 'solid';
	    }
	    var top = parser.stack.Top();
	    if (!(top instanceof sitem.ArrayItem) || top.Size()) {
	        throw new TexError_js_1.default('Misplaced', 'Misplaced %1', parser.currentCS);
	    }
	    if (!top.table.length) {
	        top.frame.push('top');
	    }
	    else {
	        var lines = (top.arraydef['rowlines'] ? top.arraydef['rowlines'].split(/ /) : []);
	        while (lines.length < top.table.length) {
	            lines.push('none');
	        }
	        lines[top.table.length - 1] = style;
	        top.arraydef['rowlines'] = lines.join(' ');
	    }
	};
	BaseMethods.HFill = function (parser, name) {
	    var top = parser.stack.Top();
	    if (top instanceof sitem.ArrayItem) {
	        top.hfill.push(top.Size());
	    }
	    else {
	        throw new TexError_js_1.default('UnsupportedHFill', 'Unsupported use of %1', parser.currentCS);
	    }
	};
	BaseMethods.BeginEnd = function (parser, name) {
	    var env = parser.GetArgument(name);
	    if (env.match(/\\/i)) {
	        throw new TexError_js_1.default('InvalidEnv', 'Invalid environment name \'%1\'', env);
	    }
	    var macro = parser.configuration.handlers.get('environment').lookup(env);
	    if (macro && name === '\\end') {
	        if (!macro.args[0]) {
	            var mml = parser.itemFactory.create('end').setProperty('name', env);
	            parser.Push(mml);
	            return;
	        }
	        parser.stack.env['closing'] = env;
	    }
	    if (++parser.macroCount > parser.configuration.options['maxMacros']) {
	        throw new TexError_js_1.default('MaxMacroSub2', 'MathJax maximum substitution count exceeded; ' +
	            'is there a recursive latex environment?');
	    }
	    parser.parse('environment', [parser, env]);
	};
	BaseMethods.Array = function (parser, begin, open, close, align, spacing, vspacing, style, raggedHeight) {
	    if (!align) {
	        align = parser.GetArgument('\\begin{' + begin.getName() + '}');
	    }
	    var lines = ('c' + align).replace(/[^clr|:]/g, '').replace(/[^|:]([|:])+/g, '$1');
	    align = align.replace(/[^clr]/g, '').split('').join(' ');
	    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');
	    var array = parser.itemFactory.create('array');
	    array.arraydef = {
	        columnalign: align,
	        columnspacing: (spacing || '1em'),
	        rowspacing: (vspacing || '4pt')
	    };
	    if (lines.match(/[|:]/)) {
	        if (lines.charAt(0).match(/[|:]/)) {
	            array.frame.push('left');
	            array.dashed = lines.charAt(0) === ':';
	        }
	        if (lines.charAt(lines.length - 1).match(/[|:]/)) {
	            array.frame.push('right');
	        }
	        lines = lines.substr(1, lines.length - 2);
	        array.arraydef.columnlines =
	            lines.split('').join(' ').replace(/[^|: ]/g, 'none').replace(/\|/g, 'solid').replace(/:/g, 'dashed');
	    }
	    if (open) {
	        array.setProperty('open', parser.convertDelimiter(open));
	    }
	    if (close) {
	        array.setProperty('close', parser.convertDelimiter(close));
	    }
	    if (style === 'D') {
	        array.arraydef['displaystyle'] = true;
	    }
	    else if (style) {
	        array.arraydef['displaystyle'] = false;
	    }
	    if (style === 'S') {
	        array.arraydef['scriptlevel'] = 1;
	    }
	    if (raggedHeight) {
	        array.arraydef['useHeight'] = false;
	    }
	    parser.Push(begin);
	    return array;
	};
	BaseMethods.AlignedArray = function (parser, begin) {
	    var align = parser.GetBrackets('\\begin{' + begin.getName() + '}');
	    var item = BaseMethods.Array(parser, begin);
	    return ParseUtil_js_1.default.setArrayAlign(item, align);
	};
	BaseMethods.Equation = function (parser, begin, numbered) {
	    parser.Push(begin);
	    ParseUtil_js_1.default.checkEqnEnv(parser);
	    return parser.itemFactory.create('equation', numbered).
	        setProperty('name', begin.getName());
	};
	BaseMethods.EqnArray = function (parser, begin, numbered, taggable, align, spacing) {
	    parser.Push(begin);
	    if (taggable) {
	        ParseUtil_js_1.default.checkEqnEnv(parser);
	    }
	    align = align.replace(/[^clr]/g, '').split('').join(' ');
	    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');
	    var newItem = parser.itemFactory.create('eqnarray', begin.getName(), numbered, taggable, parser.stack.global);
	    newItem.arraydef = {
	        displaystyle: true,
	        columnalign: align,
	        columnspacing: (spacing || '1em'),
	        rowspacing: '3pt',
	        side: parser.options['tagSide'],
	        minlabelspacing: parser.options['tagIndent']
	    };
	    return newItem;
	};
	BaseMethods.HandleNoTag = function (parser, name) {
	    parser.tags.notag();
	};
	BaseMethods.HandleLabel = function (parser, name) {
	    var global = parser.stack.global;
	    var label = parser.GetArgument(name);
	    if (label === '') {
	        return;
	    }
	    if (!parser.tags.refUpdate) {
	        if (parser.tags.label) {
	            throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);
	        }
	        parser.tags.label = label;
	        if ((parser.tags.allLabels[label] || parser.tags.labels[label]) && !parser.options['ignoreDuplicateLabels']) {
	            throw new TexError_js_1.default('MultipleLabel', 'Label \'%1\' multiply defined', label);
	        }
	        parser.tags.labels[label] = new Tags_js_1.Label();
	    }
	};
	BaseMethods.HandleRef = function (parser, name, eqref) {
	    var label = parser.GetArgument(name);
	    var ref = parser.tags.allLabels[label] || parser.tags.labels[label];
	    if (!ref) {
	        if (!parser.tags.refUpdate) {
	            parser.tags.redo = true;
	        }
	        ref = new Tags_js_1.Label();
	    }
	    var tag = ref.tag;
	    if (eqref) {
	        tag = parser.tags.formatTag(tag);
	    }
	    var node = parser.create('node', 'mrow', ParseUtil_js_1.default.internalMath(parser, tag), {
	        href: parser.tags.formatUrl(ref.id, parser.options.baseURL), 'class': 'MathJax_ref'
	    });
	    parser.Push(node);
	};
	BaseMethods.Macro = function (parser, name, macro, argcount, def) {
	    if (argcount) {
	        var args = [];
	        if (def != null) {
	            var optional = parser.GetBrackets(name);
	            args.push(optional == null ? def : optional);
	        }
	        for (var i = args.length; i < argcount; i++) {
	            args.push(parser.GetArgument(name));
	        }
	        macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);
	    }
	    parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));
	    parser.i = 0;
	    if (++parser.macroCount > parser.configuration.options['maxMacros']) {
	        throw new TexError_js_1.default('MaxMacroSub1', 'MathJax maximum macro substitution count exceeded; ' +
	            'is there a recursive macro call?');
	    }
	};
	BaseMethods.MathChoice = function (parser, name) {
	    var D = parser.ParseArg(name);
	    var T = parser.ParseArg(name);
	    var S = parser.ParseArg(name);
	    var SS = parser.ParseArg(name);
	    parser.Push(parser.create('node', 'mathchoice', [D, T, S, SS]));
	};
	exports.default = BaseMethods;
	//# sourceMappingURL=BaseMethods.js.map

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Entities = __webpack_require__(176);
	Entities.add({
	    Pcy: '\u041F',
	    Poincareplane: '\u210C',
	    Pr: '\u2ABB',
	    Prime: '\u2033',
	    Proportion: '\u2237',
	    par: '\u2225',
	    para: '\u00B6',
	    parallel: '\u2225',
	    parsim: '\u2AF3',
	    parsl: '\u2AFD',
	    part: '\u2202',
	    pcy: '\u043F',
	    percnt: '\u0025',
	    permil: '\u2030',
	    perp: '\u22A5',
	    pertenk: '\u2031',
	    phmmat: '\u2133',
	    phone: '\u260E',
	    pitchfork: '\u22D4',
	    planck: '\u210F',
	    planckh: '\u210E',
	    plankv: '\u210F',
	    plus: '\u002B',
	    plusacir: '\u2A23',
	    plusb: '\u229E',
	    pluscir: '\u2A22',
	    plusdo: '\u2214',
	    plusdu: '\u2A25',
	    pluse: '\u2A72',
	    plusmn: '\u00B1',
	    plussim: '\u2A26',
	    plustwo: '\u2A27',
	    pm: '\u00B1',
	    pointint: '\u2A15',
	    pound: '\u00A3',
	    pr: '\u227A',
	    prE: '\u2AB3',
	    prcue: '\u227C',
	    pre: '\u2AAF',
	    prec: '\u227A',
	    precapprox: '\u2AB7',
	    preccurlyeq: '\u227C',
	    preceq: '\u2AAF',
	    precsim: '\u227E',
	    primes: '\u2119',
	    prnE: '\u2AB5',
	    prnap: '\u2AB9',
	    prnsim: '\u22E8',
	    prod: '\u220F',
	    profalar: '\u232E',
	    profline: '\u2312',
	    profsurf: '\u2313',
	    prop: '\u221D',
	    propto: '\u221D',
	    prsim: '\u227E',
	    prurel: '\u22B0',
	    puncsp: '\u2008'
	}, 'p');
	//# sourceMappingURL=p.js.map

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Entities = __webpack_require__(176);
	Entities.add({
	    RBarr: '\u2910',
	    REG: '\u00AE',
	    Racute: '\u0154',
	    Rang: '\u27EB',
	    Rarrtl: '\u2916',
	    Rcaron: '\u0158',
	    Rcedil: '\u0156',
	    Rcy: '\u0420',
	    ReverseElement: '\u220B',
	    ReverseUpEquilibrium: '\u296F',
	    Rho: '\u03A1',
	    RightArrowBar: '\u21E5',
	    RightDoubleBracket: '\u27E7',
	    RightDownTeeVector: '\u295D',
	    RightDownVectorBar: '\u2955',
	    RightTeeVector: '\u295B',
	    RightTriangleBar: '\u29D0',
	    RightUpDownVector: '\u294F',
	    RightUpTeeVector: '\u295C',
	    RightUpVectorBar: '\u2954',
	    RightVectorBar: '\u2953',
	    RoundImplies: '\u2970',
	    RuleDelayed: '\u29F4',
	    rAarr: '\u21DB',
	    rArr: '\u21D2',
	    rAtail: '\u291C',
	    rBarr: '\u290F',
	    rHar: '\u2964',
	    race: '\u223D\u0331',
	    racute: '\u0155',
	    radic: '\u221A',
	    raemptyv: '\u29B3',
	    rang: '\u27E9',
	    rangd: '\u2992',
	    range: '\u29A5',
	    rangle: '\u27E9',
	    raquo: '\u00BB',
	    rarr: '\u2192',
	    rarrap: '\u2975',
	    rarrb: '\u21E5',
	    rarrbfs: '\u2920',
	    rarrc: '\u2933',
	    rarrfs: '\u291E',
	    rarrhk: '\u21AA',
	    rarrlp: '\u21AC',
	    rarrpl: '\u2945',
	    rarrsim: '\u2974',
	    rarrw: '\u219D',
	    ratail: '\u291A',
	    ratio: '\u2236',
	    rationals: '\u211A',
	    rbarr: '\u290D',
	    rbbrk: '\u2773',
	    rbrke: '\u298C',
	    rbrksld: '\u298E',
	    rbrkslu: '\u2990',
	    rcaron: '\u0159',
	    rcedil: '\u0157',
	    rceil: '\u2309',
	    rcub: '\u007D',
	    rcy: '\u0440',
	    rdca: '\u2937',
	    rdldhar: '\u2969',
	    rdquo: '\u201D',
	    rdquor: '\u201D',
	    rdsh: '\u21B3',
	    real: '\u211C',
	    realine: '\u211B',
	    realpart: '\u211C',
	    reals: '\u211D',
	    rect: '\u25AD',
	    reg: '\u00AE',
	    rfisht: '\u297D',
	    rfloor: '\u230B',
	    rhard: '\u21C1',
	    rharu: '\u21C0',
	    rharul: '\u296C',
	    rightarrow: '\u2192',
	    rightarrowtail: '\u21A3',
	    rightharpoondown: '\u21C1',
	    rightharpoonup: '\u21C0',
	    rightleftarrows: '\u21C4',
	    rightleftharpoons: '\u21CC',
	    rightsquigarrow: '\u219D',
	    risingdotseq: '\u2253',
	    rlarr: '\u21C4',
	    rlhar: '\u21CC',
	    rlm: '\u200F',
	    rmoustache: '\u23B1',
	    rnmid: '\u2AEE',
	    roang: '\u27ED',
	    roarr: '\u21FE',
	    robrk: '\u27E7',
	    ropar: '\u2986',
	    roplus: '\u2A2E',
	    rotimes: '\u2A35',
	    rpar: '\u0029',
	    rpargt: '\u2994',
	    rppolint: '\u2A12',
	    rrarr: '\u21C9',
	    rsaquo: '\u203A',
	    rsh: '\u21B1',
	    rsqb: '\u005D',
	    rsquo: '\u2019',
	    rsquor: '\u2019',
	    rthree: '\u22CC',
	    rtrie: '\u22B5',
	    rtrif: '\u25B8',
	    rtriltri: '\u29CE',
	    ruluhar: '\u2968',
	    rx: '\u211E'
	}, 'r');
	//# sourceMappingURL=r.js.map

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var OutputJax_js_1 = __webpack_require__(199);
	var WrapperFactory_js_1 = __webpack_require__(204);
	var tex_js_1 = __webpack_require__(292);
	var LENGTHS = __webpack_require__(202);
	var string_js_1 = __webpack_require__(164);
	var CHTML = (function (_super) {
	    __extends(CHTML, _super);
	    function CHTML(options) {
	        if (options === void 0) { options = null; }
	        var _this = _super.call(this, options, WrapperFactory_js_1.CHTMLWrapperFactory, tex_js_1.TeXFont) || this;
	        _this.font.adaptiveCSS(_this.options.adaptiveCSS);
	        return _this;
	    }
	    CHTML.prototype.escaped = function (math, html) {
	        this.setDocument(html);
	        return this.html('span', {}, [this.text(math.math)]);
	    };
	    CHTML.prototype.styleSheet = function (html) {
	        var sheet = _super.prototype.styleSheet.call(this, html);
	        this.adaptor.setAttribute(sheet, 'id', CHTML.STYLESHEETID);
	        return sheet;
	    };
	    CHTML.prototype.addClassStyles = function (CLASS) {
	        var _a;
	        if (!this.options.adaptiveCSS || CLASS.used) {
	            if (CLASS.autoStyle && CLASS.kind !== 'unknown') {
	                this.cssStyles.addStyles((_a = {},
	                    _a['mjx-' + CLASS.kind] = {
	                        display: 'inline-block',
	                        'text-align': 'left'
	                    },
	                    _a));
	            }
	            _super.prototype.addClassStyles.call(this, CLASS);
	        }
	    };
	    CHTML.prototype.processMath = function (math, parent) {
	        this.factory.wrap(math).toCHTML(parent);
	    };
	    CHTML.prototype.clearCache = function () {
	        var e_1, _a;
	        this.cssStyles.clear();
	        this.font.clearCache();
	        try {
	            for (var _b = __values(this.factory.getKinds()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var kind = _c.value;
	                this.factory.getNodeClass(kind).used = false;
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    CHTML.prototype.unknownText = function (text, variant) {
	        var styles = {};
	        var scale = 100 / this.math.metrics.scale;
	        if (scale !== 100) {
	            styles['font-size'] = this.fixed(scale, 1) + '%';
	            styles.padding = LENGTHS.em(75 / scale) + ' 0 ' + LENGTHS.em(20 / scale) + ' 0';
	        }
	        if (variant !== '-explicitFont') {
	            var c = string_js_1.unicodeChars(text);
	            if (c.length !== 1 || c[0] < 0x1D400 || c[0] > 0x1D7FF) {
	                this.cssFontStyles(this.font.getCssFont(variant), styles);
	            }
	        }
	        return this.html('mjx-utext', { variant: variant, style: styles }, [this.text(text)]);
	    };
	    CHTML.prototype.measureTextNode = function (text) {
	        var adaptor = this.adaptor;
	        text = adaptor.clone(text);
	        var style = { position: 'absolute', 'white-space': 'nowrap' };
	        var node = this.html('mjx-measure-text', { style: style }, [text]);
	        adaptor.append(adaptor.parent(this.math.start.node), this.container);
	        adaptor.append(this.container, node);
	        var w = adaptor.nodeSize(text, this.math.metrics.em)[0] / this.math.metrics.scale;
	        adaptor.remove(this.container);
	        adaptor.remove(node);
	        return { w: w, h: .75, d: .2 };
	    };
	    CHTML.prototype.getFontData = function (styles) {
	        var font = _super.prototype.getFontData.call(this, styles);
	        font[0] = 'MJXZERO, ' + font[0];
	        return font;
	    };
	    CHTML.prototype.cssFontStyles = function (font, styles) {
	        if (styles === void 0) { styles = {}; }
	        font[0] = 'MJXZERO, ' + font[0];
	        return _super.prototype.cssFontStyles.call(this, font, styles);
	    };
	    CHTML.NAME = 'CHTML';
	    CHTML.OPTIONS = __assign(__assign({}, OutputJax_js_1.CommonOutputJax.OPTIONS), { adaptiveCSS: true });
	    CHTML.commonStyles = {
	        'mjx-container[jax="CHTML"]': { 'line-height': 0 },
	        'mjx-container [space="1"]': { 'margin-left': '.111em' },
	        'mjx-container [space="2"]': { 'margin-left': '.167em' },
	        'mjx-container [space="3"]': { 'margin-left': '.222em' },
	        'mjx-container [space="4"]': { 'margin-left': '.278em' },
	        'mjx-container [space="5"]': { 'margin-left': '.333em' },
	        'mjx-container [rspace="1"]': { 'margin-right': '.111em' },
	        'mjx-container [rspace="2"]': { 'margin-right': '.167em' },
	        'mjx-container [rspace="3"]': { 'margin-right': '.222em' },
	        'mjx-container [rspace="4"]': { 'margin-right': '.278em' },
	        'mjx-container [rspace="5"]': { 'margin-right': '.333em' },
	        'mjx-container [size="s"]': { 'font-size': '70.7%' },
	        'mjx-container [size="ss"]': { 'font-size': '50%' },
	        'mjx-container [size="Tn"]': { 'font-size': '60%' },
	        'mjx-container [size="sm"]': { 'font-size': '85%' },
	        'mjx-container [size="lg"]': { 'font-size': '120%' },
	        'mjx-container [size="Lg"]': { 'font-size': '144%' },
	        'mjx-container [size="LG"]': { 'font-size': '173%' },
	        'mjx-container [size="hg"]': { 'font-size': '207%' },
	        'mjx-container [size="HG"]': { 'font-size': '249%' },
	        'mjx-container [width="full"]': { width: '100%' },
	        'mjx-box': { display: 'inline-block' },
	        'mjx-block': { display: 'block' },
	        'mjx-itable': { display: 'inline-table' },
	        'mjx-row': { display: 'table-row' },
	        'mjx-row > *': { display: 'table-cell' },
	        'mjx-mtext': {
	            display: 'inline-block'
	        },
	        'mjx-mstyle': {
	            display: 'inline-block'
	        },
	        'mjx-merror': {
	            display: 'inline-block',
	            color: 'red',
	            'background-color': 'yellow'
	        },
	        'mjx-mphantom': { visibility: 'hidden' }
	    };
	    CHTML.STYLESHEETID = 'MJX-CHTML-styles';
	    return CHTML;
	}(OutputJax_js_1.CommonOutputJax));
	exports.CHTML = CHTML;
	//# sourceMappingURL=chtml.js.map

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var OutputJax_js_1 = __webpack_require__(200);
	var MathItem_js_1 = __webpack_require__(165);
	var Options_js_1 = __webpack_require__(160);
	var CssStyles_js_1 = __webpack_require__(201);
	var lengths_js_1 = __webpack_require__(202);
	var Styles_js_1 = __webpack_require__(203);
	var CommonOutputJax = (function (_super) {
	    __extends(CommonOutputJax, _super);
	    function CommonOutputJax(options, defaultFactory, defaultFont) {
	        if (options === void 0) { options = null; }
	        if (defaultFactory === void 0) { defaultFactory = null; }
	        if (defaultFont === void 0) { defaultFont = null; }
	        var _this = this;
	        var _a = __read(Options_js_1.separateOptions(options, defaultFont.OPTIONS), 2), jaxOptions = _a[0], fontOptions = _a[1];
	        _this = _super.call(this, jaxOptions) || this;
	        _this.factory = _this.options.wrapperFactory ||
	            new defaultFactory();
	        _this.factory.jax = _this;
	        _this.cssStyles = _this.options.cssStyles || new CssStyles_js_1.CssStyles();
	        _this.font = _this.options.font || new defaultFont(fontOptions);
	        _this.unknownCache = new Map();
	        return _this;
	    }
	    CommonOutputJax.prototype.typeset = function (math, html) {
	        this.setDocument(html);
	        var node = this.createNode();
	        this.toDOM(math, node, html);
	        return node;
	    };
	    CommonOutputJax.prototype.createNode = function () {
	        var jax = this.constructor.NAME;
	        return this.html('mjx-container', { 'class': 'MathJax', jax: jax });
	    };
	    CommonOutputJax.prototype.setScale = function (node) {
	        var scale = this.math.metrics.scale * this.options.scale;
	        if (scale !== 1) {
	            this.adaptor.setStyle(node, 'fontSize', lengths_js_1.percent(scale));
	        }
	    };
	    CommonOutputJax.prototype.toDOM = function (math, node, html) {
	        if (html === void 0) { html = null; }
	        this.setDocument(html);
	        this.math = math;
	        this.pxPerEm = math.metrics.ex / this.font.params.x_height;
	        math.root.setTeXclass(null);
	        this.setScale(node);
	        this.nodeMap = new Map();
	        this.container = node;
	        this.processMath(math.root, node);
	        this.nodeMap = null;
	        this.executeFilters(this.postFilters, math, html, node);
	    };
	    CommonOutputJax.prototype.getBBox = function (math, html) {
	        this.setDocument(html);
	        this.math = math;
	        math.root.setTeXclass(null);
	        this.nodeMap = new Map();
	        var bbox = this.factory.wrap(math.root).getBBox();
	        this.nodeMap = null;
	        return bbox;
	    };
	    CommonOutputJax.prototype.getMetrics = function (html) {
	        var e_1, _a;
	        this.setDocument(html);
	        var adaptor = this.adaptor;
	        var maps = this.getMetricMaps(html);
	        try {
	            for (var _b = __values(html.math), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var math = _c.value;
	                var parent_1 = adaptor.parent(math.start.node);
	                if (math.state() < MathItem_js_1.STATE.METRICS && parent_1) {
	                    var map = maps[math.display ? 1 : 0];
	                    var _d = map.get(parent_1), em = _d.em, ex = _d.ex, containerWidth = _d.containerWidth, lineWidth = _d.lineWidth, scale = _d.scale;
	                    math.setMetrics(em, ex, containerWidth, lineWidth, scale);
	                    math.state(MathItem_js_1.STATE.METRICS);
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    CommonOutputJax.prototype.getMetricsFor = function (node, display) {
	        var test = this.getTestElement(node, display);
	        var metrics = this.measureMetrics(test);
	        this.adaptor.remove(test);
	        return metrics;
	    };
	    CommonOutputJax.prototype.getMetricMaps = function (html) {
	        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;
	        var adaptor = this.adaptor;
	        var domMaps = [new Map(), new Map()];
	        try {
	            for (var _f = __values(html.math), _g = _f.next(); !_g.done; _g = _f.next()) {
	                var math = _g.value;
	                var node = adaptor.parent(math.start.node);
	                if (node && math.state() < MathItem_js_1.STATE.METRICS) {
	                    var map = domMaps[math.display ? 1 : 0];
	                    if (!map.has(node)) {
	                        map.set(node, this.getTestElement(node, math.display));
	                    }
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        var maps = [new Map(), new Map()];
	        try {
	            for (var _h = __values(maps.keys()), _j = _h.next(); !_j.done; _j = _h.next()) {
	                var i = _j.value;
	                try {
	                    for (var _k = (e_4 = void 0, __values(domMaps[i].keys())), _l = _k.next(); !_l.done; _l = _k.next()) {
	                        var node = _l.value;
	                        maps[i].set(node, this.measureMetrics(domMaps[i].get(node)));
	                    }
	                }
	                catch (e_4_1) { e_4 = { error: e_4_1 }; }
	                finally {
	                    try {
	                        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
	                    }
	                    finally { if (e_4) throw e_4.error; }
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        try {
	            for (var _m = __values(maps.keys()), _o = _m.next(); !_o.done; _o = _m.next()) {
	                var i = _o.value;
	                try {
	                    for (var _p = (e_6 = void 0, __values(domMaps[i].values())), _q = _p.next(); !_q.done; _q = _p.next()) {
	                        var node = _q.value;
	                        adaptor.remove(node);
	                    }
	                }
	                catch (e_6_1) { e_6 = { error: e_6_1 }; }
	                finally {
	                    try {
	                        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);
	                    }
	                    finally { if (e_6) throw e_6.error; }
	                }
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	        return maps;
	    };
	    CommonOutputJax.prototype.getTestElement = function (node, display) {
	        var adaptor = this.adaptor;
	        if (!this.testInline) {
	            this.testInline = this.html('mjx-test', { style: {
	                    display: 'inline-block',
	                    width: '100%',
	                    'font-style': 'normal',
	                    'font-weight': 'normal',
	                    'font-size': '100%',
	                    'font-size-adjust': 'none',
	                    'text-indent': 0,
	                    'text-transform': 'none',
	                    'letter-spacing': 'normal',
	                    'word-spacing': 'normal',
	                    overflow: 'hidden',
	                    height: '1px',
	                    'margin-right': '-1px'
	                } }, [
	                this.html('mjx-left-box', { style: {
	                        display: 'inline-block',
	                        width: 0,
	                        'float': 'left'
	                    } }),
	                this.html('mjx-ex-box', { style: {
	                        position: 'absolute',
	                        overflow: 'hidden',
	                        width: '1px', height: '60ex'
	                    } }),
	                this.html('mjx-right-box', { style: {
	                        display: 'inline-block',
	                        width: 0,
	                        'float': 'right'
	                    } })
	            ]);
	            this.testDisplay = adaptor.clone(this.testInline);
	            adaptor.setStyle(this.testDisplay, 'display', 'table');
	            adaptor.setStyle(this.testDisplay, 'margin-right', '');
	            adaptor.setStyle(adaptor.firstChild(this.testDisplay), 'display', 'none');
	            var right = adaptor.lastChild(this.testDisplay);
	            adaptor.setStyle(right, 'display', 'table-cell');
	            adaptor.setStyle(right, 'width', '10000em');
	            adaptor.setStyle(right, 'float', '');
	        }
	        return adaptor.append(node, adaptor.clone(display ? this.testDisplay : this.testInline));
	    };
	    CommonOutputJax.prototype.measureMetrics = function (node) {
	        var adaptor = this.adaptor;
	        var em = adaptor.fontSize(node);
	        var ex = (adaptor.nodeSize(adaptor.childNode(node, 1))[1] / 60) || (em * this.options.exFactor);
	        var containerWidth = (adaptor.getStyle(node, 'display') === 'table' ?
	            adaptor.nodeSize(adaptor.lastChild(node))[0] - 1 :
	            adaptor.nodeBBox(adaptor.lastChild(node)).left -
	                adaptor.nodeBBox(adaptor.firstChild(node)).left - 2);
	        var scale = Math.max(this.options.minScale, this.options.matchFontHeight ? ex / this.font.params.x_height / em : 1);
	        var lineWidth = 1000000;
	        return { em: em, ex: ex, containerWidth: containerWidth, lineWidth: lineWidth, scale: scale };
	    };
	    CommonOutputJax.prototype.styleSheet = function (html) {
	        var e_7, _a, e_8, _b;
	        this.setDocument(html);
	        this.cssStyles.clear();
	        this.cssStyles.addStyles(this.constructor.commonStyles);
	        if ('getStyles' in html) {
	            try {
	                for (var _c = __values(html.getStyles()), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var styles = _d.value;
	                    this.cssStyles.addStyles(styles);
	                }
	            }
	            catch (e_7_1) { e_7 = { error: e_7_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                }
	                finally { if (e_7) throw e_7.error; }
	            }
	        }
	        try {
	            for (var _e = __values(this.factory.getKinds()), _f = _e.next(); !_f.done; _f = _e.next()) {
	                var kind = _f.value;
	                this.addClassStyles(this.factory.getNodeClass(kind));
	            }
	        }
	        catch (e_8_1) { e_8 = { error: e_8_1 }; }
	        finally {
	            try {
	                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	            }
	            finally { if (e_8) throw e_8.error; }
	        }
	        this.cssStyles.addStyles(this.font.styles);
	        var sheet = this.html('style', { id: 'MJX-styles' }, [this.text('\n' + this.cssStyles.cssText + '\n')]);
	        return sheet;
	    };
	    CommonOutputJax.prototype.addClassStyles = function (CLASS) {
	        this.cssStyles.addStyles(CLASS.styles);
	    };
	    CommonOutputJax.prototype.setDocument = function (html) {
	        if (html) {
	            this.document = html;
	            this.adaptor.document = html.document;
	        }
	    };
	    CommonOutputJax.prototype.html = function (type, def, content, ns) {
	        if (def === void 0) { def = {}; }
	        if (content === void 0) { content = []; }
	        return this.adaptor.node(type, def, content, ns);
	    };
	    CommonOutputJax.prototype.text = function (text) {
	        return this.adaptor.text(text);
	    };
	    CommonOutputJax.prototype.fixed = function (m, n) {
	        if (n === void 0) { n = 3; }
	        if (Math.abs(m) < .0006) {
	            return '0';
	        }
	        return m.toFixed(n).replace(/\.?0+$/, '');
	    };
	    CommonOutputJax.prototype.measureText = function (text, variant, font) {
	        if (font === void 0) { font = ['', false, false]; }
	        var node = this.unknownText(text, variant);
	        if (variant === '-explicitFont') {
	            var styles = this.cssFontStyles(font);
	            this.adaptor.setAttributes(node, { style: styles });
	        }
	        return this.measureTextNodeWithCache(node, text, variant, font);
	    };
	    CommonOutputJax.prototype.measureTextNodeWithCache = function (text, chars, variant, font) {
	        if (font === void 0) { font = ['', false, false]; }
	        if (variant === '-explicitFont') {
	            variant = [font[0], font[1] ? 'T' : 'F', font[2] ? 'T' : 'F', ''].join('-');
	        }
	        if (!this.unknownCache.has(variant)) {
	            this.unknownCache.set(variant, new Map());
	        }
	        var map = this.unknownCache.get(variant);
	        var cached = map.get(chars);
	        if (cached)
	            return cached;
	        var bbox = this.measureTextNode(text);
	        map.set(chars, bbox);
	        return bbox;
	    };
	    CommonOutputJax.prototype.measureXMLnode = function (xml) {
	        var adaptor = this.adaptor;
	        var content = this.html('mjx-xml-block', { style: { display: 'inline-block' } }, [adaptor.clone(xml)]);
	        var base = this.html('mjx-baseline', { style: { display: 'inline-block', width: 0, height: 0 } });
	        var style = {
	            position: 'absolute',
	            display: 'inline-block',
	            'font-family': 'initial',
	            'line-height': 'normal'
	        };
	        var node = this.html('mjx-measure-xml', { style: style }, [base, content]);
	        adaptor.append(adaptor.parent(this.math.start.node), this.container);
	        adaptor.append(this.container, node);
	        var em = this.math.metrics.em * this.math.metrics.scale;
	        var _a = adaptor.nodeBBox(content), left = _a.left, right = _a.right, bottom = _a.bottom, top = _a.top;
	        var w = (right - left) / em;
	        var h = (adaptor.nodeBBox(base).top - top) / em;
	        var d = (bottom - top) / em - h;
	        adaptor.remove(this.container);
	        adaptor.remove(node);
	        return { w: w, h: h, d: d };
	    };
	    CommonOutputJax.prototype.cssFontStyles = function (font, styles) {
	        if (styles === void 0) { styles = {}; }
	        var _a = __read(font, 3), family = _a[0], italic = _a[1], bold = _a[2];
	        styles['font-family'] = family;
	        if (italic)
	            styles['font-style'] = 'italic';
	        if (bold)
	            styles['font-weight'] = 'bold';
	        return styles;
	    };
	    CommonOutputJax.prototype.getFontData = function (styles) {
	        if (!styles) {
	            styles = new Styles_js_1.Styles();
	        }
	        return [styles.get('font-family'),
	            styles.get('font-style') === 'italic',
	            styles.get('font-weight') === 'bold'];
	    };
	    CommonOutputJax.NAME = 'Common';
	    CommonOutputJax.OPTIONS = __assign(__assign({}, OutputJax_js_1.AbstractOutputJax.OPTIONS), { scale: 1, minScale: .5, matchFontHeight: true, mtextInheritFont: false, merrorInheritFont: true, mathmlSpacing: false, skipAttributes: {}, exFactor: .5, displayAlign: 'center', displayIndent: '0', wrapperFactory: null, font: null, cssStyles: null });
	    CommonOutputJax.commonStyles = {};
	    return CommonOutputJax;
	}(OutputJax_js_1.AbstractOutputJax));
	exports.CommonOutputJax = CommonOutputJax;
	//# sourceMappingURL=OutputJax.js.map

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Options_js_1 = __webpack_require__(160);
	var FunctionList_js_1 = __webpack_require__(161);
	var AbstractOutputJax = (function () {
	    function AbstractOutputJax(options) {
	        if (options === void 0) { options = {}; }
	        this.adaptor = null;
	        var CLASS = this.constructor;
	        this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
	        this.postFilters = new FunctionList_js_1.FunctionList();
	    }
	    Object.defineProperty(AbstractOutputJax.prototype, "name", {
	        get: function () {
	            return this.constructor.NAME;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractOutputJax.prototype.setAdaptor = function (adaptor) {
	        this.adaptor = adaptor;
	    };
	    AbstractOutputJax.prototype.initialize = function () {
	    };
	    AbstractOutputJax.prototype.getMetrics = function (document) {
	    };
	    AbstractOutputJax.prototype.styleSheet = function (document) {
	        return null;
	    };
	    AbstractOutputJax.prototype.pageElements = function (document) {
	        return null;
	    };
	    AbstractOutputJax.prototype.executeFilters = function (filters, math, document, data) {
	        var args = { math: math, document: document, data: data };
	        filters.execute(args);
	        return args.data;
	    };
	    AbstractOutputJax.NAME = 'generic';
	    AbstractOutputJax.OPTIONS = {};
	    return AbstractOutputJax;
	}());
	exports.AbstractOutputJax = AbstractOutputJax;
	//# sourceMappingURL=OutputJax.js.map

/***/ }),
/* 201 */
/***/ (function(module, exports) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var CssStyles = (function () {
	    function CssStyles(styles) {
	        if (styles === void 0) { styles = null; }
	        this.styles = {};
	        this.addStyles(styles);
	    }
	    Object.defineProperty(CssStyles.prototype, "cssText", {
	        get: function () {
	            return this.getStyleString();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    CssStyles.prototype.addStyles = function (styles) {
	        var e_1, _a;
	        if (!styles)
	            return;
	        try {
	            for (var _b = __values(Object.keys(styles)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var style = _c.value;
	                if (!this.styles[style]) {
	                    this.styles[style] = {};
	                }
	                Object.assign(this.styles[style], styles[style]);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    CssStyles.prototype.removeStyles = function () {
	        var e_2, _a;
	        var selectors = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            selectors[_i] = arguments[_i];
	        }
	        try {
	            for (var selectors_1 = __values(selectors), selectors_1_1 = selectors_1.next(); !selectors_1_1.done; selectors_1_1 = selectors_1.next()) {
	                var selector = selectors_1_1.value;
	                delete this.styles[selector];
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (selectors_1_1 && !selectors_1_1.done && (_a = selectors_1.return)) _a.call(selectors_1);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    CssStyles.prototype.clear = function () {
	        this.styles = {};
	    };
	    CssStyles.prototype.getStyleString = function () {
	        var e_3, _a;
	        var selectors = Object.keys(this.styles);
	        var defs = new Array(selectors.length);
	        var i = 0;
	        try {
	            for (var selectors_2 = __values(selectors), selectors_2_1 = selectors_2.next(); !selectors_2_1.done; selectors_2_1 = selectors_2.next()) {
	                var selector = selectors_2_1.value;
	                defs[i++] = selector + ' {\n' + this.getStyleDefString(this.styles[selector]) + '\n}';
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (selectors_2_1 && !selectors_2_1.done && (_a = selectors_2.return)) _a.call(selectors_2);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        return defs.join('\n\n');
	    };
	    CssStyles.prototype.getStyleDefString = function (styles) {
	        var e_4, _a;
	        var properties = Object.keys(styles);
	        var values = new Array(properties.length);
	        var i = 0;
	        try {
	            for (var properties_1 = __values(properties), properties_1_1 = properties_1.next(); !properties_1_1.done; properties_1_1 = properties_1.next()) {
	                var property = properties_1_1.value;
	                values[i++] = '  ' + property + ': ' + styles[property] + ';';
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (properties_1_1 && !properties_1_1.done && (_a = properties_1.return)) _a.call(properties_1);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	        return values.join('\n');
	    };
	    return CssStyles;
	}());
	exports.CssStyles = CssStyles;
	//# sourceMappingURL=CssStyles.js.map

/***/ }),
/* 202 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.BIGDIMEN = 1000000;
	exports.UNITS = {
	    px: 1,
	    'in': 96,
	    cm: 96 / 2.54,
	    mm: 96 / 25.4
	};
	exports.RELUNITS = {
	    em: 1,
	    ex: .431,
	    pt: 1 / 10,
	    pc: 12 / 10,
	    mu: 1 / 18
	};
	exports.MATHSPACE = {
	    veryverythinmathspace: 1 / 18,
	    verythinmathspace: 2 / 18,
	    thinmathspace: 3 / 18,
	    mediummathspace: 4 / 18,
	    thickmathspace: 5 / 18,
	    verythickmathspace: 6 / 18,
	    veryverythickmathspace: 7 / 18,
	    negativeveryverythinmathspace: -1 / 18,
	    negativeverythinmathspace: -2 / 18,
	    negativethinmathspace: -3 / 18,
	    negativemediummathspace: -4 / 18,
	    negativethickmathspace: -5 / 18,
	    negativeverythickmathspace: -6 / 18,
	    negativeveryverythickmathspace: -7 / 18,
	    thin: .04,
	    medium: .06,
	    thick: .1,
	    normal: 1,
	    big: 2,
	    small: 1 / Math.sqrt(2),
	    infinity: exports.BIGDIMEN
	};
	function length2em(length, size, scale, em) {
	    if (size === void 0) { size = 0; }
	    if (scale === void 0) { scale = 1; }
	    if (em === void 0) { em = 16; }
	    if (typeof length !== 'string') {
	        length = String(length);
	    }
	    if (length === '' || length == null) {
	        return size;
	    }
	    if (exports.MATHSPACE[length]) {
	        return exports.MATHSPACE[length];
	    }
	    var match = length.match(/^\s*([-+]?(?:\.\d+|\d+(?:\.\d*)?))?(pt|em|ex|mu|px|pc|in|mm|cm|%)?/);
	    if (!match) {
	        return size;
	    }
	    var m = parseFloat(match[1] || '1'), unit = match[2];
	    if (exports.UNITS.hasOwnProperty(unit)) {
	        return m * exports.UNITS[unit] / em / scale;
	    }
	    if (exports.RELUNITS.hasOwnProperty(unit)) {
	        return m * exports.RELUNITS[unit];
	    }
	    if (unit === '%') {
	        return m / 100 * size;
	    }
	    return m * size;
	}
	exports.length2em = length2em;
	function percent(m) {
	    return (100 * m).toFixed(1).replace(/\.?0+$/, '') + '%';
	}
	exports.percent = percent;
	function em(m) {
	    if (Math.abs(m) < .001)
	        return '0';
	    return (m.toFixed(3).replace(/\.?0+$/, '')) + 'em';
	}
	exports.em = em;
	function emRounded(m, em) {
	    if (em === void 0) { em = 16; }
	    m = (Math.round(m * em) + .05) / em;
	    if (Math.abs(m) < .001)
	        return '0em';
	    return m.toFixed(3).replace(/\.?0+$/, '') + 'em';
	}
	exports.emRounded = emRounded;
	function px(m, M, em) {
	    if (M === void 0) { M = -exports.BIGDIMEN; }
	    if (em === void 0) { em = 16; }
	    m *= em;
	    if (M && m < M)
	        m = M;
	    if (Math.abs(m) < .1)
	        return '0';
	    return m.toFixed(1).replace(/\.0$/, '') + 'px';
	}
	exports.px = px;
	//# sourceMappingURL=lengths.js.map

/***/ }),
/* 203 */
/***/ (function(module, exports) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var TRBL = ['top', 'right', 'bottom', 'left'];
	var WSC = ['width', 'style', 'color'];
	function splitSpaces(text) {
	    var parts = text.split(/((?:'[^']*'|"[^"]*"|,[\s\n]|[^\s\n])*)/g);
	    var split = [];
	    while (parts.length > 1) {
	        parts.shift();
	        split.push(parts.shift());
	    }
	    return split;
	}
	function splitTRBL(name) {
	    var e_1, _a;
	    var parts = splitSpaces(this.styles[name]);
	    if (parts.length === 0) {
	        parts.push('');
	    }
	    if (parts.length === 1) {
	        parts.push(parts[0]);
	    }
	    if (parts.length === 2) {
	        parts.push(parts[0]);
	    }
	    if (parts.length === 3) {
	        parts.push(parts[1]);
	    }
	    try {
	        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var child = _c.value;
	            this.setStyle(this.childName(name, child), parts.shift());
	        }
	    }
	    catch (e_1_1) { e_1 = { error: e_1_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_1) throw e_1.error; }
	    }
	}
	function combineTRBL(name) {
	    var e_2, _a;
	    var children = Styles.connect[name].children;
	    var parts = [];
	    try {
	        for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
	            var child = children_1_1.value;
	            var part = this.styles[name + '-' + child];
	            if (!part) {
	                delete this.styles[name];
	                return;
	            }
	            parts.push(part);
	        }
	    }
	    catch (e_2_1) { e_2 = { error: e_2_1 }; }
	    finally {
	        try {
	            if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
	        }
	        finally { if (e_2) throw e_2.error; }
	    }
	    if (parts[3] === parts[1]) {
	        parts.pop();
	        if (parts[2] === parts[0]) {
	            parts.pop();
	            if (parts[1] === parts[0]) {
	                parts.pop();
	            }
	        }
	    }
	    this.styles[name] = parts.join(' ');
	}
	function splitSame(name) {
	    var e_3, _a;
	    try {
	        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var child = _c.value;
	            this.setStyle(this.childName(name, child), this.styles[name]);
	        }
	    }
	    catch (e_3_1) { e_3 = { error: e_3_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_3) throw e_3.error; }
	    }
	}
	function combineSame(name) {
	    var e_4, _a;
	    var children = __spread(Styles.connect[name].children);
	    var value = this.styles[this.childName(name, children.shift())];
	    try {
	        for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {
	            var child = children_2_1.value;
	            if (this.styles[this.childName(name, child)] !== value) {
	                delete this.styles[name];
	                return;
	            }
	        }
	    }
	    catch (e_4_1) { e_4 = { error: e_4_1 }; }
	    finally {
	        try {
	            if (children_2_1 && !children_2_1.done && (_a = children_2.return)) _a.call(children_2);
	        }
	        finally { if (e_4) throw e_4.error; }
	    }
	    this.styles[name] = value;
	}
	var BORDER = {
	    width: /^(?:[\d.]+(?:[a-z]+)|thin|medium|thick|inherit|initial|unset)$/,
	    style: /^(?:none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|inherit|initial|unset)$/
	};
	function splitWSC(name) {
	    var e_5, _a, e_6, _b;
	    var parts = { width: '', style: '', color: '' };
	    try {
	        for (var _c = __values(splitSpaces(this.styles[name])), _d = _c.next(); !_d.done; _d = _c.next()) {
	            var part = _d.value;
	            if (part.match(BORDER.width) && parts.width === '') {
	                parts.width = part;
	            }
	            else if (part.match(BORDER.style) && parts.style === '') {
	                parts.style = part;
	            }
	            else {
	                parts.color = part;
	            }
	        }
	    }
	    catch (e_5_1) { e_5 = { error: e_5_1 }; }
	    finally {
	        try {
	            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	        }
	        finally { if (e_5) throw e_5.error; }
	    }
	    try {
	        for (var _e = __values(Styles.connect[name].children), _f = _e.next(); !_f.done; _f = _e.next()) {
	            var child = _f.value;
	            this.setStyle(this.childName(name, child), parts[child]);
	        }
	    }
	    catch (e_6_1) { e_6 = { error: e_6_1 }; }
	    finally {
	        try {
	            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	        }
	        finally { if (e_6) throw e_6.error; }
	    }
	}
	function combineWSC(name) {
	    var e_7, _a;
	    var parts = [];
	    try {
	        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var child = _c.value;
	            var value = this.styles[this.childName(name, child)];
	            if (value) {
	                parts.push(value);
	            }
	        }
	    }
	    catch (e_7_1) { e_7 = { error: e_7_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_7) throw e_7.error; }
	    }
	    if (parts.length) {
	        this.styles[name] = parts.join(' ');
	    }
	    else {
	        delete this.styles[name];
	    }
	}
	var FONT = {
	    style: /^(?:normal|italic|oblique|inherit|initial|unset)$/,
	    variant: new RegExp('^(?:' +
	        ['normal|none',
	            'inherit|initial|unset',
	            'common-ligatures|no-common-ligatures',
	            'discretionary-ligatures|no-discretionary-ligatures',
	            'historical-ligatures|no-historical-ligatures',
	            'contextual|no-contextual',
	            '(?:stylistic|character-variant|swash|ornaments|annotation)\\([^)]*\\)',
	            'small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps',
	            'lining-nums|oldstyle-nums|proportional-nums|tabular-nums',
	            'diagonal-fractions|stacked-fractions',
	            'ordinal|slashed-zero',
	            'jis78|jis83|jis90|jis04|simplified|traditional',
	            'full-width|proportional-width',
	            'ruby'].join('|') + ')$'),
	    weight: /^(?:normal|bold|bolder|lighter|[1-9]00|inherit|initial|unset)$/,
	    stretch: new RegExp('^(?:' +
	        ['normal',
	            '(?:(?:ultra|extra|semi)-)?condensed',
	            '(?:(?:semi|extra|ulta)-)?expanded',
	            'inherit|initial|unset'].join('|') + ')$'),
	    size: new RegExp('^(?:' +
	        ['xx-small|x-small|small|medium|large|x-large|xx-large|larger|smaller',
	            '[\d.]+%|[\d.]+[a-z]+',
	            'inherit|initial|unset'].join('|') + ')' +
	        '(?:\/(?:normal|[\d.\+](?:%|[a-z]+)?))?$')
	};
	function splitFont(name) {
	    var e_8, _a, e_9, _b;
	    var parts = splitSpaces(this.styles[name]);
	    var value = {
	        style: '', variant: [], weight: '', stretch: '',
	        size: '', family: '', 'line-height': ''
	    };
	    try {
	        for (var parts_1 = __values(parts), parts_1_1 = parts_1.next(); !parts_1_1.done; parts_1_1 = parts_1.next()) {
	            var part = parts_1_1.value;
	            value.family = part;
	            try {
	                for (var _c = (e_9 = void 0, __values(Object.keys(FONT))), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var name_1 = _d.value;
	                    if ((Array.isArray(value[name_1]) || value[name_1] === '') && part.match(FONT[name_1])) {
	                        if (name_1 === 'size') {
	                            var _e = __read(part.split(/\//), 2), size = _e[0], height = _e[1];
	                            value[name_1] = size;
	                            if (height) {
	                                value['line-height'] = height;
	                            }
	                        }
	                        else if (value.size === '') {
	                            if (Array.isArray(value[name_1])) {
	                                value[name_1].push(part);
	                            }
	                            else {
	                                value[name_1] = part;
	                            }
	                        }
	                    }
	                }
	            }
	            catch (e_9_1) { e_9 = { error: e_9_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
	                }
	                finally { if (e_9) throw e_9.error; }
	            }
	        }
	    }
	    catch (e_8_1) { e_8 = { error: e_8_1 }; }
	    finally {
	        try {
	            if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);
	        }
	        finally { if (e_8) throw e_8.error; }
	    }
	    saveFontParts(name, value);
	    delete this.styles[name];
	}
	function saveFontParts(name, value) {
	    var e_10, _a;
	    try {
	        for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var child = _c.value;
	            var cname = this.childName(name, child);
	            if (Array.isArray(value[child])) {
	                var values = value[child];
	                if (values.length) {
	                    this.styles[cname] = values.join(' ');
	                }
	            }
	            else if (value[child] !== '') {
	                this.styles[cname] = value[child];
	            }
	        }
	    }
	    catch (e_10_1) { e_10 = { error: e_10_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_10) throw e_10.error; }
	    }
	}
	function combineFont(name) { }
	var Styles = (function () {
	    function Styles(cssText) {
	        if (cssText === void 0) { cssText = ''; }
	        this.parse(cssText);
	    }
	    Object.defineProperty(Styles.prototype, "cssText", {
	        get: function () {
	            var e_11, _a;
	            var styles = [];
	            try {
	                for (var _b = __values(Object.keys(this.styles)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var name_2 = _c.value;
	                    var parent_1 = this.parentName(name_2);
	                    if (!this.styles[parent_1]) {
	                        styles.push(name_2 + ': ' + this.styles[name_2]);
	                    }
	                }
	            }
	            catch (e_11_1) { e_11 = { error: e_11_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_11) throw e_11.error; }
	            }
	            return styles.join('; ');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Styles.prototype.set = function (name, value) {
	        name = this.normalizeName(name);
	        this.setStyle(name, value);
	        if (Styles.connect[name] && !Styles.connect[name].combine) {
	            this.combineChildren(name);
	            delete this.styles[name];
	        }
	        while (name.match(/-/)) {
	            name = this.parentName(name);
	            if (!Styles.connect[name])
	                break;
	            Styles.connect[name].combine.call(this, name);
	        }
	    };
	    Styles.prototype.get = function (name) {
	        name = this.normalizeName(name);
	        return (this.styles.hasOwnProperty(name) ? this.styles[name] : '');
	    };
	    Styles.prototype.setStyle = function (name, value) {
	        this.styles[name] = value;
	        if (Styles.connect[name] && Styles.connect[name].children) {
	            Styles.connect[name].split.call(this, name);
	        }
	        if (value === '') {
	            delete this.styles[name];
	        }
	    };
	    Styles.prototype.combineChildren = function (name) {
	        var e_12, _a;
	        var parent = this.parentName(name);
	        try {
	            for (var _b = __values(Styles.connect[name].children), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                var cname = this.childName(parent, child);
	                Styles.connect[cname].combine.call(this, cname);
	            }
	        }
	        catch (e_12_1) { e_12 = { error: e_12_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_12) throw e_12.error; }
	        }
	    };
	    Styles.prototype.parentName = function (name) {
	        var parent = name.replace(/-[^-]*$/, '');
	        return (name === parent ? '' : parent);
	    };
	    Styles.prototype.childName = function (name, child) {
	        if (child.match(/-/)) {
	            return child;
	        }
	        if (Styles.connect[name] && !Styles.connect[name].combine) {
	            child += name.replace(/.*-/, '-');
	            name = this.parentName(name);
	        }
	        return name + '-' + child;
	    };
	    Styles.prototype.normalizeName = function (name) {
	        return name.replace(/[A-Z]/g, function (c) { return '-' + c.toLowerCase(); });
	    };
	    Styles.prototype.parse = function (cssText) {
	        if (cssText === void 0) { cssText = ''; }
	        var PATTERN = this.constructor.pattern;
	        this.styles = {};
	        var parts = cssText.replace(PATTERN.comment, '').split(PATTERN.style);
	        while (parts.length > 1) {
	            var _a = __read(parts.splice(0, 3), 3), space = _a[0], name_3 = _a[1], value = _a[2];
	            if (space.match(/[^\s\n]/))
	                return;
	            this.set(name_3, value);
	        }
	    };
	    Styles.pattern = {
	        style: /([-a-z]+)[\s\n]*:[\s\n]*((?:'[^']*'|"[^"]*"|\n|.)*?)[\s\n]*(?:;|$)/g,
	        comment: /\/\*[^]*?\*\//g
	    };
	    Styles.connect = {
	        padding: {
	            children: TRBL,
	            split: splitTRBL,
	            combine: combineTRBL
	        },
	        border: {
	            children: TRBL,
	            split: splitSame,
	            combine: combineSame
	        },
	        'border-top': {
	            children: WSC,
	            split: splitWSC,
	            combine: combineWSC
	        },
	        'border-right': {
	            children: WSC,
	            split: splitWSC,
	            combine: combineWSC
	        },
	        'border-bottom': {
	            children: WSC,
	            split: splitWSC,
	            combine: combineWSC
	        },
	        'border-left': {
	            children: WSC,
	            split: splitWSC,
	            combine: combineWSC
	        },
	        'border-width': {
	            children: TRBL,
	            split: splitTRBL,
	            combine: null
	        },
	        'border-style': {
	            children: TRBL,
	            split: splitTRBL,
	            combine: null
	        },
	        'border-color': {
	            children: TRBL,
	            split: splitTRBL,
	            combine: null
	        },
	        font: {
	            children: ['style', 'variant', 'weight', 'stretch', 'line-height', 'size', 'family'],
	            split: splitFont,
	            combine: combineFont
	        }
	    };
	    return Styles;
	}());
	exports.Styles = Styles;
	//# sourceMappingURL=Styles.js.map

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var WrapperFactory_js_1 = __webpack_require__(205);
	var Wrappers_js_1 = __webpack_require__(207);
	var CHTMLWrapperFactory = (function (_super) {
	    __extends(CHTMLWrapperFactory, _super);
	    function CHTMLWrapperFactory() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLWrapperFactory.defaultNodes = Wrappers_js_1.CHTMLWrappers;
	    return CHTMLWrapperFactory;
	}(WrapperFactory_js_1.CommonWrapperFactory));
	exports.CHTMLWrapperFactory = CHTMLWrapperFactory;
	//# sourceMappingURL=WrapperFactory.js.map

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var WrapperFactory_js_1 = __webpack_require__(206);
	var CommonWrapperFactory = (function (_super) {
	    __extends(CommonWrapperFactory, _super);
	    function CommonWrapperFactory() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.jax = null;
	        return _this;
	    }
	    Object.defineProperty(CommonWrapperFactory.prototype, "Wrappers", {
	        get: function () {
	            return this.node;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    CommonWrapperFactory.defaultNodes = {};
	    return CommonWrapperFactory;
	}(WrapperFactory_js_1.AbstractWrapperFactory));
	exports.CommonWrapperFactory = CommonWrapperFactory;
	//# sourceMappingURL=WrapperFactory.js.map

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Factory_js_1 = __webpack_require__(183);
	var AbstractWrapperFactory = (function (_super) {
	    __extends(AbstractWrapperFactory, _super);
	    function AbstractWrapperFactory() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    AbstractWrapperFactory.prototype.wrap = function (node) {
	        var args = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            args[_i - 1] = arguments[_i];
	        }
	        return this.create.apply(this, __spread([node.kind, node], args));
	    };
	    return AbstractWrapperFactory;
	}(Factory_js_1.AbstractFactory));
	exports.AbstractWrapperFactory = AbstractWrapperFactory;
	//# sourceMappingURL=WrapperFactory.js.map

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var math_js_1 = __webpack_require__(214);
	var mi_js_1 = __webpack_require__(217);
	var mo_js_1 = __webpack_require__(220);
	var mn_js_1 = __webpack_require__(222);
	var ms_js_1 = __webpack_require__(225);
	var mtext_js_1 = __webpack_require__(228);
	var mspace_js_1 = __webpack_require__(231);
	var mpadded_js_1 = __webpack_require__(234);
	var menclose_js_1 = __webpack_require__(237);
	var mrow_js_1 = __webpack_require__(242);
	var mfenced_js_1 = __webpack_require__(245);
	var mfrac_js_1 = __webpack_require__(248);
	var msqrt_js_1 = __webpack_require__(251);
	var mroot_js_1 = __webpack_require__(254);
	var msubsup_js_1 = __webpack_require__(257);
	var munderover_js_1 = __webpack_require__(262);
	var mmultiscripts_js_1 = __webpack_require__(265);
	var mtable_js_1 = __webpack_require__(268);
	var mtr_js_1 = __webpack_require__(272);
	var mtd_js_1 = __webpack_require__(275);
	var maction_js_1 = __webpack_require__(278);
	var mglyph_js_1 = __webpack_require__(281);
	var semantics_js_1 = __webpack_require__(284);
	var TeXAtom_js_1 = __webpack_require__(287);
	var TextNode_js_1 = __webpack_require__(290);
	exports.CHTMLWrappers = (_a = {},
	    _a[math_js_1.CHTMLmath.kind] = math_js_1.CHTMLmath,
	    _a[mrow_js_1.CHTMLmrow.kind] = mrow_js_1.CHTMLmrow,
	    _a[mrow_js_1.CHTMLinferredMrow.kind] = mrow_js_1.CHTMLinferredMrow,
	    _a[mi_js_1.CHTMLmi.kind] = mi_js_1.CHTMLmi,
	    _a[mo_js_1.CHTMLmo.kind] = mo_js_1.CHTMLmo,
	    _a[mn_js_1.CHTMLmn.kind] = mn_js_1.CHTMLmn,
	    _a[ms_js_1.CHTMLms.kind] = ms_js_1.CHTMLms,
	    _a[mtext_js_1.CHTMLmtext.kind] = mtext_js_1.CHTMLmtext,
	    _a[mspace_js_1.CHTMLmspace.kind] = mspace_js_1.CHTMLmspace,
	    _a[mpadded_js_1.CHTMLmpadded.kind] = mpadded_js_1.CHTMLmpadded,
	    _a[menclose_js_1.CHTMLmenclose.kind] = menclose_js_1.CHTMLmenclose,
	    _a[mfrac_js_1.CHTMLmfrac.kind] = mfrac_js_1.CHTMLmfrac,
	    _a[msqrt_js_1.CHTMLmsqrt.kind] = msqrt_js_1.CHTMLmsqrt,
	    _a[mroot_js_1.CHTMLmroot.kind] = mroot_js_1.CHTMLmroot,
	    _a[msubsup_js_1.CHTMLmsub.kind] = msubsup_js_1.CHTMLmsub,
	    _a[msubsup_js_1.CHTMLmsup.kind] = msubsup_js_1.CHTMLmsup,
	    _a[msubsup_js_1.CHTMLmsubsup.kind] = msubsup_js_1.CHTMLmsubsup,
	    _a[munderover_js_1.CHTMLmunder.kind] = munderover_js_1.CHTMLmunder,
	    _a[munderover_js_1.CHTMLmover.kind] = munderover_js_1.CHTMLmover,
	    _a[munderover_js_1.CHTMLmunderover.kind] = munderover_js_1.CHTMLmunderover,
	    _a[mmultiscripts_js_1.CHTMLmmultiscripts.kind] = mmultiscripts_js_1.CHTMLmmultiscripts,
	    _a[mfenced_js_1.CHTMLmfenced.kind] = mfenced_js_1.CHTMLmfenced,
	    _a[mtable_js_1.CHTMLmtable.kind] = mtable_js_1.CHTMLmtable,
	    _a[mtr_js_1.CHTMLmtr.kind] = mtr_js_1.CHTMLmtr,
	    _a[mtr_js_1.CHTMLmlabeledtr.kind] = mtr_js_1.CHTMLmlabeledtr,
	    _a[mtd_js_1.CHTMLmtd.kind] = mtd_js_1.CHTMLmtd,
	    _a[maction_js_1.CHTMLmaction.kind] = maction_js_1.CHTMLmaction,
	    _a[mglyph_js_1.CHTMLmglyph.kind] = mglyph_js_1.CHTMLmglyph,
	    _a[semantics_js_1.CHTMLsemantics.kind] = semantics_js_1.CHTMLsemantics,
	    _a[semantics_js_1.CHTMLannotation.kind] = semantics_js_1.CHTMLannotation,
	    _a[semantics_js_1.CHTMLannotationXML.kind] = semantics_js_1.CHTMLannotationXML,
	    _a[semantics_js_1.CHTMLxml.kind] = semantics_js_1.CHTMLxml,
	    _a[TeXAtom_js_1.CHTMLTeXAtom.kind] = TeXAtom_js_1.CHTMLTeXAtom,
	    _a[TextNode_js_1.CHTMLTextNode.kind] = TextNode_js_1.CHTMLTextNode,
	    _a[Wrapper_js_1.CHTMLWrapper.kind] = Wrapper_js_1.CHTMLWrapper,
	    _a);
	//# sourceMappingURL=Wrappers.js.map

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var LENGTHS = __webpack_require__(202);
	var Wrapper_js_1 = __webpack_require__(209);
	var BBox_js_1 = __webpack_require__(213);
	exports.FONTSIZE = {
	    '70.7%': 's',
	    '70%': 's',
	    '50%': 'ss',
	    '60%': 'Tn',
	    '85%': 'sm',
	    '120%': 'lg',
	    '144%': 'Lg',
	    '173%': 'LG',
	    '207%': 'hg',
	    '249%': 'HG'
	};
	exports.SPACE = (_a = {},
	    _a[LENGTHS.em(2 / 18)] = '1',
	    _a[LENGTHS.em(3 / 18)] = '2',
	    _a[LENGTHS.em(4 / 18)] = '3',
	    _a[LENGTHS.em(5 / 18)] = '4',
	    _a[LENGTHS.em(6 / 18)] = '5',
	    _a);
	var CHTMLWrapper = (function (_super) {
	    __extends(CHTMLWrapper, _super);
	    function CHTMLWrapper() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.chtml = null;
	        return _this;
	    }
	    CHTMLWrapper.prototype.toCHTML = function (parent) {
	        var e_1, _a;
	        var chtml = this.standardCHTMLnode(parent);
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.toCHTML(chtml);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    CHTMLWrapper.prototype.standardCHTMLnode = function (parent) {
	        this.markUsed();
	        var chtml = this.createCHTMLnode(parent);
	        this.handleStyles();
	        this.handleVariant();
	        this.handleScale();
	        this.handleColor();
	        this.handleSpace();
	        this.handleAttributes();
	        this.handlePWidth();
	        return chtml;
	    };
	    CHTMLWrapper.prototype.markUsed = function () {
	        this.constructor.used = true;
	    };
	    CHTMLWrapper.prototype.createCHTMLnode = function (parent) {
	        var href = this.node.attributes.get('href');
	        if (href) {
	            parent = this.adaptor.append(parent, this.html('a', { href: href }));
	        }
	        this.chtml = this.adaptor.append(parent, this.html('mjx-' + this.node.kind));
	        return this.chtml;
	    };
	    CHTMLWrapper.prototype.handleStyles = function () {
	        if (!this.styles)
	            return;
	        var styles = this.styles.cssText;
	        if (styles) {
	            this.adaptor.setAttribute(this.chtml, 'style', styles);
	            var family = this.styles.get('font-family');
	            if (family) {
	                this.adaptor.setStyle(this.chtml, 'font-family', 'MJXZERO, ' + family);
	            }
	        }
	    };
	    CHTMLWrapper.prototype.handleVariant = function () {
	        if (this.node.isToken && this.variant !== '-explicitFont') {
	            this.adaptor.setAttribute(this.chtml, 'class', (this.font.getVariant(this.variant) || this.font.getVariant('normal')).classes);
	        }
	    };
	    CHTMLWrapper.prototype.handleScale = function () {
	        this.setScale(this.chtml, this.bbox.rscale);
	    };
	    CHTMLWrapper.prototype.setScale = function (chtml, rscale) {
	        var scale = (Math.abs(rscale - 1) < .001 ? 1 : rscale);
	        if (chtml && scale !== 1) {
	            var size = this.percent(scale);
	            if (exports.FONTSIZE[size]) {
	                this.adaptor.setAttribute(chtml, 'size', exports.FONTSIZE[size]);
	            }
	            else {
	                this.adaptor.setStyle(chtml, 'fontSize', size);
	            }
	        }
	        return chtml;
	    };
	    CHTMLWrapper.prototype.handleSpace = function () {
	        var e_2, _a;
	        try {
	            for (var _b = __values([[this.bbox.L, 'space', 'marginLeft'],
	                [this.bbox.R, 'rspace', 'marginRight']]), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var data = _c.value;
	                var _d = __read(data, 3), dimen = _d[0], name_1 = _d[1], margin = _d[2];
	                if (dimen) {
	                    var space = this.em(dimen);
	                    if (exports.SPACE[space]) {
	                        this.adaptor.setAttribute(this.chtml, name_1, exports.SPACE[space]);
	                    }
	                    else {
	                        this.adaptor.setStyle(this.chtml, margin, space);
	                    }
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    CHTMLWrapper.prototype.handleColor = function () {
	        var attributes = this.node.attributes;
	        var mathcolor = attributes.getExplicit('mathcolor');
	        var color = attributes.getExplicit('color');
	        var mathbackground = attributes.getExplicit('mathbackground');
	        var background = attributes.getExplicit('background');
	        if (mathcolor || color) {
	            this.adaptor.setStyle(this.chtml, 'color', mathcolor || color);
	        }
	        if (mathbackground || background) {
	            this.adaptor.setStyle(this.chtml, 'backgroundColor', mathbackground || background);
	        }
	    };
	    CHTMLWrapper.prototype.handleAttributes = function () {
	        var e_3, _a, e_4, _b;
	        var attributes = this.node.attributes;
	        var defaults = attributes.getAllDefaults();
	        var skip = CHTMLWrapper.skipAttributes;
	        try {
	            for (var _c = __values(attributes.getExplicitNames()), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var name_2 = _d.value;
	                if (skip[name_2] === false || (!(name_2 in defaults) && !skip[name_2] &&
	                    !this.adaptor.hasAttribute(this.chtml, name_2))) {
	                    this.adaptor.setAttribute(this.chtml, name_2, attributes.getExplicit(name_2));
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        if (attributes.get('class')) {
	            var names = attributes.get('class').trim().split(/ +/);
	            try {
	                for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
	                    var name_3 = names_1_1.value;
	                    this.adaptor.addClass(this.chtml, name_3);
	                }
	            }
	            catch (e_4_1) { e_4 = { error: e_4_1 }; }
	            finally {
	                try {
	                    if (names_1_1 && !names_1_1.done && (_b = names_1.return)) _b.call(names_1);
	                }
	                finally { if (e_4) throw e_4.error; }
	            }
	        }
	    };
	    CHTMLWrapper.prototype.handlePWidth = function () {
	        if (this.bbox.pwidth) {
	            if (this.bbox.pwidth === BBox_js_1.BBox.fullWidth) {
	                this.adaptor.setAttribute(this.chtml, 'width', 'full');
	            }
	            else {
	                this.adaptor.setStyle(this.chtml, 'width', this.bbox.pwidth);
	            }
	        }
	    };
	    CHTMLWrapper.prototype.setIndent = function (chtml, align, shift) {
	        var adaptor = this.adaptor;
	        if (align === 'center' || align === 'left') {
	            var L = this.getBBox().L;
	            adaptor.setStyle(chtml, 'margin-left', this.em(shift + L));
	        }
	        if (align === 'center' || align === 'right') {
	            var R = this.getBBox().R;
	            adaptor.setStyle(chtml, 'margin-right', this.em(-shift + R));
	        }
	    };
	    CHTMLWrapper.prototype.drawBBox = function () {
	        var _a = this.getBBox(), w = _a.w, h = _a.h, d = _a.d, R = _a.R;
	        var box = this.html('mjx-box', { style: {
	                opacity: .25, 'margin-left': this.em(-w - R)
	            } }, [
	            this.html('mjx-box', { style: {
	                    height: this.em(h),
	                    width: this.em(w),
	                    'background-color': 'red'
	                } }),
	            this.html('mjx-box', { style: {
	                    height: this.em(d),
	                    width: this.em(w),
	                    'margin-left': this.em(-w),
	                    'vertical-align': this.em(-d),
	                    'background-color': 'green'
	                } })
	        ]);
	        var node = this.chtml || this.parent.chtml;
	        var size = this.adaptor.getAttribute(node, 'size');
	        if (size) {
	            this.adaptor.setAttribute(box, 'size', size);
	        }
	        var fontsize = this.adaptor.getStyle(node, 'fontSize');
	        if (fontsize) {
	            this.adaptor.setStyle(box, 'fontSize', fontsize);
	        }
	        this.adaptor.append(this.adaptor.parent(node), box);
	        this.adaptor.setStyle(node, 'backgroundColor', '#FFEE00');
	    };
	    CHTMLWrapper.prototype.html = function (type, def, content) {
	        if (def === void 0) { def = {}; }
	        if (content === void 0) { content = []; }
	        return this.jax.html(type, def, content);
	    };
	    CHTMLWrapper.prototype.text = function (text) {
	        return this.jax.text(text);
	    };
	    CHTMLWrapper.prototype.createMo = function (text) {
	        return _super.prototype.createMo.call(this, text);
	    };
	    CHTMLWrapper.prototype.coreMO = function () {
	        return _super.prototype.coreMO.call(this);
	    };
	    CHTMLWrapper.prototype.char = function (n) {
	        return this.font.charSelector(n).substr(1);
	    };
	    CHTMLWrapper.kind = 'unknown';
	    CHTMLWrapper.autoStyle = true;
	    CHTMLWrapper.used = false;
	    return CHTMLWrapper;
	}(Wrapper_js_1.CommonWrapper));
	exports.CHTMLWrapper = CHTMLWrapper;
	//# sourceMappingURL=Wrapper.js.map

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(210);
	var MmlNode_js_1 = __webpack_require__(167);
	var string_js_1 = __webpack_require__(164);
	var LENGTHS = __webpack_require__(202);
	var Styles_js_1 = __webpack_require__(203);
	var BBox_js_1 = __webpack_require__(211);
	var FontData_js_1 = __webpack_require__(212);
	var SMALLSIZE = 2 / 18;
	function MathMLSpace(script, size) {
	    return (script ? size < SMALLSIZE ? 0 : SMALLSIZE : size);
	}
	var CommonWrapper = (function (_super) {
	    __extends(CommonWrapper, _super);
	    function CommonWrapper(factory, node, parent) {
	        if (parent === void 0) { parent = null; }
	        var _this = _super.call(this, factory, node) || this;
	        _this.parent = null;
	        _this.removedStyles = null;
	        _this.styles = null;
	        _this.variant = '';
	        _this.bboxComputed = false;
	        _this.stretch = FontData_js_1.NOSTRETCH;
	        _this.font = null;
	        _this.parent = parent;
	        _this.font = factory.jax.font;
	        _this.bbox = BBox_js_1.BBox.zero();
	        _this.getStyles();
	        _this.getVariant();
	        _this.getScale();
	        _this.getSpace();
	        _this.childNodes = node.childNodes.map(function (child) {
	            var wrapped = _this.wrap(child);
	            if (wrapped.bbox.pwidth && (node.notParent || node.isKind('math'))) {
	                _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
	            }
	            return wrapped;
	        });
	        return _this;
	    }
	    Object.defineProperty(CommonWrapper.prototype, "jax", {
	        get: function () {
	            return this.factory.jax;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(CommonWrapper.prototype, "adaptor", {
	        get: function () {
	            return this.factory.jax.adaptor;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(CommonWrapper.prototype, "metrics", {
	        get: function () {
	            return this.factory.jax.math.metrics;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(CommonWrapper.prototype, "fixesPWidth", {
	        get: function () {
	            return !this.node.notParent && !this.node.isToken;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    CommonWrapper.prototype.wrap = function (node, parent) {
	        if (parent === void 0) { parent = null; }
	        var wrapped = this.factory.wrap(node, parent || this);
	        if (parent) {
	            parent.childNodes.push(wrapped);
	        }
	        this.jax.nodeMap.set(node, wrapped);
	        return wrapped;
	    };
	    CommonWrapper.prototype.getBBox = function (save) {
	        if (save === void 0) { save = true; }
	        if (this.bboxComputed) {
	            return this.bbox;
	        }
	        var bbox = (save ? this.bbox : BBox_js_1.BBox.zero());
	        this.computeBBox(bbox);
	        this.bboxComputed = save;
	        return bbox;
	    };
	    CommonWrapper.prototype.computeBBox = function (bbox, recompute) {
	        var e_1, _a;
	        if (recompute === void 0) { recompute = false; }
	        bbox.empty();
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                bbox.append(child.getBBox());
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        bbox.clean();
	        if (this.fixesPWidth && this.setChildPWidths(recompute)) {
	            this.computeBBox(bbox, true);
	        }
	    };
	    CommonWrapper.prototype.setChildPWidths = function (recompute, w, clear) {
	        var e_2, _a;
	        if (w === void 0) { w = null; }
	        if (clear === void 0) { clear = true; }
	        if (recompute) {
	            return false;
	        }
	        if (clear) {
	            this.bbox.pwidth = '';
	        }
	        var changed = false;
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                var cbox = child.getBBox();
	                if (cbox.pwidth && child.setChildPWidths(recompute, w === null ? cbox.w : w, clear)) {
	                    changed = true;
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        return changed;
	    };
	    CommonWrapper.prototype.invalidateBBox = function () {
	        if (this.bboxComputed) {
	            this.bboxComputed = false;
	            if (this.parent) {
	                this.parent.invalidateBBox();
	            }
	        }
	    };
	    CommonWrapper.prototype.copySkewIC = function (bbox) {
	        var first = this.childNodes[0];
	        if (first && first.bbox.sk) {
	            bbox.sk = first.bbox.sk;
	        }
	        var last = this.childNodes[this.childNodes.length - 1];
	        if (last && last.bbox.ic) {
	            bbox.ic = last.bbox.ic;
	            bbox.w += bbox.ic;
	        }
	    };
	    CommonWrapper.prototype.getStyles = function () {
	        var styleString = this.node.attributes.getExplicit('style');
	        if (!styleString)
	            return;
	        var style = this.styles = new Styles_js_1.Styles(styleString);
	        for (var i = 0, m = CommonWrapper.removeStyles.length; i < m; i++) {
	            var id = CommonWrapper.removeStyles[i];
	            if (style.get(id)) {
	                if (!this.removedStyles)
	                    this.removedStyles = {};
	                this.removedStyles[id] = style.get(id);
	                style.set(id, '');
	            }
	        }
	    };
	    CommonWrapper.prototype.getVariant = function () {
	        if (!this.node.isToken)
	            return;
	        var attributes = this.node.attributes;
	        var variant = attributes.get('mathvariant');
	        if (!attributes.getExplicit('mathvariant')) {
	            var values = attributes.getList('fontfamily', 'fontweight', 'fontstyle');
	            if (this.removedStyles) {
	                var style = this.removedStyles;
	                if (style.fontFamily)
	                    values.family = style.fontFamily;
	                if (style.fontWeight)
	                    values.weight = style.fontWeight;
	                if (style.fontStyle)
	                    values.style = style.fontStyle;
	            }
	            if (values.fontfamily)
	                values.family = values.fontfamily;
	            if (values.fontweight)
	                values.weight = values.fontweight;
	            if (values.fontstyle)
	                values.style = values.fontstyle;
	            if (values.weight && values.weight.match(/^\d+$/)) {
	                values.weight = (parseInt(values.weight) > 600 ? 'bold' : 'normal');
	            }
	            if (values.family) {
	                variant = this.explicitVariant(values.family, values.weight, values.style);
	            }
	            else {
	                if (this.node.getProperty('variantForm'))
	                    variant = '-tex-variant';
	                variant = (CommonWrapper.BOLDVARIANTS[values.weight] || {})[variant] || variant;
	                variant = (CommonWrapper.ITALICVARIANTS[values.style] || {})[variant] || variant;
	            }
	        }
	        this.variant = variant;
	    };
	    CommonWrapper.prototype.explicitVariant = function (fontFamily, fontWeight, fontStyle) {
	        var style = this.styles;
	        if (!style)
	            style = this.styles = new Styles_js_1.Styles();
	        style.set('fontFamily', fontFamily);
	        if (fontWeight)
	            style.set('fontWeight', fontWeight);
	        if (fontStyle)
	            style.set('fontStyle', fontStyle);
	        return '-explicitFont';
	    };
	    CommonWrapper.prototype.getScale = function () {
	        var scale = 1, parent = this.parent;
	        var pscale = (parent ? parent.bbox.scale : 1);
	        var attributes = this.node.attributes;
	        var scriptlevel = Math.min(attributes.get('scriptlevel'), 2);
	        var fontsize = attributes.get('fontsize');
	        var mathsize = (this.node.isToken || this.node.isKind('mstyle') ?
	            attributes.get('mathsize') : attributes.getInherited('mathsize'));
	        if (scriptlevel !== 0) {
	            scale = Math.pow(attributes.get('scriptsizemultiplier'), scriptlevel);
	            var scriptminsize = this.length2em(attributes.get('scriptminsize'), .8, 1);
	            if (scale < scriptminsize)
	                scale = scriptminsize;
	        }
	        if (this.removedStyles && this.removedStyles.fontSize && !fontsize) {
	            fontsize = this.removedStyles.fontSize;
	        }
	        if (fontsize && !mathsize) {
	            mathsize = fontsize;
	        }
	        if (mathsize !== '1') {
	            scale *= this.length2em(mathsize, 1, 1);
	        }
	        this.bbox.scale = scale;
	        this.bbox.rscale = scale / pscale;
	    };
	    CommonWrapper.prototype.getSpace = function () {
	        var isTop = this.isTopEmbellished();
	        var hasSpacing = this.node.hasSpacingAttributes();
	        if (this.jax.options.mathmlSpacing || hasSpacing) {
	            isTop && this.getMathMLSpacing();
	        }
	        else {
	            this.getTeXSpacing(isTop, hasSpacing);
	        }
	    };
	    CommonWrapper.prototype.getMathMLSpacing = function () {
	        var node = this.node.coreMO();
	        var attributes = node.attributes;
	        var isScript = (attributes.get('scriptlevel') > 0);
	        this.bbox.L = (attributes.isSet('lspace') ?
	            Math.max(0, this.length2em(attributes.get('lspace'))) :
	            MathMLSpace(isScript, node.lspace));
	        this.bbox.R = (attributes.isSet('rspace') ?
	            Math.max(0, this.length2em(attributes.get('rspace'))) :
	            MathMLSpace(isScript, node.rspace));
	    };
	    CommonWrapper.prototype.getTeXSpacing = function (isTop, hasSpacing) {
	        if (!hasSpacing) {
	            var space = this.node.texSpacing();
	            if (space) {
	                this.bbox.L = this.length2em(space);
	            }
	        }
	        if (isTop || hasSpacing) {
	            var attributes = this.node.coreMO().attributes;
	            if (attributes.isSet('lspace')) {
	                this.bbox.L = Math.max(0, this.length2em(attributes.get('lspace')));
	            }
	            if (attributes.isSet('rspace')) {
	                this.bbox.R = Math.max(0, this.length2em(attributes.get('rspace')));
	            }
	        }
	    };
	    CommonWrapper.prototype.isTopEmbellished = function () {
	        return (this.node.isEmbellished &&
	            !(this.node.Parent && this.node.Parent.isEmbellished));
	    };
	    CommonWrapper.prototype.core = function () {
	        return this.jax.nodeMap.get(this.node.core());
	    };
	    CommonWrapper.prototype.coreMO = function () {
	        return this.jax.nodeMap.get(this.node.coreMO());
	    };
	    CommonWrapper.prototype.getText = function () {
	        var e_3, _a;
	        var text = '';
	        if (this.node.isToken) {
	            try {
	                for (var _b = __values(this.node.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    if (child instanceof MmlNode_js_1.TextNode) {
	                        text += child.getText();
	                    }
	                }
	            }
	            catch (e_3_1) { e_3 = { error: e_3_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_3) throw e_3.error; }
	            }
	        }
	        return text;
	    };
	    CommonWrapper.prototype.canStretch = function (direction) {
	        this.stretch = FontData_js_1.NOSTRETCH;
	        if (this.node.isEmbellished) {
	            var core = this.core();
	            if (core && core.node !== this.node) {
	                if (core.canStretch(direction)) {
	                    this.stretch = core.stretch;
	                }
	            }
	        }
	        return this.stretch.dir !== 0;
	    };
	    CommonWrapper.prototype.getAlignShift = function () {
	        var _a;
	        var _b = (_a = this.node.attributes).getList.apply(_a, __spread(MmlNode_js_1.indentAttributes)), indentalign = _b.indentalign, indentshift = _b.indentshift, indentalignfirst = _b.indentalignfirst, indentshiftfirst = _b.indentshiftfirst;
	        if (indentalignfirst !== 'indentalign') {
	            indentalign = indentalignfirst;
	        }
	        if (indentalign === 'auto') {
	            indentalign = this.jax.options.displayAlign;
	        }
	        if (indentshiftfirst !== 'indentshift') {
	            indentshift = indentshiftfirst;
	        }
	        if (indentshift === 'auto') {
	            indentshift = this.jax.options.displayIndent;
	            if (indentalign === 'right' && !indentshift.match(/^\s*0[a-z]*\s*$/)) {
	                indentshift = ('-' + indentshift.trim()).replace(/^--/, '');
	            }
	        }
	        var shift = this.length2em(indentshift, this.metrics.containerWidth);
	        return [indentalign, shift];
	    };
	    CommonWrapper.prototype.getAlignX = function (W, bbox, align) {
	        return (align === 'right' ? W - (bbox.w + bbox.R) * bbox.rscale :
	            align === 'left' ? bbox.L * bbox.rscale :
	                (W - bbox.w * bbox.rscale) / 2);
	    };
	    CommonWrapper.prototype.getAlignY = function (H, D, h, d, align) {
	        return (align === 'top' ? H - h :
	            align === 'bottom' ? d - D :
	                align === 'middle' ? ((H - h) - (D - d)) / 2 :
	                    0);
	    };
	    CommonWrapper.prototype.getWrapWidth = function (i) {
	        return this.childNodes[i].getBBox().w;
	    };
	    CommonWrapper.prototype.getChildAlign = function (i) {
	        return 'left';
	    };
	    CommonWrapper.prototype.percent = function (m) {
	        return LENGTHS.percent(m);
	    };
	    CommonWrapper.prototype.em = function (m) {
	        return LENGTHS.em(m);
	    };
	    CommonWrapper.prototype.px = function (m, M) {
	        if (M === void 0) { M = -LENGTHS.BIGDIMEN; }
	        return LENGTHS.px(m, M, this.metrics.em);
	    };
	    CommonWrapper.prototype.length2em = function (length, size, scale) {
	        if (size === void 0) { size = 1; }
	        if (scale === void 0) { scale = null; }
	        if (scale === null) {
	            scale = this.bbox.scale;
	        }
	        return LENGTHS.length2em(length, size, scale, this.jax.pxPerEm);
	    };
	    CommonWrapper.prototype.unicodeChars = function (text, variant) {
	        if (variant === void 0) { variant = ''; }
	        var chars = string_js_1.unicodeChars(text);
	        var map = this.font.getVariant(variant).chars;
	        if (map) {
	            chars = chars.map(function (n) { return ((map[n] || [])[3] || {}).smp || n; });
	        }
	        return chars;
	    };
	    CommonWrapper.prototype.remapChars = function (chars) {
	        return chars;
	    };
	    CommonWrapper.prototype.mmlText = function (text) {
	        return this.node.factory.create('text').setText(text);
	    };
	    CommonWrapper.prototype.mmlNode = function (kind, properties, children) {
	        if (properties === void 0) { properties = {}; }
	        if (children === void 0) { children = []; }
	        return this.node.factory.create(kind, properties, children);
	    };
	    CommonWrapper.prototype.createMo = function (text) {
	        var mmlFactory = this.node.factory;
	        var textNode = mmlFactory.create('text').setText(text);
	        var mml = mmlFactory.create('mo', { stretchy: true }, [textNode]);
	        mml.inheritAttributesFrom(this.node);
	        var node = this.wrap(mml);
	        node.parent = this;
	        return node;
	    };
	    CommonWrapper.prototype.getVariantChar = function (variant, n) {
	        var char = this.font.getChar(variant, n) || [0, 0, 0, { unknown: true }];
	        if (char.length === 3) {
	            char[3] = {};
	        }
	        return char;
	    };
	    CommonWrapper.kind = 'unknown';
	    CommonWrapper.styles = {};
	    CommonWrapper.removeStyles = [
	        'fontSize', 'fontFamily', 'fontWeight',
	        'fontStyle', 'fontVariant', 'font'
	    ];
	    CommonWrapper.skipAttributes = {
	        fontfamily: true, fontsize: true, fontweight: true, fontstyle: true,
	        color: true, background: true,
	        'class': true, href: true, style: true,
	        xmlns: true
	    };
	    CommonWrapper.BOLDVARIANTS = {
	        bold: {
	            normal: 'bold',
	            italic: 'bold-italic',
	            fraktur: 'bold-fraktur',
	            script: 'bold-script',
	            'sans-serif': 'bold-sans-serif',
	            'sans-serif-italic': 'sans-serif-bold-italic'
	        },
	        normal: {
	            bold: 'normal',
	            'bold-italic': 'italic',
	            'bold-fraktur': 'fraktur',
	            'bold-script': 'script',
	            'bold-sans-serif': 'sans-serif',
	            'sans-serif-bold-italic': 'sans-serif-italic'
	        }
	    };
	    CommonWrapper.ITALICVARIANTS = {
	        italic: {
	            normal: 'italic',
	            bold: 'bold-italic',
	            'sans-serif': 'sans-serif-italic',
	            'bold-sans-serif': 'sans-serif-bold-italic'
	        },
	        normal: {
	            italic: 'normal',
	            'bold-italic': 'bold',
	            'sans-serif-italic': 'sans-serif',
	            'sans-serif-bold-italic': 'bold-sans-serif'
	        }
	    };
	    return CommonWrapper;
	}(Wrapper_js_1.AbstractWrapper));
	exports.CommonWrapper = CommonWrapper;
	//# sourceMappingURL=Wrapper.js.map

/***/ }),
/* 210 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var AbstractWrapper = (function () {
	    function AbstractWrapper(factory, node) {
	        this.factory = factory;
	        this.node = node;
	    }
	    Object.defineProperty(AbstractWrapper.prototype, "kind", {
	        get: function () {
	            return this.node.kind;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractWrapper.prototype.wrap = function (node) {
	        return this.factory.wrap(node);
	    };
	    return AbstractWrapper;
	}());
	exports.AbstractWrapper = AbstractWrapper;
	//# sourceMappingURL=Wrapper.js.map

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var lengths_js_1 = __webpack_require__(202);
	exports.BBoxStyleAdjust = [
	    ['borderTopWidth', 'h'],
	    ['borderRightWidth', 'w'],
	    ['borderBottomWidth', 'd'],
	    ['borderLeftWidth', 'w', 0],
	    ['paddingTop', 'h'],
	    ['paddingRight', 'w'],
	    ['paddingBottom', 'd'],
	    ['paddingLeft', 'w', 0]
	];
	var BBox = (function () {
	    function BBox(def) {
	        if (def === void 0) { def = { w: 0, h: -lengths_js_1.BIGDIMEN, d: -lengths_js_1.BIGDIMEN }; }
	        this.w = def.w || 0;
	        this.h = ('h' in def ? def.h : -lengths_js_1.BIGDIMEN);
	        this.d = ('d' in def ? def.d : -lengths_js_1.BIGDIMEN);
	        this.L = this.R = this.ic = this.sk = 0;
	        this.scale = this.rscale = 1;
	        this.pwidth = '';
	    }
	    BBox.zero = function () {
	        return new BBox({ h: 0, d: 0, w: 0 });
	    };
	    BBox.empty = function () {
	        return new BBox();
	    };
	    BBox.prototype.empty = function () {
	        this.w = 0;
	        this.h = this.d = -lengths_js_1.BIGDIMEN;
	        return this;
	    };
	    BBox.prototype.clean = function () {
	        if (this.w === -lengths_js_1.BIGDIMEN)
	            this.w = 0;
	        if (this.h === -lengths_js_1.BIGDIMEN)
	            this.h = 0;
	        if (this.d === -lengths_js_1.BIGDIMEN)
	            this.d = 0;
	    };
	    BBox.prototype.rescale = function (scale) {
	        this.w *= scale;
	        this.h *= scale;
	        this.d *= scale;
	    };
	    BBox.prototype.combine = function (cbox, x, y) {
	        if (x === void 0) { x = 0; }
	        if (y === void 0) { y = 0; }
	        var rscale = cbox.rscale;
	        var w = x + rscale * (cbox.w + cbox.L + cbox.R);
	        var h = y + rscale * cbox.h;
	        var d = rscale * cbox.d - y;
	        if (w > this.w)
	            this.w = w;
	        if (h > this.h)
	            this.h = h;
	        if (d > this.d)
	            this.d = d;
	    };
	    BBox.prototype.append = function (cbox) {
	        var scale = cbox.rscale;
	        this.w += scale * (cbox.w + cbox.L + cbox.R);
	        if (scale * cbox.h > this.h) {
	            this.h = scale * cbox.h;
	        }
	        if (scale * cbox.d > this.d) {
	            this.d = scale * cbox.d;
	        }
	    };
	    BBox.prototype.updateFrom = function (cbox) {
	        this.h = cbox.h;
	        this.d = cbox.d;
	        this.w = cbox.w;
	        if (cbox.pwidth) {
	            this.pwidth = cbox.pwidth;
	        }
	    };
	    BBox.fullWidth = '100%';
	    return BBox;
	}());
	exports.BBox = BBox;
	//# sourceMappingURL=BBox.js.map

/***/ }),
/* 212 */
/***/ (function(module, exports) {

	"use strict";
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.V = 1;
	exports.H = 2;
	exports.NOSTRETCH = { dir: 0 };
	var FontData = (function () {
	    function FontData() {
	        var e_1, _a;
	        this.variant = {};
	        this.delimiters = {};
	        this.cssFontMap = {};
	        this.remapChars = {};
	        var CLASS = this.constructor;
	        this.params = __assign({}, CLASS.defaultParams);
	        this.sizeVariants = __spread(CLASS.defaultSizeVariants);
	        this.cssFontMap = __assign({}, CLASS.defaultCssFonts);
	        this.createVariants(CLASS.defaultVariants);
	        this.defineDelimiters(CLASS.defaultDelimiters);
	        try {
	            for (var _b = __values(Object.keys(CLASS.defaultChars)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var name_1 = _c.value;
	                this.defineChars(name_1, CLASS.defaultChars[name_1]);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        this.defineRemap('accent', CLASS.defaultAccentMap);
	        this.defineRemap('mo', CLASS.defaultMoMap);
	        this.defineRemap('mn', CLASS.defaultMnMap);
	    }
	    FontData.charOptions = function (font, n) {
	        var char = font[n];
	        if (char.length === 3) {
	            char[3] = {};
	        }
	        return char[3];
	    };
	    FontData.prototype.createVariant = function (name, inherit, link) {
	        if (inherit === void 0) { inherit = null; }
	        if (link === void 0) { link = null; }
	        var variant = {
	            linked: [],
	            chars: (inherit ? Object.create(this.variant[inherit].chars) : {})
	        };
	        if (link && this.variant[link]) {
	            Object.assign(variant.chars, this.variant[link].chars);
	            this.variant[link].linked.push(variant.chars);
	            variant.chars = Object.create(variant.chars);
	        }
	        this.remapSmpChars(variant.chars, name);
	        this.variant[name] = variant;
	    };
	    FontData.prototype.remapSmpChars = function (chars, name) {
	        var e_2, _a, e_3, _b;
	        var CLASS = this.constructor;
	        if (CLASS.VariantSmp[name]) {
	            var SmpRemap = CLASS.SmpRemap;
	            var SmpGreek = [null, null, CLASS.SmpRemapGreekU, CLASS.SmpRemapGreekL];
	            try {
	                for (var _c = __values(CLASS.SmpRanges), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var _e = __read(_d.value, 3), i = _e[0], lo = _e[1], hi = _e[2];
	                    var base = CLASS.VariantSmp[name][i];
	                    if (!base)
	                        continue;
	                    for (var n = lo; n <= hi; n++) {
	                        if (n === 0x3A2)
	                            continue;
	                        var smp = base + n - lo;
	                        chars[n] = this.smpChar(SmpRemap[smp] || smp);
	                    }
	                    if (SmpGreek[i]) {
	                        try {
	                            for (var _f = (e_3 = void 0, __values(Object.keys(SmpGreek[i]).map(function (x) { return parseInt(x); }))), _g = _f.next(); !_g.done; _g = _f.next()) {
	                                var n = _g.value;
	                                chars[n] = this.smpChar(base + SmpGreek[i][n]);
	                            }
	                        }
	                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                        finally {
	                            try {
	                                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
	                            }
	                            finally { if (e_3) throw e_3.error; }
	                        }
	                    }
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	        }
	        if (name === 'bold') {
	            chars[0x3DC] = this.smpChar(0x1D7CA);
	            chars[0x3DD] = this.smpChar(0x1D7CB);
	        }
	    };
	    FontData.prototype.smpChar = function (n) {
	        return [, , , { smp: n }];
	    };
	    FontData.prototype.createVariants = function (variants) {
	        var e_4, _a;
	        try {
	            for (var variants_1 = __values(variants), variants_1_1 = variants_1.next(); !variants_1_1.done; variants_1_1 = variants_1.next()) {
	                var variant = variants_1_1.value;
	                this.createVariant(variant[0], variant[1], variant[2]);
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (variants_1_1 && !variants_1_1.done && (_a = variants_1.return)) _a.call(variants_1);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	    };
	    FontData.prototype.defineChars = function (name, chars) {
	        var e_5, _a;
	        var variant = this.variant[name];
	        Object.assign(variant.chars, chars);
	        try {
	            for (var _b = __values(variant.linked), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var link = _c.value;
	                Object.assign(link, chars);
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	    };
	    FontData.prototype.defineDelimiters = function (delims) {
	        Object.assign(this.delimiters, delims);
	    };
	    FontData.prototype.defineRemap = function (name, remap) {
	        if (!this.remapChars.hasOwnProperty(name)) {
	            this.remapChars[name] = {};
	        }
	        Object.assign(this.remapChars[name], remap);
	    };
	    FontData.prototype.getDelimiter = function (n) {
	        return this.delimiters[n];
	    };
	    FontData.prototype.getSizeVariant = function (n, i) {
	        if (this.delimiters[n].variants) {
	            i = this.delimiters[n].variants[i];
	        }
	        return this.sizeVariants[i];
	    };
	    FontData.prototype.getChar = function (name, n) {
	        return this.variant[name].chars[n];
	    };
	    FontData.prototype.getVariant = function (name) {
	        return this.variant[name];
	    };
	    FontData.prototype.getCssFont = function (variant) {
	        return this.cssFontMap[variant] || ['serif', false, false];
	    };
	    FontData.prototype.getRemappedChar = function (name, c) {
	        var map = this.remapChars[name] || {};
	        return map[c];
	    };
	    FontData.OPTIONS = {};
	    FontData.defaultVariants = [
	        ['normal'],
	        ['bold', 'normal'],
	        ['italic', 'normal'],
	        ['bold-italic', 'italic', 'bold'],
	        ['double-struck', 'bold'],
	        ['fraktur', 'normal'],
	        ['bold-fraktur', 'bold', 'fraktur'],
	        ['script', 'italic'],
	        ['bold-script', 'bold-italic', 'script'],
	        ['sans-serif', 'normal'],
	        ['bold-sans-serif', 'bold', 'sans-serif'],
	        ['sans-serif-italic', 'italic', 'sans-serif'],
	        ['sans-serif-bold-italic', 'bold-italic', 'bold-sans-serif'],
	        ['monospace', 'normal']
	    ];
	    FontData.defaultCssFonts = {
	        normal: ['serif', false, false],
	        bold: ['serif', false, true],
	        italic: ['serif', true, false],
	        'bold-italic': ['serif', true, true],
	        'double-struck': ['serif', false, true],
	        fraktur: ['serif', false, false],
	        'bold-fraktur': ['serif', false, true],
	        script: ['cursive', false, false],
	        'bold-script': ['cursive', false, true],
	        'sans-serif': ['sans-serif', false, false],
	        'bold-sans-serif': ['sans-serif', false, true],
	        'sans-serif-italic': ['sans-serif', true, false],
	        'sans-serif-bold-italic': ['sans-serif', true, true],
	        monospace: ['monospace', false, false]
	    };
	    FontData.defaultCssFamilyPrefix = '';
	    FontData.VariantSmp = {
	        bold: [0x1D400, 0x1D41A, 0x1D6A8, 0x1D6C2, 0x1D7CE],
	        italic: [0x1D434, 0x1D44E, 0x1D6E2, 0x1D6FC],
	        'bold-italic': [0x1D468, 0x1D482, 0x1D71C, 0x1D736],
	        script: [0x1D49C, 0x1D4B6],
	        'bold-script': [0x1D4D0, 0x1D4EA],
	        fraktur: [0x1D504, 0x1D51E],
	        'double-struck': [0x1D538, 0x1D552, , , 0x1D7D8],
	        'bold-fraktur': [0x1D56C, 0x1D586],
	        'sans-serif': [0x1D5A0, 0x1D5BA, , , 0x1D7E2],
	        'bold-sans-serif': [0x1D5D4, 0x1D5EE, 0x1D756, 0x1D770, 0x1D7EC],
	        'sans-serif-italic': [0x1D608, 0x1D622],
	        'sans-serif-bold-italic': [0x1D63C, 0x1D656, 0x1D790, 0x1D7AA],
	        'monospace': [0x1D670, 0x1D68A, , , 0x1D7F6]
	    };
	    FontData.SmpRanges = [
	        [0, 0x41, 0x5A],
	        [1, 0x61, 0x7A],
	        [2, 0x391, 0x3A9],
	        [3, 0x3B1, 0x3C9],
	        [4, 0x30, 0x39]
	    ];
	    FontData.SmpRemap = {
	        0x1D455: 0x210E,
	        0x1D49D: 0x212C,
	        0x1D4A0: 0x2130,
	        0x1D4A1: 0x2131,
	        0x1D4A3: 0x210B,
	        0x1D4A4: 0x2110,
	        0x1D4A7: 0x2112,
	        0x1D4A8: 0x2133,
	        0x1D4AD: 0x211B,
	        0x1D4BA: 0x212F,
	        0x1D4BC: 0x210A,
	        0x1D4C4: 0x2134,
	        0x1D506: 0x212D,
	        0x1D50B: 0x210C,
	        0x1D50C: 0x2111,
	        0x1D515: 0x211C,
	        0x1D51D: 0x2128,
	        0x1D53A: 0x2102,
	        0x1D53F: 0x210D,
	        0x1D545: 0x2115,
	        0x1D547: 0x2119,
	        0x1D548: 0x211A,
	        0x1D549: 0x211D,
	        0x1D551: 0x2124,
	    };
	    FontData.SmpRemapGreekU = {
	        0x2207: 0x19,
	        0x03F4: 0x11
	    };
	    FontData.SmpRemapGreekL = {
	        0x3D1: 0x1B,
	        0x3D5: 0x1D,
	        0x3D6: 0x1F,
	        0x3F0: 0x1C,
	        0x3F1: 0x1E,
	        0x3F5: 0x1A,
	        0x2202: 0x19
	    };
	    FontData.defaultAccentMap = {
	        0x0300: '\u02CB',
	        0x0301: '\u02CA',
	        0x0302: '\u02C6',
	        0x0303: '\u02DC',
	        0x0304: '\u02C9',
	        0x0306: '\u02D8',
	        0x0307: '\u02D9',
	        0x0308: '\u00A8',
	        0x030A: '\u02DA',
	        0x030C: '\u02C7',
	        0x2192: '\u20D7',
	        0x2032: '\'',
	        0x2033: '\'\'',
	        0x2034: '\'\'\'',
	        0x2035: '`',
	        0x2036: '``',
	        0x2037: '```',
	        0x2057: '\'\'\'\'',
	        0x20D0: '\u21BC',
	        0x20D1: '\u21C0',
	        0x20D6: '\u2190',
	        0x20E1: '\u2194',
	        0x20F0: '*',
	        0x20DB: '...',
	        0x20DC: '....',
	        0x20EC: '\u21C1',
	        0x20ED: '\u21BD',
	        0x20EE: '\u2190',
	        0x20EF: '\u2192'
	    };
	    FontData.defaultMoMap = {
	        0x002D: '\u2212'
	    };
	    FontData.defaultMnMap = {
	        0x002D: '\u2212'
	    };
	    FontData.defaultParams = {
	        x_height: .442,
	        quad: 1,
	        num1: .676,
	        num2: .394,
	        num3: .444,
	        denom1: .686,
	        denom2: .345,
	        sup1: .413,
	        sup2: .363,
	        sup3: .289,
	        sub1: .15,
	        sub2: .247,
	        sup_drop: .386,
	        sub_drop: .05,
	        delim1: 2.39,
	        delim2: 1.0,
	        axis_height: .25,
	        rule_thickness: .06,
	        big_op_spacing1: .111,
	        big_op_spacing2: .167,
	        big_op_spacing3: .2,
	        big_op_spacing4: .6,
	        big_op_spacing5: .1,
	        surd_height: .075,
	        scriptspace: .05,
	        nulldelimiterspace: .12,
	        delimiterfactor: 901,
	        delimitershortfall: .3,
	        min_rule_thickness: 1.25
	    };
	    FontData.defaultDelimiters = {};
	    FontData.defaultChars = {};
	    FontData.defaultSizeVariants = [];
	    return FontData;
	}());
	exports.FontData = FontData;
	//# sourceMappingURL=FontData.js.map

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var BBox_js_1 = __webpack_require__(211);
	exports.BBox = BBox_js_1.BBox;
	exports.BBoxStyleAdjust = BBox_js_1.BBoxStyleAdjust;
	//# sourceMappingURL=BBox.js.map

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var math_js_1 = __webpack_require__(215);
	var math_js_2 = __webpack_require__(216);
	var BBox_js_1 = __webpack_require__(213);
	var CHTMLmath = (function (_super) {
	    __extends(CHTMLmath, _super);
	    function CHTMLmath() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmath.prototype.toCHTML = function (parent) {
	        _super.prototype.toCHTML.call(this, parent);
	        var chtml = this.chtml;
	        var adaptor = this.adaptor;
	        var display = (this.node.attributes.get('display') === 'block');
	        if (display) {
	            adaptor.setAttribute(chtml, 'display', 'true');
	            adaptor.setAttribute(parent, 'display', 'true');
	            this.handleDisplay(parent);
	        }
	        else {
	            this.handleInline(parent);
	        }
	        adaptor.addClass(chtml, 'MJX-TEX');
	    };
	    CHTMLmath.prototype.handleDisplay = function (parent) {
	        var adaptor = this.adaptor;
	        var _a = __read(this.getAlignShift(), 2), align = _a[0], shift = _a[1];
	        if (align !== 'center') {
	            adaptor.setAttribute(parent, 'justify', align);
	        }
	        if (this.bbox.pwidth === BBox_js_1.BBox.fullWidth) {
	            adaptor.setAttribute(parent, 'width', 'full');
	            if (this.jax.table) {
	                var _b = this.jax.table.getBBox(), L = _b.L, w = _b.w, R = _b.R;
	                if (align === 'right') {
	                    R = Math.max(R || -shift, -shift);
	                }
	                else if (align === 'left') {
	                    L = Math.max(L || shift, shift);
	                }
	                else if (align === 'center') {
	                    w += 2 * Math.abs(shift);
	                }
	                var W = this.em(Math.max(0, L + w + R));
	                adaptor.setStyle(parent, 'min-width', W);
	                adaptor.setStyle(this.jax.table.chtml, 'min-width', W);
	            }
	        }
	        else {
	            this.setIndent(this.chtml, align, shift);
	        }
	    };
	    CHTMLmath.prototype.handleInline = function (parent) {
	        var adaptor = this.adaptor;
	        var margin = adaptor.getStyle(this.chtml, 'margin-right');
	        if (margin) {
	            adaptor.setStyle(this.chtml, 'margin-right', '');
	            adaptor.setStyle(parent, 'margin-right', margin);
	            adaptor.setStyle(parent, 'width', '0');
	        }
	    };
	    CHTMLmath.prototype.setChildPWidths = function (recompute, w, clear) {
	        if (w === void 0) { w = null; }
	        if (clear === void 0) { clear = true; }
	        return (this.parent ? _super.prototype.setChildPWidths.call(this, recompute, w) : false);
	    };
	    CHTMLmath.kind = math_js_2.MmlMath.prototype.kind;
	    CHTMLmath.styles = {
	        'mjx-math': {
	            'line-height': 0,
	            'text-align': 'left',
	            'text-indent': 0,
	            'font-style': 'normal',
	            'font-weight': 'normal',
	            'font-size': '100%',
	            'font-size-adjust': 'none',
	            'letter-spacing': 'normal',
	            'word-wrap': 'normal',
	            'word-spacing': 'normal',
	            'white-space': 'nowrap',
	            'direction': 'ltr',
	            'padding': '1px 0'
	        },
	        'mjx-container[jax="CHTML"][display="true"]': {
	            display: 'block',
	            'text-align': 'center',
	            margin: '1em 0'
	        },
	        'mjx-container[jax="CHTML"][display="true"][width="full"]': {
	            display: 'flex'
	        },
	        'mjx-container[jax="CHTML"][display="true"] mjx-math': {
	            padding: 0
	        },
	        'mjx-container[jax="CHTML"][justify="left"]': {
	            'text-align': 'left'
	        },
	        'mjx-container[jax="CHTML"][justify="right"]': {
	            'text-align': 'right'
	        }
	    };
	    return CHTMLmath;
	}(math_js_1.CommonMathMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmath = CHTMLmath;
	//# sourceMappingURL=math.js.map

/***/ }),
/* 215 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMathMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_1.prototype.getWrapWidth = function (i) {
	            return (this.parent ? this.getBBox().w : this.metrics.containerWidth / this.jax.pxPerEm);
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMathMixin = CommonMathMixin;
	//# sourceMappingURL=math.js.map

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMath = (function (_super) {
	    __extends(MmlMath, _super);
	    function MmlMath() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMath.prototype, "kind", {
	        get: function () {
	            return 'math';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMath.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMath.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        if (this.attributes.get('mode') === 'display') {
	            this.attributes.setInherited('display', 'block');
	        }
	        attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
	        display = (!!this.attributes.get('displaystyle') ||
	            (!this.attributes.get('displaystyle') && this.attributes.get('display') === 'block'));
	        this.attributes.setInherited('displaystyle', display);
	        level = (this.attributes.get('scriptlevel') ||
	            this.constructor.defaults['scriptlevel']);
	        _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
	    };
	    MmlMath.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { mathvariant: 'normal', mathsize: 'normal', mathcolor: '', mathbackground: 'transparent', dir: 'ltr', scriptlevel: 0, displaystyle: false, display: 'inline', maxwidth: '', overflow: 'linebreak', altimg: '', 'altimg-width': '', 'altimg-height': '', 'altimg-valign': '', alttext: '', cdgroup: '', scriptsizemultiplier: 1 / Math.sqrt(2), scriptminsize: '8px', infixlinebreakstyle: 'before', lineleading: '1ex', linebreakmultchar: '\u2062', indentshift: 'auto', indentalign: 'auto', indenttarget: '', indentalignfirst: 'indentalign', indentshiftfirst: 'indentshift', indentalignlast: 'indentalign', indentshiftlast: 'indentshift' });
	    return MmlMath;
	}(MmlNode_js_1.AbstractMmlLayoutNode));
	exports.MmlMath = MmlMath;
	//# sourceMappingURL=math.js.map

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mi_js_1 = __webpack_require__(218);
	var mi_js_2 = __webpack_require__(219);
	var CHTMLmi = (function (_super) {
	    __extends(CHTMLmi, _super);
	    function CHTMLmi() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmi.prototype.toCHTML = function (parent) {
	        _super.prototype.toCHTML.call(this, parent);
	        if (this.noIC) {
	            this.adaptor.setAttribute(this.chtml, 'noIC', 'true');
	        }
	    };
	    CHTMLmi.kind = mi_js_2.MmlMi.prototype.kind;
	    return CHTMLmi;
	}(mi_js_1.CommonMiMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmi = CHTMLmi;
	//# sourceMappingURL=mi.js.map

/***/ }),
/* 218 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMiMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.noIC = false;
	            return _this;
	        }
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            _super.prototype.computeBBox.call(this, bbox);
	            this.copySkewIC(bbox);
	            if (this.noIC) {
	                bbox.w -= bbox.ic;
	            }
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMiMixin = CommonMiMixin;
	//# sourceMappingURL=mi.js.map

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMi = (function (_super) {
	    __extends(MmlMi, _super);
	    function MmlMi() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMi.prototype, "kind", {
	        get: function () {
	            return 'mi';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMi.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
	        if (attributes === void 0) { attributes = {}; }
	        if (display === void 0) { display = false; }
	        if (level === void 0) { level = 0; }
	        if (prime === void 0) { prime = false; }
	        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);
	        var text = this.getText();
	        if (text.match(MmlMi.singleCharacter) && !attributes.mathvariant) {
	            this.attributes.setInherited('mathvariant', 'italic');
	        }
	    };
	    MmlMi.prototype.setTeXclass = function (prev) {
	        this.getPrevClass(prev);
	        var name = this.getText();
	        if (name.length > 1 && name.match(MmlMi.operatorName) && this.texClass === MmlNode_js_1.TEXCLASS.ORD) {
	            this.texClass = MmlNode_js_1.TEXCLASS.OP;
	            this.setProperty('autoOP', true);
	        }
	        return this;
	    };
	    MmlMi.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
	    MmlMi.operatorName = /^[a-z][a-z0-9]*$/i;
	    MmlMi.singleCharacter = /^[\uD800-\uDBFF]?.$/;
	    return MmlMi;
	}(MmlNode_js_1.AbstractMmlTokenNode));
	exports.MmlMi = MmlMi;
	//# sourceMappingURL=mi.js.map

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mo_js_1 = __webpack_require__(221);
	var mo_js_2 = __webpack_require__(171);
	var BBox_js_1 = __webpack_require__(213);
	var CHTMLmo = (function (_super) {
	    __extends(CHTMLmo, _super);
	    function CHTMLmo() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmo.prototype.toCHTML = function (parent) {
	        var e_1, _a;
	        var attributes = this.node.attributes;
	        var symmetric = attributes.get('symmetric') && this.stretch.dir !== 2;
	        var stretchy = this.stretch.dir !== 0;
	        if (stretchy && this.size === null) {
	            this.getStretchedVariant([]);
	        }
	        var chtml = this.standardCHTMLnode(parent);
	        if (this.noIC) {
	            this.adaptor.setAttribute(chtml, 'noIC', 'true');
	        }
	        if (stretchy && this.size < 0) {
	            this.stretchHTML(chtml, symmetric);
	        }
	        else {
	            if (symmetric || attributes.get('largeop')) {
	                var bbox = BBox_js_1.BBox.empty();
	                _super.prototype.computeBBox.call(this, bbox);
	                var u = this.em((bbox.d - bbox.h) / 2 + this.font.params.axis_height);
	                if (u !== '0') {
	                    this.adaptor.setStyle(chtml, 'verticalAlign', u);
	                }
	            }
	            try {
	                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    child.toCHTML(chtml);
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	        }
	    };
	    CHTMLmo.prototype.stretchHTML = function (chtml, symmetric) {
	        var c = this.getText().charCodeAt(0);
	        var delim = this.stretch;
	        delim.used = true;
	        var stretch = delim.stretch;
	        var content = [];
	        if (stretch[0]) {
	            content.push(this.html('mjx-beg', {}, [this.html('mjx-c')]));
	        }
	        content.push(this.html('mjx-ext', {}, [this.html('mjx-c')]));
	        if (stretch.length === 4) {
	            content.push(this.html('mjx-mid', {}, [this.html('mjx-c')]), this.html('mjx-ext', {}, [this.html('mjx-c')]));
	        }
	        if (stretch[2]) {
	            content.push(this.html('mjx-end', {}, [this.html('mjx-c')]));
	        }
	        var styles = {};
	        var _a = this.bbox, h = _a.h, d = _a.d, w = _a.w;
	        if (delim.dir === 1) {
	            content.push(this.html('mjx-mark'));
	            styles.height = this.em(h + d);
	            styles.verticalAlign = this.em(-d);
	        }
	        else {
	            styles.width = this.em(w);
	        }
	        var dir = mo_js_1.DirectionVH[delim.dir];
	        var properties = { class: this.char(delim.c || c), style: styles };
	        var html = this.html('mjx-stretchy-' + dir, properties, content);
	        this.adaptor.append(chtml, html);
	    };
	    CHTMLmo.kind = mo_js_2.MmlMo.prototype.kind;
	    CHTMLmo.styles = {
	        'mjx-stretchy-h': {
	            display: 'inline-table',
	            width: '100%'
	        },
	        'mjx-stretchy-h > *': {
	            display: 'table-cell',
	            width: 0
	        },
	        'mjx-stretchy-h > * > mjx-c': {
	            display: 'inline-block',
	            transform: 'scalex(1.0000001)'
	        },
	        'mjx-stretchy-h > * > mjx-c::before': {
	            display: 'inline-block',
	            padding: '.001em 0',
	            width: 'initial'
	        },
	        'mjx-stretchy-h > mjx-ext': {
	            overflow: 'hidden',
	            width: '100%'
	        },
	        'mjx-stretchy-h > mjx-ext > mjx-c::before': {
	            transform: 'scalex(500)'
	        },
	        'mjx-stretchy-h > mjx-ext > mjx-c': {
	            width: 0
	        },
	        'mjx-stretchy-h > mjx-beg > mjx-c': {
	            'margin-right': '-.1em'
	        },
	        'mjx-stretchy-h > mjx-end > mjx-c': {
	            'margin-left': '-.1em'
	        },
	        'mjx-stretchy-v': {
	            display: 'inline-block'
	        },
	        'mjx-stretchy-v > *': {
	            display: 'block'
	        },
	        'mjx-stretchy-v > mjx-beg': {
	            height: 0
	        },
	        'mjx-stretchy-v > mjx-end > mjx-c': {
	            display: 'block'
	        },
	        'mjx-stretchy-v > * > mjx-c': {
	            transform: 'scaley(1.0000001)',
	            'transform-origin': 'left center',
	            overflow: 'hidden'
	        },
	        'mjx-stretchy-v > mjx-ext': {
	            display: 'block',
	            height: '100%',
	            'box-sizing': 'border-box',
	            border: '0px solid transparent',
	            overflow: 'hidden'
	        },
	        'mjx-stretchy-v > mjx-ext > mjx-c::before': {
	            width: 'initial'
	        },
	        'mjx-stretchy-v > mjx-ext > mjx-c': {
	            transform: 'scaleY(500) translateY(.1em)',
	            overflow: 'visible'
	        },
	        'mjx-mark': {
	            display: 'inline-block',
	            height: '0px'
	        }
	    };
	    return CHTMLmo;
	}(mo_js_1.CommonMoMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmo = CHTMLmo;
	//# sourceMappingURL=mo.js.map

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(212);
	exports.DirectionVH = (_a = {},
	    _a[1] = 'v',
	    _a[2] = 'h',
	    _a);
	function CommonMoMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.noIC = false;
	            _this.size = null;
	            _this.isAccent = _this.node.isAccent;
	            return _this;
	        }
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var stretchy = (this.stretch.dir !== 0);
	            if (stretchy && this.size === null) {
	                this.getStretchedVariant([0]);
	            }
	            if (stretchy && this.size < 0)
	                return;
	            _super.prototype.computeBBox.call(this, bbox);
	            this.copySkewIC(bbox);
	            if (this.noIC) {
	                bbox.w -= bbox.ic;
	            }
	            if (this.node.attributes.get('symmetric') &&
	                this.stretch.dir !== 2) {
	                var d = ((bbox.h + bbox.d) / 2 + this.font.params.axis_height) - bbox.h;
	                bbox.h += d;
	                bbox.d -= d;
	            }
	        };
	        class_1.prototype.getVariant = function () {
	            if (this.node.attributes.get('largeop')) {
	                this.variant = (this.node.attributes.get('displaystyle') ? '-largeop' : '-smallop');
	            }
	            else {
	                _super.prototype.getVariant.call(this);
	            }
	        };
	        class_1.prototype.canStretch = function (direction) {
	            if (this.stretch.dir !== 0) {
	                return this.stretch.dir === direction;
	            }
	            var attributes = this.node.attributes;
	            if (!attributes.get('stretchy'))
	                return false;
	            var c = this.getText();
	            if (c.length !== 1)
	                return false;
	            var delim = this.font.getDelimiter(c.charCodeAt(0));
	            this.stretch = (delim && delim.dir === direction ? delim : FontData_js_1.NOSTRETCH);
	            return this.stretch.dir !== 0;
	        };
	        class_1.prototype.getStretchedVariant = function (WH, exact) {
	            var e_1, _a;
	            if (exact === void 0) { exact = false; }
	            if (this.stretch.dir !== 0) {
	                var D = this.getWH(WH);
	                var min = this.getSize('minsize', 0);
	                var max = this.getSize('maxsize', Infinity);
	                D = Math.max(min, Math.min(max, D));
	                var m = (min || exact ? D : Math.max(D * this.font.params.delimiterfactor / 1000, D - this.font.params.delimitershortfall));
	                var delim = this.stretch;
	                var c = delim.c || this.getText().charCodeAt(0);
	                var i = 0;
	                if (delim.sizes) {
	                    try {
	                        for (var _b = __values(delim.sizes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                            var d = _c.value;
	                            if (d >= m) {
	                                this.variant = this.font.getSizeVariant(c, i);
	                                this.size = i;
	                                return;
	                            }
	                            i++;
	                        }
	                    }
	                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
	                    finally {
	                        try {
	                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                        }
	                        finally { if (e_1) throw e_1.error; }
	                    }
	                }
	                if (delim.stretch) {
	                    this.size = -1;
	                    this.invalidateBBox();
	                    this.getStretchBBox(WH, D, delim);
	                }
	                else {
	                    this.variant = this.font.getSizeVariant(c, i - 1);
	                    this.size = i - 1;
	                }
	            }
	        };
	        class_1.prototype.getSize = function (name, value) {
	            var attributes = this.node.attributes;
	            if (attributes.isSet(name)) {
	                value = this.length2em(attributes.get(name), 1, 1);
	            }
	            return value;
	        };
	        class_1.prototype.getWH = function (WH) {
	            if (WH.length === 0)
	                return 0;
	            if (WH.length === 1)
	                return WH[0];
	            var _a = __read(WH, 2), H = _a[0], D = _a[1];
	            var a = this.font.params.axis_height;
	            return (this.node.attributes.get('symmetric') ? 2 * Math.max(H - a, D + a) : H + D);
	        };
	        class_1.prototype.getStretchBBox = function (WHD, D, C) {
	            var _a;
	            if (C.hasOwnProperty('min') && C.min > D) {
	                D = C.min;
	            }
	            var _b = __read(C.HDW, 3), h = _b[0], d = _b[1], w = _b[2];
	            if (this.stretch.dir === 1) {
	                _a = __read(this.getBaseline(WHD, D, C), 2), h = _a[0], d = _a[1];
	            }
	            else {
	                w = D;
	            }
	            this.bbox.h = h;
	            this.bbox.d = d;
	            this.bbox.w = w;
	        };
	        class_1.prototype.getBaseline = function (WHD, HD, C) {
	            var hasWHD = (WHD.length === 2 && WHD[0] + WHD[1] === HD);
	            var symmetric = this.node.attributes.get('symmetric');
	            var _a = __read((hasWHD ? WHD : [HD, 0]), 2), H = _a[0], D = _a[1];
	            var _b = __read([H + D, 0], 2), h = _b[0], d = _b[1];
	            if (symmetric) {
	                var a = this.font.params.axis_height;
	                if (hasWHD) {
	                    h = 2 * Math.max(H - a, D + a);
	                }
	                d = h / 2 - a;
	            }
	            else if (hasWHD) {
	                d = D;
	            }
	            else {
	                var _c = __read((C.HDW || [.75, .25]), 2), ch = _c[0], cd = _c[1];
	                d = cd * (h / (ch + cd));
	            }
	            return [h - d, d];
	        };
	        class_1.prototype.remapChars = function (chars) {
	            if (chars.length === 1) {
	                var parent_1 = this.node.coreParent().parent;
	                var isAccent = this.isAccent && !parent_1.isKind('mrow');
	                var map = (isAccent ? 'accent' : 'mo');
	                var text = this.font.getRemappedChar(map, chars[0]);
	                if (text) {
	                    chars = this.unicodeChars(text, this.variant);
	                }
	            }
	            return chars;
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMoMixin = CommonMoMixin;
	//# sourceMappingURL=mo.js.map

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mn_js_1 = __webpack_require__(223);
	var mn_js_2 = __webpack_require__(224);
	var CHTMLmn = (function (_super) {
	    __extends(CHTMLmn, _super);
	    function CHTMLmn() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmn.kind = mn_js_2.MmlMn.prototype.kind;
	    return CHTMLmn;
	}(mn_js_1.CommonMnMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmn = CHTMLmn;
	//# sourceMappingURL=mn.js.map

/***/ }),
/* 223 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMnMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_1.prototype.remapChars = function (chars) {
	            if (chars.length) {
	                var text = this.font.getRemappedChar('mn', chars[0]);
	                if (text) {
	                    var c = this.unicodeChars(text, this.variant);
	                    if (c.length === 1) {
	                        chars[0] = c[0];
	                    }
	                    else {
	                        chars = c.concat(chars.slice(1));
	                    }
	                }
	            }
	            return chars;
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMnMixin = CommonMnMixin;
	//# sourceMappingURL=mn.js.map

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMn = (function (_super) {
	    __extends(MmlMn, _super);
	    function MmlMn() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMn.prototype, "kind", {
	        get: function () {
	            return 'mn';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMn.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
	    return MmlMn;
	}(MmlNode_js_1.AbstractMmlTokenNode));
	exports.MmlMn = MmlMn;
	//# sourceMappingURL=mn.js.map

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var ms_js_1 = __webpack_require__(226);
	var ms_js_2 = __webpack_require__(227);
	var CHTMLms = (function (_super) {
	    __extends(CHTMLms, _super);
	    function CHTMLms() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLms.kind = ms_js_2.MmlMs.prototype.kind;
	    return CHTMLms;
	}(ms_js_1.CommonMsMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLms = CHTMLms;
	//# sourceMappingURL=ms.js.map

/***/ }),
/* 226 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMsMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            var attributes = _this.node.attributes;
	            var quotes = attributes.getList('lquote', 'rquote');
	            if (_this.variant !== 'monospace') {
	                if (!attributes.isSet('lquote') && quotes.lquote === '"')
	                    quotes.lquote = '\u201C';
	                if (!attributes.isSet('rquote') && quotes.rquote === '"')
	                    quotes.rquote = '\u201D';
	            }
	            _this.childNodes.unshift(_this.createText(quotes.lquote));
	            _this.childNodes.push(_this.createText(quotes.rquote));
	            return _this;
	        }
	        class_1.prototype.createText = function (text) {
	            var node = this.wrap(this.mmlText(text));
	            node.parent = this;
	            return node;
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMsMixin = CommonMsMixin;
	//# sourceMappingURL=ms.js.map

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMs = (function (_super) {
	    __extends(MmlMs, _super);
	    function MmlMs() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMs.prototype, "kind", {
	        get: function () {
	            return 'ms';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMs.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { lquote: '"', rquote: '"' });
	    return MmlMs;
	}(MmlNode_js_1.AbstractMmlTokenNode));
	exports.MmlMs = MmlMs;
	//# sourceMappingURL=ms.js.map

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mtext_js_1 = __webpack_require__(229);
	var mtext_js_2 = __webpack_require__(230);
	var CHTMLmtext = (function (_super) {
	    __extends(CHTMLmtext, _super);
	    function CHTMLmtext() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmtext.kind = mtext_js_2.MmlMtext.prototype.kind;
	    return CHTMLmtext;
	}(mtext_js_1.CommonMtextMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmtext = CHTMLmtext;
	//# sourceMappingURL=mtext.js.map

/***/ }),
/* 229 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMtextMixin(Base) {
	    var _a;
	    return _a = (function (_super) {
	            __extends(class_1, _super);
	            function class_1() {
	                return _super !== null && _super.apply(this, arguments) || this;
	            }
	            class_1.prototype.getVariant = function () {
	                var options = this.jax.options;
	                if (options.mtextInheritFont || (options.merrorInheritFont && this.node.Parent.isKind('merror'))) {
	                    var variant = this.node.attributes.get('mathvariant');
	                    var font = this.constructor.INHERITFONTS[variant];
	                    if (font) {
	                        this.variant = this.explicitVariant.apply(this, __spread(font));
	                        return;
	                    }
	                }
	                _super.prototype.getVariant.call(this);
	            };
	            return class_1;
	        }(Base)),
	        _a.INHERITFONTS = {
	            normal: ['', '', ''],
	            bold: ['', 'bold', ''],
	            italic: ['', '', 'italic'],
	            'bold-italic': ['', 'bold', 'italic'],
	            script: ['cursive', '', ''],
	            'bold-script': ['cursive', 'bold', ''],
	            'sans-serif': ['sans-serif', '', ''],
	            'bold-sans-serif': ['sans-serif', 'bold', ''],
	            'sans-serif-italic': ['sans-serif', '', 'italic'],
	            'sans-serif-bold-italic': ['sans-serif', 'bold', 'italic'],
	            monospace: ['monospace', '', '']
	        },
	        _a;
	}
	exports.CommonMtextMixin = CommonMtextMixin;
	//# sourceMappingURL=mtext.js.map

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMtext = (function (_super) {
	    __extends(MmlMtext, _super);
	    function MmlMtext() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMtext.prototype, "kind", {
	        get: function () {
	            return 'mtext';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMtext.prototype, "isSpacelike", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMtext.defaults = __assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults);
	    return MmlMtext;
	}(MmlNode_js_1.AbstractMmlTokenNode));
	exports.MmlMtext = MmlMtext;
	//# sourceMappingURL=mtext.js.map

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mspace_js_1 = __webpack_require__(232);
	var mspace_js_2 = __webpack_require__(233);
	var CHTMLmspace = (function (_super) {
	    __extends(CHTMLmspace, _super);
	    function CHTMLmspace() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmspace.prototype.toCHTML = function (parent) {
	        var chtml = this.standardCHTMLnode(parent);
	        var _a = this.getBBox(), w = _a.w, h = _a.h, d = _a.d;
	        if (w < 0) {
	            this.adaptor.setStyle(chtml, 'marginRight', this.em(w));
	            w = 0;
	        }
	        if (w) {
	            this.adaptor.setStyle(chtml, 'width', this.em(w));
	        }
	        h = Math.max(0, h + d);
	        if (h) {
	            this.adaptor.setStyle(chtml, 'height', this.em(Math.max(0, h)));
	        }
	        if (d) {
	            this.adaptor.setStyle(chtml, 'verticalAlign', this.em(-d));
	        }
	    };
	    CHTMLmspace.kind = mspace_js_2.MmlMspace.prototype.kind;
	    return CHTMLmspace;
	}(mspace_js_1.CommonMspaceMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmspace = CHTMLmspace;
	//# sourceMappingURL=mspace.js.map

/***/ }),
/* 232 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMspaceMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var attributes = this.node.attributes;
	            bbox.w = this.length2em(attributes.get('width'), 0);
	            bbox.h = this.length2em(attributes.get('height'), 0);
	            bbox.d = this.length2em(attributes.get('depth'), 0);
	        };
	        class_1.prototype.handleVariant = function () {
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMspaceMixin = CommonMspaceMixin;
	//# sourceMappingURL=mspace.js.map

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMspace = (function (_super) {
	    __extends(MmlMspace, _super);
	    function MmlMspace() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMspace.prototype, "kind", {
	        get: function () {
	            return 'mspace';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMspace.prototype, "arity", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMspace.prototype, "isSpacelike", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMspace.prototype, "hasNewline", {
	        get: function () {
	            var attributes = this.attributes;
	            return (attributes.getExplicit('width') == null && attributes.getExplicit('height') == null &&
	                attributes.getExplicit('depth') == null && attributes.get('linebreak') === 'newline');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMspace.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { width: '0em', height: '0ex', depth: '0ex', linebreak: 'auto' });
	    return MmlMspace;
	}(MmlNode_js_1.AbstractMmlTokenNode));
	exports.MmlMspace = MmlMspace;
	//# sourceMappingURL=mspace.js.map

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mpadded_js_1 = __webpack_require__(235);
	var mpadded_js_2 = __webpack_require__(236);
	var CHTMLmpadded = (function (_super) {
	    __extends(CHTMLmpadded, _super);
	    function CHTMLmpadded() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmpadded.prototype.toCHTML = function (parent) {
	        var e_1, _a;
	        var chtml = this.standardCHTMLnode(parent);
	        var content = [];
	        var style = {};
	        var _b = __read(this.getDimens(), 9), H = _b[0], D = _b[1], W = _b[2], dh = _b[3], dd = _b[4], dw = _b[5], x = _b[6], y = _b[7], dx = _b[8];
	        if (dw) {
	            style.width = this.em(W + dw);
	        }
	        if (dh || dd) {
	            style.margin = this.em(dh) + ' 0 ' + this.em(dd);
	        }
	        if (x + dx || y) {
	            style.position = 'relative';
	            var rbox = this.html('mjx-rbox', { style: { left: this.em(x + dx), top: this.em(-y) } });
	            if (x + dx && this.childNodes[0].getBBox().pwidth) {
	                this.adaptor.setAttribute(rbox, 'width', 'full');
	                this.adaptor.setStyle(rbox, 'left', this.em(x));
	            }
	            content.push(rbox);
	        }
	        chtml = this.adaptor.append(chtml, this.html('mjx-block', { style: style }, content));
	        try {
	            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var child = _d.value;
	                child.toCHTML(content[0] || chtml);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    CHTMLmpadded.kind = mpadded_js_2.MmlMpadded.prototype.kind;
	    CHTMLmpadded.styles = {
	        'mjx-mpadded': {
	            display: 'inline-block'
	        },
	        'mjx-rbox': {
	            display: 'inline-block',
	            position: 'relative'
	        }
	    };
	    return CHTMLmpadded;
	}(mpadded_js_1.CommonMpaddedMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmpadded = CHTMLmpadded;
	//# sourceMappingURL=mpadded.js.map

/***/ }),
/* 235 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMpaddedMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_1.prototype.getDimens = function () {
	            var values = this.node.attributes.getList('width', 'height', 'depth', 'lspace', 'voffset');
	            var bbox = this.childNodes[0].getBBox();
	            var w = bbox.w, h = bbox.h, d = bbox.d;
	            var W = w, H = h, D = d, x = 0, y = 0, dx = 0;
	            if (values.width !== '')
	                w = this.dimen(values.width, bbox, 'w', 0);
	            if (values.height !== '')
	                h = this.dimen(values.height, bbox, 'h', 0);
	            if (values.depth !== '')
	                d = this.dimen(values.depth, bbox, 'd', 0);
	            if (values.voffset !== '')
	                y = this.dimen(values.voffset, bbox);
	            if (values.lspace !== '')
	                x = this.dimen(values.lspace, bbox);
	            var align = this.node.attributes.get('data-align');
	            if (align) {
	                dx = this.getAlignX(w, bbox, align);
	            }
	            return [H, D, W, h - H, d - D, w - W, x, y, dx];
	        };
	        class_1.prototype.dimen = function (length, bbox, d, m) {
	            if (d === void 0) { d = ''; }
	            if (m === void 0) { m = null; }
	            length = String(length);
	            var match = length.match(/width|height|depth/);
	            var size = (match ? bbox[match[0].charAt(0)] :
	                (d ? bbox[d] : 0));
	            var dimen = (this.length2em(length, size) || 0);
	            if (length.match(/^[-+]/) && d) {
	                dimen += size;
	            }
	            if (m != null) {
	                dimen = Math.max(m, dimen);
	            }
	            return dimen;
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var _a = __read(this.getDimens(), 8), H = _a[0], D = _a[1], W = _a[2], dh = _a[3], dd = _a[4], dw = _a[5], x = _a[6], y = _a[7];
	            bbox.w = W + dw;
	            bbox.h = H + dh;
	            bbox.d = D + dd;
	            this.setChildPWidths(recompute, bbox.w);
	        };
	        class_1.prototype.getWrapWidth = function (i) {
	            return this.getBBox().w;
	        };
	        class_1.prototype.getChildAlign = function (i) {
	            return this.node.attributes.get('data-align') || 'left';
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMpaddedMixin = CommonMpaddedMixin;
	//# sourceMappingURL=mpadded.js.map

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMpadded = (function (_super) {
	    __extends(MmlMpadded, _super);
	    function MmlMpadded() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMpadded.prototype, "kind", {
	        get: function () {
	            return 'mpadded';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMpadded.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { width: '', height: '', depth: '', lspace: 0, voffset: 0 });
	    return MmlMpadded;
	}(MmlNode_js_1.AbstractMmlLayoutNode));
	exports.MmlMpadded = MmlMpadded;
	//# sourceMappingURL=mpadded.js.map

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var menclose_js_1 = __webpack_require__(238);
	var Notation = __webpack_require__(240);
	var menclose_js_2 = __webpack_require__(241);
	var lengths_js_1 = __webpack_require__(202);
	function Angle(x, y) {
	    return Math.atan2(x, y).toFixed(3).replace(/\.?0+$/, '');
	}
	var ANGLE = Angle(Notation.ARROWDX, Notation.ARROWY);
	var CHTMLmenclose = (function (_super) {
	    __extends(CHTMLmenclose, _super);
	    function CHTMLmenclose() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmenclose.prototype.toCHTML = function (parent) {
	        var e_1, _a, e_2, _b;
	        var adaptor = this.adaptor;
	        var chtml = this.standardCHTMLnode(parent);
	        var block = adaptor.append(chtml, this.html('mjx-box'));
	        if (this.renderChild) {
	            this.renderChild(this, block);
	        }
	        else {
	            this.childNodes[0].toCHTML(block);
	        }
	        try {
	            for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var name_1 = _d.value;
	                var notation = this.notations[name_1];
	                !notation.renderChild && notation.renderer(this, block);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        var pbox = this.getPadding();
	        try {
	            for (var _e = __values(Notation.sideNames), _f = _e.next(); !_f.done; _f = _e.next()) {
	                var name_2 = _f.value;
	                var i = Notation.sideIndex[name_2];
	                pbox[i] > 0 && adaptor.setStyle(block, 'padding-' + name_2, this.em(pbox[i]));
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    CHTMLmenclose.prototype.arrow = function (w, a, double) {
	        if (double === void 0) { double = false; }
	        var W = this.getBBox().w;
	        var style = { width: this.em(w) };
	        if (W !== w) {
	            style.left = this.em((W - w) / 2);
	        }
	        if (a) {
	            style.transform = 'rotate(' + this.fixed(a) + 'rad)';
	        }
	        var arrow = this.html('mjx-arrow', { style: style }, [
	            this.html('mjx-aline'), this.html('mjx-rthead'), this.html('mjx-rbhead')
	        ]);
	        if (double) {
	            this.adaptor.append(arrow, this.html('mjx-lthead'));
	            this.adaptor.append(arrow, this.html('mjx-lbhead'));
	            this.adaptor.setAttribute(arrow, 'double', 'true');
	        }
	        this.adjustArrow(arrow, double);
	        return arrow;
	    };
	    CHTMLmenclose.prototype.adjustArrow = function (arrow, double) {
	        var _this = this;
	        var t = this.thickness;
	        var head = this.arrowhead;
	        if (head.x === Notation.ARROWX && head.y === Notation.ARROWY &&
	            head.dx === Notation.ARROWDX && t === Notation.THICKNESS)
	            return;
	        var _a = __read([t * head.x, t * head.y, t * head.dx].map(function (x) { return _this.em(x); }), 3), x = _a[0], y = _a[1], dx = _a[2];
	        var a = Angle(head.dx, head.y);
	        var _b = __read(this.adaptor.childNodes(arrow), 5), line = _b[0], rthead = _b[1], rbhead = _b[2], lthead = _b[3], lbhead = _b[4];
	        this.adjustHead(rthead, [y, '0', '1px', x], a);
	        this.adjustHead(rbhead, ['1px', '0', y, x], '-' + a);
	        this.adjustHead(lthead, [y, x, '1px', '0'], '-' + a);
	        this.adjustHead(lbhead, ['1px', x, y, '0'], a);
	        this.adjustLine(line, t, head.x, double);
	    };
	    CHTMLmenclose.prototype.adjustHead = function (head, border, a) {
	        if (head) {
	            this.adaptor.setStyle(head, 'border-width', border.join(' '));
	            this.adaptor.setStyle(head, 'transform', 'skewX(' + a + 'rad)');
	        }
	    };
	    CHTMLmenclose.prototype.adjustLine = function (line, t, x, double) {
	        this.adaptor.setStyle(line, 'borderTop', this.em(t) + ' solid');
	        this.adaptor.setStyle(line, 'top', this.em(-t / 2));
	        this.adaptor.setStyle(line, 'right', this.em(t * (x - 1)));
	        if (double) {
	            this.adaptor.setStyle(line, 'left', this.em(t * (x - 1)));
	        }
	    };
	    CHTMLmenclose.prototype.adjustBorder = function (node) {
	        if (this.thickness !== Notation.THICKNESS) {
	            this.adaptor.setStyle(node, 'borderWidth', this.em(this.thickness));
	        }
	        return node;
	    };
	    CHTMLmenclose.prototype.adjustThickness = function (shape) {
	        if (this.thickness !== Notation.THICKNESS) {
	            this.adaptor.setStyle(shape, 'strokeWidth', this.fixed(this.thickness));
	        }
	        return shape;
	    };
	    CHTMLmenclose.prototype.fixed = function (m, n) {
	        if (n === void 0) { n = 3; }
	        if (Math.abs(m) < .0006) {
	            return '0';
	        }
	        return m.toFixed(n).replace(/\.?0+$/, '');
	    };
	    CHTMLmenclose.prototype.em = function (m) {
	        return _super.prototype.em.call(this, m);
	    };
	    CHTMLmenclose.kind = menclose_js_2.MmlMenclose.prototype.kind;
	    CHTMLmenclose.styles = {
	        'mjx-menclose': {
	            position: 'relative'
	        },
	        'mjx-menclose > mjx-dstrike': {
	            display: 'inline-block',
	            left: 0, top: 0,
	            position: 'absolute',
	            'border-top': Notation.SOLID,
	            'transform-origin': 'top left'
	        },
	        'mjx-menclose > mjx-ustrike': {
	            display: 'inline-block',
	            left: 0, bottom: 0,
	            position: 'absolute',
	            'border-top': Notation.SOLID,
	            'transform-origin': 'bottom left'
	        },
	        'mjx-menclose > mjx-hstrike': {
	            'border-top': Notation.SOLID,
	            position: 'absolute',
	            left: 0, right: 0, bottom: '50%',
	            transform: 'translateY(' + lengths_js_1.em(Notation.THICKNESS / 2) + ')'
	        },
	        'mjx-menclose > mjx-vstrike': {
	            'border-left': Notation.SOLID,
	            position: 'absolute',
	            top: 0, bottom: 0, right: '50%',
	            transform: 'translateX(' + lengths_js_1.em(Notation.THICKNESS / 2) + ')'
	        },
	        'mjx-menclose > mjx-rbox': {
	            position: 'absolute',
	            top: 0, bottom: 0, right: 0, left: 0,
	            'border': Notation.SOLID,
	            'border-radius': lengths_js_1.em(Notation.THICKNESS + Notation.PADDING)
	        },
	        'mjx-menclose > mjx-cbox': {
	            position: 'absolute',
	            top: 0, bottom: 0, right: 0, left: 0,
	            'border': Notation.SOLID,
	            'border-radius': '50%'
	        },
	        'mjx-menclose > mjx-arrow': {
	            position: 'absolute',
	            left: 0, bottom: '50%', height: 0, width: 0
	        },
	        'mjx-menclose > mjx-arrow > *': {
	            display: 'block',
	            position: 'absolute',
	            'transform-origin': 'bottom',
	            'border-left': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWX) + ' solid',
	            'border-right': 0,
	            'box-sizing': 'border-box'
	        },
	        'mjx-menclose > mjx-arrow > mjx-aline': {
	            left: 0, top: lengths_js_1.em(-Notation.THICKNESS / 2),
	            right: lengths_js_1.em(Notation.THICKNESS * (Notation.ARROWX - 1)), height: 0,
	            'border-top': lengths_js_1.em(Notation.THICKNESS) + ' solid',
	            'border-left': 0
	        },
	        'mjx-menclose > mjx-arrow[double] > mjx-aline': {
	            left: lengths_js_1.em(Notation.THICKNESS * (Notation.ARROWX - 1)), height: 0,
	        },
	        'mjx-menclose > mjx-arrow > mjx-rthead': {
	            transform: 'skewX(' + ANGLE + 'rad)',
	            right: 0, bottom: '-1px',
	            'border-bottom': '1px solid transparent',
	            'border-top': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
	        },
	        'mjx-menclose > mjx-arrow > mjx-rbhead': {
	            transform: 'skewX(-' + ANGLE + 'rad)',
	            'transform-origin': 'top',
	            right: 0, top: '-1px',
	            'border-top': '1px solid transparent',
	            'border-bottom': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
	        },
	        'mjx-menclose > mjx-arrow > mjx-lthead': {
	            transform: 'skewX(-' + ANGLE + 'rad)',
	            left: 0, bottom: '-1px',
	            'border-left': 0,
	            'border-right': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWX) + ' solid',
	            'border-bottom': '1px solid transparent',
	            'border-top': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
	        },
	        'mjx-menclose > mjx-arrow > mjx-lbhead': {
	            transform: 'skewX(' + ANGLE + 'rad)',
	            'transform-origin': 'top',
	            left: 0, top: '-1px',
	            'border-left': 0,
	            'border-right': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWX) + ' solid',
	            'border-top': '1px solid transparent',
	            'border-bottom': lengths_js_1.em(Notation.THICKNESS * Notation.ARROWY) + ' solid transparent'
	        },
	        'mjx-menclose > dbox': {
	            position: 'absolute',
	            top: 0, bottom: 0, left: lengths_js_1.em(-1.5 * Notation.PADDING),
	            width: lengths_js_1.em(3 * Notation.PADDING),
	            border: lengths_js_1.em(Notation.THICKNESS) + ' solid',
	            'border-radius': '50%',
	            'clip-path': 'inset(0 0 0 ' + lengths_js_1.em(1.5 * Notation.PADDING) + ')',
	            'box-sizing': 'border-box'
	        }
	    };
	    CHTMLmenclose.notations = new Map([
	        Notation.Border('top'),
	        Notation.Border('right'),
	        Notation.Border('bottom'),
	        Notation.Border('left'),
	        Notation.Border2('actuarial', 'top', 'right'),
	        Notation.Border2('madruwb', 'bottom', 'right'),
	        Notation.DiagonalStrike('up', 1),
	        Notation.DiagonalStrike('down', -1),
	        ['horizontalstrike', {
	                renderer: Notation.RenderElement('hstrike', 'Y'),
	                bbox: function (node) { return [0, node.padding, 0, node.padding]; }
	            }],
	        ['verticalstrike', {
	                renderer: Notation.RenderElement('vstrike', 'X'),
	                bbox: function (node) { return [node.padding, 0, node.padding, 0]; }
	            }],
	        ['box', {
	                renderer: function (node, child) {
	                    node.adaptor.setStyle(child, 'border', node.em(node.thickness) + ' solid');
	                },
	                bbox: Notation.fullBBox,
	                border: Notation.fullBorder,
	                remove: 'left right top bottom'
	            }],
	        ['roundedbox', {
	                renderer: Notation.RenderElement('rbox'),
	                bbox: Notation.fullBBox
	            }],
	        ['circle', {
	                renderer: Notation.RenderElement('cbox'),
	                bbox: Notation.fullBBox
	            }],
	        ['phasorangle', {
	                renderer: function (node, child) {
	                    var _a = node.getBBox(), w = _a.w, h = _a.h, d = _a.d;
	                    var _b = __read(node.getArgMod(1.75 * node.padding, h + d), 2), a = _b[0], W = _b[1];
	                    var t = node.thickness * Math.sin(a) * .9;
	                    node.adaptor.setStyle(child, 'border-bottom', node.em(node.thickness) + ' solid');
	                    var strike = node.adjustBorder(node.html('mjx-ustrike', { style: {
	                            width: node.em(W),
	                            transform: 'translateX(' + node.em(t) + ') rotate(' + node.fixed(-a) + 'rad)',
	                        } }));
	                    node.adaptor.append(node.chtml, strike);
	                },
	                bbox: function (node) {
	                    var p = node.padding / 2;
	                    var t = node.thickness;
	                    return [2 * p, p, p + t, 3 * p + t];
	                },
	                border: function (node) { return [0, 0, node.thickness, 0]; },
	                remove: 'bottom'
	            }],
	        Notation.Arrow('up'),
	        Notation.Arrow('down'),
	        Notation.Arrow('left'),
	        Notation.Arrow('right'),
	        Notation.Arrow('updown'),
	        Notation.Arrow('leftright'),
	        Notation.DiagonalArrow('updiagonal'),
	        Notation.DiagonalArrow('northeast'),
	        Notation.DiagonalArrow('southeast'),
	        Notation.DiagonalArrow('northwest'),
	        Notation.DiagonalArrow('southwest'),
	        Notation.DiagonalArrow('northeastsouthwest'),
	        Notation.DiagonalArrow('northwestsoutheast'),
	        ['longdiv', {
	                renderer: function (node, child) {
	                    var adaptor = node.adaptor;
	                    adaptor.setStyle(child, 'border-top', node.em(node.thickness) + ' solid');
	                    var arc = adaptor.append(node.chtml, node.html('dbox'));
	                    var t = node.thickness;
	                    var p = node.padding;
	                    if (t !== Notation.THICKNESS) {
	                        adaptor.setStyle(arc, 'border-width', node.em(t));
	                    }
	                    if (p !== Notation.PADDING) {
	                        adaptor.setStyle(arc, 'left', node.em(-1.5 * p));
	                        adaptor.setStyle(arc, 'width', node.em(3 * p));
	                        adaptor.setStyle(arc, 'clip-path', 'inset(0 0 0 ' + node.em(1.5 * p) + ')');
	                    }
	                },
	                bbox: function (node) {
	                    var p = node.padding;
	                    var t = node.thickness;
	                    return [p + t, p, p, 2 * p + t / 2];
	                }
	            }],
	        ['radical', {
	                renderer: function (node, child) {
	                    node.msqrt.toCHTML(child);
	                    var TRBL = node.sqrtTRBL();
	                    node.adaptor.setStyle(node.msqrt.chtml, 'margin', TRBL.map(function (x) { return node.em(-x); }).join(' '));
	                },
	                init: function (node) {
	                    node.msqrt = node.createMsqrt(node.childNodes[0]);
	                },
	                bbox: function (node) { return node.sqrtTRBL(); },
	                renderChild: true
	            }]
	    ]);
	    return CHTMLmenclose;
	}(menclose_js_1.CommonMencloseMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmenclose = CHTMLmenclose;
	//# sourceMappingURL=menclose.js.map

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Notation = __webpack_require__(239);
	var string_js_1 = __webpack_require__(164);
	function CommonMencloseMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.notations = {};
	            _this.renderChild = null;
	            _this.msqrt = null;
	            _this.padding = Notation.PADDING;
	            _this.thickness = Notation.THICKNESS;
	            _this.arrowhead = { x: Notation.ARROWX, y: Notation.ARROWY, dx: Notation.ARROWDX };
	            _this.getParameters();
	            _this.getNotations();
	            _this.removeRedundantNotations();
	            _this.initializeNotations();
	            return _this;
	        }
	        class_1.prototype.getParameters = function () {
	            var attributes = this.node.attributes;
	            var padding = attributes.get('data-padding');
	            if (padding !== undefined) {
	                this.padding = this.length2em(padding, Notation.PADDING);
	            }
	            var thickness = attributes.get('data-thickness');
	            if (thickness !== undefined) {
	                this.thickness = this.length2em(thickness, Notation.THICKNESS);
	            }
	            var arrowhead = attributes.get('data-arrowhead');
	            if (arrowhead !== undefined) {
	                var _a = __read(string_js_1.split(arrowhead), 3), x = _a[0], y = _a[1], dx = _a[2];
	                this.arrowhead = {
	                    x: (x ? parseFloat(x) : Notation.ARROWX),
	                    y: (y ? parseFloat(y) : Notation.ARROWY),
	                    dx: (dx ? parseFloat(dx) : Notation.ARROWDX)
	                };
	            }
	        };
	        class_1.prototype.getNotations = function () {
	            var e_1, _a;
	            var Notations = this.constructor.notations;
	            try {
	                for (var _b = __values(string_js_1.split(this.node.attributes.get('notation'))), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var name_1 = _c.value;
	                    var notation = Notations.get(name_1);
	                    if (notation) {
	                        this.notations[name_1] = notation;
	                        if (notation.renderChild) {
	                            this.renderChild = notation.renderer;
	                        }
	                    }
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	        };
	        class_1.prototype.removeRedundantNotations = function () {
	            var e_2, _a, e_3, _b;
	            try {
	                for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var name_2 = _d.value;
	                    if (this.notations[name_2]) {
	                        var remove = this.notations[name_2].remove || '';
	                        try {
	                            for (var _e = (e_3 = void 0, __values(remove.split(/ /))), _f = _e.next(); !_f.done; _f = _e.next()) {
	                                var notation = _f.value;
	                                delete this.notations[notation];
	                            }
	                        }
	                        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                        finally {
	                            try {
	                                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                            }
	                            finally { if (e_3) throw e_3.error; }
	                        }
	                    }
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	        };
	        class_1.prototype.initializeNotations = function () {
	            var e_4, _a;
	            try {
	                for (var _b = __values(Object.keys(this.notations)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var name_3 = _c.value;
	                    var init = this.notations[name_3].init;
	                    init && init(this);
	                }
	            }
	            catch (e_4_1) { e_4 = { error: e_4_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_4) throw e_4.error; }
	            }
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var _a = __read(this.getBBoxExtenders(), 4), T = _a[0], R = _a[1], B = _a[2], L = _a[3];
	            var child = this.childNodes[0].getBBox();
	            bbox.combine(child, L, 0);
	            bbox.h += T;
	            bbox.d += B;
	            bbox.w += R;
	            this.setChildPWidths(recompute);
	        };
	        class_1.prototype.getBBoxExtenders = function () {
	            var e_5, _a;
	            var TRBL = [0, 0, 0, 0];
	            try {
	                for (var _b = __values(Object.keys(this.notations)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var name_4 = _c.value;
	                    this.maximizeEntries(TRBL, this.notations[name_4].bbox(this));
	                }
	            }
	            catch (e_5_1) { e_5 = { error: e_5_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_5) throw e_5.error; }
	            }
	            return TRBL;
	        };
	        class_1.prototype.getPadding = function () {
	            var e_6, _a;
	            var TRBL = [0, 0, 0, 0];
	            var BTRBL = [0, 0, 0, 0];
	            try {
	                for (var _b = __values(Object.keys(this.notations)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var name_5 = _c.value;
	                    this.maximizeEntries(TRBL, this.notations[name_5].bbox(this));
	                    var border = this.notations[name_5].border;
	                    if (border) {
	                        this.maximizeEntries(BTRBL, border(this));
	                    }
	                }
	            }
	            catch (e_6_1) { e_6 = { error: e_6_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_6) throw e_6.error; }
	            }
	            return [0, 1, 2, 3].map(function (i) { return TRBL[i] - BTRBL[i]; });
	        };
	        class_1.prototype.maximizeEntries = function (X, Y) {
	            for (var i = 0; i < X.length; i++) {
	                if (X[i] < Y[i]) {
	                    X[i] = Y[i];
	                }
	            }
	        };
	        class_1.prototype.getArgMod = function (w, h) {
	            return [Math.atan2(h, w), Math.sqrt(w * w + h * h)];
	        };
	        class_1.prototype.arrow = function (w, a, double) {
	            if (double === void 0) { double = false; }
	            return null;
	        };
	        class_1.prototype.arrowData = function () {
	            var _a = __read([this.padding, this.thickness], 2), p = _a[0], t = _a[1];
	            var r = t * (this.arrowhead.x + Math.max(1, this.arrowhead.dx));
	            var _b = this.childNodes[0].getBBox(), h = _b.h, d = _b.d, w = _b.w;
	            var H = h + d;
	            var R = Math.sqrt(H * H + w * w);
	            var x = Math.max(p, r * w / R);
	            var y = Math.max(p, r * H / R);
	            var _c = __read(this.getArgMod(w + 2 * x, H + 2 * y), 2), a = _c[0], W = _c[1];
	            return { a: a, W: W, x: x, y: y };
	        };
	        class_1.prototype.createMsqrt = function (child) {
	            var mmlFactory = this.node.factory;
	            var mml = mmlFactory.create('msqrt');
	            mml.inheritAttributesFrom(this.node);
	            mml.childNodes[0] = child.node;
	            var node = this.wrap(mml);
	            node.parent = this;
	            return node;
	        };
	        class_1.prototype.sqrtTRBL = function () {
	            var bbox = this.msqrt.getBBox();
	            var cbox = this.msqrt.childNodes[0].getBBox();
	            return [bbox.h - cbox.h, 0, bbox.d - cbox.d, bbox.w - cbox.w];
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMencloseMixin = CommonMencloseMixin;
	//# sourceMappingURL=menclose.js.map

/***/ }),
/* 239 */
/***/ (function(module, exports) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.ARROWX = 4, exports.ARROWDX = 1, exports.ARROWY = 2;
	exports.THICKNESS = .067;
	exports.PADDING = .2;
	exports.SOLID = exports.THICKNESS + 'em solid';
	exports.sideIndex = { top: 0, right: 1, bottom: 2, left: 3 };
	exports.sideNames = Object.keys(exports.sideIndex);
	exports.fullBBox = (function (node) { return new Array(4).fill(node.thickness + node.padding); });
	exports.fullPadding = (function (node) { return new Array(4).fill(node.padding); });
	exports.fullBorder = (function (node) { return new Array(4).fill(node.thickness); });
	exports.arrowHead = function (node) {
	    return Math.max(node.padding, node.thickness * (node.arrowhead.x + node.arrowhead.dx + 1));
	};
	exports.arrowBBoxHD = function (node, TRBL) {
	    if (node.childNodes[0]) {
	        var _a = node.childNodes[0].getBBox(), h = _a.h, d = _a.d;
	        TRBL[0] = TRBL[2] = Math.max(0, node.thickness * node.arrowhead.y - (h + d) / 2);
	    }
	    return TRBL;
	};
	exports.arrowBBoxW = function (node, TRBL) {
	    if (node.childNodes[0]) {
	        var w = node.childNodes[0].getBBox().w;
	        TRBL[1] = TRBL[3] = Math.max(0, node.thickness * node.arrowhead.y - w / 2);
	    }
	    return TRBL;
	};
	exports.arrowDef = {
	    up: [-Math.PI / 2, false, true, 'verticalstrike'],
	    down: [Math.PI / 2, false, true, 'verticakstrike'],
	    right: [0, false, false, 'horizontalstrike'],
	    left: [Math.PI, false, false, 'horizontalstrike'],
	    updown: [Math.PI / 2, true, true, 'verticalstrike uparrow downarrow'],
	    leftright: [0, true, false, 'horizontalstrike leftarrow rightarrow']
	};
	exports.diagonalArrowDef = {
	    updiagonal: [-1, 0, false, 'updiagonalstrike northeastarrow'],
	    northeast: [-1, 0, false, 'updiagonalstrike updiagonalarrow'],
	    southeast: [1, 0, false, 'downdiagonalstrike'],
	    northwest: [1, Math.PI, false, 'downdiagonalstrike'],
	    southwest: [-1, Math.PI, false, 'updiagonalstrike'],
	    northeastsouthwest: [-1, 0, true, 'updiagonalstrike northeastarrow updiagonalarrow southwestarrow'],
	    northwestsoutheast: [1, 0, true, 'downdiagonalstrike northwestarrow southeastarrow']
	};
	exports.arrowBBox = {
	    up: function (node) { return exports.arrowBBoxW(node, [exports.arrowHead(node), 0, node.padding, 0]); },
	    down: function (node) { return exports.arrowBBoxW(node, [node.padding, 0, exports.arrowHead(node), 0]); },
	    right: function (node) { return exports.arrowBBoxHD(node, [0, exports.arrowHead(node), 0, node.padding]); },
	    left: function (node) { return exports.arrowBBoxHD(node, [0, node.padding, 0, exports.arrowHead(node)]); },
	    updown: function (node) { return exports.arrowBBoxW(node, [exports.arrowHead(node), 0, exports.arrowHead(node), 0]); },
	    leftright: function (node) { return exports.arrowBBoxHD(node, [0, exports.arrowHead(node), 0, exports.arrowHead(node)]); }
	};
	exports.CommonBorder = function (render) {
	    return function (side) {
	        var i = exports.sideIndex[side];
	        return [side, {
	                renderer: render,
	                bbox: function (node) {
	                    var bbox = [0, 0, 0, 0];
	                    bbox[i] = node.thickness + node.padding;
	                    return bbox;
	                },
	                border: function (node) {
	                    var bbox = [0, 0, 0, 0];
	                    bbox[i] = node.thickness;
	                    return bbox;
	                }
	            }];
	    };
	};
	exports.CommonBorder2 = function (render) {
	    return function (name, side1, side2) {
	        var i1 = exports.sideIndex[side1];
	        var i2 = exports.sideIndex[side2];
	        return [name, {
	                renderer: render,
	                bbox: function (node) {
	                    var t = node.thickness + node.padding;
	                    var bbox = [0, 0, 0, 0];
	                    bbox[i1] = bbox[i2] = t;
	                    return bbox;
	                },
	                border: function (node) {
	                    var bbox = [0, 0, 0, 0];
	                    bbox[i1] = bbox[i2] = node.thickness;
	                    return bbox;
	                },
	                remove: side1 + ' ' + side2
	            }];
	    };
	};
	exports.CommonDiagonalStrike = function (render) {
	    return function (name) {
	        var cname = 'mjx-' + name.charAt(0) + 'strike';
	        return [name + 'diagonalstrike', {
	                renderer: render(cname),
	                bbox: exports.fullBBox
	            }];
	    };
	};
	exports.CommonDiagonalArrow = function (render) {
	    return function (name) {
	        var _a = __read(exports.diagonalArrowDef[name], 4), c = _a[0], pi = _a[1], double = _a[2], remove = _a[3];
	        return [name + 'arrow', {
	                renderer: function (node, child) {
	                    var _a = node.arrowData(), a = _a.a, W = _a.W;
	                    var arrow = node.arrow(W, c * (a - pi), double);
	                    render(node, arrow);
	                },
	                bbox: function (node) {
	                    var _a = node.arrowData(), a = _a.a, x = _a.x, y = _a.y;
	                    var _b = __read([node.arrowhead.x, node.arrowhead.y, node.arrowhead.dx], 3), ax = _b[0], ay = _b[1], adx = _b[2];
	                    var _c = __read(node.getArgMod(ax + adx, ay), 2), b = _c[0], ar = _c[1];
	                    var dy = y + (b > a ? node.thickness * ar * Math.sin(b - a) : 0);
	                    var dx = x + (b > Math.PI / 2 - a ? node.thickness * ar * Math.sin(b + a - Math.PI / 2) : 0);
	                    return [dy, dx, dy, dx];
	                },
	                remove: remove
	            }];
	    };
	};
	exports.CommonArrow = function (render) {
	    return function (name) {
	        var _a = __read(exports.arrowDef[name], 4), angle = _a[0], double = _a[1], isVertical = _a[2], remove = _a[3];
	        return [name + 'arrow', {
	                renderer: function (node, child) {
	                    var _a = node.getBBox(), w = _a.w, h = _a.h, d = _a.d;
	                    var _b = __read((isVertical ? [h + d, w] : [w, h + d]), 2), W = _b[0], H = _b[1];
	                    var arrow = node.arrow(W, angle, double);
	                    render(node, arrow);
	                },
	                bbox: exports.arrowBBox[name],
	                remove: remove
	            }];
	    };
	};
	//# sourceMappingURL=Notation.js.map

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	var Notation = __webpack_require__(239);
	__export(__webpack_require__(239));
	exports.RenderElement = function (name, offset) {
	    if (offset === void 0) { offset = ''; }
	    return (function (node, child) {
	        var shape = node.adjustBorder(node.html('mjx-' + name));
	        if (offset && node.thickness !== Notation.THICKNESS) {
	            var transform = 'translate' + offset + '(' + node.em(node.thickness / 2) + ')';
	            node.adaptor.setStyle(shape, 'transform', transform);
	        }
	        node.adaptor.append(node.chtml, shape);
	    });
	};
	exports.Border = function (side) {
	    return Notation.CommonBorder(function (node, child) {
	        node.adaptor.setStyle(child, 'border-' + side, node.em(node.thickness) + ' solid');
	    })(side);
	};
	exports.Border2 = function (name, side1, side2) {
	    return Notation.CommonBorder2(function (node, child) {
	        var border = node.em(node.thickness) + ' solid';
	        node.adaptor.setStyle(child, 'border-' + side1, border);
	        node.adaptor.setStyle(child, 'border-' + side2, border);
	    })(name, side1, side2);
	};
	exports.DiagonalStrike = function (name, neg) {
	    return Notation.CommonDiagonalStrike(function (cname) { return function (node, child) {
	        var _a = node.getBBox(), w = _a.w, h = _a.h, d = _a.d;
	        var _b = __read(node.getArgMod(w, h + d), 2), a = _b[0], W = _b[1];
	        var t = neg * node.thickness / 2;
	        var strike = node.adjustBorder(node.html(cname, { style: {
	                width: node.em(W),
	                transform: 'rotate(' + node.fixed(-neg * a) + 'rad) translateY(' + t + 'em)',
	            } }));
	        node.adaptor.append(node.chtml, strike);
	    }; })(name);
	};
	exports.DiagonalArrow = function (name) {
	    return Notation.CommonDiagonalArrow(function (node, arrow) {
	        node.adaptor.append(node.chtml, arrow);
	    })(name);
	};
	exports.Arrow = function (name) {
	    return Notation.CommonArrow(function (node, arrow) {
	        node.adaptor.append(node.chtml, arrow);
	    })(name);
	};
	//# sourceMappingURL=Notation.js.map

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMenclose = (function (_super) {
	    __extends(MmlMenclose, _super);
	    function MmlMenclose() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMenclose.prototype, "kind", {
	        get: function () {
	            return 'menclose';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMenclose.prototype, "arity", {
	        get: function () {
	            return -1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMenclose.prototype, "linebreakContininer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMenclose.prototype.setTeXclass = function (prev) {
	        prev = this.childNodes[0].setTeXclass(prev);
	        this.updateTeXclass(this.childNodes[0]);
	        return prev;
	    };
	    MmlMenclose.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { notation: 'longdiv' });
	    return MmlMenclose;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMenclose = MmlMenclose;
	//# sourceMappingURL=menclose.js.map

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mrow_js_1 = __webpack_require__(243);
	var mrow_js_2 = __webpack_require__(243);
	var mrow_js_3 = __webpack_require__(244);
	var CHTMLmrow = (function (_super) {
	    __extends(CHTMLmrow, _super);
	    function CHTMLmrow() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmrow.prototype.toCHTML = function (parent) {
	        var e_1, _a;
	        var chtml = (this.node.isInferred ? (this.chtml = parent) : this.standardCHTMLnode(parent));
	        var hasNegative = false;
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.toCHTML(chtml);
	                if (child.bbox.w < 0) {
	                    hasNegative = true;
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        if (hasNegative) {
	            var w = this.getBBox().w;
	            if (w) {
	                this.adaptor.setStyle(chtml, 'width', this.em(Math.max(0, w)));
	                if (w < 0) {
	                    this.adaptor.setStyle(chtml, 'marginRight', this.em(w));
	                }
	            }
	        }
	    };
	    CHTMLmrow.kind = mrow_js_3.MmlMrow.prototype.kind;
	    return CHTMLmrow;
	}(mrow_js_1.CommonMrowMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmrow = CHTMLmrow;
	var CHTMLinferredMrow = (function (_super) {
	    __extends(CHTMLinferredMrow, _super);
	    function CHTMLinferredMrow() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLinferredMrow.kind = mrow_js_3.MmlInferredMrow.prototype.kind;
	    return CHTMLinferredMrow;
	}(mrow_js_2.CommonInferredMrowMixin(CHTMLmrow)));
	exports.CHTMLinferredMrow = CHTMLinferredMrow;
	//# sourceMappingURL=mrow.js.map

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var BBox_js_1 = __webpack_require__(211);
	function CommonMrowMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var e_1, _a;
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.stretchChildren();
	            try {
	                for (var _b = __values(_this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    if (child.bbox.pwidth) {
	                        _this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
	                        break;
	                    }
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	            return _this;
	        }
	        Object.defineProperty(class_1.prototype, "fixesPWidth", {
	            get: function () {
	                return false;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.stretchChildren = function () {
	            var e_2, _a, e_3, _b, e_4, _c;
	            var stretchy = [];
	            try {
	                for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {
	                    var child = _e.value;
	                    if (child.canStretch(1)) {
	                        stretchy.push(child);
	                    }
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	            var count = stretchy.length;
	            var nodeCount = this.childNodes.length;
	            if (count && nodeCount > 1) {
	                var H = 0, D = 0;
	                var all = (count > 1 && count === nodeCount);
	                try {
	                    for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {
	                        var child = _g.value;
	                        var noStretch = (child.stretch.dir === 0);
	                        if (all || noStretch) {
	                            var _h = child.getBBox(noStretch), h = _h.h, d = _h.d;
	                            if (h > H)
	                                H = h;
	                            if (d > D)
	                                D = d;
	                        }
	                    }
	                }
	                catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                finally {
	                    try {
	                        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
	                    }
	                    finally { if (e_3) throw e_3.error; }
	                }
	                try {
	                    for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
	                        var child = stretchy_1_1.value;
	                        child.coreMO().getStretchedVariant([H, D]);
	                    }
	                }
	                catch (e_4_1) { e_4 = { error: e_4_1 }; }
	                finally {
	                    try {
	                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
	                    }
	                    finally { if (e_4) throw e_4.error; }
	                }
	            }
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMrowMixin = CommonMrowMixin;
	function CommonInferredMrowMixin(Base) {
	    return (function (_super) {
	        __extends(class_2, _super);
	        function class_2() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_2.prototype.getScale = function () {
	            this.bbox.scale = this.parent.bbox.scale;
	            this.bbox.rscale = 1;
	        };
	        return class_2;
	    }(Base));
	}
	exports.CommonInferredMrowMixin = CommonInferredMrowMixin;
	//# sourceMappingURL=mrow.js.map

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMrow = (function (_super) {
	    __extends(MmlMrow, _super);
	    function MmlMrow() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this._core = null;
	        return _this;
	    }
	    Object.defineProperty(MmlMrow.prototype, "kind", {
	        get: function () {
	            return 'mrow';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMrow.prototype, "isSpacelike", {
	        get: function () {
	            var e_1, _a;
	            try {
	                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    if (!child.isSpacelike) {
	                        return false;
	                    }
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMrow.prototype, "isEmbellished", {
	        get: function () {
	            var e_2, _a;
	            var embellished = false;
	            var i = 0;
	            try {
	                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    if (child) {
	                        if (child.isEmbellished) {
	                            if (embellished) {
	                                return false;
	                            }
	                            embellished = true;
	                            this._core = i;
	                        }
	                        else if (!child.isSpacelike) {
	                            return false;
	                        }
	                    }
	                    i++;
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	            return embellished;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMrow.prototype.core = function () {
	        if (!this.isEmbellished || this._core == null) {
	            return this;
	        }
	        return this.childNodes[this._core];
	    };
	    MmlMrow.prototype.coreMO = function () {
	        if (!this.isEmbellished || this._core == null) {
	            return this;
	        }
	        return this.childNodes[this._core].coreMO();
	    };
	    MmlMrow.prototype.nonSpaceLength = function () {
	        var e_3, _a;
	        var n = 0;
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child && !child.isSpacelike) {
	                    n++;
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        return n;
	    };
	    MmlMrow.prototype.firstNonSpace = function () {
	        var e_4, _a;
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child && !child.isSpacelike) {
	                    return child;
	                }
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	        return null;
	    };
	    MmlMrow.prototype.lastNonSpace = function () {
	        var i = this.childNodes.length;
	        while (--i >= 0) {
	            var child = this.childNodes[i];
	            if (child && !child.isSpacelike) {
	                return child;
	            }
	        }
	        return null;
	    };
	    MmlMrow.prototype.setTeXclass = function (prev) {
	        var e_5, _a, e_6, _b;
	        if ((this.getProperty('open') != null || this.getProperty('close') != null) &&
	            (!prev || prev.getProperty('fnOp') != null)) {
	            this.getPrevClass(prev);
	            prev = null;
	            try {
	                for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var child = _d.value;
	                    prev = child.setTeXclass(prev);
	                }
	            }
	            catch (e_5_1) { e_5 = { error: e_5_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                }
	                finally { if (e_5) throw e_5.error; }
	            }
	            if (this.texClass == null) {
	                this.texClass = MmlNode_js_1.TEXCLASS.INNER;
	            }
	        }
	        else {
	            try {
	                for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
	                    var child = _f.value;
	                    prev = child.setTeXclass(prev);
	                }
	            }
	            catch (e_6_1) { e_6 = { error: e_6_1 }; }
	            finally {
	                try {
	                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                }
	                finally { if (e_6) throw e_6.error; }
	            }
	            if (this.childNodes[0]) {
	                this.updateTeXclass(this.childNodes[0]);
	            }
	        }
	        return prev;
	    };
	    MmlMrow.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
	    return MmlMrow;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMrow = MmlMrow;
	var MmlInferredMrow = (function (_super) {
	    __extends(MmlInferredMrow, _super);
	    function MmlInferredMrow() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlInferredMrow.prototype, "kind", {
	        get: function () {
	            return 'inferredMrow';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlInferredMrow.prototype, "isInferred", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlInferredMrow.prototype, "notParent", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlInferredMrow.prototype.toString = function () {
	        return '[' + this.childNodes.join(',') + ']';
	    };
	    MmlInferredMrow.defaults = MmlMrow.defaults;
	    return MmlInferredMrow;
	}(MmlMrow));
	exports.MmlInferredMrow = MmlInferredMrow;
	//# sourceMappingURL=mrow.js.map

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mfenced_js_1 = __webpack_require__(246);
	var mfenced_js_2 = __webpack_require__(247);
	var CHTMLmfenced = (function (_super) {
	    __extends(CHTMLmfenced, _super);
	    function CHTMLmfenced() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmfenced.prototype.toCHTML = function (parent) {
	        var chtml = this.standardCHTMLnode(parent);
	        this.mrow.toCHTML(chtml);
	    };
	    CHTMLmfenced.kind = mfenced_js_2.MmlMfenced.prototype.kind;
	    return CHTMLmfenced;
	}(mfenced_js_1.CommonMfencedMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmfenced = CHTMLmfenced;
	//# sourceMappingURL=mfenced.js.map

/***/ }),
/* 246 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMfencedMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.mrow = null;
	            _this.createMrow();
	            _this.addMrowChildren();
	            return _this;
	        }
	        class_1.prototype.createMrow = function () {
	            var mmlFactory = this.node.factory;
	            var mrow = mmlFactory.create('inferredMrow');
	            mrow.inheritAttributesFrom(this.node);
	            this.mrow = this.wrap(mrow);
	            this.mrow.parent = this;
	        };
	        class_1.prototype.addMrowChildren = function () {
	            var e_1, _a;
	            var mfenced = this.node;
	            var mrow = this.mrow;
	            this.addMo(mfenced.open);
	            if (this.childNodes.length) {
	                mrow.childNodes.push(this.childNodes[0]);
	            }
	            var i = 0;
	            try {
	                for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    this.addMo(mfenced.separators[i++]);
	                    mrow.childNodes.push(child);
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	            this.addMo(mfenced.close);
	            mrow.stretchChildren();
	        };
	        class_1.prototype.addMo = function (node) {
	            if (!node)
	                return;
	            var mo = this.wrap(node);
	            this.mrow.childNodes.push(mo);
	            mo.parent = this.mrow;
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            bbox.updateFrom(this.mrow.getBBox());
	            this.setChildPWidths(recompute);
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMfencedMixin = CommonMfencedMixin;
	//# sourceMappingURL=mfenced.js.map

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMfenced = (function (_super) {
	    __extends(MmlMfenced, _super);
	    function MmlMfenced() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.INNER;
	        _this.separators = [];
	        _this.open = null;
	        _this.close = null;
	        return _this;
	    }
	    Object.defineProperty(MmlMfenced.prototype, "kind", {
	        get: function () {
	            return 'mfenced';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMfenced.prototype.setTeXclass = function (prev) {
	        this.getPrevClass(prev);
	        if (this.open) {
	            prev = this.open.setTeXclass(prev);
	        }
	        if (this.childNodes[0]) {
	            prev = this.childNodes[0].setTeXclass(prev);
	        }
	        for (var i = 1, m = this.childNodes.length; i < m; i++) {
	            if (this.separators[i - 1]) {
	                prev = this.separators[i - 1].setTeXclass(prev);
	            }
	            if (this.childNodes[i]) {
	                prev = this.childNodes[i].setTeXclass(prev);
	            }
	        }
	        if (this.close) {
	            prev = this.close.setTeXclass(prev);
	        }
	        this.updateTeXclass(this.open);
	        return prev;
	    };
	    MmlMfenced.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var e_1, _a;
	        this.addFakeNodes();
	        try {
	            for (var _b = __values([this.open, this.close].concat(this.separators)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child) {
	                    child.setInheritedAttributes(attributes, display, level, prime);
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
	    };
	    MmlMfenced.prototype.addFakeNodes = function () {
	        var e_2, _a;
	        var _b = this.attributes.getList('open', 'close', 'separators'), open = _b.open, close = _b.close, separators = _b.separators;
	        open = open.replace(/[ \t\n\r]/g, '');
	        close = close.replace(/[ \t\n\r]/g, '');
	        separators = separators.replace(/[ \t\n\r]/g, '');
	        if (open) {
	            this.open = this.fakeNode(open, { fence: true, form: 'prefix' }, MmlNode_js_1.TEXCLASS.OPEN);
	        }
	        if (separators) {
	            while (separators.length < this.childNodes.length - 1) {
	                separators += separators.charAt(separators.length - 1);
	            }
	            var i = 0;
	            try {
	                for (var _c = __values(this.childNodes.slice(1)), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var child = _d.value;
	                    if (child) {
	                        this.separators.push(this.fakeNode(separators.charAt(i++)));
	                    }
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	        }
	        if (close) {
	            this.close = this.fakeNode(close, { fence: true, form: 'postfix' }, MmlNode_js_1.TEXCLASS.CLOSE);
	        }
	    };
	    MmlMfenced.prototype.fakeNode = function (c, properties, texClass) {
	        if (properties === void 0) { properties = {}; }
	        if (texClass === void 0) { texClass = null; }
	        var text = this.factory.create('text').setText(c);
	        var node = this.factory.create('mo', properties, [text]);
	        node.texClass = texClass;
	        node.parent = this;
	        return node;
	    };
	    MmlMfenced.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { open: '(', close: ')', separators: ',' });
	    return MmlMfenced;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMfenced = MmlMfenced;
	//# sourceMappingURL=mfenced.js.map

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mfrac_js_1 = __webpack_require__(249);
	var mfrac_js_2 = __webpack_require__(250);
	var CHTMLmfrac = (function (_super) {
	    __extends(CHTMLmfrac, _super);
	    function CHTMLmfrac() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmfrac.prototype.toCHTML = function (parent) {
	        this.standardCHTMLnode(parent);
	        var _a = this.node.attributes.getList('linethickness', 'bevelled'), linethickness = _a.linethickness, bevelled = _a.bevelled;
	        var display = this.isDisplay();
	        if (bevelled) {
	            this.makeBevelled(display);
	        }
	        else {
	            var thickness = this.length2em(String(linethickness), .06);
	            if (thickness === 0) {
	                this.makeAtop(display);
	            }
	            else {
	                this.makeFraction(display, thickness);
	            }
	        }
	    };
	    CHTMLmfrac.prototype.makeFraction = function (display, t) {
	        var _a = this.node.attributes.getList('numalign', 'denomalign'), numalign = _a.numalign, denomalign = _a.denomalign;
	        var withDelims = this.node.getProperty('withDelims');
	        var attr = (display ? { type: 'd' } : {});
	        var fattr = (withDelims ? __assign(__assign({}, attr), { delims: 'true' }) : __assign({}, attr));
	        var nattr = (numalign !== 'center' ? { align: numalign } : {});
	        var dattr = (denomalign !== 'center' ? { align: denomalign } : {});
	        var dsattr = __assign({}, attr), nsattr = __assign({}, attr);
	        var tex = this.font.params;
	        if (t !== .06) {
	            var a = tex.axis_height;
	            var tEm = this.em(t);
	            var _b = this.getTUV(display, t), T = _b.T, u = _b.u, v = _b.v;
	            var m = (display ? this.em(3 * t) : tEm) + ' -.1em';
	            attr.style = { height: tEm, 'border-top': tEm + ' solid', margin: m };
	            var nh = this.em(Math.max(0, u));
	            nsattr.style = { height: nh, 'vertical-align': '-' + nh };
	            dsattr.style = { height: this.em(Math.max(0, v)) };
	            fattr.style = { 'vertical-align': this.em(a - T) };
	        }
	        var num, den;
	        this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [
	            num = this.html('mjx-num', nattr, [this.html('mjx-nstrut', nsattr)]),
	            this.html('mjx-dbox', {}, [
	                this.html('mjx-dtable', {}, [
	                    this.html('mjx-line', attr),
	                    this.html('mjx-row', {}, [
	                        den = this.html('mjx-den', dattr, [this.html('mjx-dstrut', dsattr)])
	                    ])
	                ])
	            ])
	        ]));
	        this.childNodes[0].toCHTML(num);
	        this.childNodes[1].toCHTML(den);
	    };
	    CHTMLmfrac.prototype.makeAtop = function (display) {
	        var _a = this.node.attributes.getList('numalign', 'denomalign'), numalign = _a.numalign, denomalign = _a.denomalign;
	        var withDelims = this.node.getProperty('withDelims');
	        var attr = (display ? { type: 'd', atop: true } : { atop: true });
	        var fattr = (withDelims ? __assign(__assign({}, attr), { delims: true }) : __assign({}, attr));
	        var nattr = (numalign !== 'center' ? { align: numalign } : {});
	        var dattr = (denomalign !== 'center' ? { align: denomalign } : {});
	        var _b = this.getUVQ(display), v = _b.v, q = _b.q;
	        nattr.style = { 'padding-bottom': this.em(q) };
	        fattr.style = { 'vertical-align': this.em(-v) };
	        var num, den;
	        this.adaptor.append(this.chtml, this.html('mjx-frac', fattr, [
	            num = this.html('mjx-num', nattr),
	            den = this.html('mjx-den', dattr)
	        ]));
	        this.childNodes[0].toCHTML(num);
	        this.childNodes[1].toCHTML(den);
	    };
	    CHTMLmfrac.prototype.makeBevelled = function (display) {
	        var adaptor = this.adaptor;
	        adaptor.setAttribute(this.chtml, 'bevelled', 'ture');
	        var num = adaptor.append(this.chtml, this.html('mjx-num'));
	        this.childNodes[0].toCHTML(num);
	        this.bevel.toCHTML(this.chtml);
	        var den = adaptor.append(this.chtml, this.html('mjx-den'));
	        this.childNodes[1].toCHTML(den);
	        var _a = this.getBevelData(display), u = _a.u, v = _a.v, delta = _a.delta, nbox = _a.nbox, dbox = _a.dbox;
	        if (u) {
	            adaptor.setStyle(num, 'verticalAlign', this.em(u / nbox.scale));
	        }
	        if (v) {
	            adaptor.setStyle(den, 'verticalAlign', this.em(v / dbox.scale));
	        }
	        var dx = this.em(-delta / 2);
	        adaptor.setStyle(this.bevel.chtml, 'marginLeft', dx);
	        adaptor.setStyle(this.bevel.chtml, 'marginRight', dx);
	    };
	    CHTMLmfrac.kind = mfrac_js_2.MmlMfrac.prototype.kind;
	    CHTMLmfrac.styles = {
	        'mjx-frac': {
	            display: 'inline-block',
	            'vertical-align': '0.17em',
	            padding: '0 .22em'
	        },
	        'mjx-frac[type="d"]': {
	            'vertical-align': '.04em'
	        },
	        'mjx-frac[delims]': {
	            padding: '0 .1em'
	        },
	        'mjx-frac[atop]': {
	            padding: '0 .12em'
	        },
	        'mjx-frac[atop][delims]': {
	            padding: '0'
	        },
	        'mjx-dtable': {
	            display: 'inline-table',
	            width: '100%'
	        },
	        'mjx-dtable > *': {
	            'font-size': '2000%'
	        },
	        'mjx-dbox': {
	            display: 'block',
	            'font-size': '5%'
	        },
	        'mjx-num': {
	            display: 'block',
	            'text-align': 'center'
	        },
	        'mjx-den': {
	            display: 'block',
	            'text-align': 'center'
	        },
	        'mjx-mfrac[bevelled] > mjx-num': {
	            display: 'inline-block'
	        },
	        'mjx-mfrac[bevelled] > mjx-den': {
	            display: 'inline-block'
	        },
	        'mjx-den[align="right"], mjx-num[align="right"]': {
	            'text-align': 'right'
	        },
	        'mjx-den[align="left"], mjx-num[align="left"]': {
	            'text-align': 'left'
	        },
	        'mjx-nstrut': {
	            display: 'inline-block',
	            height: '.054em',
	            width: 0,
	            'vertical-align': '-.054em'
	        },
	        'mjx-nstrut[type="d"]': {
	            height: '.217em',
	            'vertical-align': '-.217em',
	        },
	        'mjx-dstrut': {
	            display: 'inline-block',
	            height: '.505em',
	            width: 0
	        },
	        'mjx-dstrut[type="d"]': {
	            height: '.726em',
	        },
	        'mjx-line': {
	            display: 'block',
	            'box-sizing': 'border-box',
	            'min-height': '1px',
	            height: '.06em',
	            'border-top': '.06em solid',
	            margin: '.06em -.1em',
	            overflow: 'hidden'
	        },
	        'mjx-line[type="d"]': {
	            margin: '.18em -.1em'
	        }
	    };
	    return CHTMLmfrac;
	}(mfrac_js_1.CommonMfracMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmfrac = CHTMLmfrac;
	//# sourceMappingURL=mfrac.js.map

/***/ }),
/* 249 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMfracMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.bevel = null;
	            _this.pad = (_this.node.getProperty('withDelims') ? 0 : _this.font.params.nulldelimiterspace);
	            if (_this.node.attributes.get('bevelled')) {
	                var H = _this.getBevelData(_this.isDisplay()).H;
	                var bevel = _this.bevel = _this.createMo('/');
	                bevel.canStretch(1);
	                bevel.getStretchedVariant([H], true);
	            }
	            return _this;
	        }
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            bbox.empty();
	            var _a = this.node.attributes.getList('linethickness', 'bevelled'), linethickness = _a.linethickness, bevelled = _a.bevelled;
	            var display = this.isDisplay();
	            var w = null;
	            if (bevelled) {
	                this.getBevelledBBox(bbox, display);
	            }
	            else {
	                var thickness = this.length2em(String(linethickness), .06);
	                w = -2 * this.pad;
	                if (thickness === 0) {
	                    this.getAtopBBox(bbox, display);
	                }
	                else {
	                    this.getFractionBBox(bbox, display, thickness);
	                    w -= .2;
	                }
	                w += bbox.w;
	            }
	            bbox.clean();
	            this.setChildPWidths(recompute, w);
	        };
	        class_1.prototype.getFractionBBox = function (bbox, display, t) {
	            var nbox = this.childNodes[0].getBBox();
	            var dbox = this.childNodes[1].getBBox();
	            var tex = this.font.params;
	            var a = tex.axis_height;
	            var _a = this.getTUV(display, t), T = _a.T, u = _a.u, v = _a.v;
	            bbox.combine(nbox, 0, a + T + Math.max(nbox.d * nbox.rscale, u));
	            bbox.combine(dbox, 0, a - T - Math.max(dbox.h * dbox.rscale, v));
	            bbox.w += 2 * this.pad + .2;
	        };
	        class_1.prototype.getTUV = function (display, t) {
	            var tex = this.font.params;
	            var a = tex.axis_height;
	            var T = (display ? 3.5 : 1.5) * t;
	            return { T: (display ? 3.5 : 1.5) * t,
	                u: (display ? tex.num1 : tex.num2) - a - T,
	                v: (display ? tex.denom1 : tex.denom2) + a - T };
	        };
	        class_1.prototype.getAtopBBox = function (bbox, display) {
	            var tex = this.font.params;
	            var _a = this.getUVQ(display), u = _a.u, v = _a.v, nbox = _a.nbox, dbox = _a.dbox;
	            bbox.combine(nbox, 0, u);
	            bbox.combine(dbox, 0, -v);
	            bbox.w += 2 * this.pad;
	        };
	        class_1.prototype.getUVQ = function (display) {
	            var nbox = this.childNodes[0].getBBox();
	            var dbox = this.childNodes[1].getBBox();
	            var tex = this.font.params;
	            var _a = __read((display ? [tex.num1, tex.denom1] : [tex.num3, tex.denom2]), 2), u = _a[0], v = _a[1];
	            var p = (display ? 7 : 3) * tex.rule_thickness;
	            var q = (u - nbox.d * nbox.scale) - (dbox.h * dbox.scale - v);
	            if (q < p) {
	                u += (p - q) / 2;
	                v += (p - q) / 2;
	                q = p;
	            }
	            return { u: u, v: v, q: q, nbox: nbox, dbox: dbox };
	        };
	        class_1.prototype.getBevelledBBox = function (bbox, display) {
	            var _a = this.getBevelData(display), u = _a.u, v = _a.v, delta = _a.delta, nbox = _a.nbox, dbox = _a.dbox;
	            var lbox = this.bevel.getBBox();
	            bbox.combine(nbox, 0, u);
	            bbox.combine(lbox, bbox.w - delta / 2, 0);
	            bbox.combine(dbox, bbox.w - delta / 2, v);
	        };
	        class_1.prototype.getBevelData = function (display) {
	            var nbox = this.childNodes[0].getBBox();
	            var dbox = this.childNodes[1].getBBox();
	            var delta = (display ? .4 : .15);
	            var H = Math.max(nbox.scale * (nbox.h + nbox.d), dbox.scale * (dbox.h + dbox.d)) + 2 * delta;
	            var a = this.font.params.axis_height;
	            var u = nbox.scale * (nbox.d - nbox.h) / 2 + a + delta;
	            var v = dbox.scale * (dbox.d - dbox.h) / 2 + a - delta;
	            return { H: H, delta: delta, u: u, v: v, nbox: nbox, dbox: dbox };
	        };
	        class_1.prototype.canStretch = function (direction) {
	            return false;
	        };
	        class_1.prototype.isDisplay = function () {
	            var _a = this.node.attributes.getList('displaystyle', 'scriptlevel'), displaystyle = _a.displaystyle, scriptlevel = _a.scriptlevel;
	            return displaystyle && scriptlevel === 0;
	        };
	        class_1.prototype.getWrapWidth = function (i) {
	            var attributes = this.node.attributes;
	            if (attributes.get('bevelled')) {
	                return this.childNodes[i].getBBox().w;
	            }
	            var w = this.getBBox().w;
	            var thickness = this.length2em(attributes.get('linethickness'));
	            return w - (thickness ? .2 : 0) - 2 * this.pad;
	        };
	        class_1.prototype.getChildAlign = function (i) {
	            var attributes = this.node.attributes;
	            return (attributes.get('bevelled') ? 'left' : attributes.get(['numalign', 'denomalign'][i]));
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMfracMixin = CommonMfracMixin;
	//# sourceMappingURL=mfrac.js.map

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMfrac = (function (_super) {
	    __extends(MmlMfrac, _super);
	    function MmlMfrac() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMfrac.prototype, "kind", {
	        get: function () {
	            return 'mfrac';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMfrac.prototype, "arity", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMfrac.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMfrac.prototype.setTeXclass = function (prev) {
	        var e_1, _a;
	        this.getPrevClass(prev);
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.setTeXclass(null);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return this;
	    };
	    MmlMfrac.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        if (!display || level > 0) {
	            level++;
	        }
	        this.childNodes[0].setInheritedAttributes(attributes, false, level, prime);
	        this.childNodes[1].setInheritedAttributes(attributes, false, level, true);
	    };
	    MmlMfrac.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { linethickness: 'medium', numalign: 'center', denomalign: 'center', bevelled: false });
	    return MmlMfrac;
	}(MmlNode_js_1.AbstractMmlBaseNode));
	exports.MmlMfrac = MmlMfrac;
	//# sourceMappingURL=mfrac.js.map

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var msqrt_js_1 = __webpack_require__(252);
	var msqrt_js_2 = __webpack_require__(253);
	var CHTMLmsqrt = (function (_super) {
	    __extends(CHTMLmsqrt, _super);
	    function CHTMLmsqrt() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmsqrt.prototype.toCHTML = function (parent) {
	        var surd = this.childNodes[this.surd];
	        var base = this.childNodes[this.base];
	        var sbox = surd.getBBox();
	        var bbox = base.getBBox();
	        var _a = __read(this.getPQ(sbox), 2), p = _a[0], q = _a[1];
	        var t = this.font.params.rule_thickness;
	        var H = bbox.h + q + t;
	        var CHTML = this.standardCHTMLnode(parent);
	        var SURD, BASE, ROOT, root;
	        if (this.root != null) {
	            ROOT = this.adaptor.append(CHTML, this.html('mjx-root'));
	            root = this.childNodes[this.root];
	        }
	        var SQRT = this.adaptor.append(CHTML, this.html('mjx-sqrt', {}, [
	            SURD = this.html('mjx-surd'),
	            BASE = this.html('mjx-box', { style: { paddingTop: this.em(q) } })
	        ]));
	        this.addRoot(ROOT, root, sbox, H);
	        surd.toCHTML(SURD);
	        base.toCHTML(BASE);
	        if (surd.size < 0) {
	            this.adaptor.addClass(SQRT, 'mjx-tall');
	        }
	    };
	    CHTMLmsqrt.prototype.addRoot = function (ROOT, root, sbox, H) {
	    };
	    CHTMLmsqrt.kind = msqrt_js_2.MmlMsqrt.prototype.kind;
	    CHTMLmsqrt.styles = {
	        'mjx-root': {
	            display: 'inline-block',
	            'white-space': 'nowrap'
	        },
	        'mjx-surd': {
	            display: 'inline-block',
	            'vertical-align': 'top'
	        },
	        'mjx-sqrt': {
	            display: 'inline-block',
	            'padding-top': '.07em'
	        },
	        'mjx-sqrt > mjx-box': {
	            'border-top': '.07em solid'
	        },
	        'mjx-sqrt.mjx-tall > mjx-box': {
	            'padding-left': '.3em',
	            'margin-left': '-.3em'
	        }
	    };
	    return CHTMLmsqrt;
	}(msqrt_js_1.CommonMsqrtMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmsqrt = CHTMLmsqrt;
	//# sourceMappingURL=msqrt.js.map

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var BBox_js_1 = __webpack_require__(211);
	function CommonMsqrtMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            var surd = _this.createMo('\u221A');
	            surd.canStretch(1);
	            var _a = _this.childNodes[_this.base].getBBox(), h = _a.h, d = _a.d;
	            var t = _this.font.params.rule_thickness;
	            var p = (_this.node.attributes.get('displaystyle') ? _this.font.params.x_height : t);
	            _this.surdH = h + d + 2 * t + p / 4;
	            surd.getStretchedVariant([_this.surdH - d, d], true);
	            return _this;
	        }
	        Object.defineProperty(class_1.prototype, "base", {
	            get: function () {
	                return 0;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_1.prototype, "surd", {
	            get: function () {
	                return 1;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_1.prototype, "root", {
	            get: function () {
	                return null;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.createMo = function (text) {
	            var node = _super.prototype.createMo.call(this, text);
	            this.childNodes.push(node);
	            return node;
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var surdbox = this.childNodes[this.surd].getBBox();
	            var basebox = new BBox_js_1.BBox(this.childNodes[this.base].getBBox());
	            var _a = __read(this.getPQ(surdbox), 2), p = _a[0], q = _a[1];
	            var t = this.font.params.rule_thickness;
	            var H = basebox.h + q + t;
	            var _b = __read(this.getRootDimens(surdbox, H), 1), x = _b[0];
	            bbox.h = H + t;
	            this.combineRootBBox(bbox, surdbox, H);
	            bbox.combine(surdbox, x, H - surdbox.h);
	            bbox.combine(basebox, x + surdbox.w, 0);
	            bbox.clean();
	            this.setChildPWidths(recompute);
	        };
	        class_1.prototype.combineRootBBox = function (bbox, sbox, H) {
	        };
	        class_1.prototype.getPQ = function (sbox) {
	            var t = this.font.params.rule_thickness;
	            var p = (this.node.attributes.get('displaystyle') ? this.font.params.x_height : t);
	            var q = (sbox.h + sbox.d > this.surdH ?
	                ((sbox.h + sbox.d) - (this.surdH - 2 * t - p / 2)) / 2 :
	                t + p / 4);
	            return [p, q];
	        };
	        class_1.prototype.getRootDimens = function (sbox, H) {
	            return [0, 0, 0, 0];
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMsqrtMixin = CommonMsqrtMixin;
	//# sourceMappingURL=msqrt.js.map

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMsqrt = (function (_super) {
	    __extends(MmlMsqrt, _super);
	    function MmlMsqrt() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMsqrt.prototype, "kind", {
	        get: function () {
	            return 'msqrt';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsqrt.prototype, "arity", {
	        get: function () {
	            return -1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsqrt.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMsqrt.prototype.setTeXclass = function (prev) {
	        this.getPrevClass(prev);
	        this.childNodes[0].setTeXclass(null);
	        return this;
	    };
	    MmlMsqrt.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        this.childNodes[0].setInheritedAttributes(attributes, display, level, true);
	    };
	    MmlMsqrt.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
	    return MmlMsqrt;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMsqrt = MmlMsqrt;
	//# sourceMappingURL=msqrt.js.map

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var msqrt_js_1 = __webpack_require__(251);
	var mroot_js_1 = __webpack_require__(255);
	var mroot_js_2 = __webpack_require__(256);
	var CHTMLmroot = (function (_super) {
	    __extends(CHTMLmroot, _super);
	    function CHTMLmroot() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmroot.prototype.addRoot = function (ROOT, root, sbox, H) {
	        root.toCHTML(ROOT);
	        var _a = __read(this.getRootDimens(sbox, H), 3), x = _a[0], h = _a[1], dx = _a[2];
	        var bbox = root.getBBox();
	        this.adaptor.setStyle(ROOT, 'verticalAlign', this.em(h));
	        this.adaptor.setStyle(ROOT, 'width', this.em(x));
	        if (dx) {
	            this.adaptor.setStyle(this.adaptor.firstChild(ROOT), 'paddingLeft', this.em(dx));
	        }
	    };
	    CHTMLmroot.kind = mroot_js_2.MmlMroot.prototype.kind;
	    return CHTMLmroot;
	}(mroot_js_1.CommonMrootMixin(msqrt_js_1.CHTMLmsqrt)));
	exports.CHTMLmroot = CHTMLmroot;
	//# sourceMappingURL=mroot.js.map

/***/ }),
/* 255 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMrootMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(class_1.prototype, "surd", {
	            get: function () {
	                return 2;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_1.prototype, "root", {
	            get: function () {
	                return 1;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.combineRootBBox = function (BBOX, sbox, H) {
	            var bbox = this.childNodes[this.root].getBBox();
	            var _a = __read(this.getRootDimens(sbox, H), 2), x = _a[0], h = _a[1];
	            BBOX.combine(bbox, 0, h);
	        };
	        class_1.prototype.getRootDimens = function (sbox, H) {
	            var surd = this.childNodes[this.surd];
	            var bbox = this.childNodes[this.root].getBBox();
	            var offset = (surd.size < 0 ? .5 : .6) * sbox.w;
	            var w = bbox.w, rscale = bbox.rscale;
	            var W = Math.max(w, offset / rscale);
	            var dx = Math.max(0, W - w);
	            var h = this.rootHeight(bbox, sbox, surd.size, H);
	            var x = W * rscale - offset;
	            return [x, h, dx];
	        };
	        class_1.prototype.rootHeight = function (rbox, sbox, size, H) {
	            var h = sbox.h + sbox.d;
	            var b = (size < 0 ? 1.9 : .55 * h) - (h - H);
	            return b + Math.max(0, rbox.d * rbox.rscale);
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMrootMixin = CommonMrootMixin;
	//# sourceMappingURL=mroot.js.map

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMroot = (function (_super) {
	    __extends(MmlMroot, _super);
	    function MmlMroot() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMroot.prototype, "kind", {
	        get: function () {
	            return 'mroot';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMroot.prototype, "arity", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMroot.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        this.childNodes[0].setInheritedAttributes(attributes, display, level, true);
	        this.childNodes[1].setInheritedAttributes(attributes, false, level + 2, prime);
	    };
	    MmlMroot.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
	    return MmlMroot;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMroot = MmlMroot;
	//# sourceMappingURL=mroot.js.map

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var scriptbase_js_1 = __webpack_require__(258);
	var msubsup_js_1 = __webpack_require__(260);
	var msubsup_js_2 = __webpack_require__(260);
	var msubsup_js_3 = __webpack_require__(260);
	var msubsup_js_4 = __webpack_require__(261);
	var CHTMLmsub = (function (_super) {
	    __extends(CHTMLmsub, _super);
	    function CHTMLmsub() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmsub.kind = msubsup_js_4.MmlMsub.prototype.kind;
	    CHTMLmsub.useIC = false;
	    return CHTMLmsub;
	}(msubsup_js_1.CommonMsubMixin(scriptbase_js_1.CHTMLscriptbase)));
	exports.CHTMLmsub = CHTMLmsub;
	var CHTMLmsup = (function (_super) {
	    __extends(CHTMLmsup, _super);
	    function CHTMLmsup() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmsup.kind = msubsup_js_4.MmlMsup.prototype.kind;
	    CHTMLmsup.useIC = true;
	    return CHTMLmsup;
	}(msubsup_js_2.CommonMsupMixin(scriptbase_js_1.CHTMLscriptbase)));
	exports.CHTMLmsup = CHTMLmsup;
	var CHTMLmsubsup = (function (_super) {
	    __extends(CHTMLmsubsup, _super);
	    function CHTMLmsubsup() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmsubsup.prototype.markUsed = function () {
	        _super.prototype.markUsed.call(this);
	        CHTMLmsubsup.used = true;
	    };
	    CHTMLmsubsup.prototype.toCHTML = function (parent) {
	        var chtml = this.standardCHTMLnode(parent);
	        var _a = __read([this.baseChild, this.supChild, this.subChild], 3), base = _a[0], sup = _a[1], sub = _a[2];
	        var _b = __read(this.getUVQ(base.getBBox(), sub.getBBox(), sup.getBBox()), 3), u = _b[0], v = _b[1], q = _b[2];
	        var x = this.baseCore.bbox.ic ? this.coreIC() * this.coreScale() : 0;
	        var style = { 'vertical-align': this.em(v) };
	        base.toCHTML(chtml);
	        var stack = this.adaptor.append(chtml, this.html('mjx-script', { style: style }));
	        sup.toCHTML(stack);
	        this.adaptor.append(stack, this.html('mjx-spacer', { style: { 'margin-top': this.em(q) } }));
	        sub.toCHTML(stack);
	        var corebox = this.baseCore.bbox;
	        if (corebox.ic) {
	            this.adaptor.setStyle(sup.chtml, 'marginLeft', this.em(x / sup.bbox.rscale));
	        }
	    };
	    CHTMLmsubsup.kind = msubsup_js_4.MmlMsubsup.prototype.kind;
	    CHTMLmsubsup.styles = {
	        'mjx-script': {
	            display: 'inline-block',
	            'padding-right': '.05em'
	        },
	        'mjx-script > *': {
	            display: 'block'
	        }
	    };
	    CHTMLmsubsup.useIC = false;
	    return CHTMLmsubsup;
	}(msubsup_js_3.CommonMsubsupMixin(scriptbase_js_1.CHTMLscriptbase)));
	exports.CHTMLmsubsup = CHTMLmsubsup;
	//# sourceMappingURL=msubsup.js.map

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var scriptbase_js_1 = __webpack_require__(259);
	var CHTMLscriptbase = (function (_super) {
	    __extends(CHTMLscriptbase, _super);
	    function CHTMLscriptbase() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLscriptbase.prototype.toCHTML = function (parent) {
	        this.chtml = this.standardCHTMLnode(parent);
	        var _a = __read(this.getOffset(this.baseChild.getBBox(), this.script.getBBox()), 2), x = _a[0], v = _a[1];
	        var style = { 'vertical-align': this.em(v) };
	        if (x) {
	            style['margin-left'] = this.em(x);
	        }
	        this.baseChild.toCHTML(this.chtml);
	        this.script.toCHTML(this.adaptor.append(this.chtml, this.html('mjx-script', { style: style })));
	    };
	    CHTMLscriptbase.prototype.setDeltaW = function (nodes, dx) {
	        for (var i = 0; i < dx.length; i++) {
	            if (dx[i]) {
	                this.adaptor.setStyle(nodes[i], 'paddingLeft', this.em(dx[i]));
	            }
	        }
	    };
	    CHTMLscriptbase.prototype.adjustOverDepth = function (over, overbox) {
	        if (overbox.d >= 0)
	            return;
	        this.adaptor.setStyle(over, 'marginBottom', this.em(overbox.d * overbox.rscale));
	    };
	    CHTMLscriptbase.prototype.adjustUnderDepth = function (under, underbox) {
	        var e_1, _a;
	        if (underbox.d >= 0)
	            return;
	        var adaptor = this.adaptor;
	        var child = adaptor.firstChild(adaptor.firstChild(under));
	        var v = this.em(underbox.d);
	        var box = this.html('mjx-box', { style: { 'margin-bottom': v, 'vertical-align': v } });
	        try {
	            for (var _b = __values(adaptor.childNodes(adaptor.firstChild(under))), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child_1 = _c.value;
	                adaptor.append(box, child_1);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        adaptor.append(adaptor.firstChild(under), box);
	    };
	    CHTMLscriptbase.kind = 'scriptbase';
	    CHTMLscriptbase.useIC = false;
	    return CHTMLscriptbase;
	}(scriptbase_js_1.CommonScriptbaseMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLscriptbase = CHTMLscriptbase;
	//# sourceMappingURL=scriptbase.js.map

/***/ }),
/* 259 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var DELTA = 1.5;
	function CommonScriptbaseMixin(Base) {
	    var _a;
	    return _a = (function (_super) {
	            __extends(class_1, _super);
	            function class_1() {
	                var args = [];
	                for (var _i = 0; _i < arguments.length; _i++) {
	                    args[_i] = arguments[_i];
	                }
	                var _this = _super.apply(this, __spread(args)) || this;
	                var core = _this.baseCore = _this.childNodes[0];
	                if (!core)
	                    return _this;
	                while (core.childNodes.length === 1 &&
	                    (core.node.isKind('mrow') || core.node.isKind('TeXAtom') ||
	                        core.node.isKind('mstyle') || core.node.isKind('mpadded') ||
	                        core.node.isKind('mphantom') || core.node.isKind('semantics'))) {
	                    core = core.childNodes[0];
	                    if (!core)
	                        return _this;
	                }
	                if (!('noIC' in core))
	                    return _this;
	                _this.baseCore = core;
	                if (!_this.constructor.useIC) {
	                    core.noIC = true;
	                }
	                return _this;
	            }
	            Object.defineProperty(class_1.prototype, "baseChild", {
	                get: function () {
	                    return this.childNodes[this.node.base];
	                },
	                enumerable: true,
	                configurable: true
	            });
	            Object.defineProperty(class_1.prototype, "script", {
	                get: function () {
	                    return this.childNodes[1];
	                },
	                enumerable: true,
	                configurable: true
	            });
	            class_1.prototype.computeBBox = function (bbox, recompute) {
	                if (recompute === void 0) { recompute = false; }
	                var basebox = this.baseChild.getBBox();
	                var scriptbox = this.script.getBBox();
	                var _a = __read(this.getOffset(basebox, scriptbox), 2), x = _a[0], y = _a[1];
	                bbox.append(basebox);
	                bbox.combine(scriptbox, bbox.w + x, y);
	                bbox.w += this.font.params.scriptspace;
	                bbox.clean();
	                this.setChildPWidths(recompute);
	            };
	            class_1.prototype.coreIC = function () {
	                var corebox = this.baseCore.getBBox();
	                return (corebox.ic ? 1.05 * corebox.ic + .05 : 0);
	            };
	            class_1.prototype.coreScale = function () {
	                var scale = this.baseChild.getBBox().rscale;
	                var base = this.baseChild;
	                while ((base.node.isKind('mstyle') || base.node.isKind('mrow') || base.node.isKind('TeXAtom'))
	                    && base.childNodes.length === 1) {
	                    base = base.childNodes[0];
	                    scale *= base.getBBox().rscale;
	                }
	                return scale;
	            };
	            class_1.prototype.isCharBase = function () {
	                var base = this.baseChild;
	                while ((base.node.isKind('mstyle') || base.node.isKind('mrow')) && base.childNodes.length === 1) {
	                    base = base.childNodes[0];
	                }
	                return ((base.node.isKind('mo') || base.node.isKind('mi') || base.node.isKind('mn')) &&
	                    base.bbox.rscale === 1 && base.getText().length === 1 &&
	                    !base.node.attributes.get('largeop'));
	            };
	            class_1.prototype.getOffset = function (bbox, sbox) {
	                return [0, 0];
	            };
	            class_1.prototype.getV = function (bbox, sbox) {
	                var tex = this.font.params;
	                var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub1);
	                return Math.max(this.isCharBase() ? 0 : bbox.d * bbox.rscale + tex.sub_drop * sbox.rscale, subscriptshift, sbox.h * sbox.rscale - (4 / 5) * tex.x_height);
	            };
	            class_1.prototype.getU = function (bbox, sbox) {
	                var tex = this.font.params;
	                var attr = this.node.attributes.getList('displaystyle', 'superscriptshift');
	                var prime = this.node.getProperty('texprimestyle');
	                var p = prime ? tex.sup3 : (attr.displaystyle ? tex.sup1 : tex.sup2);
	                var superscriptshift = this.length2em(attr.superscriptshift, p);
	                return Math.max(this.isCharBase() ? 0 : bbox.h * bbox.rscale - tex.sup_drop * sbox.rscale, superscriptshift, sbox.d * sbox.rscale + (1 / 4) * tex.x_height);
	            };
	            class_1.prototype.hasMovableLimits = function () {
	                var display = this.node.attributes.get('displaystyle');
	                var mo = this.baseChild.coreMO().node;
	                return (!display && mo.attributes.get('movablelimits'));
	            };
	            class_1.prototype.getOverKU = function (basebox, overbox) {
	                var accent = this.node.attributes.get('accent');
	                var tex = this.font.params;
	                var d = overbox.d * overbox.rscale;
	                var k = (accent ? tex.rule_thickness :
	                    Math.max(tex.big_op_spacing1, tex.big_op_spacing3 - Math.max(0, d))) -
	                    (this.baseChild.node.isKind('munderover') ? .1 : 0);
	                return [k, basebox.h * basebox.rscale + k + d];
	            };
	            class_1.prototype.getUnderKV = function (basebox, underbox) {
	                var accent = this.node.attributes.get('accentunder');
	                var tex = this.font.params;
	                var h = underbox.h * underbox.rscale;
	                var k = (accent ? tex.rule_thickness :
	                    Math.max(tex.big_op_spacing2, tex.big_op_spacing4 - h)) -
	                    (this.baseChild.node.isKind('munderover') ? .1 : 0);
	                return [k, -(basebox.d * basebox.rscale + k + h)];
	            };
	            class_1.prototype.getDeltaW = function (boxes, delta) {
	                var e_1, _a, e_2, _b;
	                if (delta === void 0) { delta = [0, 0, 0]; }
	                var align = this.node.attributes.get('align');
	                var widths = boxes.map(function (box) { return box.w * box.rscale; });
	                var w = Math.max.apply(Math, __spread(widths));
	                var dw = [];
	                var m = 0;
	                try {
	                    for (var _c = __values(widths.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {
	                        var i = _d.value;
	                        dw[i] = (align === 'center' ? (w - widths[i]) / 2 :
	                            align === 'right' ? w - widths[i] : 0) + delta[i];
	                        if (dw[i] < m) {
	                            m = -dw[i];
	                        }
	                    }
	                }
	                catch (e_1_1) { e_1 = { error: e_1_1 }; }
	                finally {
	                    try {
	                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                    }
	                    finally { if (e_1) throw e_1.error; }
	                }
	                if (m) {
	                    try {
	                        for (var _e = __values(dw.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {
	                            var i = _f.value;
	                            dw[i] += m;
	                        }
	                    }
	                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
	                    finally {
	                        try {
	                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                        }
	                        finally { if (e_2) throw e_2.error; }
	                    }
	                }
	                return dw;
	            };
	            class_1.prototype.getDelta = function (noskew) {
	                if (noskew === void 0) { noskew = false; }
	                var accent = this.node.attributes.get('accent');
	                var ddelta = (accent && !noskew ? this.baseChild.coreMO().bbox.sk : 0);
	                return (DELTA * this.baseCore.bbox.ic / 2 + ddelta) * this.coreScale();
	            };
	            class_1.prototype.stretchChildren = function () {
	                var e_3, _a, e_4, _b, e_5, _c;
	                var stretchy = [];
	                try {
	                    for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {
	                        var child = _e.value;
	                        if (child.canStretch(2)) {
	                            stretchy.push(child);
	                        }
	                    }
	                }
	                catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                finally {
	                    try {
	                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
	                    }
	                    finally { if (e_3) throw e_3.error; }
	                }
	                var count = stretchy.length;
	                var nodeCount = this.childNodes.length;
	                if (count && nodeCount > 1) {
	                    var W = 0;
	                    var all = (count > 1 && count === nodeCount);
	                    try {
	                        for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {
	                            var child = _g.value;
	                            var noStretch = (child.stretch.dir === 0);
	                            if (all || noStretch) {
	                                var _h = child.getBBox(noStretch), w = _h.w, rscale = _h.rscale;
	                                if (w * rscale > W)
	                                    W = w * rscale;
	                            }
	                        }
	                    }
	                    catch (e_4_1) { e_4 = { error: e_4_1 }; }
	                    finally {
	                        try {
	                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
	                        }
	                        finally { if (e_4) throw e_4.error; }
	                    }
	                    try {
	                        for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
	                            var child = stretchy_1_1.value;
	                            child.coreMO().getStretchedVariant([W / child.bbox.rscale]);
	                        }
	                    }
	                    catch (e_5_1) { e_5 = { error: e_5_1 }; }
	                    finally {
	                        try {
	                            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
	                        }
	                        finally { if (e_5) throw e_5.error; }
	                    }
	                }
	            };
	            return class_1;
	        }(Base)),
	        _a.useIC = false,
	        _a;
	}
	exports.CommonScriptbaseMixin = CommonScriptbaseMixin;
	//# sourceMappingURL=scriptbase.js.map

/***/ }),
/* 260 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMsubMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(class_1.prototype, "script", {
	            get: function () {
	                return this.childNodes[this.node.sub];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.getOffset = function (bbox, sbox) {
	            return [0, -this.getV(bbox, sbox)];
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMsubMixin = CommonMsubMixin;
	function CommonMsupMixin(Base) {
	    return (function (_super) {
	        __extends(class_2, _super);
	        function class_2() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(class_2.prototype, "script", {
	            get: function () {
	                return this.childNodes[this.node.sup];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_2.prototype.getOffset = function (bbox, sbox) {
	            var x = (this.baseCore.bbox.ic ? .05 * this.baseCore.bbox.ic + .05 : 0);
	            return [x * this.coreScale(), this.getU(bbox, sbox)];
	        };
	        return class_2;
	    }(Base));
	}
	exports.CommonMsupMixin = CommonMsupMixin;
	function CommonMsubsupMixin(Base) {
	    return (function (_super) {
	        __extends(class_3, _super);
	        function class_3() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.UVQ = null;
	            return _this;
	        }
	        Object.defineProperty(class_3.prototype, "subChild", {
	            get: function () {
	                return this.childNodes[this.node.sub];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_3.prototype, "supChild", {
	            get: function () {
	                return this.childNodes[this.node.sup];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_3.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var basebox = this.baseChild.getBBox();
	            var subbox = this.subChild.getBBox();
	            var supbox = this.supChild.getBBox();
	            bbox.empty();
	            bbox.append(basebox);
	            var w = bbox.w;
	            var _a = __read(this.getUVQ(basebox, subbox, supbox), 3), u = _a[0], v = _a[1], q = _a[2];
	            var x = (this.baseCore.bbox.ic ? this.coreIC() * this.coreScale() : 0);
	            bbox.combine(subbox, w, v);
	            bbox.combine(supbox, w + x, u);
	            bbox.w += this.font.params.scriptspace;
	            bbox.clean();
	            this.setChildPWidths(recompute);
	        };
	        class_3.prototype.getUVQ = function (basebox, subbox, supbox) {
	            if (this.UVQ)
	                return this.UVQ;
	            var tex = this.font.params;
	            var t = 3 * tex.rule_thickness;
	            var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub2);
	            var drop = (this.isCharBase() ? 0 : basebox.d * basebox.rscale + tex.sub_drop * subbox.rscale);
	            var _a = __read([this.getU(basebox, supbox), Math.max(drop, subscriptshift)], 2), u = _a[0], v = _a[1];
	            var q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);
	            if (q < t) {
	                v += t - q;
	                var p = (4 / 5) * tex.x_height - (u - supbox.d * supbox.rscale);
	                if (p > 0) {
	                    u += p;
	                    v -= p;
	                }
	            }
	            u = Math.max(this.length2em(this.node.attributes.get('superscriptshift'), u), u);
	            v = Math.max(this.length2em(this.node.attributes.get('subscriptshift'), v), v);
	            q = (u - supbox.d * supbox.rscale) - (subbox.h * subbox.rscale - v);
	            this.UVQ = [u, -v, q];
	            return this.UVQ;
	        };
	        return class_3;
	    }(Base));
	}
	exports.CommonMsubsupMixin = CommonMsubsupMixin;
	//# sourceMappingURL=msubsup.js.map

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMsubsup = (function (_super) {
	    __extends(MmlMsubsup, _super);
	    function MmlMsubsup() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMsubsup.prototype, "kind", {
	        get: function () {
	            return 'msubsup';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsubsup.prototype, "arity", {
	        get: function () {
	            return 3;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsubsup.prototype, "base", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsubsup.prototype, "sub", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsubsup.prototype, "sup", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMsubsup.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var nodes = this.childNodes;
	        nodes[0].setInheritedAttributes(attributes, display, level, prime);
	        nodes[1].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 1);
	        if (!nodes[2]) {
	            return;
	        }
	        nodes[2].setInheritedAttributes(attributes, false, level + 1, prime || this.sub === 2);
	    };
	    MmlMsubsup.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { subscriptshift: '', superscriptshift: '' });
	    return MmlMsubsup;
	}(MmlNode_js_1.AbstractMmlBaseNode));
	exports.MmlMsubsup = MmlMsubsup;
	var MmlMsub = (function (_super) {
	    __extends(MmlMsub, _super);
	    function MmlMsub() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMsub.prototype, "kind", {
	        get: function () {
	            return 'msub';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsub.prototype, "arity", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMsub.defaults = __assign({}, MmlMsubsup.defaults);
	    return MmlMsub;
	}(MmlMsubsup));
	exports.MmlMsub = MmlMsub;
	var MmlMsup = (function (_super) {
	    __extends(MmlMsup, _super);
	    function MmlMsup() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMsup.prototype, "kind", {
	        get: function () {
	            return 'msup';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsup.prototype, "arity", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsup.prototype, "sup", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMsup.prototype, "sub", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMsup.defaults = __assign({}, MmlMsubsup.defaults);
	    return MmlMsup;
	}(MmlMsubsup));
	exports.MmlMsup = MmlMsup;
	//# sourceMappingURL=msubsup.js.map

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var msubsup_js_1 = __webpack_require__(257);
	var munderover_js_1 = __webpack_require__(263);
	var munderover_js_2 = __webpack_require__(263);
	var munderover_js_3 = __webpack_require__(263);
	var munderover_js_4 = __webpack_require__(264);
	var CHTMLmunder = (function (_super) {
	    __extends(CHTMLmunder, _super);
	    function CHTMLmunder() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmunder.prototype.toCHTML = function (parent) {
	        if (this.hasMovableLimits()) {
	            _super.prototype.toCHTML.call(this, parent);
	            this.adaptor.setAttribute(this.chtml, 'limits', 'false');
	            return;
	        }
	        this.chtml = this.standardCHTMLnode(parent);
	        var base = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-row')), this.html('mjx-base'));
	        var under = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-row')), this.html('mjx-under'));
	        this.baseChild.toCHTML(base);
	        this.script.toCHTML(under);
	        var basebox = this.baseChild.getBBox();
	        var underbox = this.script.getBBox();
	        var _a = __read(this.getUnderKV(basebox, underbox), 2), k = _a[0], v = _a[1];
	        var delta = this.getDelta(true);
	        this.adaptor.setStyle(under, 'paddingTop', this.em(k));
	        this.setDeltaW([base, under], this.getDeltaW([basebox, underbox], [0, -delta]));
	        this.adjustUnderDepth(under, underbox);
	    };
	    CHTMLmunder.kind = munderover_js_4.MmlMunder.prototype.kind;
	    CHTMLmunder.useIC = true;
	    CHTMLmunder.styles = {
	        'mjx-over': {
	            'text-align': 'left'
	        },
	        'mjx-munder:not([limits="false"])': {
	            display: 'inline-table',
	        },
	        'mjx-munder > mjx-row': {
	            'text-align': 'left'
	        },
	        'mjx-under': {
	            'padding-bottom': '.1em'
	        }
	    };
	    return CHTMLmunder;
	}(munderover_js_1.CommonMunderMixin(msubsup_js_1.CHTMLmsub)));
	exports.CHTMLmunder = CHTMLmunder;
	var CHTMLmover = (function (_super) {
	    __extends(CHTMLmover, _super);
	    function CHTMLmover() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmover.prototype.toCHTML = function (parent) {
	        if (this.hasMovableLimits()) {
	            _super.prototype.toCHTML.call(this, parent);
	            this.adaptor.setAttribute(this.chtml, 'limits', 'false');
	            return;
	        }
	        this.chtml = this.standardCHTMLnode(parent);
	        var over = this.adaptor.append(this.chtml, this.html('mjx-over'));
	        var base = this.adaptor.append(this.chtml, this.html('mjx-base'));
	        this.script.toCHTML(over);
	        this.baseChild.toCHTML(base);
	        var overbox = this.script.getBBox();
	        var basebox = this.baseChild.getBBox();
	        var _a = __read(this.getOverKU(basebox, overbox), 2), k = _a[0], u = _a[1];
	        var delta = this.getDelta();
	        this.adaptor.setStyle(over, 'paddingBottom', this.em(k));
	        this.setDeltaW([base, over], this.getDeltaW([basebox, overbox], [0, delta]));
	        this.adjustOverDepth(over, overbox);
	    };
	    CHTMLmover.kind = munderover_js_4.MmlMover.prototype.kind;
	    CHTMLmover.useIC = true;
	    CHTMLmover.styles = {
	        'mjx-mover:not([limits="false"])': {
	            'padding-top': '.1em'
	        },
	        'mjx-mover:not([limits="false"]) > *': {
	            display: 'block',
	            'text-align': 'left'
	        }
	    };
	    return CHTMLmover;
	}(munderover_js_2.CommonMoverMixin(msubsup_js_1.CHTMLmsup)));
	exports.CHTMLmover = CHTMLmover;
	var CHTMLmunderover = (function (_super) {
	    __extends(CHTMLmunderover, _super);
	    function CHTMLmunderover() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmunderover.prototype.toCHTML = function (parent) {
	        if (this.hasMovableLimits()) {
	            _super.prototype.toCHTML.call(this, parent);
	            this.adaptor.setAttribute(this.chtml, 'limits', 'false');
	            return;
	        }
	        this.chtml = this.standardCHTMLnode(parent);
	        var over = this.adaptor.append(this.chtml, this.html('mjx-over'));
	        var table = this.adaptor.append(this.adaptor.append(this.chtml, this.html('mjx-box')), this.html('mjx-munder'));
	        var base = this.adaptor.append(this.adaptor.append(table, this.html('mjx-row')), this.html('mjx-base'));
	        var under = this.adaptor.append(this.adaptor.append(table, this.html('mjx-row')), this.html('mjx-under'));
	        this.overChild.toCHTML(over);
	        this.baseChild.toCHTML(base);
	        this.underChild.toCHTML(under);
	        var overbox = this.overChild.getBBox();
	        var basebox = this.baseChild.getBBox();
	        var underbox = this.underChild.getBBox();
	        var _a = __read(this.getOverKU(basebox, overbox), 2), ok = _a[0], u = _a[1];
	        var _b = __read(this.getUnderKV(basebox, underbox), 2), uk = _b[0], v = _b[1];
	        var delta = this.getDelta();
	        this.adaptor.setStyle(over, 'paddingBottom', this.em(ok));
	        this.adaptor.setStyle(under, 'paddingTop', this.em(uk));
	        this.setDeltaW([base, under, over], this.getDeltaW([basebox, underbox, overbox], [0, -delta, delta]));
	        this.adjustOverDepth(over, overbox);
	        this.adjustUnderDepth(under, underbox);
	    };
	    CHTMLmunderover.kind = munderover_js_4.MmlMunderover.prototype.kind;
	    CHTMLmunderover.useIC = true;
	    CHTMLmunderover.styles = {
	        'mjx-munderover:not([limits="false"])': {
	            'padding-top': '.1em'
	        },
	        'mjx-munderover:not([limits="false"]) > *': {
	            display: 'block'
	        },
	    };
	    return CHTMLmunderover;
	}(munderover_js_3.CommonMunderoverMixin(msubsup_js_1.CHTMLmsubsup)));
	exports.CHTMLmunderover = CHTMLmunderover;
	//# sourceMappingURL=munderover.js.map

/***/ }),
/* 263 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMunderMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.stretchChildren();
	            return _this;
	        }
	        Object.defineProperty(class_1.prototype, "script", {
	            get: function () {
	                return this.childNodes[this.node.under];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            if (this.hasMovableLimits()) {
	                _super.prototype.computeBBox.call(this, bbox, recompute);
	                return;
	            }
	            bbox.empty();
	            var basebox = this.baseChild.getBBox();
	            var underbox = this.script.getBBox();
	            var _a = __read(this.getUnderKV(basebox, underbox), 2), k = _a[0], v = _a[1];
	            var delta = this.getDelta(true);
	            var _b = __read(this.getDeltaW([basebox, underbox], [0, -delta]), 2), bw = _b[0], uw = _b[1];
	            bbox.combine(basebox, bw, 0);
	            bbox.combine(underbox, uw, v);
	            bbox.d += this.font.params.big_op_spacing5;
	            bbox.ic = -this.baseCore.bbox.ic;
	            bbox.clean();
	            this.setChildPWidths(recompute);
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMunderMixin = CommonMunderMixin;
	function CommonMoverMixin(Base) {
	    return (function (_super) {
	        __extends(class_2, _super);
	        function class_2() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.stretchChildren();
	            return _this;
	        }
	        Object.defineProperty(class_2.prototype, "script", {
	            get: function () {
	                return this.childNodes[this.node.over];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_2.prototype.computeBBox = function (bbox) {
	            if (this.hasMovableLimits()) {
	                _super.prototype.computeBBox.call(this, bbox);
	                return;
	            }
	            bbox.empty();
	            var basebox = this.baseChild.getBBox();
	            var overbox = this.script.getBBox();
	            var _a = __read(this.getOverKU(basebox, overbox), 2), k = _a[0], u = _a[1];
	            var delta = this.getDelta();
	            var _b = __read(this.getDeltaW([basebox, overbox], [0, delta]), 2), bw = _b[0], ow = _b[1];
	            bbox.combine(basebox, bw, 0);
	            bbox.combine(overbox, ow, u);
	            bbox.h += this.font.params.big_op_spacing5;
	            bbox.ic = -this.baseCore.bbox.ic;
	            bbox.clean();
	        };
	        return class_2;
	    }(Base));
	}
	exports.CommonMoverMixin = CommonMoverMixin;
	function CommonMunderoverMixin(Base) {
	    return (function (_super) {
	        __extends(class_3, _super);
	        function class_3() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.stretchChildren();
	            return _this;
	        }
	        Object.defineProperty(class_3.prototype, "underChild", {
	            get: function () {
	                return this.childNodes[this.node.under];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_3.prototype, "overChild", {
	            get: function () {
	                return this.childNodes[this.node.over];
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_3.prototype, "subChild", {
	            get: function () {
	                return this.underChild;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_3.prototype, "supChild", {
	            get: function () {
	                return this.overChild;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_3.prototype.computeBBox = function (bbox) {
	            if (this.hasMovableLimits()) {
	                _super.prototype.computeBBox.call(this, bbox);
	                return;
	            }
	            bbox.empty();
	            var overbox = this.overChild.getBBox();
	            var basebox = this.baseChild.getBBox();
	            var underbox = this.underChild.getBBox();
	            var _a = __read(this.getOverKU(basebox, overbox), 2), ok = _a[0], u = _a[1];
	            var _b = __read(this.getUnderKV(basebox, underbox), 2), uk = _b[0], v = _b[1];
	            var delta = this.getDelta();
	            var _c = __read(this.getDeltaW([basebox, underbox, overbox], [0, -delta, delta]), 3), bw = _c[0], uw = _c[1], ow = _c[2];
	            bbox.combine(basebox, bw, 0);
	            bbox.combine(overbox, ow, u);
	            bbox.combine(underbox, uw, v);
	            var z = this.font.params.big_op_spacing5;
	            bbox.h += z;
	            bbox.d += z;
	            bbox.ic = -this.baseCore.bbox.ic;
	            bbox.clean();
	        };
	        return class_3;
	    }(Base));
	}
	exports.CommonMunderoverMixin = CommonMunderoverMixin;
	//# sourceMappingURL=munderover.js.map

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMunderover = (function (_super) {
	    __extends(MmlMunderover, _super);
	    function MmlMunderover() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMunderover.prototype, "kind", {
	        get: function () {
	            return 'munderover';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMunderover.prototype, "arity", {
	        get: function () {
	            return 3;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMunderover.prototype, "base", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMunderover.prototype, "under", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMunderover.prototype, "over", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMunderover.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMunderover.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var nodes = this.childNodes;
	        nodes[0].setInheritedAttributes(attributes, display, level, prime || !!nodes[this.over]);
	        var force = !!(!display && nodes[0].coreMO().attributes.get('movablelimits'));
	        var ACCENTS = this.constructor.ACCENTS;
	        nodes[1].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[1], force, level), prime || this.under === 1);
	        this.setInheritedAccent(1, ACCENTS[1], display, level, prime, force);
	        if (!nodes[2]) {
	            return;
	        }
	        nodes[2].setInheritedAttributes(attributes, false, this.getScriptlevel(ACCENTS[2], force, level), prime || this.under === 2);
	        this.setInheritedAccent(2, ACCENTS[2], display, level, prime, force);
	    };
	    MmlMunderover.prototype.getScriptlevel = function (accent, force, level) {
	        if (force || !this.attributes.get(accent)) {
	            level++;
	        }
	        return level;
	    };
	    MmlMunderover.prototype.setInheritedAccent = function (n, accent, display, level, prime, force) {
	        var node = this.childNodes[n];
	        if (this.attributes.getExplicit(accent) == null && node.isEmbellished) {
	            var value = node.coreMO().attributes.get('accent');
	            this.attributes.setInherited(accent, value);
	            if (value !== this.attributes.getDefault(accent)) {
	                node.setInheritedAttributes({}, display, this.getScriptlevel(accent, force, level), prime);
	            }
	        }
	    };
	    MmlMunderover.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { accent: false, accentunder: false, align: 'center' });
	    MmlMunderover.ACCENTS = ['', 'accentunder', 'accent'];
	    return MmlMunderover;
	}(MmlNode_js_1.AbstractMmlBaseNode));
	exports.MmlMunderover = MmlMunderover;
	var MmlMunder = (function (_super) {
	    __extends(MmlMunder, _super);
	    function MmlMunder() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMunder.prototype, "kind", {
	        get: function () {
	            return 'munder';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMunder.prototype, "arity", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMunder.defaults = __assign({}, MmlMunderover.defaults);
	    return MmlMunder;
	}(MmlMunderover));
	exports.MmlMunder = MmlMunder;
	var MmlMover = (function (_super) {
	    __extends(MmlMover, _super);
	    function MmlMover() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMover.prototype, "kind", {
	        get: function () {
	            return 'mover';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMover.prototype, "arity", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMover.prototype, "over", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMover.prototype, "under", {
	        get: function () {
	            return 2;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMover.defaults = __assign({}, MmlMunderover.defaults);
	    MmlMover.ACCENTS = ['', 'accent', 'accentunder'];
	    return MmlMover;
	}(MmlMunderover));
	exports.MmlMover = MmlMover;
	//# sourceMappingURL=munderover.js.map

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var msubsup_js_1 = __webpack_require__(257);
	var mmultiscripts_js_1 = __webpack_require__(266);
	var mmultiscripts_js_2 = __webpack_require__(267);
	var CHTMLmmultiscripts = (function (_super) {
	    __extends(CHTMLmmultiscripts, _super);
	    function CHTMLmmultiscripts() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmmultiscripts.prototype.toCHTML = function (parent) {
	        var chtml = this.standardCHTMLnode(parent);
	        var data = this.getScriptData();
	        var sub = this.combinePrePost(data.sub, data.psub);
	        var sup = this.combinePrePost(data.sup, data.psup);
	        var _a = __read(this.getUVQ(data.base, sub, sup), 3), u = _a[0], v = _a[1], q = _a[2];
	        if (data.numPrescripts) {
	            this.addScripts(u, -v, true, data.psub, data.psup, this.firstPrescript, data.numPrescripts);
	        }
	        this.childNodes[0].toCHTML(chtml);
	        if (data.numScripts) {
	            this.addScripts(u, -v, false, data.sub, data.sup, 1, data.numScripts);
	        }
	    };
	    CHTMLmmultiscripts.prototype.addScripts = function (u, v, isPre, sub, sup, i, n) {
	        var adaptor = this.adaptor;
	        var q = (u - sup.d) + (v - sub.h);
	        var U = (u < 0 && v === 0 ? sub.h + u : u);
	        var rowdef = (q > 0 ? { style: { height: this.em(q) } } : {});
	        var tabledef = (U ? { style: { 'vertical-align': this.em(U) } } : {});
	        var supRow = this.html('mjx-row');
	        var sepRow = this.html('mjx-row', rowdef);
	        var subRow = this.html('mjx-row');
	        var name = 'mjx-' + (isPre ? 'pre' : '') + 'scripts';
	        adaptor.append(this.chtml, this.html(name, tabledef, [supRow, sepRow, subRow]));
	        var m = i + 2 * n;
	        while (i < m) {
	            this.childNodes[i++].toCHTML(adaptor.append(subRow, this.html('mjx-cell')));
	            this.childNodes[i++].toCHTML(adaptor.append(supRow, this.html('mjx-cell')));
	        }
	    };
	    CHTMLmmultiscripts.kind = mmultiscripts_js_2.MmlMmultiscripts.prototype.kind;
	    CHTMLmmultiscripts.styles = {
	        'mjx-prescripts': {
	            display: 'inline-table',
	            'padding-left': '.05em'
	        },
	        'mjx-scripts': {
	            display: 'inline-table',
	            'padding-right': '.05em'
	        },
	        'mjx-prescripts > mjx-row > mjx-cell': {
	            'text-align': 'right'
	        }
	    };
	    return CHTMLmmultiscripts;
	}(mmultiscripts_js_1.CommonMmultiscriptsMixin(msubsup_js_1.CHTMLmsubsup)));
	exports.CHTMLmmultiscripts = CHTMLmmultiscripts;
	//# sourceMappingURL=mmultiscripts.js.map

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var BBox_js_1 = __webpack_require__(211);
	exports.NextScript = {
	    base: 'subList',
	    subList: 'supList',
	    supList: 'subList',
	    psubList: 'psupList',
	    psupList: 'psubList',
	};
	exports.ScriptNames = ['sup', 'sup', 'psup', 'psub'];
	function CommonMmultiscriptsMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var _this = _super !== null && _super.apply(this, arguments) || this;
	            _this.scriptData = null;
	            _this.firstPrescript = 0;
	            return _this;
	        }
	        class_1.prototype.combinePrePost = function (pre, post) {
	            var bbox = new BBox_js_1.BBox(pre);
	            bbox.combine(post, 0, 0);
	            return bbox;
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var scriptspace = this.font.params.scriptspace;
	            var data = this.getScriptData();
	            var sub = this.combinePrePost(data.sub, data.psub);
	            var sup = this.combinePrePost(data.sup, data.psup);
	            var _a = __read(this.getUVQ(data.base, sub, sup), 2), u = _a[0], v = _a[1];
	            bbox.empty();
	            if (data.numPrescripts) {
	                bbox.combine(data.psup, scriptspace, u);
	                bbox.combine(data.psub, scriptspace, v);
	            }
	            bbox.append(data.base);
	            if (data.numScripts) {
	                var w = bbox.w;
	                bbox.combine(data.sup, w, u);
	                bbox.combine(data.sub, w, v);
	                bbox.w += scriptspace;
	            }
	            bbox.clean();
	            this.setChildPWidths(recompute);
	        };
	        class_1.prototype.getScriptData = function () {
	            if (this.scriptData) {
	                return this.scriptData;
	            }
	            var data = this.scriptData = {
	                base: null, sub: BBox_js_1.BBox.empty(), sup: BBox_js_1.BBox.empty(), psub: BBox_js_1.BBox.empty(), psup: BBox_js_1.BBox.empty(),
	                numPrescripts: 0, numScripts: 0
	            };
	            var lists = this.getScriptBBoxLists();
	            this.combineBBoxLists(data.sub, data.sup, lists.subList, lists.supList);
	            this.combineBBoxLists(data.psub, data.psup, lists.psubList, lists.psupList);
	            this.scriptData.base = lists.base[0];
	            this.scriptData.numPrescripts = lists.psubList.length;
	            this.scriptData.numScripts = lists.subList.length;
	            return this.scriptData;
	        };
	        class_1.prototype.getScriptBBoxLists = function () {
	            var e_1, _a;
	            var lists = {
	                base: [], subList: [], supList: [], psubList: [], psupList: []
	            };
	            var script = 'base';
	            try {
	                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    if (child.node.isKind('mprescripts')) {
	                        script = 'psubList';
	                    }
	                    else {
	                        lists[script].push(child.getBBox());
	                        script = exports.NextScript[script];
	                    }
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	            this.firstPrescript = lists.subList.length + lists.supList.length + 2;
	            this.padLists(lists.subList, lists.supList);
	            this.padLists(lists.psubList, lists.psupList);
	            return lists;
	        };
	        class_1.prototype.padLists = function (list1, list2) {
	            if (list1.length > list2.length) {
	                list2.push(BBox_js_1.BBox.empty());
	            }
	        };
	        class_1.prototype.combineBBoxLists = function (bbox1, bbox2, list1, list2) {
	            for (var i = 0; i < list1.length; i++) {
	                var _a = __read(this.getScaledWHD(list1[i]), 3), w1 = _a[0], h1 = _a[1], d1 = _a[2];
	                var _b = __read(this.getScaledWHD(list2[i]), 3), w2 = _b[0], h2 = _b[1], d2 = _b[2];
	                var w = Math.max(w1, w2);
	                bbox1.w += w;
	                bbox2.w += w;
	                if (h1 > bbox1.h)
	                    bbox1.h = h1;
	                if (d1 > bbox1.d)
	                    bbox1.d = d1;
	                if (h2 > bbox2.h)
	                    bbox2.h = h2;
	                if (d2 > bbox2.d)
	                    bbox2.d = d2;
	            }
	        };
	        class_1.prototype.getScaledWHD = function (bbox) {
	            var w = bbox.w, h = bbox.h, d = bbox.d, rscale = bbox.rscale;
	            return [w * rscale, h * rscale, d * rscale];
	        };
	        class_1.prototype.getUVQ = function (basebox, subbox, supbox) {
	            var _a;
	            if (!this.UVQ) {
	                var _b = __read([0, 0, 0], 3), u = _b[0], v = _b[1], q = _b[2];
	                if (subbox.h === 0 && subbox.d === 0) {
	                    u = this.getU(basebox, supbox);
	                }
	                else if (supbox.h === 0 && supbox.d === 0) {
	                    u = -this.getV(basebox, subbox);
	                }
	                else {
	                    _a = __read(_super.prototype.getUVQ.call(this, basebox, subbox, supbox), 3), u = _a[0], v = _a[1], q = _a[2];
	                }
	                this.UVQ = [u, v, q];
	            }
	            return this.UVQ;
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMmultiscriptsMixin = CommonMmultiscriptsMixin;
	//# sourceMappingURL=mmultiscripts.js.map

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var msubsup_js_1 = __webpack_require__(261);
	var MmlMmultiscripts = (function (_super) {
	    __extends(MmlMmultiscripts, _super);
	    function MmlMmultiscripts() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMmultiscripts.prototype, "kind", {
	        get: function () {
	            return 'mmultiscripts';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMmultiscripts.prototype, "arity", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMmultiscripts.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);
	        var prescripts = false;
	        for (var i = 1, n = 0; i < this.childNodes.length; i++) {
	            var child = this.childNodes[i];
	            if (child.isKind('mprescripts')) {
	                if (!prescripts) {
	                    prescripts = true;
	                    if (i % 2 === 0) {
	                        var mrow = this.factory.create('mrow');
	                        this.childNodes.splice(i, 0, mrow);
	                        mrow.parent = this;
	                        i++;
	                    }
	                }
	            }
	            else {
	                var primestyle = prime || (n % 2 === 0);
	                child.setInheritedAttributes(attributes, false, level + 1, primestyle);
	                n++;
	            }
	        }
	        if (this.childNodes.length % 2 === (prescripts ? 1 : 0)) {
	            this.appendChild(this.factory.create('mrow'));
	            this.childNodes[this.childNodes.length - 1].setInheritedAttributes(attributes, false, level + 1, prime);
	        }
	    };
	    MmlMmultiscripts.prototype.verifyChildren = function (options) {
	        var prescripts = false;
	        var fix = options['fixMmultiscripts'];
	        for (var i = 0; i < this.childNodes.length; i++) {
	            var child = this.childNodes[i];
	            if (child.isKind('mprescripts')) {
	                if (prescripts) {
	                    child.mError(child.kind + ' can only appear once in ' + this.kind, options, true);
	                }
	                else {
	                    prescripts = true;
	                    if (i % 2 === 0 && !fix) {
	                        this.mError('There must be an equal number of prescripts of each type', options);
	                    }
	                }
	            }
	        }
	        if (this.childNodes.length % 2 === (prescripts ? 1 : 0) && !fix) {
	            this.mError('There must be an equal number of scripts of each type', options);
	        }
	        _super.prototype.verifyChildren.call(this, options);
	    };
	    MmlMmultiscripts.defaults = __assign({}, msubsup_js_1.MmlMsubsup.defaults);
	    return MmlMmultiscripts;
	}(msubsup_js_1.MmlMsubsup));
	exports.MmlMmultiscripts = MmlMmultiscripts;
	var MmlMprescripts = (function (_super) {
	    __extends(MmlMprescripts, _super);
	    function MmlMprescripts() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMprescripts.prototype, "kind", {
	        get: function () {
	            return 'mprescripts';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMprescripts.prototype, "arity", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMprescripts.prototype.verifyTree = function (options) {
	        _super.prototype.verifyTree.call(this, options);
	        if (this.parent && !this.parent.isKind('mmultiscripts')) {
	            this.mError(this.kind + ' must be a child of mmultiscripts', options, true);
	        }
	    };
	    MmlMprescripts.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
	    return MmlMprescripts;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMprescripts = MmlMprescripts;
	var MmlNone = (function (_super) {
	    __extends(MmlNone, _super);
	    function MmlNone() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlNone.prototype, "kind", {
	        get: function () {
	            return 'none';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlNone.prototype, "arity", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlNone.prototype.verifyTree = function (options) {
	        _super.prototype.verifyTree.call(this, options);
	        if (this.parent && !this.parent.isKind('mmultiscripts')) {
	            this.mError(this.kind + ' must be a child of mmultiscripts', options, true);
	        }
	    };
	    MmlNone.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
	    return MmlNone;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlNone = MmlNone;
	//# sourceMappingURL=mmultiscripts.js.map

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mtable_js_1 = __webpack_require__(269);
	var mtable_js_2 = __webpack_require__(271);
	var string_js_1 = __webpack_require__(164);
	var CHTMLmtable = (function (_super) {
	    __extends(CHTMLmtable, _super);
	    function CHTMLmtable(factory, node, parent) {
	        if (parent === void 0) { parent = null; }
	        var _this = _super.call(this, factory, node, parent) || this;
	        _this.itable = _this.html('mjx-itable');
	        _this.labels = _this.html('mjx-itable');
	        return _this;
	    }
	    CHTMLmtable.prototype.getAlignShift = function () {
	        var data = _super.prototype.getAlignShift.call(this);
	        if (!this.isTop) {
	            data[1] = 0;
	        }
	        return data;
	    };
	    CHTMLmtable.prototype.toCHTML = function (parent) {
	        var e_1, _a;
	        var chtml = this.standardCHTMLnode(parent);
	        this.adaptor.append(chtml, this.html('mjx-table', {}, [this.itable]));
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.toCHTML(this.itable);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        this.padRows();
	        this.handleColumnSpacing();
	        this.handleColumnLines();
	        this.handleColumnWidths();
	        this.handleRowSpacing();
	        this.handleRowLines();
	        this.handleEqualRows();
	        this.handleFrame();
	        this.handleWidth();
	        this.handleLabels();
	        this.handleAlign();
	        this.handleJustify();
	        this.shiftColor();
	    };
	    CHTMLmtable.prototype.shiftColor = function () {
	        var adaptor = this.adaptor;
	        var color = adaptor.getStyle(this.chtml, 'backgroundColor');
	        if (color) {
	            adaptor.setStyle(this.chtml, 'backgroundColor', '');
	            adaptor.setStyle(this.itable, 'backgroundColor', color);
	        }
	    };
	    CHTMLmtable.prototype.padRows = function () {
	        var e_2, _a;
	        var adaptor = this.adaptor;
	        try {
	            for (var _b = __values(adaptor.childNodes(this.itable)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var row = _c.value;
	                while (adaptor.childNodes(row).length < this.numCols) {
	                    adaptor.append(row, this.html('mjx-mtd'));
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    CHTMLmtable.prototype.handleColumnSpacing = function () {
	        var e_3, _a, e_4, _b;
	        var spacing = this.getEmHalfSpacing(this.fSpace[0], this.cSpace);
	        var frame = this.frame;
	        try {
	            for (var _c = __values(this.tableRows), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var row = _d.value;
	                var i = 0;
	                try {
	                    for (var _e = (e_4 = void 0, __values(row.tableCells)), _f = _e.next(); !_f.done; _f = _e.next()) {
	                        var cell = _f.value;
	                        var lspace = spacing[i++];
	                        var rspace = spacing[i];
	                        var styleNode = (cell ? cell.chtml : this.adaptor.childNodes(row.chtml)[i]);
	                        if ((i > 1 && lspace !== '0.4em') || (frame && i === 1)) {
	                            this.adaptor.setStyle(styleNode, 'paddingLeft', lspace);
	                        }
	                        if ((i < this.numCols && rspace !== '0.4em') || (frame && i === this.numCols)) {
	                            this.adaptor.setStyle(styleNode, 'paddingRight', rspace);
	                        }
	                    }
	                }
	                catch (e_4_1) { e_4 = { error: e_4_1 }; }
	                finally {
	                    try {
	                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                    }
	                    finally { if (e_4) throw e_4.error; }
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	    };
	    CHTMLmtable.prototype.handleColumnLines = function () {
	        var e_5, _a, e_6, _b;
	        if (this.node.attributes.get('columnlines') === 'none')
	            return;
	        var lines = this.getColumnAttributes('columnlines');
	        try {
	            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var row = _d.value;
	                var i = 0;
	                try {
	                    for (var _e = (e_6 = void 0, __values(this.adaptor.childNodes(row.chtml).slice(1))), _f = _e.next(); !_f.done; _f = _e.next()) {
	                        var cell = _f.value;
	                        var line = lines[i++];
	                        if (line === 'none')
	                            continue;
	                        this.adaptor.setStyle(cell, 'borderLeft', '.07em ' + line);
	                    }
	                }
	                catch (e_6_1) { e_6 = { error: e_6_1 }; }
	                finally {
	                    try {
	                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                    }
	                    finally { if (e_6) throw e_6.error; }
	                }
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	    };
	    CHTMLmtable.prototype.handleColumnWidths = function () {
	        var e_7, _a, e_8, _b;
	        try {
	            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var row = _d.value;
	                var i = 0;
	                try {
	                    for (var _e = (e_8 = void 0, __values(this.adaptor.childNodes(row.chtml))), _f = _e.next(); !_f.done; _f = _e.next()) {
	                        var cell = _f.value;
	                        var w = this.cWidths[i++];
	                        if (w !== null) {
	                            var width = (typeof w === 'number' ? this.em(w) : w);
	                            this.adaptor.setStyle(cell, 'width', width);
	                            this.adaptor.setStyle(cell, 'maxWidth', width);
	                            this.adaptor.setStyle(cell, 'minWidth', width);
	                        }
	                    }
	                }
	                catch (e_8_1) { e_8 = { error: e_8_1 }; }
	                finally {
	                    try {
	                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                    }
	                    finally { if (e_8) throw e_8.error; }
	                }
	            }
	        }
	        catch (e_7_1) { e_7 = { error: e_7_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_7) throw e_7.error; }
	        }
	    };
	    CHTMLmtable.prototype.handleRowSpacing = function () {
	        var e_9, _a, e_10, _b;
	        var spacing = this.getEmHalfSpacing(this.fSpace[1], this.rSpace);
	        var frame = this.frame;
	        var i = 0;
	        try {
	            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var row = _d.value;
	                var tspace = spacing[i++];
	                var bspace = spacing[i];
	                try {
	                    for (var _e = (e_10 = void 0, __values(row.childNodes)), _f = _e.next(); !_f.done; _f = _e.next()) {
	                        var cell = _f.value;
	                        if ((i > 1 && tspace !== '0.215em') || (frame && i === 1)) {
	                            this.adaptor.setStyle(cell.chtml, 'paddingTop', tspace);
	                        }
	                        if ((i < this.numRows && bspace !== '0.215em') || (frame && i === this.numRows)) {
	                            this.adaptor.setStyle(cell.chtml, 'paddingBottom', bspace);
	                        }
	                    }
	                }
	                catch (e_10_1) { e_10 = { error: e_10_1 }; }
	                finally {
	                    try {
	                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                    }
	                    finally { if (e_10) throw e_10.error; }
	                }
	            }
	        }
	        catch (e_9_1) { e_9 = { error: e_9_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_9) throw e_9.error; }
	        }
	    };
	    CHTMLmtable.prototype.handleRowLines = function () {
	        var e_11, _a, e_12, _b;
	        if (this.node.attributes.get('rowlines') === 'none')
	            return;
	        var lines = this.getRowAttributes('rowlines');
	        var i = 0;
	        try {
	            for (var _c = __values(this.childNodes.slice(1)), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var row = _d.value;
	                var line = lines[i++];
	                if (line === 'none')
	                    continue;
	                try {
	                    for (var _e = (e_12 = void 0, __values(this.adaptor.childNodes(row.chtml))), _f = _e.next(); !_f.done; _f = _e.next()) {
	                        var cell = _f.value;
	                        this.adaptor.setStyle(cell, 'borderTop', '.07em ' + line);
	                    }
	                }
	                catch (e_12_1) { e_12 = { error: e_12_1 }; }
	                finally {
	                    try {
	                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                    }
	                    finally { if (e_12) throw e_12.error; }
	                }
	            }
	        }
	        catch (e_11_1) { e_11 = { error: e_11_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_11) throw e_11.error; }
	        }
	    };
	    CHTMLmtable.prototype.handleEqualRows = function () {
	        if (!this.node.attributes.get('equalrows'))
	            return;
	        var space = this.getRowHalfSpacing();
	        var _a = this.getTableData(), H = _a.H, D = _a.D, NH = _a.NH, ND = _a.ND;
	        var HD = this.getEqualRowHeight();
	        var HDem = this.em(HD);
	        for (var i = 0; i < this.numRows; i++) {
	            var row = this.childNodes[i];
	            if (HD !== NH[i] + ND[i]) {
	                this.setRowHeight(row, HD, (HD - H[i] + D[i]) / 2, space[i] + space[i + 1]);
	            }
	        }
	    };
	    CHTMLmtable.prototype.setRowHeight = function (row, HD, D, space) {
	        var e_13, _a;
	        this.adaptor.setStyle(row.chtml, 'height', this.em(HD + space));
	        var ralign = row.node.attributes.get('rowalign');
	        try {
	            for (var _b = __values(row.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var cell = _c.value;
	                if (this.setCellBaseline(cell, ralign, HD, D))
	                    break;
	            }
	        }
	        catch (e_13_1) { e_13 = { error: e_13_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_13) throw e_13.error; }
	        }
	    };
	    CHTMLmtable.prototype.setCellBaseline = function (cell, ralign, HD, D) {
	        var calign = cell.node.attributes.get('rowalign');
	        if (calign === 'baseline' || calign === 'axis') {
	            var adaptor = this.adaptor;
	            var child = adaptor.lastChild(cell.chtml);
	            adaptor.setStyle(child, 'height', this.em(HD));
	            adaptor.setStyle(child, 'verticalAlign', this.em(-D));
	            var row = cell.parent;
	            if ((!row.node.isKind('mlabeledtr') || cell !== row.childNodes[0]) &&
	                (ralign === 'baseline' || ralign === 'axis')) {
	                return true;
	            }
	        }
	        return false;
	    };
	    CHTMLmtable.prototype.handleFrame = function () {
	        if (this.frame) {
	            this.adaptor.setStyle(this.itable, 'border', '.07em ' + this.node.attributes.get('frame'));
	        }
	    };
	    CHTMLmtable.prototype.handleWidth = function () {
	        var adaptor = this.adaptor;
	        var _a = this.getBBox(), w = _a.w, L = _a.L, R = _a.R;
	        adaptor.setStyle(this.chtml, 'minWidth', this.em(L + w + R));
	        var W = this.node.attributes.get('width');
	        if (string_js_1.isPercent(W)) {
	            adaptor.setStyle(this.chtml, 'width', '');
	            adaptor.setAttribute(this.chtml, 'width', 'full');
	        }
	        else if (!this.hasLabels) {
	            if (W === 'auto')
	                return;
	            W = this.em(this.length2em(W) + 2 * this.fLine);
	        }
	        var table = adaptor.firstChild(this.chtml);
	        adaptor.setStyle(table, 'width', W);
	        adaptor.setStyle(table, 'minWidth', this.em(w));
	        if (L || R) {
	            adaptor.setStyle(this.chtml, 'margin', '');
	            if (L === R) {
	                adaptor.setStyle(table, 'margin', '0 ' + this.em(R));
	            }
	            else {
	                adaptor.setStyle(table, 'margin', '0 ' + this.em(R) + ' 0 ' + this.em(L));
	            }
	        }
	        adaptor.setAttribute(this.itable, 'width', 'full');
	    };
	    CHTMLmtable.prototype.handleAlign = function () {
	        var _a = __read(this.getAlignmentRow(), 2), align = _a[0], row = _a[1];
	        if (row === null) {
	            if (align !== 'axis') {
	                this.adaptor.setAttribute(this.chtml, 'align', align);
	            }
	        }
	        else {
	            var y = this.getVerticalPosition(row, align);
	            this.adaptor.setAttribute(this.chtml, 'align', 'top');
	            this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(y));
	        }
	    };
	    CHTMLmtable.prototype.handleJustify = function () {
	        var _a = __read(this.getAlignShift(), 2), align = _a[0], shift = _a[1];
	        if (align !== 'center') {
	            this.adaptor.setAttribute(this.chtml, 'justify', align);
	        }
	    };
	    CHTMLmtable.prototype.handleLabels = function () {
	        if (!this.hasLabels)
	            return;
	        var labels = this.labels;
	        var attributes = this.node.attributes;
	        var adaptor = this.adaptor;
	        var side = attributes.get('side');
	        adaptor.setAttribute(this.chtml, 'side', side);
	        adaptor.setAttribute(labels, 'align', side);
	        adaptor.setStyle(labels, side, '0');
	        var _a = __read(this.addLabelPadding(side), 2), align = _a[0], shift = _a[1];
	        if (shift) {
	            var table = adaptor.firstChild(this.chtml);
	            this.setIndent(table, align, shift);
	        }
	        this.updateRowHeights();
	        this.addLabelSpacing();
	    };
	    CHTMLmtable.prototype.addLabelPadding = function (side) {
	        var _a = __read(this.getPadAlignShift(side), 3), pad = _a[0], align = _a[1], shift = _a[2];
	        var styles = {};
	        if (side === 'right') {
	            var W = this.node.attributes.get('width');
	            var _b = this.getBBox(), w = _b.w, L = _b.L, R = _b.R;
	            styles.style = {
	                width: (string_js_1.isPercent(W) ? 'calc(' + W + ' + ' + this.em(L + R) + ')' : this.em(L + w + R))
	            };
	        }
	        this.adaptor.append(this.chtml, this.html('mjx-labels', styles, [this.labels]));
	        return [align, shift];
	    };
	    CHTMLmtable.prototype.updateRowHeights = function () {
	        if (this.node.attributes.get('equalrows'))
	            return;
	        var _a = this.getTableData(), H = _a.H, D = _a.D, NH = _a.NH, ND = _a.ND;
	        var space = this.getRowHalfSpacing();
	        for (var i = 0; i < this.numRows; i++) {
	            var row = this.childNodes[i];
	            if (H[i] !== NH[i] || D[i] !== ND[i]) {
	                this.setRowHeight(row, H[i] + D[i], D[i], space[i] + space[i + 1]);
	            }
	            else if (row.node.isKind('mlabeledtr')) {
	                this.setCellBaseline(row.childNodes[0], '', H[i] + D[i], D[i]);
	            }
	        }
	    };
	    CHTMLmtable.prototype.addLabelSpacing = function () {
	        var adaptor = this.adaptor;
	        var equal = this.node.attributes.get('equalrows');
	        var _a = this.getTableData(), H = _a.H, D = _a.D;
	        var HD = (equal ? this.getEqualRowHeight() : 0);
	        var space = this.getRowHalfSpacing();
	        var h = this.fLine;
	        var current = adaptor.firstChild(this.labels);
	        for (var i = 0; i < this.numRows; i++) {
	            var row = this.childNodes[i];
	            if (row.node.isKind('mlabeledtr')) {
	                h && adaptor.insert(this.html('mjx-mtr', { style: { height: this.em(h) } }), current);
	                adaptor.setStyle(current, 'height', this.em((equal ? HD : H[i] + D[i]) + space[i] + space[i + 1]));
	                current = adaptor.next(current);
	                h = this.rLines[i];
	            }
	            else {
	                h += space[i] + (equal ? HD : H[i] + D[i]) + space[i + 1] + this.rLines[i];
	            }
	        }
	    };
	    CHTMLmtable.kind = mtable_js_2.MmlMtable.prototype.kind;
	    CHTMLmtable.styles = {
	        'mjx-mtable': {
	            'vertical-align': '.25em',
	            'text-align': 'center',
	            'position': 'relative',
	            'box-sizing': 'border-box'
	        },
	        'mjx-labels': {
	            position: 'absolute',
	            left: 0,
	            top: 0
	        },
	        'mjx-table': {
	            'display': 'inline-block',
	            'vertical-align': '-.5ex'
	        },
	        'mjx-table > mjx-itable': {
	            'vertical-align': 'middle',
	            'text-align': 'left',
	            'box-sizing': 'border-box'
	        },
	        'mjx-labels > mjx-itable': {
	            position: 'absolute',
	            top: 0
	        },
	        'mjx-mtable[justify="left"]': {
	            'text-align': 'left'
	        },
	        'mjx-mtable[justify="right"]': {
	            'text-align': 'right'
	        },
	        'mjx-mtable[justify="left"][side="left"]': {
	            'padding-right': '0 ! important'
	        },
	        'mjx-mtable[justify="left"][side="right"]': {
	            'padding-left': '0 ! important'
	        },
	        'mjx-mtable[justify="right"][side="left"]': {
	            'padding-right': '0 ! important'
	        },
	        'mjx-mtable[justify="right"][side="right"]': {
	            'padding-left': '0 ! important'
	        },
	        'mjx-mtable[align]': {
	            'vertical-align': 'baseline'
	        },
	        'mjx-mtable[align="top"] > mjx-table': {
	            'vertical-align': 'top'
	        },
	        'mjx-mtable[align="bottom"] > mjx-table': {
	            'vertical-align': 'bottom'
	        },
	        'mjx-mtable[side="right"] mjx-labels': {
	            'min-width': '100%'
	        }
	    };
	    return CHTMLmtable;
	}(mtable_js_1.CommonMtableMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmtable = CHTMLmtable;
	//# sourceMappingURL=mtable.js.map

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var BBox_js_1 = __webpack_require__(211);
	var string_js_1 = __webpack_require__(164);
	var numeric_js_1 = __webpack_require__(270);
	function CommonMtableMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.numCols = 0;
	            _this.numRows = 0;
	            _this.data = null;
	            _this.pwidthCells = [];
	            _this.pWidth = 0;
	            _this.numCols = numeric_js_1.max(_this.tableRows.map(function (row) { return row.numCells; }));
	            _this.numRows = _this.childNodes.length;
	            _this.hasLabels = _this.childNodes.reduce(function (value, row) { return value || row.node.isKind('mlabeledtr'); }, false);
	            _this.findContainer();
	            _this.isTop = !_this.container || (_this.container.node.isKind('math') && !_this.container.parent);
	            if (_this.isTop) {
	                _this.jax.table = _this;
	            }
	            _this.getPercentageWidth();
	            var attributes = _this.node.attributes;
	            _this.frame = attributes.get('frame') !== 'none';
	            _this.fLine = (_this.frame ? .07 : 0);
	            _this.fSpace = (_this.frame ? _this.convertLengths(_this.getAttributeArray('framespacing')) : [0, 0]);
	            _this.cSpace = _this.convertLengths(_this.getColumnAttributes('columnspacing'));
	            _this.rSpace = _this.convertLengths(_this.getRowAttributes('rowspacing'));
	            _this.cLines = _this.getColumnAttributes('columnlines').map(function (x) { return (x === 'none' ? 0 : .07); });
	            _this.rLines = _this.getRowAttributes('rowlines').map(function (x) { return (x === 'none' ? 0 : .07); });
	            _this.cWidths = _this.getColumnWidths();
	            _this.stretchRows();
	            _this.stretchColumns();
	            return _this;
	        }
	        Object.defineProperty(class_1.prototype, "tableRows", {
	            get: function () {
	                return this.childNodes;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.findContainer = function () {
	            var node = this;
	            var parent = node.parent;
	            while (parent && (parent.node.notParent || parent.node.isKind('mrow'))) {
	                node = parent;
	                parent = parent.parent;
	            }
	            this.container = parent;
	            this.containerI = node.node.childPosition();
	        };
	        class_1.prototype.getPercentageWidth = function () {
	            if (this.hasLabels) {
	                this.bbox.pwidth = BBox_js_1.BBox.fullWidth;
	            }
	            else {
	                var width = this.node.attributes.get('width');
	                if (string_js_1.isPercent(width)) {
	                    this.bbox.pwidth = width;
	                }
	            }
	        };
	        class_1.prototype.stretchRows = function () {
	            var equal = this.node.attributes.get('equalrows');
	            var HD = (equal ? this.getEqualRowHeight() : 0);
	            var _a = (equal ? this.getTableData() : { H: [0], D: [0] }), H = _a.H, D = _a.D;
	            var rows = this.tableRows;
	            for (var i = 0; i < this.numRows; i++) {
	                var hd = (equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : null);
	                rows[i].stretchChildren(hd);
	            }
	        };
	        class_1.prototype.stretchColumns = function () {
	            for (var i = 0; i < this.numCols; i++) {
	                var width = (typeof this.cWidths[i] === 'number' ? this.cWidths[i] : null);
	                this.stretchColumn(i, width);
	            }
	        };
	        class_1.prototype.stretchColumn = function (i, W) {
	            var e_1, _a, e_2, _b, e_3, _c;
	            var stretchy = [];
	            try {
	                for (var _d = __values(this.tableRows), _e = _d.next(); !_e.done; _e = _d.next()) {
	                    var row = _e.value;
	                    var cell = row.getChild(i);
	                    if (cell) {
	                        var child = cell.childNodes[0];
	                        if (child.stretch.dir === 0 &&
	                            child.canStretch(2)) {
	                            stretchy.push(child);
	                        }
	                    }
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	            var count = stretchy.length;
	            var nodeCount = this.childNodes.length;
	            if (count && nodeCount > 1) {
	                if (W === null) {
	                    W = 0;
	                    var all = (count > 1 && count === nodeCount);
	                    try {
	                        for (var _f = __values(this.tableRows), _g = _f.next(); !_g.done; _g = _f.next()) {
	                            var row = _g.value;
	                            var cell = row.getChild(i);
	                            if (cell) {
	                                var child = cell.childNodes[0];
	                                var noStretch = (child.stretch.dir === 0);
	                                if (all || noStretch) {
	                                    var w = child.getBBox(noStretch).w;
	                                    if (w > W) {
	                                        W = w;
	                                    }
	                                }
	                            }
	                        }
	                    }
	                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
	                    finally {
	                        try {
	                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
	                        }
	                        finally { if (e_2) throw e_2.error; }
	                    }
	                }
	                try {
	                    for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
	                        var child = stretchy_1_1.value;
	                        child.coreMO().getStretchedVariant([W]);
	                    }
	                }
	                catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                finally {
	                    try {
	                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
	                    }
	                    finally { if (e_3) throw e_3.error; }
	                }
	            }
	        };
	        class_1.prototype.getTableData = function () {
	            if (this.data) {
	                return this.data;
	            }
	            var H = new Array(this.numRows).fill(0);
	            var D = new Array(this.numRows).fill(0);
	            var W = new Array(this.numCols).fill(0);
	            var NH = new Array(this.numRows);
	            var ND = new Array(this.numRows);
	            var LW = [0];
	            var rows = this.tableRows;
	            for (var j = 0; j < rows.length; j++) {
	                var row = rows[j];
	                for (var i = 0; i < row.numCells; i++) {
	                    var cell = row.getChild(i);
	                    this.updateHDW(cell, i, j, H, D, W);
	                    this.recordPWidthCell(cell, i);
	                }
	                NH[j] = H[j];
	                ND[j] = D[j];
	                if (row.labeled) {
	                    this.updateHDW(row.childNodes[0], 0, j, H, D, LW);
	                }
	            }
	            var w = this.node.attributes.get('width');
	            var L = LW[0];
	            this.data = { H: H, D: D, W: W, NH: NH, ND: ND, L: L };
	            return this.data;
	        };
	        class_1.prototype.updateHDW = function (cell, i, j, H, D, W) {
	            if (W === void 0) { W = null; }
	            var _a = cell.getBBox(), h = _a.h, d = _a.d, w = _a.w, pwidth = _a.pwidth;
	            if (h < .75)
	                h = .75;
	            if (d < .25)
	                d = .25;
	            if (h > H[j])
	                H[j] = h;
	            if (d > D[j])
	                D[j] = d;
	            if (W && w > W[i])
	                W[i] = w;
	        };
	        class_1.prototype.recordPWidthCell = function (cell, i) {
	            if (cell.childNodes[0] && cell.childNodes[0].getBBox().pwidth) {
	                this.pwidthCells.push([cell, i]);
	            }
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            var _a = this.getTableData(), H = _a.H, D = _a.D;
	            var height, width;
	            if (this.node.attributes.get('equalrows')) {
	                var HD = this.getEqualRowHeight();
	                height = numeric_js_1.sum([].concat(this.rLines, this.rSpace)) + HD * this.numRows;
	            }
	            else {
	                height = numeric_js_1.sum(H.concat(D, this.rLines, this.rSpace));
	            }
	            height += 2 * (this.fLine + this.fSpace[1]);
	            var CW = this.getComputedWidths();
	            width = numeric_js_1.sum(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);
	            var w = this.node.attributes.get('width');
	            if (w !== 'auto') {
	                width = Math.max(this.length2em(w, 0) + 2 * this.fLine, width);
	            }
	            var _b = __read(this.getBBoxHD(height), 2), h = _b[0], d = _b[1];
	            bbox.h = h;
	            bbox.d = d;
	            bbox.w = width;
	            var _c = __read(this.getBBoxLR(), 2), L = _c[0], R = _c[1];
	            bbox.L = L;
	            bbox.R = R;
	            if (!string_js_1.isPercent(w)) {
	                this.setColumnPWidths();
	            }
	        };
	        class_1.prototype.setChildPWidths = function (recompute, cwidth, clear) {
	            var width = this.node.attributes.get('width');
	            if (!string_js_1.isPercent(width))
	                return;
	            if (!this.hasLabels) {
	                this.bbox.pwidth = '';
	                this.container.bbox.pwidth = '';
	            }
	            var _a = this.bbox, w = _a.w, L = _a.L, R = _a.R;
	            var W = Math.max(w, this.length2em(width, Math.max(cwidth, L + w + R)));
	            var cols = (this.node.attributes.get('equalcolumns') ?
	                Array(this.numCols).fill(this.percent(1 / Math.max(1, this.numCols))) :
	                this.getColumnAttributes('columnwidth', 0));
	            this.cWidths = this.getColumnWidthsFixed(cols, W);
	            var CW = this.getComputedWidths();
	            this.pWidth = numeric_js_1.sum(CW.concat(this.cLines, this.cSpace)) + 2 * (this.fLine + this.fSpace[0]);
	            if (this.isTop) {
	                this.bbox.w = this.pWidth;
	            }
	            this.setColumnPWidths();
	            if (this.pWidth !== w) {
	                this.parent.invalidateBBox();
	            }
	            return this.pWidth !== w;
	        };
	        class_1.prototype.setColumnPWidths = function () {
	            var e_4, _a;
	            var W = this.cWidths;
	            try {
	                for (var _b = __values(this.pwidthCells), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var _d = __read(_c.value, 2), cell = _d[0], i = _d[1];
	                    if (cell.setChildPWidths(false, W[i])) {
	                        cell.invalidateBBox();
	                        cell.getBBox();
	                    }
	                }
	            }
	            catch (e_4_1) { e_4 = { error: e_4_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_4) throw e_4.error; }
	            }
	        };
	        class_1.prototype.getBBoxHD = function (height) {
	            var _a = __read(this.getAlignmentRow(), 2), align = _a[0], row = _a[1];
	            if (row === null) {
	                var a = this.font.params.axis_height;
	                var h2 = height / 2;
	                var HD = {
	                    top: [0, height],
	                    center: [h2, h2],
	                    bottom: [height, 0],
	                    baseline: [h2, h2],
	                    axis: [h2 + a, h2 - a]
	                };
	                return HD[align] || [h2, h2];
	            }
	            else {
	                var y = this.getVerticalPosition(row, align);
	                return [y, height - y];
	            }
	        };
	        class_1.prototype.getBBoxLR = function () {
	            if (this.hasLabels) {
	                var side = this.node.attributes.get('side');
	                var _a = __read(this.getPadAlignShift(side), 3), pad = _a[0], align = _a[1], shift = _a[2];
	                return (align === 'center' ? [pad, pad] :
	                    side === 'left' ? [pad, 0] : [0, pad]);
	            }
	            return [0, 0];
	        };
	        class_1.prototype.getPadAlignShift = function (side) {
	            var L = this.getTableData().L;
	            var sep = this.length2em(this.node.attributes.get('minlabelspacing'));
	            var pad = L + sep;
	            var _a = __read((this.styles == null ? ['', ''] :
	                [this.styles.get('padding-left'), this.styles.get('padding-right')]), 2), lpad = _a[0], rpad = _a[1];
	            if (lpad || rpad) {
	                pad = Math.max(pad, this.length2em(lpad || '0'), this.length2em(rpad || '0'));
	            }
	            var _b = __read(this.getAlignShift(), 2), align = _b[0], shift = _b[1];
	            if (align === side) {
	                shift = (side === 'left' ? Math.max(pad, shift) - pad : Math.min(-pad, shift) + pad);
	            }
	            return [pad, align, shift];
	        };
	        class_1.prototype.getAlignShift = function () {
	            return (this.isTop ? _super.prototype.getAlignShift.call(this) :
	                [this.container.getChildAlign(this.containerI), 0]);
	        };
	        class_1.prototype.getWidth = function () {
	            return this.pWidth || this.getBBox().w;
	        };
	        class_1.prototype.getEqualRowHeight = function () {
	            var _a = this.getTableData(), H = _a.H, D = _a.D;
	            var HD = Array.from(H.keys()).map(function (i) { return H[i] + D[i]; });
	            return Math.max.apply(Math, HD);
	        };
	        class_1.prototype.getComputedWidths = function () {
	            var _this = this;
	            var W = this.getTableData().W;
	            var CW = Array.from(W.keys()).map(function (i) {
	                return (typeof _this.cWidths[i] === 'number' ? _this.cWidths[i] : W[i]);
	            });
	            if (this.node.attributes.get('equalcolumns')) {
	                CW = Array(CW.length).fill(numeric_js_1.max(CW));
	            }
	            return CW;
	        };
	        class_1.prototype.getColumnWidths = function () {
	            var width = this.node.attributes.get('width');
	            if (this.node.attributes.get('equalcolumns')) {
	                return this.getEqualColumns(width);
	            }
	            var swidths = this.getColumnAttributes('columnwidth', 0);
	            if (width === 'auto') {
	                return this.getColumnWidthsAuto(swidths);
	            }
	            if (string_js_1.isPercent(width)) {
	                return this.getColumnWidthsPercent(swidths, width);
	            }
	            return this.getColumnWidthsFixed(swidths, this.length2em(width));
	        };
	        class_1.prototype.getEqualColumns = function (width) {
	            var n = Math.max(1, this.numCols);
	            var cwidth;
	            if (width === 'auto') {
	                var W = this.getTableData().W;
	                cwidth = numeric_js_1.max(W);
	            }
	            else if (string_js_1.isPercent(width)) {
	                cwidth = this.percent(1 / n);
	            }
	            else {
	                var w = numeric_js_1.sum([].concat(this.cLines, this.cSpace)) + 2 * this.fSpace[0];
	                cwidth = Math.max(0, this.length2em(width) - w) / n;
	            }
	            return Array(this.numCols).fill(cwidth);
	        };
	        class_1.prototype.getColumnWidthsAuto = function (swidths) {
	            var _this = this;
	            return swidths.map(function (x) {
	                if (x === 'auto' || x === 'fit')
	                    return null;
	                if (string_js_1.isPercent(x))
	                    return x;
	                return _this.length2em(x);
	            });
	        };
	        class_1.prototype.getColumnWidthsPercent = function (swidths, width) {
	            var _this = this;
	            var hasFit = swidths.indexOf('fit') >= 0;
	            var W = (hasFit ? this.getTableData() : { W: null }).W;
	            return Array.from(swidths.keys()).map(function (i) {
	                var x = swidths[i];
	                if (x === 'fit')
	                    return null;
	                if (x === 'auto')
	                    return (hasFit ? W[i] : null);
	                if (string_js_1.isPercent(x))
	                    return x;
	                return _this.length2em(x);
	            });
	        };
	        class_1.prototype.getColumnWidthsFixed = function (swidths, width) {
	            var _this = this;
	            var indices = Array.from(swidths.keys());
	            var fit = indices.filter(function (i) { return swidths[i] === 'fit'; });
	            var auto = indices.filter(function (i) { return swidths[i] === 'auto'; });
	            var n = fit.length || auto.length;
	            var W = (n ? this.getTableData() : { W: null }).W;
	            var cwidth = width - numeric_js_1.sum([].concat(this.cLines, this.cSpace)) - 2 * this.fSpace[0];
	            var dw = cwidth;
	            indices.forEach(function (i) {
	                var x = swidths[i];
	                dw -= (x === 'fit' || x === 'auto' ? W[i] : _this.length2em(x, width));
	            });
	            var fw = (n && dw > 0 ? dw / n : 0);
	            return indices.map(function (i) {
	                var x = swidths[i];
	                if (x === 'fit')
	                    return W[i] + fw;
	                if (x === 'auto')
	                    return W[i] + (fit.length === 0 ? fw : 0);
	                return _this.length2em(x, cwidth);
	            });
	        };
	        class_1.prototype.getVerticalPosition = function (i, align) {
	            var equal = this.node.attributes.get('equalrows');
	            var _a = this.getTableData(), H = _a.H, D = _a.D;
	            var HD = (equal ? this.getEqualRowHeight() : 0);
	            var space = this.getRowHalfSpacing();
	            var y = this.fLine;
	            for (var j = 0; j < i; j++) {
	                y += space[j] + (equal ? HD : H[j] + D[j]) + space[j + 1] + this.rLines[j];
	            }
	            var _b = __read((equal ? [(HD + H[i] - D[i]) / 2, (HD - H[i] + D[i]) / 2] : [H[i], D[i]]), 2), h = _b[0], d = _b[1];
	            var offset = {
	                top: 0,
	                center: space[i] + (h + d) / 2,
	                bottom: space[i] + h + d + space[i + 1],
	                baseline: space[i] + h,
	                axis: space[i] + h - .25
	            };
	            y += offset[align] || 0;
	            return y;
	        };
	        class_1.prototype.getEmHalfSpacing = function (fspace, space) {
	            var fspaceEm = this.em(fspace);
	            var spaceEm = this.addEm(space, 2);
	            spaceEm.unshift(fspaceEm);
	            spaceEm.push(fspaceEm);
	            return spaceEm;
	        };
	        class_1.prototype.getRowHalfSpacing = function () {
	            var space = this.rSpace.map(function (x) { return x / 2; });
	            space.unshift(this.fSpace[1]);
	            space.push(this.fSpace[1]);
	            return space;
	        };
	        class_1.prototype.getColumnHalfSpacing = function () {
	            var space = this.cSpace.map(function (x) { return x / 2; });
	            space.unshift(this.fSpace[0]);
	            space.push(this.fSpace[0]);
	            return space;
	        };
	        class_1.prototype.getAlignmentRow = function () {
	            var _a = __read(string_js_1.split(this.node.attributes.get('align')), 2), align = _a[0], row = _a[1];
	            if (row == null)
	                return [align, null];
	            var i = parseInt(row);
	            if (i < 0)
	                i += this.numRows + 1;
	            return [align, i < 1 || i > this.numRows ? null : i - 1];
	        };
	        class_1.prototype.getColumnAttributes = function (name, i) {
	            if (i === void 0) { i = 1; }
	            var n = this.numCols - i;
	            var columns = this.getAttributeArray(name);
	            if (columns.length === 0)
	                return;
	            while (columns.length < n) {
	                columns.push(columns[columns.length - 1]);
	            }
	            if (columns.length > n) {
	                columns.splice(n);
	            }
	            return columns;
	        };
	        class_1.prototype.getRowAttributes = function (name, i) {
	            if (i === void 0) { i = 1; }
	            var n = this.numRows - i;
	            var rows = this.getAttributeArray(name);
	            if (rows.length === 0)
	                return;
	            while (rows.length < n) {
	                rows.push(rows[rows.length - 1]);
	            }
	            if (rows.length > n) {
	                rows.splice(n);
	            }
	            return rows;
	        };
	        class_1.prototype.getAttributeArray = function (name) {
	            var value = this.node.attributes.get(name);
	            if (!value)
	                return [this.node.attributes.getDefault(name)];
	            return string_js_1.split(value);
	        };
	        class_1.prototype.addEm = function (list, n) {
	            var _this = this;
	            if (n === void 0) { n = 1; }
	            if (!list)
	                return;
	            return list.map(function (x) { return _this.em(x / n); });
	        };
	        class_1.prototype.convertLengths = function (list) {
	            var _this = this;
	            if (!list)
	                return;
	            return list.map(function (x) { return _this.length2em(x); });
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMtableMixin = CommonMtableMixin;
	//# sourceMappingURL=mtable.js.map

/***/ }),
/* 270 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	function sum(A) {
	    return A.reduce(function (a, b) { return a + b; }, 0);
	}
	exports.sum = sum;
	function max(A) {
	    return A.reduce(function (a, b) { return Math.max(a, b); }, 0);
	}
	exports.max = max;
	//# sourceMappingURL=numeric.js.map

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var string_js_1 = __webpack_require__(164);
	var MmlMtable = (function (_super) {
	    __extends(MmlMtable, _super);
	    function MmlMtable() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.properties = {
	            useHeight: 1
	        };
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMtable.prototype, "kind", {
	        get: function () {
	            return 'mtable';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMtable.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMtable.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
	        var e_1, _a;
	        try {
	            for (var indentAttributes_1 = __values(MmlNode_js_1.indentAttributes), indentAttributes_1_1 = indentAttributes_1.next(); !indentAttributes_1_1.done; indentAttributes_1_1 = indentAttributes_1.next()) {
	                var name_1 = indentAttributes_1_1.value;
	                if (attributes[name_1]) {
	                    this.attributes.setInherited(name_1, attributes[name_1][1]);
	                }
	                if (this.attributes.getExplicit(name_1) !== undefined) {
	                    delete (this.attributes.getAllAttributes())[name_1];
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (indentAttributes_1_1 && !indentAttributes_1_1.done && (_a = indentAttributes_1.return)) _a.call(indentAttributes_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);
	    };
	    ;
	    MmlMtable.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var e_2, _a, e_3, _b;
	        try {
	            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var child = _d.value;
	                if (!child.isKind('mtr')) {
	                    this.replaceChild(this.factory.create('mtr'), child)
	                        .appendChild(child);
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        display = !!(this.attributes.getExplicit('displaystyle') || this.attributes.getDefault('displaystyle'));
	        attributes = this.addInheritedAttributes(attributes, {
	            columnalign: this.attributes.get('columnalign'),
	            rowalign: 'center'
	        });
	        var ralign = string_js_1.split(this.attributes.get('rowalign'));
	        try {
	            for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
	                var child = _f.value;
	                attributes.rowalign[1] = ralign.shift() || attributes.rowalign[1];
	                child.setInheritedAttributes(attributes, display, level, prime);
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	    };
	    MmlMtable.prototype.verifyChildren = function (options) {
	        var e_4, _a;
	        if (!options['fixMtables']) {
	            try {
	                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    if (!child.isKind('mtr')) {
	                        this.mError('Children of ' + this.kind + ' must be mtr or mlabeledtr', options);
	                    }
	                }
	            }
	            catch (e_4_1) { e_4 = { error: e_4_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_4) throw e_4.error; }
	            }
	        }
	        _super.prototype.verifyChildren.call(this, options);
	    };
	    MmlMtable.prototype.setTeXclass = function (prev) {
	        var e_5, _a;
	        this.getPrevClass(prev);
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.setTeXclass(null);
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	        return this;
	    };
	    MmlMtable.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { align: 'axis', rowalign: 'baseline', columnalign: 'center', groupalign: '{left}', alignmentscope: true, columnwidth: 'auto', width: 'auto', rowspacing: '1ex', columnspacing: '.8em', rowlines: 'none', columnlines: 'none', frame: 'none', framespacing: '0.4em 0.5ex', equalrows: false, equalcolumns: false, displaystyle: false, side: 'right', minlabelspacing: '0.8em' });
	    return MmlMtable;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMtable = MmlMtable;
	//# sourceMappingURL=mtable.js.map

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mtr_js_1 = __webpack_require__(273);
	var mtr_js_2 = __webpack_require__(273);
	var mtr_js_3 = __webpack_require__(274);
	var CHTMLmtr = (function (_super) {
	    __extends(CHTMLmtr, _super);
	    function CHTMLmtr() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmtr.prototype.toCHTML = function (parent) {
	        _super.prototype.toCHTML.call(this, parent);
	        var align = this.node.attributes.get('rowalign');
	        if (align !== 'baseline') {
	            this.adaptor.setAttribute(this.chtml, 'rowalign', align);
	        }
	    };
	    CHTMLmtr.kind = mtr_js_3.MmlMtr.prototype.kind;
	    CHTMLmtr.styles = {
	        'mjx-mtr': {
	            display: 'table-row',
	        },
	        'mjx-mtr[rowalign="top"] > mjx-mtd': {
	            'vertical-align': 'top'
	        },
	        'mjx-mtr[rowalign="center"] > mjx-mtd': {
	            'vertical-align': 'middle'
	        },
	        'mjx-mtr[rowalign="bottom"] > mjx-mtd': {
	            'vertical-align': 'bottom'
	        },
	        'mjx-mtr[rowalign="baseline"] > mjx-mtd': {
	            'vertical-align': 'baseline'
	        },
	        'mjx-mtr[rowalign="axis"] > mjx-mtd': {
	            'vertical-align': '.25em'
	        }
	    };
	    return CHTMLmtr;
	}(mtr_js_1.CommonMtrMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmtr = CHTMLmtr;
	var CHTMLmlabeledtr = (function (_super) {
	    __extends(CHTMLmlabeledtr, _super);
	    function CHTMLmlabeledtr() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmlabeledtr.prototype.toCHTML = function (parent) {
	        _super.prototype.toCHTML.call(this, parent);
	        var child = this.adaptor.firstChild(this.chtml);
	        if (child) {
	            this.adaptor.remove(child);
	            var align = this.node.attributes.get('rowalign');
	            var attr = (align !== 'baseline' && align !== 'axis' ? { rowalign: align } : {});
	            var row = this.html('mjx-mtr', attr, [child]);
	            CHTMLmtr.used = true;
	            this.adaptor.append(this.parent.labels, row);
	        }
	    };
	    CHTMLmlabeledtr.kind = mtr_js_3.MmlMlabeledtr.prototype.kind;
	    CHTMLmlabeledtr.styles = {
	        'mjx-mlabeledtr': {
	            display: 'table-row'
	        },
	        'mjx-mlabeledtr[rowalign="top"] > mjx-mtd': {
	            'vertical-align': 'top'
	        },
	        'mjx-mlabeledtr[rowalign="center"] > mjx-mtd': {
	            'vertical-align': 'middle'
	        },
	        'mjx-mlabeledtr[rowalign="bottom"] > mjx-mtd': {
	            'vertical-align': 'bottom'
	        },
	        'mjx-mlabeledtr[rowalign="baseline"] > mjx-mtd': {
	            'vertical-align': 'baseline'
	        },
	        'mjx-mlabeledtr[rowalign="axis"] > mjx-mtd': {
	            'vertical-align': '.25em'
	        }
	    };
	    return CHTMLmlabeledtr;
	}(mtr_js_2.CommonMlabeledtrMixin(CHTMLmtr)));
	exports.CHTMLmlabeledtr = CHTMLmlabeledtr;
	//# sourceMappingURL=mtr.js.map

/***/ }),
/* 273 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMtrMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(class_1.prototype, "fixesPWidth", {
	            get: function () {
	                return false;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_1.prototype, "numCells", {
	            get: function () {
	                return this.childNodes.length;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_1.prototype, "labeled", {
	            get: function () {
	                return false;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_1.prototype, "tableCells", {
	            get: function () {
	                return this.childNodes;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.getChild = function (i) {
	            return this.childNodes[i];
	        };
	        class_1.prototype.getChildBBoxes = function () {
	            return this.childNodes.map(function (cell) { return cell.getBBox(); });
	        };
	        class_1.prototype.stretchChildren = function (HD) {
	            var e_1, _a, e_2, _b, e_3, _c;
	            if (HD === void 0) { HD = null; }
	            var stretchy = [];
	            var children = (this.labeled ? this.childNodes.slice(1) : this.childNodes);
	            try {
	                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
	                    var mtd = children_1_1.value;
	                    var child = mtd.childNodes[0];
	                    if (child.canStretch(1)) {
	                        stretchy.push(child);
	                    }
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	            var count = stretchy.length;
	            var nodeCount = this.childNodes.length;
	            if (count && nodeCount > 1) {
	                if (HD === null) {
	                    var H = 0, D = 0;
	                    var all = (count > 1 && count === nodeCount);
	                    try {
	                        for (var children_2 = __values(children), children_2_1 = children_2.next(); !children_2_1.done; children_2_1 = children_2.next()) {
	                            var mtd = children_2_1.value;
	                            var child = mtd.childNodes[0];
	                            var noStretch = (child.stretch.dir === 0);
	                            if (all || noStretch) {
	                                var _d = child.getBBox(noStretch), h = _d.h, d = _d.d;
	                                if (h > H) {
	                                    H = h;
	                                }
	                                if (d > D) {
	                                    D = d;
	                                }
	                            }
	                        }
	                    }
	                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
	                    finally {
	                        try {
	                            if (children_2_1 && !children_2_1.done && (_b = children_2.return)) _b.call(children_2);
	                        }
	                        finally { if (e_2) throw e_2.error; }
	                    }
	                    HD = [H, D];
	                }
	                try {
	                    for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {
	                        var child = stretchy_1_1.value;
	                        child.coreMO().getStretchedVariant(HD);
	                    }
	                }
	                catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                finally {
	                    try {
	                        if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);
	                    }
	                    finally { if (e_3) throw e_3.error; }
	                }
	            }
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMtrMixin = CommonMtrMixin;
	function CommonMlabeledtrMixin(Base) {
	    return (function (_super) {
	        __extends(class_2, _super);
	        function class_2() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(class_2.prototype, "numCells", {
	            get: function () {
	                return Math.max(0, this.childNodes.length - 1);
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_2.prototype, "labeled", {
	            get: function () {
	                return true;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        Object.defineProperty(class_2.prototype, "tableCells", {
	            get: function () {
	                return this.childNodes.slice(1);
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_2.prototype.getChild = function (i) {
	            return this.childNodes[i + 1];
	        };
	        class_2.prototype.getChildBBoxes = function () {
	            return this.childNodes.slice(1).map(function (cell) { return cell.getBBox(); });
	        };
	        return class_2;
	    }(Base));
	}
	exports.CommonMlabeledtrMixin = CommonMlabeledtrMixin;
	//# sourceMappingURL=mtr.js.map

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var Attributes_js_1 = __webpack_require__(168);
	var string_js_1 = __webpack_require__(164);
	var MmlMtr = (function (_super) {
	    __extends(MmlMtr, _super);
	    function MmlMtr() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMtr.prototype, "kind", {
	        get: function () {
	            return 'mtr';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMtr.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMtr.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var e_1, _a, e_2, _b;
	        try {
	            for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var child = _d.value;
	                if (!child.isKind('mtd')) {
	                    this.replaceChild(this.factory.create('mtd'), child)
	                        .appendChild(child);
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        var calign = string_js_1.split(this.attributes.get('columnalign'));
	        if (this.arity === 1) {
	            calign.unshift(this.parent.attributes.get('side'));
	        }
	        attributes = this.addInheritedAttributes(attributes, {
	            rowalign: this.attributes.get('rowalign'),
	            columnalign: 'center'
	        });
	        try {
	            for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {
	                var child = _f.value;
	                attributes.columnalign[1] = calign.shift() || attributes.columnalign[1];
	                child.setInheritedAttributes(attributes, display, level, prime);
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    MmlMtr.prototype.verifyChildren = function (options) {
	        var e_3, _a;
	        if (this.parent && !this.parent.isKind('mtable')) {
	            this.mError(this.kind + ' can only be a child of an mtable', options, true);
	            return;
	        }
	        if (!options['fixMtables']) {
	            try {
	                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var child = _c.value;
	                    if (!child.isKind('mtd')) {
	                        var mtr = this.replaceChild(this.factory.create('mtr'), child);
	                        mtr.mError('Children of ' + this.kind + ' must be mtd', options, true);
	                    }
	                }
	            }
	            catch (e_3_1) { e_3 = { error: e_3_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_3) throw e_3.error; }
	            }
	        }
	        _super.prototype.verifyChildren.call(this, options);
	    };
	    MmlMtr.prototype.setTeXclass = function (prev) {
	        var e_4, _a;
	        this.getPrevClass(prev);
	        try {
	            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.setTeXclass(null);
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	        return this;
	    };
	    MmlMtr.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { rowalign: Attributes_js_1.INHERIT, columnalign: Attributes_js_1.INHERIT, groupalign: Attributes_js_1.INHERIT });
	    return MmlMtr;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMtr = MmlMtr;
	var MmlMlabeledtr = (function (_super) {
	    __extends(MmlMlabeledtr, _super);
	    function MmlMlabeledtr() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMlabeledtr.prototype, "kind", {
	        get: function () {
	            return 'mlabeledtr';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMlabeledtr.prototype, "arity", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return MmlMlabeledtr;
	}(MmlMtr));
	exports.MmlMlabeledtr = MmlMlabeledtr;
	//# sourceMappingURL=mtr.js.map

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mtd_js_1 = __webpack_require__(276);
	var mtd_js_2 = __webpack_require__(277);
	var CHTMLmtd = (function (_super) {
	    __extends(CHTMLmtd, _super);
	    function CHTMLmtd() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmtd.prototype.toCHTML = function (parent) {
	        _super.prototype.toCHTML.call(this, parent);
	        var ralign = this.node.attributes.get('rowalign');
	        var calign = this.node.attributes.get('columnalign');
	        var palign = this.parent.node.attributes.get('rowalign');
	        if (ralign !== palign) {
	            this.adaptor.setAttribute(this.chtml, 'rowalign', ralign);
	        }
	        if (calign !== 'center' &&
	            (this.parent.kind !== 'mlabeledtr' || this !== this.parent.childNodes[0] ||
	                calign !== this.parent.parent.node.attributes.get('side'))) {
	            this.adaptor.setStyle(this.chtml, 'textAlign', calign);
	        }
	        this.adaptor.append(this.chtml, this.html('mjx-tstrut'));
	    };
	    CHTMLmtd.kind = mtd_js_2.MmlMtd.prototype.kind;
	    CHTMLmtd.styles = {
	        'mjx-mtd': {
	            display: 'table-cell',
	            'text-align': 'center',
	            'padding': '.215em .4em'
	        },
	        'mjx-mtd:first-child': {
	            'padding-left': 0
	        },
	        'mjx-mtd:last-child': {
	            'padding-right': 0
	        },
	        'mjx-mtable > * > mjx-itable > *:first-child > mjx-mtd': {
	            'padding-top': 0
	        },
	        'mjx-mtable > * > mjx-itable > *:last-child > mjx-mtd': {
	            'padding-bottom': 0
	        },
	        'mjx-tstrut': {
	            display: 'inline-block',
	            height: '1em',
	            'vertical-align': '-.25em'
	        },
	        'mjx-labels[align="left"] > mjx-mtr > mjx-mtd': {
	            'text-align': 'left'
	        },
	        'mjx-labels[align="right"] > mjx-mtr > mjx-mtd': {
	            'text-align': 'right'
	        },
	        'mjx-mtr mjx-mtd[rowalign="top"], mjx-mlabeledtr mjx-mtd[rowalign="top"]': {
	            'vertical-align': 'top'
	        },
	        'mjx-mtr mjx-mtd[rowalign="center"], mjx-mlabeledtr mjx-mtd[rowalign="center"]': {
	            'vertical-align': 'middle'
	        },
	        'mjx-mtr mjx-mtd[rowalign="bottom"], mjx-mlabeledtr mjx-mtd[rowalign="bottom"]': {
	            'vertical-align': 'bottom'
	        },
	        'mjx-mtr mjx-mtd[rowalign="baseline"], mjx-mlabeledtr mjx-mtd[rowalign="baseline"]': {
	            'vertical-align': 'baseline'
	        },
	        'mjx-mtr mjx-mtd[rowalign="axis"], mjx-mlabeledtr mjx-mtd[rowalign="axis"]': {
	            'vertical-align': '.25em'
	        }
	    };
	    return CHTMLmtd;
	}(mtd_js_1.CommonMtdMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmtd = CHTMLmtd;
	//# sourceMappingURL=mtd.js.map

/***/ }),
/* 276 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMtdMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        Object.defineProperty(class_1.prototype, "fixesPWidth", {
	            get: function () {
	                return false;
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.invalidateBBox = function () {
	            this.bboxComputed = false;
	        };
	        class_1.prototype.getWrapWidth = function (j) {
	            var table = this.parent.parent;
	            var row = this.parent;
	            var i = this.node.childPosition() - (row.labeled ? 1 : 0);
	            return (typeof (table.cWidths[i]) === 'number' ? table.cWidths[i] : table.getTableData().W[i]);
	        };
	        class_1.prototype.getChildAlign = function (i) {
	            return this.node.attributes.get('columnalign');
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMtdMixin = CommonMtdMixin;
	//# sourceMappingURL=mtd.js.map

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var Attributes_js_1 = __webpack_require__(168);
	var MmlMtd = (function (_super) {
	    __extends(MmlMtd, _super);
	    function MmlMtd() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMtd.prototype, "kind", {
	        get: function () {
	            return 'mtd';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMtd.prototype, "arity", {
	        get: function () {
	            return -1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMtd.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMtd.prototype.verifyChildren = function (options) {
	        if (this.parent && !this.parent.isKind('mtr')) {
	            this.mError(this.kind + ' can only be a child of an mtr or mlabeledtr', options, true);
	            return;
	        }
	        _super.prototype.verifyChildren.call(this, options);
	    };
	    MmlMtd.prototype.setTeXclass = function (prev) {
	        this.getPrevClass(prev);
	        this.childNodes[0].setTeXclass(null);
	        return this;
	    };
	    MmlMtd.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { rowspan: 1, columnspan: 1, rowalign: Attributes_js_1.INHERIT, columnalign: Attributes_js_1.INHERIT, groupalign: Attributes_js_1.INHERIT });
	    return MmlMtd;
	}(MmlNode_js_1.AbstractMmlBaseNode));
	exports.MmlMtd = MmlMtd;
	//# sourceMappingURL=mtd.js.map

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var maction_js_1 = __webpack_require__(279);
	var maction_js_2 = __webpack_require__(279);
	var maction_js_3 = __webpack_require__(280);
	var CHTMLmaction = (function (_super) {
	    __extends(CHTMLmaction, _super);
	    function CHTMLmaction() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmaction.prototype.toCHTML = function (parent) {
	        var chtml = this.standardCHTMLnode(parent);
	        var child = this.selected;
	        child.toCHTML(chtml);
	        this.action(this, this.data);
	    };
	    CHTMLmaction.prototype.setEventHandler = function (type, handler) {
	        this.chtml.addEventListener(type, handler);
	    };
	    CHTMLmaction.kind = maction_js_3.MmlMaction.prototype.kind;
	    CHTMLmaction.styles = {
	        'mjx-maction': {
	            position: 'relative'
	        },
	        'mjx-maction > mjx-tool': {
	            display: 'none',
	            position: 'absolute',
	            bottom: 0, right: 0,
	            width: 0, height: 0,
	            'z-index': 500
	        },
	        'mjx-tool > mjx-tip': {
	            display: 'inline-block',
	            padding: '.2em',
	            border: '1px solid #888',
	            'font-size': '70%',
	            'background-color': '#F8F8F8',
	            color: 'black',
	            'box-shadow': '2px 2px 5px #AAAAAA'
	        },
	        'mjx-maction[toggle]': {
	            cursor: 'pointer'
	        },
	        'mjx-status': {
	            display: 'block',
	            position: 'fixed',
	            left: '1em',
	            bottom: '1em',
	            'min-width': '25%',
	            padding: '.2em .4em',
	            border: '1px solid #888',
	            'font-size': '90%',
	            'background-color': '#F8F8F8',
	            color: 'black'
	        }
	    };
	    CHTMLmaction.actions = new Map([
	        ['toggle', [function (node, data) {
	                    node.adaptor.setAttribute(node.chtml, 'toggle', node.node.attributes.get('selection'));
	                    var math = node.factory.jax.math;
	                    var document = node.factory.jax.document;
	                    var mml = node.node;
	                    node.setEventHandler('click', function (event) {
	                        if (!math.start.node) {
	                            math.start.node = math.end.node = math.typesetRoot;
	                            math.start.n = math.end.n = 0;
	                        }
	                        mml.nextToggleSelection();
	                        math.rerender(document);
	                        event.stopPropagation();
	                    });
	                }, {}]],
	        ['tooltip', [function (node, data) {
	                    var tip = node.childNodes[1];
	                    if (!tip)
	                        return;
	                    if (tip.node.isKind('mtext')) {
	                        var text = tip.node.getText();
	                        node.adaptor.setAttribute(node.chtml, 'title', text);
	                    }
	                    else {
	                        var adaptor_1 = node.adaptor;
	                        var tool_1 = adaptor_1.append(node.chtml, node.html('mjx-tool', {
	                            style: { bottom: node.em(-node.dy), right: node.em(-node.dx) }
	                        }, [node.html('mjx-tip')]));
	                        tip.toCHTML(adaptor_1.firstChild(tool_1));
	                        node.setEventHandler('mouseover', function (event) {
	                            data.stopTimers(node, data);
	                            var timeout = setTimeout(function () { return adaptor_1.setStyle(tool_1, 'display', 'block'); }, data.postDelay);
	                            data.hoverTimer.set(node, timeout);
	                            event.stopPropagation();
	                        });
	                        node.setEventHandler('mouseout', function (event) {
	                            data.stopTimers(node, data);
	                            var timeout = setTimeout(function () { return adaptor_1.setStyle(tool_1, 'display', ''); }, data.clearDelay);
	                            data.clearTimer.set(node, timeout);
	                            event.stopPropagation();
	                        });
	                    }
	                }, maction_js_2.TooltipData]],
	        ['statusline', [function (node, data) {
	                    var tip = node.childNodes[1];
	                    if (!tip)
	                        return;
	                    if (tip.node.isKind('mtext')) {
	                        var adaptor_2 = node.adaptor;
	                        var text_1 = tip.node.getText();
	                        adaptor_2.setAttribute(node.chtml, 'statusline', text_1);
	                        node.setEventHandler('mouseover', function (event) {
	                            if (data.status === null) {
	                                var body = adaptor_2.body(adaptor_2.document);
	                                data.status = adaptor_2.append(body, node.html('mjx-status', {}, [node.text(text_1)]));
	                            }
	                            event.stopPropagation();
	                        });
	                        node.setEventHandler('mouseout', function (event) {
	                            if (data.status) {
	                                adaptor_2.remove(data.status);
	                                data.status = null;
	                            }
	                            event.stopPropagation();
	                        });
	                    }
	                }, {
	                    status: null
	                }]]
	    ]);
	    return CHTMLmaction;
	}(maction_js_1.CommonMactionMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmaction = CHTMLmaction;
	//# sourceMappingURL=maction.js.map

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var string_js_1 = __webpack_require__(164);
	exports.TooltipData = {
	    dx: '.2em',
	    dy: '.1em',
	    postDelay: 600,
	    clearDelay: 100,
	    hoverTimer: new Map(),
	    clearTimer: new Map(),
	    stopTimers: function (node, data) {
	        if (data.clearTimer.has(node)) {
	            clearTimeout(data.clearTimer.get(node));
	            data.clearTimer.delete(node);
	        }
	        if (data.hoverTimer.has(node)) {
	            clearTimeout(data.hoverTimer.get(node));
	            data.hoverTimer.delete(node);
	        }
	    }
	};
	function CommonMactionMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            var actions = _this.constructor.actions;
	            var action = _this.node.attributes.get('actiontype');
	            var _a = __read(actions.get(action) || [(function (node, data) { }), {}], 2), handler = _a[0], data = _a[1];
	            _this.action = handler;
	            _this.data = data;
	            _this.getParameters();
	            return _this;
	        }
	        Object.defineProperty(class_1.prototype, "selected", {
	            get: function () {
	                var selection = this.node.attributes.get('selection');
	                var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;
	                return this.childNodes[i] || this.wrap(this.node.selected);
	            },
	            enumerable: true,
	            configurable: true
	        });
	        class_1.prototype.getParameters = function () {
	            var offsets = this.node.attributes.get('data-offsets');
	            var _a = __read(string_js_1.split(offsets || ''), 2), dx = _a[0], dy = _a[1];
	            this.dx = this.length2em(dx || exports.TooltipData.dx);
	            this.dy = this.length2em(dy || exports.TooltipData.dy);
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            bbox.updateFrom(this.selected.getBBox());
	            this.selected.setChildPWidths(recompute);
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMactionMixin = CommonMactionMixin;
	//# sourceMappingURL=maction.js.map

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMaction = (function (_super) {
	    __extends(MmlMaction, _super);
	    function MmlMaction() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMaction.prototype, "kind", {
	        get: function () {
	            return 'maction';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMaction.prototype, "arity", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMaction.prototype, "selected", {
	        get: function () {
	            var selection = this.attributes.get('selection');
	            var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;
	            return this.childNodes[i] || this.factory.create('mrow');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMaction.prototype, "isEmbellished", {
	        get: function () {
	            return this.selected.isEmbellished;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMaction.prototype, "isSpacelike", {
	        get: function () {
	            return this.selected.isSpacelike;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMaction.prototype.core = function () {
	        return this.selected.core();
	    };
	    MmlMaction.prototype.coreMO = function () {
	        return this.selected.coreMO();
	    };
	    MmlMaction.prototype.verifyAttributes = function (options) {
	        _super.prototype.verifyAttributes.call(this, options);
	        if (this.attributes.get('actiontype') !== 'toggle' &&
	            this.attributes.getExplicit('selection') !== undefined) {
	            var attributes = this.attributes.getAllAttributes();
	            delete attributes.selection;
	        }
	    };
	    MmlMaction.prototype.setTeXclass = function (prev) {
	        if (this.attributes.get('actiontype') === 'tooltip' && this.childNodes[1]) {
	            this.childNodes[1].setTeXclass(null);
	        }
	        var selected = this.selected;
	        prev = selected.setTeXclass(prev);
	        this.updateTeXclass(selected);
	        return prev;
	    };
	    MmlMaction.prototype.nextToggleSelection = function () {
	        var selection = Math.max(1, this.attributes.get('selection') + 1);
	        if (selection > this.childNodes.length) {
	            selection = 1;
	        }
	        this.attributes.set('selection', selection);
	    };
	    MmlMaction.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { actiontype: 'toggle', selection: 1 });
	    return MmlMaction;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMaction = MmlMaction;
	//# sourceMappingURL=maction.js.map

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var mglyph_js_1 = __webpack_require__(282);
	var mglyph_js_2 = __webpack_require__(283);
	var CHTMLmglyph = (function (_super) {
	    __extends(CHTMLmglyph, _super);
	    function CHTMLmglyph() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLmglyph.prototype.toCHTML = function (parent) {
	        var chtml = this.standardCHTMLnode(parent);
	        var _a = this.node.attributes.getList('src', 'alt'), src = _a.src, alt = _a.alt;
	        var styles = {
	            width: this.em(this.width),
	            height: this.em(this.height)
	        };
	        if (this.valign) {
	            styles.verticalAlign = this.em(this.valign);
	        }
	        var img = this.html('img', { src: src, style: styles, alt: alt, title: alt });
	        this.adaptor.append(chtml, img);
	    };
	    CHTMLmglyph.kind = mglyph_js_2.MmlMglyph.prototype.kind;
	    CHTMLmglyph.styles = {
	        'mjx-mglyph > img': {
	            display: 'inline-block',
	            border: 0,
	            padding: 0
	        }
	    };
	    return CHTMLmglyph;
	}(mglyph_js_1.CommonMglyphMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLmglyph = CHTMLmglyph;
	//# sourceMappingURL=mglyph.js.map

/***/ }),
/* 282 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonMglyphMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var _this = _super.apply(this, __spread(args)) || this;
	            _this.getParameters();
	            return _this;
	        }
	        class_1.prototype.getParameters = function () {
	            var _a = this.node.attributes.getList('width', 'height', 'valign'), width = _a.width, height = _a.height, valign = _a.valign;
	            this.width = (width === 'auto' ? 1 : this.length2em(width));
	            this.height = (height === 'auto' ? 1 : this.length2em(height));
	            this.valign = this.length2em(valign || '0');
	        };
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            bbox.w = this.width;
	            bbox.h = this.height + this.valign;
	            bbox.d = -this.valign;
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonMglyphMixin = CommonMglyphMixin;
	//# sourceMappingURL=mglyph.js.map

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMglyph = (function (_super) {
	    __extends(MmlMglyph, _super);
	    function MmlMglyph() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMglyph.prototype, "kind", {
	        get: function () {
	            return 'mglyph';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMglyph.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { alt: '', src: '', width: 'auto', height: 'auto', valign: '0em' });
	    return MmlMglyph;
	}(MmlNode_js_1.AbstractMmlTokenNode));
	exports.MmlMglyph = MmlMglyph;
	//# sourceMappingURL=mglyph.js.map

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var semantics_js_1 = __webpack_require__(285);
	var semantics_js_2 = __webpack_require__(286);
	var MmlNode_js_1 = __webpack_require__(167);
	var CHTMLsemantics = (function (_super) {
	    __extends(CHTMLsemantics, _super);
	    function CHTMLsemantics() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLsemantics.prototype.toCHTML = function (parent) {
	        var chtml = this.standardCHTMLnode(parent);
	        if (this.childNodes.length) {
	            this.childNodes[0].toCHTML(chtml);
	        }
	    };
	    CHTMLsemantics.kind = semantics_js_2.MmlSemantics.prototype.kind;
	    return CHTMLsemantics;
	}(semantics_js_1.CommonSemanticsMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLsemantics = CHTMLsemantics;
	var CHTMLannotation = (function (_super) {
	    __extends(CHTMLannotation, _super);
	    function CHTMLannotation() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLannotation.prototype.toCHTML = function (parent) {
	        _super.prototype.toCHTML.call(this, parent);
	    };
	    CHTMLannotation.prototype.computeBBox = function () {
	        return this.bbox;
	    };
	    CHTMLannotation.kind = semantics_js_2.MmlAnnotation.prototype.kind;
	    return CHTMLannotation;
	}(Wrapper_js_1.CHTMLWrapper));
	exports.CHTMLannotation = CHTMLannotation;
	var CHTMLannotationXML = (function (_super) {
	    __extends(CHTMLannotationXML, _super);
	    function CHTMLannotationXML() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLannotationXML.kind = semantics_js_2.MmlAnnotationXML.prototype.kind;
	    CHTMLannotationXML.styles = {
	        'mjx-annotation-xml': {
	            'font-family': 'initial',
	            'line-height': 'normal'
	        }
	    };
	    return CHTMLannotationXML;
	}(Wrapper_js_1.CHTMLWrapper));
	exports.CHTMLannotationXML = CHTMLannotationXML;
	var CHTMLxml = (function (_super) {
	    __extends(CHTMLxml, _super);
	    function CHTMLxml() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLxml.prototype.toCHTML = function (parent) {
	        this.chtml = this.adaptor.append(parent, this.adaptor.clone(this.node.getXML()));
	    };
	    CHTMLxml.prototype.computeBBox = function (bbox, recompute) {
	        if (recompute === void 0) { recompute = false; }
	        var _a = this.jax.measureXMLnode(this.node.getXML()), w = _a.w, h = _a.h, d = _a.d;
	        bbox.w = w;
	        bbox.h = h;
	        bbox.d = d;
	    };
	    CHTMLxml.prototype.getStyles = function () { };
	    CHTMLxml.prototype.getScale = function () { };
	    CHTMLxml.prototype.getVariant = function () { };
	    CHTMLxml.kind = MmlNode_js_1.XMLNode.prototype.kind;
	    CHTMLxml.autoStyle = false;
	    return CHTMLxml;
	}(Wrapper_js_1.CHTMLWrapper));
	exports.CHTMLxml = CHTMLxml;
	//# sourceMappingURL=semantics.js.map

/***/ }),
/* 285 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonSemanticsMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            if (this.childNodes.length) {
	                var _a = this.childNodes[0].getBBox(), w = _a.w, h = _a.h, d = _a.d;
	                bbox.w = w;
	                bbox.h = h;
	                bbox.d = d;
	            }
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonSemanticsMixin = CommonSemanticsMixin;
	//# sourceMappingURL=semantics.js.map

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlSemantics = (function (_super) {
	    __extends(MmlSemantics, _super);
	    function MmlSemantics() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlSemantics.prototype, "kind", {
	        get: function () {
	            return 'semantics';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlSemantics.prototype, "arity", {
	        get: function () {
	            return 1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlSemantics.prototype, "notParent", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlSemantics.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults), { definitionUrl: null, encoding: null });
	    return MmlSemantics;
	}(MmlNode_js_1.AbstractMmlBaseNode));
	exports.MmlSemantics = MmlSemantics;
	var MmlAnnotationXML = (function (_super) {
	    __extends(MmlAnnotationXML, _super);
	    function MmlAnnotationXML() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlAnnotationXML.prototype, "kind", {
	        get: function () {
	            return 'annotation-xml';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlAnnotationXML.prototype.setChildInheritedAttributes = function () { };
	    MmlAnnotationXML.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { definitionUrl: null, encoding: null, cd: 'mathmlkeys', name: '', src: null });
	    return MmlAnnotationXML;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlAnnotationXML = MmlAnnotationXML;
	var MmlAnnotation = (function (_super) {
	    __extends(MmlAnnotation, _super);
	    function MmlAnnotation() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.properties = {
	            isChars: true
	        };
	        return _this;
	    }
	    Object.defineProperty(MmlAnnotation.prototype, "kind", {
	        get: function () {
	            return 'annotation';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlAnnotation.defaults = __assign({}, MmlAnnotationXML.defaults);
	    return MmlAnnotation;
	}(MmlAnnotationXML));
	exports.MmlAnnotation = MmlAnnotation;
	//# sourceMappingURL=semantics.js.map

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Wrapper_js_1 = __webpack_require__(208);
	var TeXAtom_js_1 = __webpack_require__(288);
	var TeXAtom_js_2 = __webpack_require__(289);
	var MmlNode_js_1 = __webpack_require__(167);
	var CHTMLTeXAtom = (function (_super) {
	    __extends(CHTMLTeXAtom, _super);
	    function CHTMLTeXAtom() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLTeXAtom.prototype.toCHTML = function (parent) {
	        _super.prototype.toCHTML.call(this, parent);
	        this.adaptor.setAttribute(this.chtml, 'texclass', MmlNode_js_1.TEXCLASSNAMES[this.node.texClass]);
	        if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {
	            var bbox = this.childNodes[0].getBBox();
	            var h = bbox.h, d = bbox.d;
	            var a = this.font.params.axis_height;
	            var dh = ((h + d) / 2 + a) - h;
	            this.adaptor.setStyle(this.chtml, 'verticalAlign', this.em(dh));
	        }
	    };
	    CHTMLTeXAtom.kind = TeXAtom_js_2.TeXAtom.prototype.kind;
	    return CHTMLTeXAtom;
	}(TeXAtom_js_1.CommonTeXAtomMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLTeXAtom = CHTMLTeXAtom;
	//# sourceMappingURL=TeXAtom.js.map

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	function CommonTeXAtomMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            if (recompute === void 0) { recompute = false; }
	            _super.prototype.computeBBox.call(this, bbox, recompute);
	            if (this.childNodes[0] && this.childNodes[0].bbox.ic) {
	                bbox.ic = this.childNodes[0].bbox.ic;
	            }
	            if (this.node.texClass === MmlNode_js_1.TEXCLASS.VCENTER) {
	                var h = bbox.h, d = bbox.d;
	                var a = this.font.params.axis_height;
	                var dh = ((h + d) / 2 + a) - h;
	                bbox.h += dh;
	                bbox.d -= dh;
	            }
	        };
	        return class_1;
	    }(Base));
	}
	exports.CommonTeXAtomMixin = CommonTeXAtomMixin;
	//# sourceMappingURL=TeXAtom.js.map

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var mo_js_1 = __webpack_require__(171);
	var TeXAtom = (function (_super) {
	    __extends(TeXAtom, _super);
	    function TeXAtom() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(TeXAtom.prototype, "kind", {
	        get: function () {
	            return 'TeXAtom';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TeXAtom.prototype, "arity", {
	        get: function () {
	            return -1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(TeXAtom.prototype, "notParent", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    TeXAtom.prototype.setTeXclass = function (prev) {
	        this.childNodes[0].setTeXclass(null);
	        return this.adjustTeXclass(prev);
	    };
	    TeXAtom.prototype.adjustTeXclass = function (prev) {
	        return prev;
	    };
	    TeXAtom.defaults = __assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults);
	    return TeXAtom;
	}(MmlNode_js_1.AbstractMmlBaseNode));
	exports.TeXAtom = TeXAtom;
	TeXAtom.prototype.adjustTeXclass = mo_js_1.MmlMo.prototype.adjustTeXclass;
	//# sourceMappingURL=TeXAtom.js.map

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var Wrapper_js_1 = __webpack_require__(208);
	var TextNode_js_1 = __webpack_require__(291);
	var CHTMLTextNode = (function (_super) {
	    __extends(CHTMLTextNode, _super);
	    function CHTMLTextNode() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    CHTMLTextNode.prototype.toCHTML = function (parent) {
	        var e_1, _a;
	        this.markUsed();
	        var adaptor = this.adaptor;
	        var variant = this.parent.variant;
	        var text = this.node.getText();
	        if (variant === '-explicitFont') {
	            var font = this.jax.getFontData(this.parent.styles);
	            adaptor.append(parent, this.jax.unknownText(text, variant, font));
	        }
	        else {
	            var c = this.parent.stretch.c;
	            var chars = this.parent.remapChars(c ? [c] : this.unicodeChars(text, variant));
	            try {
	                for (var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()) {
	                    var n = chars_1_1.value;
	                    var data = this.getVariantChar(variant, n)[3];
	                    var font = (data.f ? ' TEX-' + data.f : '');
	                    var node = (data.unknown ?
	                        this.jax.unknownText(String.fromCodePoint(n), variant) :
	                        this.html('mjx-c', { class: this.char(n) + font }));
	                    adaptor.append(parent, node);
	                    data.used = true;
	                }
	            }
	            catch (e_1_1) { e_1 = { error: e_1_1 }; }
	            finally {
	                try {
	                    if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);
	                }
	                finally { if (e_1) throw e_1.error; }
	            }
	        }
	    };
	    CHTMLTextNode.kind = MmlNode_js_1.TextNode.prototype.kind;
	    CHTMLTextNode.autoStyle = false;
	    CHTMLTextNode.styles = {
	        'mjx-c': {
	            display: 'inline-block'
	        },
	        'mjx-utext': {
	            display: 'inline-block',
	            padding: '.75em 0 .2em 0'
	        }
	    };
	    return CHTMLTextNode;
	}(TextNode_js_1.CommonTextNodeMixin(Wrapper_js_1.CHTMLWrapper)));
	exports.CHTMLTextNode = CHTMLTextNode;
	//# sourceMappingURL=TextNode.js.map

/***/ }),
/* 291 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonTextNodeMixin(Base) {
	    return (function (_super) {
	        __extends(class_1, _super);
	        function class_1() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        class_1.prototype.computeBBox = function (bbox, recompute) {
	            var e_1, _a;
	            if (recompute === void 0) { recompute = false; }
	            var variant = this.parent.variant;
	            var text = this.node.getText();
	            if (variant === '-explicitFont') {
	                var font = this.jax.getFontData(this.parent.styles);
	                var _b = this.jax.measureText(text, variant, font), w = _b.w, h = _b.h, d = _b.d;
	                bbox.h = h;
	                bbox.d = d;
	                bbox.w = w;
	            }
	            else {
	                var c = this.parent.stretch.c;
	                var chars = this.parent.remapChars(c ? [c] : this.unicodeChars(text, variant));
	                bbox.empty();
	                try {
	                    for (var chars_1 = __values(chars), chars_1_1 = chars_1.next(); !chars_1_1.done; chars_1_1 = chars_1.next()) {
	                        var char = chars_1_1.value;
	                        var _c = __read(this.getVariantChar(variant, char), 4), h = _c[0], d = _c[1], w = _c[2], data = _c[3];
	                        if (data.unknown) {
	                            var cbox = this.jax.measureText(String.fromCodePoint(char), variant);
	                            w = cbox.w;
	                            h = cbox.h;
	                            d = cbox.d;
	                        }
	                        bbox.w += w;
	                        if (h > bbox.h)
	                            bbox.h = h;
	                        if (d > bbox.d)
	                            bbox.d = d;
	                        bbox.ic = data.ic || 0;
	                        bbox.sk = data.sk || 0;
	                    }
	                }
	                catch (e_1_1) { e_1 = { error: e_1_1 }; }
	                finally {
	                    try {
	                        if (chars_1_1 && !chars_1_1.done && (_a = chars_1.return)) _a.call(chars_1);
	                    }
	                    finally { if (e_1) throw e_1.error; }
	                }
	                if (chars.length > 1) {
	                    bbox.sk = 0;
	                }
	                bbox.clean();
	            }
	        };
	        class_1.prototype.getStyles = function () { };
	        class_1.prototype.getVariant = function () { };
	        class_1.prototype.getScale = function () { };
	        class_1.prototype.getSpace = function () { };
	        return class_1;
	    }(Base));
	}
	exports.CommonTextNodeMixin = CommonTextNodeMixin;
	//# sourceMappingURL=TextNode.js.map

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var tex_js_1 = __webpack_require__(294);
	var bold_italic_js_1 = __webpack_require__(295);
	var bold_js_1 = __webpack_require__(297);
	var double_struck_js_1 = __webpack_require__(299);
	var fraktur_bold_js_1 = __webpack_require__(301);
	var fraktur_js_1 = __webpack_require__(303);
	var italic_js_1 = __webpack_require__(305);
	var largeop_js_1 = __webpack_require__(307);
	var monospace_js_1 = __webpack_require__(309);
	var normal_js_1 = __webpack_require__(311);
	var sans_serif_bold_italic_js_1 = __webpack_require__(313);
	var sans_serif_bold_js_1 = __webpack_require__(315);
	var sans_serif_italic_js_1 = __webpack_require__(317);
	var sans_serif_js_1 = __webpack_require__(319);
	var script_bold_js_1 = __webpack_require__(321);
	var script_js_1 = __webpack_require__(323);
	var smallop_js_1 = __webpack_require__(325);
	var tex_calligraphic_bold_js_1 = __webpack_require__(327);
	var tex_calligraphic_js_1 = __webpack_require__(329);
	var tex_mathit_js_1 = __webpack_require__(331);
	var tex_oldstyle_bold_js_1 = __webpack_require__(333);
	var tex_oldstyle_js_1 = __webpack_require__(335);
	var tex_size3_js_1 = __webpack_require__(337);
	var tex_size4_js_1 = __webpack_require__(339);
	var tex_variant_js_1 = __webpack_require__(341);
	var delimiters_js_1 = __webpack_require__(343);
	var TeXFont = (function (_super) {
	    __extends(TeXFont, _super);
	    function TeXFont() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    TeXFont.defaultVariantClasses = {
	        'normal': 'mjx-n',
	        'bold': 'mjx-b',
	        'italic': 'mjx-i',
	        'bold-italic': 'mjx-b mjx-i',
	        'double-struck': 'mjx-ds mjx-b',
	        'fraktur': 'mjx-fr',
	        'bold-fraktur': 'mjx-fr mjx-b',
	        'script': 'mjx-sc mjx-i',
	        'bold-script': 'mjx-sc mjx-b mjx-i',
	        'sans-serif': 'mjx-ss',
	        'bold-sans-serif': 'mjx-ss mjx-b',
	        'sans-serif-italic': 'mjx-ss mjx-i',
	        'sans-serif-bold-italic': 'mjx-ss mjx-b mjx-i',
	        'monospace': 'mjx-ty',
	        '-smallop': 'mjx-sop',
	        '-largeop': 'mjx-lop',
	        '-size3': 'mjx-s3',
	        '-size4': 'mjx-s4',
	        '-tex-calligraphic': 'mjx-cal mjx-i',
	        '-tex-bold-calligraphic': 'mjx-cal mjx-b',
	        '-tex-mathit': 'mjx-mit mjx-i',
	        '-tex-oldstyle': 'mjx-os',
	        '-tex-bold-oldstyle': 'mjx-os mjx-b',
	        '-tex-variant': 'mjx-var'
	    };
	    TeXFont.defaultVariantLetters = {
	        'normal': '',
	        'bold': 'B',
	        'italic': 'MI',
	        'bold-italic': 'BI',
	        'double-struck': 'A',
	        'fraktur': 'FR',
	        'bold-fraktur': 'FRB',
	        'script': 'SC',
	        'bold-script': 'SCB',
	        'sans-serif': 'SS',
	        'bold-sans-serif': 'SSB',
	        'sans-serif-italic': 'SSI',
	        'sans-serif-bold-italic': 'SSBI',
	        'monospace': 'T',
	        '-smallop': 'S1',
	        '-largeop': 'S2',
	        '-size3': 'S3',
	        '-size4': 'S4',
	        '-tex-calligraphic': 'C',
	        '-tex-bold-calligraphic': 'CB',
	        '-tex-mathit': 'MI',
	        '-tex-oldstyle': 'C',
	        '-tex-bold-oldstyle': 'CB',
	        '-tex-variant': 'A'
	    };
	    TeXFont.defaultDelimiters = delimiters_js_1.delimiters;
	    TeXFont.defaultChars = {
	        'normal': normal_js_1.normal,
	        'bold': bold_js_1.bold,
	        'italic': italic_js_1.italic,
	        'bold-italic': bold_italic_js_1.boldItalic,
	        'double-struck': double_struck_js_1.doubleStruck,
	        'fraktur': fraktur_js_1.fraktur,
	        'bold-fraktur': fraktur_bold_js_1.frakturBold,
	        'script': script_js_1.script,
	        'bold-script': script_bold_js_1.scriptBold,
	        'sans-serif': sans_serif_js_1.sansSerif,
	        'bold-sans-serif': sans_serif_bold_js_1.sansSerifBold,
	        'sans-serif-italic': sans_serif_italic_js_1.sansSerifItalic,
	        'sans-serif-bold-italic': sans_serif_bold_italic_js_1.sansSerifBoldItalic,
	        'monospace': monospace_js_1.monospace,
	        '-smallop': smallop_js_1.smallop,
	        '-largeop': largeop_js_1.largeop,
	        '-size3': tex_size3_js_1.texSize3,
	        '-size4': tex_size4_js_1.texSize4,
	        '-tex-calligraphic': tex_calligraphic_js_1.texCalligraphic,
	        '-tex-bold-calligraphic': tex_calligraphic_bold_js_1.texCalligraphicBold,
	        '-tex-mathit': tex_mathit_js_1.texMathit,
	        '-tex-oldstyle': tex_oldstyle_js_1.texOldstyle,
	        '-tex-bold-oldstyle': tex_oldstyle_bold_js_1.texOldstyleBold,
	        '-tex-variant': tex_variant_js_1.texVariant
	    };
	    TeXFont.defaultStyles = __assign(__assign({}, FontData_js_1.CHTMLFontData.defaultStyles), { '.MJX-TEX': {
	            'font-family': 'MJXZERO, MJXTEX'
	        }, '.TEX-B': {
	            'font-family': 'MJXZERO, MJXTEX-B'
	        }, '.TEX-I': {
	            'font-family': 'MJXZERO, MJXTEX-I'
	        }, '.TEX-MI': {
	            'font-family': 'MJXZERO, MJXTEX-MI'
	        }, '.TEX-BI': {
	            'font-family': 'MJXZERO, MJXTEX-BI'
	        }, '.TEX-S1': {
	            'font-family': 'MJXZERO, MJXTEX-S1'
	        }, '.TEX-S2': {
	            'font-family': 'MJXZERO, MJXTEX-S2'
	        }, '.TEX-S3': {
	            'font-family': 'MJXZERO, MJXTEX-S3'
	        }, '.TEX-S4': {
	            'font-family': 'MJXZERO, MJXTEX-S4'
	        }, '.TEX-A': {
	            'font-family': 'MJXZERO, MJXTEX-A'
	        }, '.TEX-C': {
	            'font-family': 'MJXZERO, MJXTEX-C'
	        }, '.TEX-CB': {
	            'font-family': 'MJXZERO, MJXTEX-CB'
	        }, '.TEX-FR': {
	            'font-family': 'MJXZERO, MJXTEX-FR'
	        }, '.TEX-FRB': {
	            'font-family': 'MJXZERO, MJXTEX-FRB'
	        }, '.TEX-SS': {
	            'font-family': 'MJXZERO, MJXTEX-SS'
	        }, '.TEX-SSB': {
	            'font-family': 'MJXZERO, MJXTEX-SSB'
	        }, '.TEX-SSI': {
	            'font-family': 'MJXZERO, MJXTEX-SSI'
	        }, '.TEX-SC': {
	            'font-family': 'MJXZERO, MJXTEX-SC'
	        }, '.TEX-T': {
	            'font-family': 'MJXZERO, MJXTEX-T'
	        }, '.TEX-V': {
	            'font-family': 'MJXZERO, MJXTEX-V'
	        }, '.TEX-VB': {
	            'font-family': 'MJXZERO, MJXTEX-VB'
	        }, 'mjx-stretchy-v mjx-c, mjx-stretchy-h mjx-c': {
	            'font-family': 'MJXZERO, MJXTEX-S1, MJXTEX-S4, MJXTEX, MJXTEX-A ! important'
	        } });
	    TeXFont.defaultFonts = __assign(__assign({}, FontData_js_1.CHTMLFontData.defaultFonts), { '@font-face /* 1 */': {
	            'font-family': 'MJXTEX',
	            src: 'url("%%URL%%/MathJax_Main-Regular.woff") format("woff")'
	        }, '@font-face /* 2 */': {
	            'font-family': 'MJXTEX-B',
	            src: 'url("%%URL%%/MathJax_Main-Bold.woff") format("woff")'
	        }, '@font-face /* 3 */': {
	            'font-family': 'MJXTEX-I',
	            src: 'url("%%URL%%/MathJax_Math-Italic.woff") format("woff")'
	        }, '@font-face /* 4 */': {
	            'font-family': 'MJXTEX-MI',
	            src: 'url("%%URL%%/MathJax_Main-Italic.woff") format("woff")'
	        }, '@font-face /* 5 */': {
	            'font-family': 'MJXTEX-BI',
	            src: 'url("%%URL%%/MathJax_Math-BoldItalic.woff") format("woff")'
	        }, '@font-face /* 6 */': {
	            'font-family': 'MJXTEX-S1',
	            src: 'url("%%URL%%/MathJax_Size1-Regular.woff") format("woff")'
	        }, '@font-face /* 7 */': {
	            'font-family': 'MJXTEX-S2',
	            src: 'url("%%URL%%/MathJax_Size2-Regular.woff") format("woff")'
	        }, '@font-face /* 8 */': {
	            'font-family': 'MJXTEX-S3',
	            src: 'url("%%URL%%/MathJax_Size3-Regular.woff") format("woff")'
	        }, '@font-face /* 9 */': {
	            'font-family': 'MJXTEX-S4',
	            src: 'url("%%URL%%/MathJax_Size4-Regular.woff") format("woff")'
	        }, '@font-face /* 10 */': {
	            'font-family': 'MJXTEX-A',
	            src: 'url("%%URL%%/MathJax_AMS-Regular.woff") format("woff")'
	        }, '@font-face /* 11 */': {
	            'font-family': 'MJXTEX-C',
	            src: 'url("%%URL%%/MathJax_Calligraphic-Regular.woff") format("woff")'
	        }, '@font-face /* 12 */': {
	            'font-family': 'MJXTEX-CB',
	            src: 'url("%%URL%%/MathJax_Calligraphic-Bold.woff") format("woff")'
	        }, '@font-face /* 13 */': {
	            'font-family': 'MJXTEX-FR',
	            src: 'url("%%URL%%/MathJax_Fraktur-Regular.woff") format("woff")'
	        }, '@font-face /* 14 */': {
	            'font-family': 'MJXTEX-FRB',
	            src: 'url("%%URL%%/MathJax_Fraktur-Bold.woff") format("woff")'
	        }, '@font-face /* 15 */': {
	            'font-family': 'MJXTEX-SS',
	            src: 'url("%%URL%%/MathJax_SansSerif-Regular.woff") format("woff")'
	        }, '@font-face /* 16 */': {
	            'font-family': 'MJXTEX-SSB',
	            src: 'url("%%URL%%/MathJax_SansSerif-Bold.woff") format("woff")'
	        }, '@font-face /* 17 */': {
	            'font-family': 'MJXTEX-SSI',
	            src: 'url("%%URL%%/MathJax_SansSerif-Italic.woff") format("woff")'
	        }, '@font-face /* 18 */': {
	            'font-family': 'MJXTEX-SC',
	            src: 'url("%%URL%%/MathJax_Script-Regular.woff") format("woff")'
	        }, '@font-face /* 19 */': {
	            'font-family': 'MJXTEX-T',
	            src: 'url("%%URL%%/MathJax_Typewriter-Regular.woff") format("woff")'
	        }, '@font-face /* 20 */': {
	            'font-family': 'MJXTEX-V',
	            src: 'url("%%URL%%/MathJax_Vector-Regular.woff") format("woff")'
	        }, '@font-face /* 21 */': {
	            'font-family': 'MJXTEX-VB',
	            src: 'url("%%URL%%/MathJax_Vector-Bold.woff") format("woff")'
	        } });
	    return TeXFont;
	}(tex_js_1.CommonTeXFontMixin(FontData_js_1.CHTMLFontData)));
	exports.TeXFont = TeXFont;
	//# sourceMappingURL=tex.js.map

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(212);
	var lengths_js_1 = __webpack_require__(202);
	var Options_js_1 = __webpack_require__(160);
	__export(__webpack_require__(212));
	var CHTMLFontData = (function (_super) {
	    __extends(CHTMLFontData, _super);
	    function CHTMLFontData(options) {
	        if (options === void 0) { options = null; }
	        var _this = _super.call(this) || this;
	        var CLASS = _this.constructor;
	        _this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
	        return _this;
	    }
	    CHTMLFontData.charOptions = function (font, n) {
	        return _super.charOptions.call(this, font, n);
	    };
	    CHTMLFontData.prototype.adaptiveCSS = function (adapt) {
	        this.options.adaptiveCSS = adapt;
	    };
	    CHTMLFontData.prototype.clearCache = function () {
	        var e_1, _a, e_2, _b, e_3, _c;
	        if (!this.options.adaptiveCSS)
	            return;
	        try {
	            for (var _d = __values(Object.keys(this.delimiters)), _e = _d.next(); !_e.done; _e = _d.next()) {
	                var n = _e.value;
	                this.delimiters[parseInt(n)].used = false;
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        try {
	            for (var _f = __values(Object.keys(this.variant)), _g = _f.next(); !_g.done; _g = _f.next()) {
	                var name_1 = _g.value;
	                var chars = this.variant[name_1].chars;
	                try {
	                    for (var _h = (e_3 = void 0, __values(Object.keys(chars))), _j = _h.next(); !_j.done; _j = _h.next()) {
	                        var n = _j.value;
	                        var options = chars[parseInt(n)][3];
	                        if (options) {
	                            options.used = false;
	                        }
	                    }
	                }
	                catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                finally {
	                    try {
	                        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
	                    }
	                    finally { if (e_3) throw e_3.error; }
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    CHTMLFontData.prototype.createVariant = function (name, inherit, link) {
	        if (inherit === void 0) { inherit = null; }
	        if (link === void 0) { link = null; }
	        _super.prototype.createVariant.call(this, name, inherit, link);
	        var CLASS = this.constructor;
	        this.variant[name].classes = CLASS.defaultVariantClasses[name];
	        this.variant[name].letter = CLASS.defaultVariantLetters[name];
	    };
	    CHTMLFontData.prototype.defineChars = function (name, chars) {
	        var e_4, _a;
	        _super.prototype.defineChars.call(this, name, chars);
	        var letter = this.variant[name].letter;
	        try {
	            for (var _b = __values(Object.keys(chars)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var n = _c.value;
	                var options = CHTMLFontData.charOptions(chars, parseInt(n));
	                if (options.f === undefined) {
	                    options.f = letter;
	                }
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	    };
	    Object.defineProperty(CHTMLFontData.prototype, "styles", {
	        get: function () {
	            var e_5, _a;
	            var CLASS = this.constructor;
	            var styles = __assign({}, CLASS.defaultStyles);
	            this.addFontURLs(styles, CLASS.defaultFonts, this.options.fontURL);
	            try {
	                for (var _b = __values(Object.keys(this.delimiters)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var n = _c.value;
	                    var N = parseInt(n);
	                    this.addDelimiterStyles(styles, N, this.delimiters[N]);
	                }
	            }
	            catch (e_5_1) { e_5 = { error: e_5_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_5) throw e_5.error; }
	            }
	            this.addVariantChars(styles);
	            return styles;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    CHTMLFontData.prototype.addVariantChars = function (styles) {
	        var e_6, _a, e_7, _b;
	        var allCSS = !this.options.adaptiveCSS;
	        try {
	            for (var _c = __values(Object.keys(this.variant)), _d = _c.next(); !_d.done; _d = _c.next()) {
	                var name_2 = _d.value;
	                var variant = this.variant[name_2];
	                var vclass = (name_2 === 'normal' ? '' : '.' + variant.classes.replace(/ /g, '.'));
	                var vletter = variant.letter;
	                try {
	                    for (var _e = (e_7 = void 0, __values(Object.keys(variant.chars))), _f = _e.next(); !_f.done; _f = _e.next()) {
	                        var n = _f.value;
	                        var N = parseInt(n);
	                        var char = variant.chars[N];
	                        if ((char[3] || {}).smp)
	                            continue;
	                        if (allCSS && char.length < 4) {
	                            char[3] = {};
	                        }
	                        if (char.length === 4 || allCSS) {
	                            this.addCharStyles(styles, vclass, vletter, N, char);
	                        }
	                    }
	                }
	                catch (e_7_1) { e_7 = { error: e_7_1 }; }
	                finally {
	                    try {
	                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
	                    }
	                    finally { if (e_7) throw e_7.error; }
	                }
	            }
	        }
	        catch (e_6_1) { e_6 = { error: e_6_1 }; }
	        finally {
	            try {
	                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	            }
	            finally { if (e_6) throw e_6.error; }
	        }
	    };
	    CHTMLFontData.prototype.addFontURLs = function (styles, fonts, url) {
	        var e_8, _a;
	        try {
	            for (var _b = __values(Object.keys(fonts)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var name_3 = _c.value;
	                var font = __assign({}, fonts[name_3]);
	                font.src = font.src.replace(/%%URL%%/, url);
	                styles[name_3] = font;
	            }
	        }
	        catch (e_8_1) { e_8 = { error: e_8_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_8) throw e_8.error; }
	        }
	    };
	    CHTMLFontData.prototype.addDelimiterStyles = function (styles, n, data) {
	        if (this.options.adaptiveCSS && !data.used)
	            return;
	        var c = this.charSelector(n);
	        if (data.c && data.c !== n) {
	            styles['.mjx-stretched mjx-c' + c + '::before'] = {
	                content: this.charContent(data.c)
	            };
	        }
	        if (!data.stretch)
	            return;
	        if (data.dir === 1) {
	            this.addDelimiterVStyles(styles, c, data);
	        }
	        else {
	            this.addDelimiterHStyles(styles, c, data);
	        }
	    };
	    CHTMLFontData.prototype.addDelimiterVStyles = function (styles, c, data) {
	        var W = data.HDW[2];
	        var _a = __read(data.stretch, 4), beg = _a[0], ext = _a[1], end = _a[2], mid = _a[3];
	        var Hb = this.addDelimiterVPart(styles, c, W, 'beg', beg);
	        this.addDelimiterVPart(styles, c, W, 'ext', ext);
	        var He = this.addDelimiterVPart(styles, c, W, 'end', end);
	        var css = {};
	        if (mid) {
	            var Hm = this.addDelimiterVPart(styles, c, W, 'mid', mid);
	            css.height = '50%';
	            styles['mjx-stretchy-v' + c + ' > mjx-mid'] = {
	                'margin-top': this.em(-Hm / 2),
	                'margin-bottom': this.em(-Hm / 2)
	            };
	        }
	        if (Hb) {
	            css['border-top-width'] = this.em0(Hb - .03);
	        }
	        if (He) {
	            css['border-bottom-width'] = this.em0(He - .03);
	            styles['mjx-stretchy-v' + c + ' > mjx-end'] = { 'margin-top': this.em(-He) };
	        }
	        if (Object.keys(css).length) {
	            styles['mjx-stretchy-v' + c + ' > mjx-ext'] = css;
	        }
	    };
	    CHTMLFontData.prototype.addDelimiterVPart = function (styles, c, W, part, n) {
	        if (!n)
	            return 0;
	        var data = this.getDelimiterData(n);
	        var dw = (W - data[2]) / 2;
	        var css = { content: this.charContent(n) };
	        if (part !== 'ext') {
	            css.padding = this.padding(data, dw);
	        }
	        else if (dw) {
	            css['padding-left'] = this.em0(dw);
	        }
	        styles['mjx-stretchy-v' + c + ' mjx-' + part + ' mjx-c::before'] = css;
	        return data[0] + data[1];
	    };
	    CHTMLFontData.prototype.addDelimiterHStyles = function (styles, c, data) {
	        var _a = __read(data.stretch, 4), beg = _a[0], ext = _a[1], end = _a[2], mid = _a[3];
	        this.addDelimiterHPart(styles, c, 'beg', beg);
	        this.addDelimiterHPart(styles, c, 'ext', ext, !(beg || end));
	        this.addDelimiterHPart(styles, c, 'end', end);
	        if (mid) {
	            this.addDelimiterHPart(styles, c, 'mid', mid);
	            styles['mjx-stretchy-h' + c + ' > mjx-ext'] = { width: '50%' };
	        }
	    };
	    CHTMLFontData.prototype.addDelimiterHPart = function (styles, c, part, n, force) {
	        if (force === void 0) { force = false; }
	        if (!n) {
	            return 0;
	        }
	        var data = this.getDelimiterData(n);
	        var options = data[3];
	        var css = { content: (options && options.c ? '"' + options.c + '"' : this.charContent(n)) };
	        if (part !== 'ext' || force) {
	            css.padding = this.padding(data, 0, -data[2]);
	        }
	        styles['mjx-stretchy-h' + c + ' mjx-' + part + ' mjx-c::before'] = css;
	    };
	    CHTMLFontData.prototype.addCharStyles = function (styles, vclass, vletter, n, data) {
	        var _a = __read(data, 4), h = _a[0], d = _a[1], w = _a[2], options = _a[3];
	        if (this.options.adaptiveCSS && !options.used)
	            return;
	        var letter = (options.f !== undefined ? options.f : vletter);
	        var selector = 'mjx-c' + this.charSelector(n) + (letter ? '.TEX-' + letter : '');
	        styles[selector + '::before'] = {
	            padding: this.padding(data, 0, options.ic || 0),
	            content: (options.c != null ? '"' + options.c + '"' : this.charContent(n))
	        };
	        if (options.ic) {
	            styles['[noIC] ' + selector + ':last-child::before'] = {
	                'padding-right': this.em(w)
	            };
	        }
	    };
	    CHTMLFontData.prototype.getDelimiterData = function (n) {
	        return this.getChar('-smallop', n);
	    };
	    CHTMLFontData.prototype.em = function (n) {
	        return lengths_js_1.em(n);
	    };
	    CHTMLFontData.prototype.em0 = function (n) {
	        return lengths_js_1.em(Math.max(0, n));
	    };
	    CHTMLFontData.prototype.padding = function (_a, dw, ic) {
	        var _b = __read(_a, 3), h = _b[0], d = _b[1], w = _b[2];
	        if (dw === void 0) { dw = 0; }
	        if (ic === void 0) { ic = 0; }
	        return [h, w + ic, d, dw].map(this.em0).join(' ');
	    };
	    CHTMLFontData.prototype.charContent = function (n) {
	        return '"' + (n >= 0x20 && n <= 0x7E && n !== 0x22 && n !== 0x27 && n !== 0x5C ?
	            String.fromCharCode(n) : '\\' + n.toString(16).toUpperCase()) + '"';
	    };
	    CHTMLFontData.prototype.charSelector = function (n) {
	        return '.mjx-c' + n.toString(16).toUpperCase();
	    };
	    CHTMLFontData.OPTIONS = {
	        fontURL: 'js/output/chtml/fonts/tex-woff-v2'
	    };
	    CHTMLFontData.defaultVariantClasses = {};
	    CHTMLFontData.defaultVariantLetters = {};
	    CHTMLFontData.defaultStyles = {
	        'mjx-c::before': {
	            display: 'block',
	            width: 0
	        }
	    };
	    CHTMLFontData.defaultFonts = {
	        '@font-face /* 0 */': {
	            'font-family': 'MJXZERO',
	            src: 'url("%%URL%%/MathJax_Zero.woff") format("woff")'
	        }
	    };
	    return CHTMLFontData;
	}(FontData_js_1.FontData));
	exports.CHTMLFontData = CHTMLFontData;
	function AddCSS(font, options) {
	    var e_9, _a;
	    try {
	        for (var _b = __values(Object.keys(options)), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var c = _c.value;
	            var n = parseInt(c);
	            Object.assign(FontData_js_1.FontData.charOptions(font, n), options[n]);
	        }
	    }
	    catch (e_9_1) { e_9 = { error: e_9_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_9) throw e_9.error; }
	    }
	    return font;
	}
	exports.AddCSS = AddCSS;
	//# sourceMappingURL=FontData.js.map

/***/ }),
/* 294 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	function CommonTeXFontMixin(Base) {
	    var _a;
	    return _a = (function (_super) {
	            __extends(class_1, _super);
	            function class_1() {
	                return _super !== null && _super.apply(this, arguments) || this;
	            }
	            class_1.prototype.getDelimiterData = function (n) {
	                return this.getChar('-smallop', n) || this.getChar('-size4', n);
	            };
	            return class_1;
	        }(Base)),
	        _a.defaultVariants = __spread(Base.defaultVariants, [
	            ['-smallop', 'normal'],
	            ['-largeop', 'normal'],
	            ['-size3', 'normal'],
	            ['-size4', 'normal'],
	            ['-tex-calligraphic', 'italic'],
	            ['-tex-bold-calligraphic', 'bold-italic'],
	            ['-tex-oldstyle', 'normal'],
	            ['-tex-bold-oldstyle', 'bold'],
	            ['-tex-mathit', 'italic'],
	            ['-tex-variant', 'normal']
	        ]),
	        _a.defaultCssFonts = __assign(__assign({}, Base.defaultCssFonts), { '-smallop': ['serif', false, false], '-largeop': ['serif', false, false], '-size3': ['serif', false, false], '-size4': ['serif', false, false], '-tex-calligraphic': ['cursive', true, false], '-tex-bold-calligraphic': ['cursive', true, true], '-tex-oldstyle': ['serif', false, false], '-tex-bold-oldstyle': ['serif', false, true], '-tex-mathit': ['serif', true, false] }),
	        _a.defaultSizeVariants = ['normal', '-smallop', '-largeop', '-size3', '-size4'],
	        _a;
	}
	exports.CommonTeXFontMixin = CommonTeXFontMixin;
	//# sourceMappingURL=tex.js.map

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var bold_italic_js_1 = __webpack_require__(296);
	exports.boldItalic = FontData_js_1.AddCSS(bold_italic_js_1.boldItalic, {
	    0x131: { f: 'B' },
	    0x237: { f: 'B' },
	    0x2044: { c: '/' },
	    0x2206: { c: '\\394' },
	    0x29F8: { c: '/' },
	});
	//# sourceMappingURL=bold-italic.js.map

/***/ }),
/* 296 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.boldItalic = {
	    0x2F: [.711, .21, .894],
	    0x131: [.452, .008, .394, { sk: .0319 }],
	    0x237: [.451, .201, .439, { sk: .0958 }],
	    0x2044: [.711, .21, .894],
	    0x2206: [.711, 0, .958, { sk: .192 }],
	    0x29F8: [.711, .21, .894],
	};
	//# sourceMappingURL=bold-italic.js.map

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var bold_js_1 = __webpack_require__(298);
	exports.bold = FontData_js_1.AddCSS(bold_js_1.bold, {
	    0xB7: { c: '\\22C5' },
	    0x131: { f: '' },
	    0x237: { f: '' },
	    0x2B9: { c: '\\2032' },
	    0x2002: { c: '' },
	    0x2003: { c: '' },
	    0x2004: { c: '' },
	    0x2005: { c: '' },
	    0x2006: { c: '' },
	    0x2009: { c: '' },
	    0x200A: { c: '' },
	    0x2015: { c: '\\2014' },
	    0x2016: { c: '\\2225' },
	    0x2017: { c: '_' },
	    0x2022: { c: '\\2219' },
	    0x2033: { c: '\\2032\\2032' },
	    0x2034: { c: '\\2032\\2032\\2032' },
	    0x203E: { c: '\\2C9' },
	    0x2044: { c: '/' },
	    0x2057: { c: '\\2032\\2032\\2032\\2032' },
	    0x20D7: { c: '\\2192', f: 'VB' },
	    0x219A: { c: '\\2190\\338' },
	    0x219B: { c: '\\2192\\338' },
	    0x21AE: { c: '\\2194\\338' },
	    0x21CD: { c: '\\21D0\\338' },
	    0x21CE: { c: '\\21D4\\338' },
	    0x21CF: { c: '\\21D2\\338' },
	    0x2204: { c: '\\2203\\338' },
	    0x2206: { c: '\\394' },
	    0x220C: { c: '\\220B\\338' },
	    0x2224: { c: '\\2223\\338' },
	    0x2226: { c: '\\2225\\338' },
	    0x2241: { c: '\\223C\\338' },
	    0x2244: { c: '\\2243\\338' },
	    0x2247: { c: '\\2245\\338' },
	    0x2249: { c: '\\2248\\338' },
	    0x2262: { c: '\\2261\\338' },
	    0x226D: { c: '\\224D\\338' },
	    0x226E: { c: '<\\338' },
	    0x226F: { c: '>\\338' },
	    0x2270: { c: '\\2264\\338' },
	    0x2271: { c: '\\2265\\338' },
	    0x2280: { c: '\\227A\\338' },
	    0x2281: { c: '\\227B\\338' },
	    0x2284: { c: '\\2282\\338' },
	    0x2285: { c: '\\2283\\338' },
	    0x2288: { c: '\\2286\\338' },
	    0x2289: { c: '\\2287\\338' },
	    0x22AC: { c: '\\22A2\\338' },
	    0x22AD: { c: '\\22A8\\338' },
	    0x22E2: { c: '\\2291\\338' },
	    0x22E3: { c: '\\2292\\338' },
	    0x2329: { c: '\\27E8' },
	    0x232A: { c: '\\27E9' },
	    0x25B5: { c: '\\25B3' },
	    0x25BF: { c: '\\25BD' },
	    0x2758: { c: '\\2223' },
	    0x29F8: { c: '/', f: 'BI' },
	    0x2A2F: { c: '\\D7' },
	    0x3008: { c: '\\27E8' },
	    0x3009: { c: '\\27E9' },
	});
	//# sourceMappingURL=bold.js.map

/***/ }),
/* 298 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.bold = {
	    0x21: [.705, 0, .35],
	    0x22: [.694, -0.329, .603],
	    0x23: [.694, .193, .958],
	    0x24: [.75, .056, .575],
	    0x25: [.75, .056, .958],
	    0x26: [.705, .011, .894],
	    0x27: [.694, -0.329, .319],
	    0x28: [.75, .249, .447],
	    0x29: [.75, .249, .447],
	    0x2A: [.75, -0.306, .575],
	    0x2B: [.633, .131, .894],
	    0x2C: [.171, .194, .319],
	    0x2D: [.278, -0.166, .383],
	    0x2E: [.171, 0, .319],
	    0x2F: [.75, .25, .575],
	    0x3A: [.444, 0, .319],
	    0x3B: [.444, .194, .319],
	    0x3C: [.587, .085, .894],
	    0x3D: [.393, -0.109, .894],
	    0x3E: [.587, .085, .894],
	    0x3F: [.7, 0, .543],
	    0x40: [.699, .006, .894],
	    0x5B: [.75, .25, .319],
	    0x5C: [.75, .25, .575],
	    0x5D: [.75, .25, .319],
	    0x5E: [.694, -0.52, .575],
	    0x5F: [-0.01, .061, .575],
	    0x60: [.706, -0.503, .575],
	    0x7B: [.75, .25, .575],
	    0x7C: [.75, .249, .319],
	    0x7D: [.75, .25, .575],
	    0x7E: [.344, -0.202, .575],
	    0xA8: [.695, -0.535, .575],
	    0xAC: [.371, -0.061, .767],
	    0xAF: [.607, -0.54, .575],
	    0xB0: [.702, -0.536, .575],
	    0xB1: [.728, .035, .894],
	    0xB4: [.706, -0.503, .575],
	    0xB7: [.336, -0.166, .319],
	    0xD7: [.53, .028, .894],
	    0xF7: [.597, .096, .894],
	    0x131: [.442, 0, .278, { sk: .0278 }],
	    0x237: [.442, .205, .306, { sk: .0833 }],
	    0x2B9: [.563, -0.033, .344],
	    0x2C6: [.694, -0.52, .575],
	    0x2C7: [.66, -0.515, .575],
	    0x2C9: [.607, -0.54, .575],
	    0x2CA: [.706, -0.503, .575],
	    0x2CB: [.706, -0.503, .575],
	    0x2D8: [.694, -0.5, .575],
	    0x2D9: [.695, -0.525, .575],
	    0x2DA: [.702, -0.536, .575],
	    0x2DC: [.694, -0.552, .575],
	    0x300: [.706, -0.503, 0],
	    0x301: [.706, -0.503, 0],
	    0x302: [.694, -0.52, 0],
	    0x303: [.694, -0.552, 0],
	    0x304: [.607, -0.54, 0],
	    0x306: [.694, -0.5, 0],
	    0x307: [.695, -0.525, 0],
	    0x308: [.695, -0.535, 0],
	    0x30A: [.702, -0.536, 0],
	    0x30B: [.714, -0.511, 0],
	    0x30C: [.66, -0.515, 0],
	    0x338: [.711, .21, 0],
	    0x2002: [0, 0, .5],
	    0x2003: [0, 0, .999],
	    0x2004: [0, 0, .333],
	    0x2005: [0, 0, .25],
	    0x2006: [0, 0, .167],
	    0x2009: [0, 0, .167],
	    0x200A: [0, 0, .083],
	    0x2013: [.3, -0.249, .575],
	    0x2014: [.3, -0.249, 1.15],
	    0x2015: [.3, -0.249, 1.15],
	    0x2016: [.75, .248, .575],
	    0x2017: [-0.01, .061, .575],
	    0x2018: [.694, -0.329, .319],
	    0x2019: [.694, -0.329, .319],
	    0x201C: [.694, -0.329, .603],
	    0x201D: [.694, -0.329, .603],
	    0x2020: [.702, .211, .511],
	    0x2021: [.702, .202, .511],
	    0x2022: [.474, -0.028, .575],
	    0x2026: [.171, 0, 1.295],
	    0x2032: [.563, -0.033, .344],
	    0x2033: [.563, 0, .688],
	    0x2034: [.563, 0, 1.032],
	    0x203E: [.607, -0.54, .575],
	    0x2044: [.75, .25, .575],
	    0x2057: [.563, 0, 1.376],
	    0x20D7: [.723, -0.513, .575],
	    0x210F: [.694, .008, .668, { sk: -0.0319 }],
	    0x2113: [.702, .019, .474, { sk: .128 }],
	    0x2118: [.461, .21, .74],
	    0x2135: [.694, 0, .703],
	    0x2190: [.518, .017, 1.15],
	    0x2191: [.694, .193, .575],
	    0x2192: [.518, .017, 1.15],
	    0x2193: [.694, .194, .575],
	    0x2194: [.518, .017, 1.15],
	    0x2195: [.767, .267, .575],
	    0x2196: [.724, .194, 1.15],
	    0x2197: [.724, .193, 1.15],
	    0x2198: [.694, .224, 1.15],
	    0x2199: [.694, .224, 1.15],
	    0x219A: [.711, .21, 1.15],
	    0x219B: [.711, .21, 1.15],
	    0x21A6: [.518, .017, 1.15],
	    0x21A9: [.518, .017, 1.282],
	    0x21AA: [.518, .017, 1.282],
	    0x21AE: [.711, .21, 1.15],
	    0x21BC: [.518, -0.22, 1.15],
	    0x21BD: [.281, .017, 1.15],
	    0x21C0: [.518, -0.22, 1.15],
	    0x21C1: [.281, .017, 1.15],
	    0x21CC: [.718, .017, 1.15],
	    0x21CD: [.711, .21, 1.15],
	    0x21CE: [.711, .21, 1.15],
	    0x21CF: [.711, .21, 1.15],
	    0x21D0: [.547, .046, 1.15],
	    0x21D1: [.694, .193, .703],
	    0x21D2: [.547, .046, 1.15],
	    0x21D3: [.694, .194, .703],
	    0x21D4: [.547, .046, 1.15],
	    0x21D5: [.767, .267, .703],
	    0x2200: [.694, .016, .639],
	    0x2203: [.694, 0, .639],
	    0x2204: [.711, .21, .639],
	    0x2205: [.767, .073, .575],
	    0x2206: [.698, 0, .958],
	    0x2208: [.587, .086, .767],
	    0x2209: [.711, .21, .767],
	    0x220B: [.587, .086, .767],
	    0x220C: [.711, .21, .767],
	    0x2212: [.281, -0.221, .894],
	    0x2213: [.537, .227, .894],
	    0x2215: [.75, .25, .575],
	    0x2216: [.75, .25, .575],
	    0x2217: [.472, -0.028, .575],
	    0x2218: [.474, -0.028, .575],
	    0x2219: [.474, -0.028, .575],
	    0x221A: [.82, .18, .958, { ic: .03 }],
	    0x221D: [.451, .008, .894],
	    0x221E: [.452, .008, 1.15],
	    0x2220: [.714, 0, .722],
	    0x2223: [.75, .249, .319],
	    0x2224: [.75, .249, .319],
	    0x2225: [.75, .248, .575],
	    0x2226: [.75, .248, .575],
	    0x2227: [.604, .017, .767],
	    0x2228: [.604, .016, .767],
	    0x2229: [.603, .016, .767],
	    0x222A: [.604, .016, .767],
	    0x222B: [.711, .211, .569, { ic: .063 }],
	    0x223C: [.391, -0.109, .894],
	    0x2240: [.583, .082, .319],
	    0x2241: [.711, .21, .894],
	    0x2243: [.502, 0, .894],
	    0x2244: [.711, .21, .894],
	    0x2245: [.638, .027, .894],
	    0x2247: [.711, .21, .894],
	    0x2248: [.524, -0.032, .894],
	    0x2249: [.711, .21, .894],
	    0x224D: [.533, .032, .894],
	    0x2250: [.721, -0.109, .894],
	    0x2260: [.711, .21, .894],
	    0x2261: [.505, 0, .894],
	    0x2262: [.711, .21, .894],
	    0x2264: [.697, .199, .894],
	    0x2265: [.697, .199, .894],
	    0x226A: [.617, .116, 1.15],
	    0x226B: [.618, .116, 1.15],
	    0x226D: [.711, .21, .894],
	    0x226E: [.711, .21, .894],
	    0x226F: [.711, .21, .894],
	    0x2270: [.711, .21, .894],
	    0x2271: [.711, .21, .894],
	    0x227A: [.585, .086, .894],
	    0x227B: [.586, .086, .894],
	    0x2280: [.711, .21, .894],
	    0x2281: [.711, .21, .894],
	    0x2282: [.587, .085, .894],
	    0x2283: [.587, .086, .894],
	    0x2284: [.711, .21, .894],
	    0x2285: [.711, .21, .894],
	    0x2286: [.697, .199, .894],
	    0x2287: [.697, .199, .894],
	    0x2288: [.711, .21, .894],
	    0x2289: [.711, .21, .894],
	    0x228E: [.604, .016, .767],
	    0x2291: [.697, .199, .894],
	    0x2292: [.697, .199, .894],
	    0x2293: [.604, 0, .767],
	    0x2294: [.604, 0, .767],
	    0x2295: [.632, .132, .894],
	    0x2296: [.632, .132, .894],
	    0x2297: [.632, .132, .894],
	    0x2298: [.632, .132, .894],
	    0x2299: [.632, .132, .894],
	    0x22A2: [.693, 0, .703],
	    0x22A3: [.693, 0, .703],
	    0x22A4: [.694, 0, .894],
	    0x22A5: [.693, 0, .894],
	    0x22A8: [.75, .249, .974],
	    0x22AC: [.711, .21, .703],
	    0x22AD: [.75, .249, .974],
	    0x22C4: [.523, .021, .575],
	    0x22C5: [.336, -0.166, .319],
	    0x22C6: [.502, 0, .575],
	    0x22C8: [.54, .039, 1],
	    0x22E2: [.711, .21, .894],
	    0x22E3: [.711, .21, .894],
	    0x22EE: [.951, .029, .319],
	    0x22EF: [.336, -0.166, 1.295],
	    0x22F1: [.871, -0.101, 1.323],
	    0x2308: [.75, .248, .511],
	    0x2309: [.75, .248, .511],
	    0x230A: [.749, .248, .511],
	    0x230B: [.749, .248, .511],
	    0x2322: [.405, -0.108, 1.15],
	    0x2323: [.392, -0.126, 1.15],
	    0x2329: [.75, .249, .447],
	    0x232A: [.75, .249, .447],
	    0x25B3: [.711, 0, 1.022],
	    0x25B5: [.711, 0, 1.022],
	    0x25B9: [.54, .039, .575],
	    0x25BD: [.5, .21, 1.022],
	    0x25BF: [.5, .21, 1.022],
	    0x25C3: [.539, .038, .575],
	    0x25EF: [.711, .211, 1.15],
	    0x2660: [.719, .129, .894],
	    0x2661: [.711, .024, .894],
	    0x2662: [.719, .154, .894],
	    0x2663: [.719, .129, .894],
	    0x266D: [.75, .017, .447],
	    0x266E: [.741, .223, .447],
	    0x266F: [.724, .224, .447],
	    0x2758: [.75, .249, .319],
	    0x27E8: [.75, .249, .447],
	    0x27E9: [.75, .249, .447],
	    0x27F5: [.518, .017, 1.805],
	    0x27F6: [.518, .017, 1.833],
	    0x27F7: [.518, .017, 2.126],
	    0x27F8: [.547, .046, 1.868],
	    0x27F9: [.547, .046, 1.87],
	    0x27FA: [.547, .046, 2.126],
	    0x27FC: [.518, .017, 1.833],
	    0x29F8: [.711, .21, .894],
	    0x2A2F: [.53, .028, .894],
	    0x2A3F: [.686, 0, .9],
	    0x2AAF: [.696, .199, .894],
	    0x2AB0: [.697, .199, .894],
	    0x3008: [.75, .249, .447],
	    0x3009: [.75, .249, .447],
	};
	//# sourceMappingURL=bold.js.map

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var double_struck_js_1 = __webpack_require__(300);
	exports.doubleStruck = double_struck_js_1.doubleStruck;
	//# sourceMappingURL=double-struck.js.map

/***/ }),
/* 300 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.doubleStruck = {};
	//# sourceMappingURL=double-struck.js.map

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var fraktur_bold_js_1 = __webpack_require__(302);
	exports.frakturBold = FontData_js_1.AddCSS(fraktur_bold_js_1.frakturBold, {
	    0x2044: { c: '/' },
	});
	//# sourceMappingURL=fraktur-bold.js.map

/***/ }),
/* 302 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.frakturBold = {
	    0x21: [.689, .012, .349],
	    0x22: [.695, -0.432, .254],
	    0x26: [.696, .016, .871],
	    0x27: [.695, -0.436, .25],
	    0x28: [.737, .186, .459],
	    0x29: [.735, .187, .459],
	    0x2A: [.692, -0.449, .328],
	    0x2B: [.598, .082, .893],
	    0x2C: [.107, .191, .328],
	    0x2D: [.275, -0.236, .893],
	    0x2E: [.102, .015, .328],
	    0x2F: [.721, .182, .593],
	    0x30: [.501, .012, .593],
	    0x31: [.489, 0, .593],
	    0x32: [.491, 0, .593],
	    0x33: [.487, .193, .593],
	    0x34: [.495, .196, .593],
	    0x35: [.481, .19, .593],
	    0x36: [.704, .012, .593],
	    0x37: [.479, .197, .593],
	    0x38: [.714, .005, .593],
	    0x39: [.487, .195, .593],
	    0x3A: [.457, .012, .255],
	    0x3B: [.458, .19, .255],
	    0x3D: [.343, -0.168, .582],
	    0x3F: [.697, .014, .428],
	    0x5B: [.74, .13, .257],
	    0x5D: [.738, .132, .257],
	    0x5E: [.734, -0.452, .59],
	    0x2018: [.708, -0.411, .254],
	    0x2019: [.692, -0.394, .254],
	    0x2044: [.721, .182, .593],
	    0xE301: [.63, .027, .587],
	    0xE302: [.693, .212, .394, { ic: .014 }],
	    0xE303: [.681, .219, .387],
	    0xE304: [.473, .212, .593],
	    0xE305: [.684, .027, .393],
	    0xE308: [.679, .22, .981],
	    0xE309: [.717, .137, .727],
	};
	//# sourceMappingURL=fraktur-bold.js.map

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var fraktur_js_1 = __webpack_require__(304);
	exports.fraktur = FontData_js_1.AddCSS(fraktur_js_1.fraktur, {
	    0x2044: { c: '/' },
	});
	//# sourceMappingURL=fraktur.js.map

/***/ }),
/* 304 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.fraktur = {
	    0x21: [.689, .012, .296],
	    0x22: [.695, -0.432, .215],
	    0x26: [.698, .011, .738],
	    0x27: [.695, -0.436, .212],
	    0x28: [.737, .186, .389],
	    0x29: [.735, .187, .389],
	    0x2A: [.692, -0.449, .278],
	    0x2B: [.598, .082, .756],
	    0x2C: [.107, .191, .278],
	    0x2D: [.275, -0.236, .756],
	    0x2E: [.102, .015, .278],
	    0x2F: [.721, .182, .502],
	    0x30: [.492, .013, .502],
	    0x31: [.468, 0, .502],
	    0x32: [.474, 0, .502],
	    0x33: [.473, .182, .502],
	    0x34: [.476, .191, .502],
	    0x35: [.458, .184, .502],
	    0x36: [.7, .013, .502],
	    0x37: [.468, .181, .502],
	    0x38: [.705, .01, .502],
	    0x39: [.469, .182, .502],
	    0x3A: [.457, .012, .216],
	    0x3B: [.458, .189, .216],
	    0x3D: [.368, -0.132, .756],
	    0x3F: [.693, .011, .362],
	    0x5B: [.74, .13, .278],
	    0x5D: [.738, .131, .278],
	    0x5E: [.734, -0.452, .5],
	    0x2018: [.708, -0.41, .215],
	    0x2019: [.692, -0.395, .215],
	    0x2044: [.721, .182, .502],
	    0xE300: [.683, .032, .497],
	    0xE301: [.616, .03, .498],
	    0xE302: [.68, .215, .333],
	    0xE303: [.679, .224, .329],
	    0xE304: [.471, .214, .503],
	    0xE305: [.686, .02, .333],
	    0xE306: [.577, .021, .334, { ic: .013 }],
	    0xE307: [.475, .022, .501, { ic: .013 }],
	};
	//# sourceMappingURL=fraktur.js.map

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var italic_js_1 = __webpack_require__(306);
	exports.italic = FontData_js_1.AddCSS(italic_js_1.italic, {
	    0x2F: { f: 'I' },
	    0x3DD: { c: '\\E008', f: 'A' },
	    0x2015: { c: '\\2014' },
	    0x2017: { c: '_' },
	    0x2044: { c: '/', f: 'I' },
	    0x2206: { c: '\\394', f: 'I' },
	    0x29F8: { c: '/', f: 'I' },
	});
	//# sourceMappingURL=italic.js.map

/***/ }),
/* 306 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.italic = {
	    0x21: [.716, 0, .307, { ic: .073 }],
	    0x22: [.694, -0.379, .514, { ic: .024 }],
	    0x23: [.694, .194, .818, { ic: .01 }],
	    0x25: [.75, .056, .818, { ic: .029 }],
	    0x26: [.716, .022, .767, { ic: .035 }],
	    0x27: [.694, -0.379, .307, { ic: .07 }],
	    0x28: [.75, .25, .409, { ic: .108 }],
	    0x29: [.75, .25, .409],
	    0x2A: [.75, -0.32, .511, { ic: .073 }],
	    0x2B: [.557, .057, .767],
	    0x2C: [.121, .194, .307],
	    0x2D: [.251, -0.18, .358],
	    0x2E: [.121, 0, .307],
	    0x2F: [.716, .215, .778],
	    0x30: [.665, .021, .511, { ic: .051 }],
	    0x31: [.666, 0, .511],
	    0x32: [.666, .022, .511, { ic: .04 }],
	    0x33: [.666, .022, .511, { ic: .051 }],
	    0x34: [.666, .194, .511],
	    0x35: [.666, .022, .511, { ic: .056 }],
	    0x36: [.665, .022, .511, { ic: .054 }],
	    0x37: [.666, .022, .511, { ic: .123 }],
	    0x38: [.666, .021, .511, { ic: .042 }],
	    0x39: [.666, .022, .511, { ic: .042 }],
	    0x3A: [.431, 0, .307],
	    0x3B: [.431, .194, .307],
	    0x3D: [.367, -0.133, .767],
	    0x3F: [.716, 0, .511, { ic: .04 }],
	    0x40: [.705, .011, .767, { ic: .022 }],
	    0x5B: [.75, .25, .307, { ic: .139 }],
	    0x5D: [.75, .25, .307, { ic: .052 }],
	    0x5E: [.694, -0.527, .511, { ic: .017 }],
	    0x5F: [-0.025, .062, .511, { ic: .043 }],
	    0x7E: [.318, -0.208, .511, { ic: .06 }],
	    0x131: [.441, .01, .307, { ic: .033 }],
	    0x237: [.442, .204, .332],
	    0x300: [.697, -0.5, 0],
	    0x301: [.697, -0.5, 0, { ic: .039 }],
	    0x302: [.694, -0.527, 0, { ic: .017 }],
	    0x303: [.668, -0.558, 0, { ic: .06 }],
	    0x304: [.589, -0.544, 0, { ic: .054 }],
	    0x306: [.694, -0.515, 0, { ic: .062 }],
	    0x307: [.669, -0.548, 0],
	    0x308: [.669, -0.554, 0, { ic: .045 }],
	    0x30A: [.716, -0.542, 0],
	    0x30B: [.697, -0.503, 0, { ic: .065 }],
	    0x30C: [.638, -0.502, 0, { ic: .029 }],
	    0x3DD: [.605, .085, .778],
	    0x2013: [.285, -0.248, .511, { ic: .043 }],
	    0x2014: [.285, -0.248, 1.022, { ic: .016 }],
	    0x2015: [.285, -0.248, 1.022, { ic: .016 }],
	    0x2017: [-0.025, .062, .511, { ic: .043 }],
	    0x2018: [.694, -0.379, .307, { ic: .055 }],
	    0x2019: [.694, -0.379, .307, { ic: .07 }],
	    0x201C: [.694, -0.379, .514, { ic: .092 }],
	    0x201D: [.694, -0.379, .514, { ic: .024 }],
	    0x2044: [.716, .215, .778],
	    0x210F: [.695, .013, .54, { ic: .022 }],
	    0x2206: [.716, 0, .833, { sk: .167 }],
	    0x29F8: [.716, .215, .778],
	};
	//# sourceMappingURL=italic.js.map

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var largeop_js_1 = __webpack_require__(308);
	exports.largeop = FontData_js_1.AddCSS(largeop_js_1.largeop, {
	    0x2016: { f: 'S1' },
	    0x2044: { c: '/' },
	    0x2191: { f: 'S1' },
	    0x2193: { f: 'S1' },
	    0x21D1: { f: 'S1' },
	    0x21D3: { f: 'S1' },
	    0x2223: { f: 'S1' },
	    0x2225: { f: 'S1' },
	    0x2329: { c: '\\27E8' },
	    0x232A: { c: '\\27E9' },
	    0x23D0: { f: 'S1' },
	    0x2758: { c: '\\2223', f: 'S1' },
	    0x2A0C: { c: '\\222C\\222C' },
	    0x3008: { c: '\\27E8' },
	    0x3009: { c: '\\27E9' },
	});
	//# sourceMappingURL=largeop.js.map

/***/ }),
/* 308 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.largeop = {
	    0x28: [1.15, .649, .597],
	    0x29: [1.15, .649, .597],
	    0x2F: [1.15, .649, .811],
	    0x5B: [1.15, .649, .472],
	    0x5C: [1.15, .649, .811],
	    0x5D: [1.15, .649, .472],
	    0x7B: [1.15, .649, .667],
	    0x7D: [1.15, .649, .667],
	    0x2C6: [.772, -0.565, 1],
	    0x2DC: [.75, -0.611, 1],
	    0x302: [.772, -0.565, 0],
	    0x303: [.75, -0.611, 0],
	    0x2016: [.602, 0, .778],
	    0x2044: [1.15, .649, .811],
	    0x2191: [.6, 0, .667],
	    0x2193: [.6, 0, .667],
	    0x21D1: [.599, 0, .778],
	    0x21D3: [.6, 0, .778],
	    0x220F: [.95, .45, 1.278],
	    0x2210: [.95, .45, 1.278],
	    0x2211: [.95, .45, 1.444],
	    0x221A: [1.15, .65, 1, { ic: .02 }],
	    0x2223: [.627, .015, .333],
	    0x2225: [.627, .015, .556],
	    0x222B: [1.36, .862, .556, { ic: .388 }],
	    0x222C: [1.36, .862, 1.084, { ic: .388 }],
	    0x222D: [1.36, .862, 1.592, { ic: .388 }],
	    0x222E: [1.36, .862, .556, { ic: .388 }],
	    0x22C0: [.95, .45, 1.111],
	    0x22C1: [.95, .45, 1.111],
	    0x22C2: [.949, .45, 1.111],
	    0x22C3: [.95, .449, 1.111],
	    0x2308: [1.15, .649, .528],
	    0x2309: [1.15, .649, .528],
	    0x230A: [1.15, .649, .528],
	    0x230B: [1.15, .649, .528],
	    0x2329: [1.15, .649, .611],
	    0x232A: [1.15, .649, .611],
	    0x23D0: [.602, 0, .667],
	    0x2758: [.627, .015, .333],
	    0x27E8: [1.15, .649, .611],
	    0x27E9: [1.15, .649, .611],
	    0x2A00: [.949, .449, 1.511],
	    0x2A01: [.949, .449, 1.511],
	    0x2A02: [.949, .449, 1.511],
	    0x2A04: [.95, .449, 1.111],
	    0x2A06: [.95, .45, 1.111],
	    0x2A0C: [1.36, .862, 2.168, { ic: .388 }],
	    0x3008: [1.15, .649, .611],
	    0x3009: [1.15, .649, .611],
	};
	//# sourceMappingURL=largeop.js.map

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var monospace_js_1 = __webpack_require__(310);
	exports.monospace = FontData_js_1.AddCSS(monospace_js_1.monospace, {
	    0x2B9: { c: '\\2032' },
	    0x391: { c: 'A' },
	    0x392: { c: 'B' },
	    0x395: { c: 'E' },
	    0x396: { c: 'Z' },
	    0x397: { c: 'H' },
	    0x399: { c: 'I' },
	    0x39A: { c: 'K' },
	    0x39C: { c: 'M' },
	    0x39D: { c: 'N' },
	    0x39F: { c: 'O' },
	    0x3A1: { c: 'P' },
	    0x3A4: { c: 'T' },
	    0x3A7: { c: 'X' },
	    0x2017: { c: '_' },
	    0x2033: { c: '\\2032\\2032' },
	    0x2034: { c: '\\2032\\2032\\2032' },
	    0x2044: { c: '/' },
	    0x2057: { c: '\\2032\\2032\\2032\\2032' },
	    0x2206: { c: '\\394' },
	});
	//# sourceMappingURL=monospace.js.map

/***/ }),
/* 310 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.monospace = {
	    0x20: [0, 0, .525],
	    0x21: [.622, 0, .525],
	    0x22: [.623, -0.333, .525],
	    0x23: [.611, 0, .525],
	    0x24: [.694, .082, .525],
	    0x25: [.694, .083, .525],
	    0x26: [.622, .011, .525],
	    0x27: [.611, -0.287, .525],
	    0x28: [.694, .082, .525],
	    0x29: [.694, .082, .525],
	    0x2A: [.52, -0.09, .525],
	    0x2B: [.531, -0.081, .525],
	    0x2C: [.14, .139, .525],
	    0x2D: [.341, -0.271, .525],
	    0x2E: [.14, 0, .525],
	    0x2F: [.694, .083, .525],
	    0x3A: [.431, 0, .525],
	    0x3B: [.431, .139, .525],
	    0x3C: [.557, -0.055, .525],
	    0x3D: [.417, -0.195, .525],
	    0x3E: [.557, -0.055, .525],
	    0x3F: [.617, 0, .525],
	    0x40: [.617, .006, .525],
	    0x5B: [.694, .082, .525],
	    0x5C: [.694, .083, .525],
	    0x5D: [.694, .082, .525],
	    0x5E: [.611, -0.46, .525],
	    0x5F: [-0.025, .095, .525],
	    0x60: [.681, -0.357, .525],
	    0x7B: [.694, .083, .525],
	    0x7C: [.694, .082, .525],
	    0x7D: [.694, .083, .525],
	    0x7E: [.611, -0.466, .525],
	    0x7F: [.612, -0.519, .525],
	    0xA0: [0, 0, .525],
	    0x131: [.431, 0, .525],
	    0x237: [.431, .228, .525],
	    0x2B9: [.623, -0.334, .525],
	    0x300: [.611, -0.485, 0],
	    0x301: [.611, -0.485, 0],
	    0x302: [.611, -0.46, 0],
	    0x303: [.611, -0.466, 0],
	    0x304: [.577, -0.5, 0],
	    0x306: [.611, -0.504, 0],
	    0x308: [.612, -0.519, 0],
	    0x30A: [.619, -0.499, 0],
	    0x30C: [.577, -0.449, 0],
	    0x391: [.623, 0, .525],
	    0x392: [.611, 0, .525],
	    0x393: [.611, 0, .525],
	    0x394: [.623, 0, .525],
	    0x395: [.611, 0, .525],
	    0x396: [.611, 0, .525],
	    0x397: [.611, 0, .525],
	    0x398: [.621, .01, .525],
	    0x399: [.611, 0, .525],
	    0x39A: [.611, 0, .525],
	    0x39B: [.623, 0, .525],
	    0x39C: [.611, 0, .525],
	    0x39D: [.611, 0, .525],
	    0x39E: [.611, 0, .525],
	    0x39F: [.621, .01, .525],
	    0x3A0: [.611, 0, .525],
	    0x3A1: [.611, 0, .525],
	    0x3A3: [.611, 0, .525],
	    0x3A4: [.611, 0, .525],
	    0x3A5: [.622, 0, .525],
	    0x3A6: [.611, 0, .525],
	    0x3A7: [.611, 0, .525],
	    0x3A8: [.611, 0, .525],
	    0x3A9: [.622, 0, .525],
	    0x2017: [-0.025, .095, .525],
	    0x2032: [.623, -0.334, .525],
	    0x2033: [.623, 0, 1.05],
	    0x2034: [.623, 0, 1.575],
	    0x2044: [.694, .083, .525],
	    0x2057: [.623, 0, 2.1],
	    0x2206: [.623, 0, .525],
	};
	//# sourceMappingURL=monospace.js.map

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var normal_js_1 = __webpack_require__(312);
	exports.normal = FontData_js_1.AddCSS(normal_js_1.normal, {
	    0xA3: { f: 'MI' },
	    0xA5: { f: 'A' },
	    0xAE: { f: 'A' },
	    0xB7: { c: '\\22C5' },
	    0xF0: { f: 'A' },
	    0x2B9: { c: '\\2032' },
	    0x391: { c: 'A' },
	    0x392: { c: 'B' },
	    0x395: { c: 'E' },
	    0x396: { c: 'Z' },
	    0x397: { c: 'H' },
	    0x399: { c: 'I' },
	    0x39A: { c: 'K' },
	    0x39C: { c: 'M' },
	    0x39D: { c: 'N' },
	    0x39F: { c: 'O' },
	    0x3A1: { c: 'P' },
	    0x3A4: { c: 'T' },
	    0x3A7: { c: 'X' },
	    0x2000: { c: '' },
	    0x2001: { c: '' },
	    0x2002: { c: '' },
	    0x2003: { c: '' },
	    0x2004: { c: '' },
	    0x2005: { c: '' },
	    0x2006: { c: '' },
	    0x2009: { c: '' },
	    0x200A: { c: '' },
	    0x200B: { c: '' },
	    0x200C: { c: '' },
	    0x2015: { c: '\\2014' },
	    0x2016: { c: '\\2225' },
	    0x2017: { c: '_' },
	    0x2022: { c: '\\2219' },
	    0x2033: { c: '\\2032\\2032' },
	    0x2034: { c: '\\2032\\2032\\2032' },
	    0x2035: { f: 'A' },
	    0x2036: { c: '\\2035\\2035', f: 'A' },
	    0x2037: { c: '\\2035\\2035\\2035', f: 'A' },
	    0x203E: { c: '\\2C9' },
	    0x2044: { c: '/' },
	    0x2057: { c: '\\2032\\2032\\2032\\2032' },
	    0x2060: { c: '' },
	    0x2061: { c: '' },
	    0x2062: { c: '' },
	    0x2063: { c: '' },
	    0x2064: { c: '' },
	    0x20D7: { c: '\\2192', f: 'V' },
	    0x2102: { c: 'C', f: 'A' },
	    0x210B: { c: 'H', f: 'SC' },
	    0x210C: { c: 'H', f: 'FR' },
	    0x210D: { c: 'H', f: 'A' },
	    0x210E: { c: 'h', f: 'I' },
	    0x210F: { f: 'A' },
	    0x2110: { c: 'J', f: 'SC' },
	    0x2111: { c: 'I', f: 'FR' },
	    0x2112: { c: 'L', f: 'SC' },
	    0x2115: { c: 'N', f: 'A' },
	    0x2119: { c: 'P', f: 'A' },
	    0x211A: { c: 'Q', f: 'A' },
	    0x211B: { c: 'R', f: 'SC' },
	    0x211C: { c: 'R', f: 'FR' },
	    0x211D: { c: 'R', f: 'A' },
	    0x2124: { c: 'Z', f: 'A' },
	    0x2126: { c: '\\3A9' },
	    0x2127: { f: 'A' },
	    0x2128: { c: 'Z', f: 'FR' },
	    0x212C: { c: 'B', f: 'SC' },
	    0x212D: { c: 'C', f: 'FR' },
	    0x2130: { c: 'E', f: 'SC' },
	    0x2131: { c: 'F', f: 'SC' },
	    0x2132: { f: 'A' },
	    0x2133: { c: 'M', f: 'SC' },
	    0x2136: { f: 'A' },
	    0x2137: { f: 'A' },
	    0x2138: { f: 'A' },
	    0x2141: { f: 'A' },
	    0x219A: { f: 'A' },
	    0x219B: { f: 'A' },
	    0x219E: { f: 'A' },
	    0x21A0: { f: 'A' },
	    0x21A2: { f: 'A' },
	    0x21A3: { f: 'A' },
	    0x21AB: { f: 'A' },
	    0x21AC: { f: 'A' },
	    0x21AD: { f: 'A' },
	    0x21AE: { f: 'A' },
	    0x21B0: { f: 'A' },
	    0x21B1: { f: 'A' },
	    0x21B6: { f: 'A' },
	    0x21B7: { f: 'A' },
	    0x21BA: { f: 'A' },
	    0x21BB: { f: 'A' },
	    0x21BE: { f: 'A' },
	    0x21BF: { f: 'A' },
	    0x21C2: { f: 'A' },
	    0x21C3: { f: 'A' },
	    0x21C4: { f: 'A' },
	    0x21C6: { f: 'A' },
	    0x21C7: { f: 'A' },
	    0x21C8: { f: 'A' },
	    0x21C9: { f: 'A' },
	    0x21CA: { f: 'A' },
	    0x21CB: { f: 'A' },
	    0x21CD: { f: 'A' },
	    0x21CE: { f: 'A' },
	    0x21CF: { f: 'A' },
	    0x21DA: { f: 'A' },
	    0x21DB: { f: 'A' },
	    0x21DD: { f: 'A' },
	    0x21E0: { f: 'A' },
	    0x21E2: { f: 'A' },
	    0x2201: { f: 'A' },
	    0x2204: { c: '\\2203\\338' },
	    0x2206: { c: '\\394' },
	    0x220C: { c: '\\220B\\338' },
	    0x220D: { f: 'A' },
	    0x220F: { f: 'S1' },
	    0x2210: { f: 'S1' },
	    0x2211: { f: 'S1' },
	    0x2214: { f: 'A' },
	    0x2221: { f: 'A' },
	    0x2222: { f: 'A' },
	    0x2224: { f: 'A' },
	    0x2226: { f: 'A' },
	    0x222C: { f: 'S1' },
	    0x222D: { f: 'S1' },
	    0x222E: { f: 'S1' },
	    0x2234: { f: 'A' },
	    0x2235: { f: 'A' },
	    0x223D: { f: 'A' },
	    0x2241: { f: 'A' },
	    0x2242: { f: 'A' },
	    0x2244: { c: '\\2243\\338' },
	    0x2247: { c: '\\2246', f: 'A' },
	    0x2249: { c: '\\2248\\338' },
	    0x224A: { f: 'A' },
	    0x224E: { f: 'A' },
	    0x224F: { f: 'A' },
	    0x2251: { f: 'A' },
	    0x2252: { f: 'A' },
	    0x2253: { f: 'A' },
	    0x2256: { f: 'A' },
	    0x2257: { f: 'A' },
	    0x225C: { f: 'A' },
	    0x2262: { c: '\\2261\\338' },
	    0x2266: { f: 'A' },
	    0x2267: { f: 'A' },
	    0x2268: { f: 'A' },
	    0x2269: { f: 'A' },
	    0x226C: { f: 'A' },
	    0x226D: { c: '\\224D\\338' },
	    0x226E: { f: 'A' },
	    0x226F: { f: 'A' },
	    0x2270: { f: 'A' },
	    0x2271: { f: 'A' },
	    0x2272: { f: 'A' },
	    0x2273: { f: 'A' },
	    0x2274: { c: '\\2272\\338' },
	    0x2275: { c: '\\2273\\338' },
	    0x2276: { f: 'A' },
	    0x2277: { f: 'A' },
	    0x2278: { c: '\\2276\\338' },
	    0x2279: { c: '\\2277\\338' },
	    0x227C: { f: 'A' },
	    0x227D: { f: 'A' },
	    0x227E: { f: 'A' },
	    0x227F: { f: 'A' },
	    0x2280: { f: 'A' },
	    0x2281: { f: 'A' },
	    0x2284: { c: '\\2282\\338' },
	    0x2285: { c: '\\2283\\338' },
	    0x2288: { f: 'A' },
	    0x2289: { f: 'A' },
	    0x228A: { f: 'A' },
	    0x228B: { f: 'A' },
	    0x228F: { f: 'A' },
	    0x2290: { f: 'A' },
	    0x229A: { f: 'A' },
	    0x229B: { f: 'A' },
	    0x229D: { f: 'A' },
	    0x229E: { f: 'A' },
	    0x229F: { f: 'A' },
	    0x22A0: { f: 'A' },
	    0x22A1: { f: 'A' },
	    0x22A9: { f: 'A' },
	    0x22AA: { f: 'A' },
	    0x22AC: { f: 'A' },
	    0x22AD: { f: 'A' },
	    0x22AE: { f: 'A' },
	    0x22AF: { f: 'A' },
	    0x22B2: { f: 'A' },
	    0x22B3: { f: 'A' },
	    0x22B4: { f: 'A' },
	    0x22B5: { f: 'A' },
	    0x22B8: { f: 'A' },
	    0x22BA: { f: 'A' },
	    0x22BB: { f: 'A' },
	    0x22BC: { f: 'A' },
	    0x22C0: { f: 'S1' },
	    0x22C1: { f: 'S1' },
	    0x22C2: { f: 'S1' },
	    0x22C3: { f: 'S1' },
	    0x22C7: { f: 'A' },
	    0x22C9: { f: 'A' },
	    0x22CA: { f: 'A' },
	    0x22CB: { f: 'A' },
	    0x22CC: { f: 'A' },
	    0x22CD: { f: 'A' },
	    0x22CE: { f: 'A' },
	    0x22CF: { f: 'A' },
	    0x22D0: { f: 'A' },
	    0x22D1: { f: 'A' },
	    0x22D2: { f: 'A' },
	    0x22D3: { f: 'A' },
	    0x22D4: { f: 'A' },
	    0x22D6: { f: 'A' },
	    0x22D7: { f: 'A' },
	    0x22D8: { f: 'A' },
	    0x22D9: { f: 'A' },
	    0x22DA: { f: 'A' },
	    0x22DB: { f: 'A' },
	    0x22DE: { f: 'A' },
	    0x22DF: { f: 'A' },
	    0x22E0: { f: 'A' },
	    0x22E1: { f: 'A' },
	    0x22E2: { c: '\\2291\\338' },
	    0x22E3: { c: '\\2292\\338' },
	    0x22E6: { f: 'A' },
	    0x22E7: { f: 'A' },
	    0x22E8: { f: 'A' },
	    0x22E9: { f: 'A' },
	    0x22EA: { f: 'A' },
	    0x22EB: { f: 'A' },
	    0x22EC: { f: 'A' },
	    0x22ED: { f: 'A' },
	    0x2305: { c: '\\22BC', f: 'A' },
	    0x2306: { c: '\\2A5E', f: 'A' },
	    0x231C: { c: '\\250C', f: 'A' },
	    0x231D: { c: '\\2510', f: 'A' },
	    0x231E: { c: '\\2514', f: 'A' },
	    0x231F: { c: '\\2518', f: 'A' },
	    0x2329: { c: '\\27E8' },
	    0x232A: { c: '\\27E9' },
	    0x23D0: { f: 'S1' },
	    0x24C8: { f: 'A' },
	    0x250C: { f: 'A' },
	    0x2510: { f: 'A' },
	    0x2514: { f: 'A' },
	    0x2518: { f: 'A' },
	    0x2571: { f: 'A' },
	    0x2572: { f: 'A' },
	    0x25A0: { f: 'A' },
	    0x25A1: { f: 'A' },
	    0x25AA: { c: '\\25A0', f: 'A' },
	    0x25B2: { f: 'A' },
	    0x25B4: { c: '\\25B2', f: 'A' },
	    0x25B5: { c: '\\25B3' },
	    0x25B6: { f: 'A' },
	    0x25B8: { c: '\\25B6', f: 'A' },
	    0x25BC: { f: 'A' },
	    0x25BE: { c: '\\25BC', f: 'A' },
	    0x25BF: { c: '\\25BD' },
	    0x25C0: { f: 'A' },
	    0x25C2: { c: '\\25C0', f: 'A' },
	    0x25CA: { f: 'A' },
	    0x25FB: { c: '\\25A1', f: 'A' },
	    0x25FC: { c: '\\25A0', f: 'A' },
	    0x2605: { f: 'A' },
	    0x2713: { f: 'A' },
	    0x2720: { f: 'A' },
	    0x2758: { c: '\\2223' },
	    0x29EB: { f: 'A' },
	    0x29F8: { c: '/', f: 'I' },
	    0x2A00: { f: 'S1' },
	    0x2A01: { f: 'S1' },
	    0x2A02: { f: 'S1' },
	    0x2A04: { f: 'S1' },
	    0x2A06: { f: 'S1' },
	    0x2A0C: { c: '\\222C\\222C', f: 'S1' },
	    0x2A2F: { c: '\\D7' },
	    0x2A5E: { f: 'A' },
	    0x2A7D: { f: 'A' },
	    0x2A7E: { f: 'A' },
	    0x2A85: { f: 'A' },
	    0x2A86: { f: 'A' },
	    0x2A87: { f: 'A' },
	    0x2A88: { f: 'A' },
	    0x2A89: { f: 'A' },
	    0x2A8A: { f: 'A' },
	    0x2A8B: { f: 'A' },
	    0x2A8C: { f: 'A' },
	    0x2A95: { f: 'A' },
	    0x2A96: { f: 'A' },
	    0x2AB5: { f: 'A' },
	    0x2AB6: { f: 'A' },
	    0x2AB7: { f: 'A' },
	    0x2AB8: { f: 'A' },
	    0x2AB9: { f: 'A' },
	    0x2ABA: { f: 'A' },
	    0x2AC5: { f: 'A' },
	    0x2AC6: { f: 'A' },
	    0x2ACB: { f: 'A' },
	    0x2ACC: { f: 'A' },
	    0x3008: { c: '\\27E8' },
	    0x3009: { c: '\\27E9' },
	    0xE006: { f: 'A' },
	    0xE007: { f: 'A' },
	    0xE008: { f: 'A' },
	    0xE009: { f: 'A' },
	    0xE00C: { f: 'A' },
	    0xE00D: { f: 'A' },
	    0xE00E: { f: 'A' },
	    0xE00F: { f: 'A' },
	    0xE010: { f: 'A' },
	    0xE011: { f: 'A' },
	    0xE016: { f: 'A' },
	    0xE017: { f: 'A' },
	    0xE018: { f: 'A' },
	    0xE019: { f: 'A' },
	    0xE01A: { f: 'A' },
	    0xE01B: { f: 'A' },
	    0x1D400: { c: 'A', f: 'B' },
	    0x1D401: { c: 'B', f: 'B' },
	    0x1D402: { c: 'C', f: 'B' },
	    0x1D403: { c: 'D', f: 'B' },
	    0x1D404: { c: 'E', f: 'B' },
	    0x1D405: { c: 'F', f: 'B' },
	    0x1D406: { c: 'G', f: 'B' },
	    0x1D407: { c: 'H', f: 'B' },
	    0x1D408: { c: 'I', f: 'B' },
	    0x1D409: { c: 'J', f: 'B' },
	    0x1D40A: { c: 'K', f: 'B' },
	    0x1D40B: { c: 'L', f: 'B' },
	    0x1D40C: { c: 'M', f: 'B' },
	    0x1D40D: { c: 'N', f: 'B' },
	    0x1D40E: { c: 'O', f: 'B' },
	    0x1D40F: { c: 'P', f: 'B' },
	    0x1D410: { c: 'Q', f: 'B' },
	    0x1D411: { c: 'R', f: 'B' },
	    0x1D412: { c: 'S', f: 'B' },
	    0x1D413: { c: 'T', f: 'B' },
	    0x1D414: { c: 'U', f: 'B' },
	    0x1D415: { c: 'V', f: 'B' },
	    0x1D416: { c: 'W', f: 'B' },
	    0x1D417: { c: 'X', f: 'B' },
	    0x1D418: { c: 'Y', f: 'B' },
	    0x1D419: { c: 'Z', f: 'B' },
	    0x1D41A: { c: 'a', f: 'B' },
	    0x1D41B: { c: 'b', f: 'B' },
	    0x1D41C: { c: 'c', f: 'B' },
	    0x1D41D: { c: 'd', f: 'B' },
	    0x1D41E: { c: 'e', f: 'B' },
	    0x1D41F: { c: 'f', f: 'B' },
	    0x1D420: { c: 'g', f: 'B' },
	    0x1D421: { c: 'h', f: 'B' },
	    0x1D422: { c: 'i', f: 'B' },
	    0x1D423: { c: 'j', f: 'B' },
	    0x1D424: { c: 'k', f: 'B' },
	    0x1D425: { c: 'l', f: 'B' },
	    0x1D426: { c: 'm', f: 'B' },
	    0x1D427: { c: 'n', f: 'B' },
	    0x1D428: { c: 'o', f: 'B' },
	    0x1D429: { c: 'p', f: 'B' },
	    0x1D42A: { c: 'q', f: 'B' },
	    0x1D42B: { c: 'r', f: 'B' },
	    0x1D42C: { c: 's', f: 'B' },
	    0x1D42D: { c: 't', f: 'B' },
	    0x1D42E: { c: 'u', f: 'B' },
	    0x1D42F: { c: 'v', f: 'B' },
	    0x1D430: { c: 'w', f: 'B' },
	    0x1D431: { c: 'x', f: 'B' },
	    0x1D432: { c: 'y', f: 'B' },
	    0x1D433: { c: 'z', f: 'B' },
	    0x1D434: { c: 'A', f: 'I' },
	    0x1D435: { c: 'B', f: 'I' },
	    0x1D436: { c: 'C', f: 'I' },
	    0x1D437: { c: 'D', f: 'I' },
	    0x1D438: { c: 'E', f: 'I' },
	    0x1D439: { c: 'F', f: 'I' },
	    0x1D43A: { c: 'G', f: 'I' },
	    0x1D43B: { c: 'H', f: 'I' },
	    0x1D43C: { c: 'I', f: 'I' },
	    0x1D43D: { c: 'J', f: 'I' },
	    0x1D43E: { c: 'K', f: 'I' },
	    0x1D43F: { c: 'L', f: 'I' },
	    0x1D440: { c: 'M', f: 'I' },
	    0x1D441: { c: 'N', f: 'I' },
	    0x1D442: { c: 'O', f: 'I' },
	    0x1D443: { c: 'P', f: 'I' },
	    0x1D444: { c: 'Q', f: 'I' },
	    0x1D445: { c: 'R', f: 'I' },
	    0x1D446: { c: 'S', f: 'I' },
	    0x1D447: { c: 'T', f: 'I' },
	    0x1D448: { c: 'U', f: 'I' },
	    0x1D449: { c: 'V', f: 'I' },
	    0x1D44A: { c: 'W', f: 'I' },
	    0x1D44B: { c: 'X', f: 'I' },
	    0x1D44C: { c: 'Y', f: 'I' },
	    0x1D44D: { c: 'Z', f: 'I' },
	    0x1D44E: { c: 'a', f: 'I' },
	    0x1D44F: { c: 'b', f: 'I' },
	    0x1D450: { c: 'c', f: 'I' },
	    0x1D451: { c: 'd', f: 'I' },
	    0x1D452: { c: 'e', f: 'I' },
	    0x1D453: { c: 'f', f: 'I' },
	    0x1D454: { c: 'g', f: 'I' },
	    0x1D456: { c: 'i', f: 'I' },
	    0x1D457: { c: 'j', f: 'I' },
	    0x1D458: { c: 'k', f: 'I' },
	    0x1D459: { c: 'l', f: 'I' },
	    0x1D45A: { c: 'm', f: 'I' },
	    0x1D45B: { c: 'n', f: 'I' },
	    0x1D45C: { c: 'o', f: 'I' },
	    0x1D45D: { c: 'p', f: 'I' },
	    0x1D45E: { c: 'q', f: 'I' },
	    0x1D45F: { c: 'r', f: 'I' },
	    0x1D460: { c: 's', f: 'I' },
	    0x1D461: { c: 't', f: 'I' },
	    0x1D462: { c: 'u', f: 'I' },
	    0x1D463: { c: 'v', f: 'I' },
	    0x1D464: { c: 'w', f: 'I' },
	    0x1D465: { c: 'x', f: 'I' },
	    0x1D466: { c: 'y', f: 'I' },
	    0x1D467: { c: 'z', f: 'I' },
	    0x1D468: { c: 'A', f: 'BI' },
	    0x1D469: { c: 'B', f: 'BI' },
	    0x1D46A: { c: 'C', f: 'BI' },
	    0x1D46B: { c: 'D', f: 'BI' },
	    0x1D46C: { c: 'E', f: 'BI' },
	    0x1D46D: { c: 'F', f: 'BI' },
	    0x1D46E: { c: 'G', f: 'BI' },
	    0x1D46F: { c: 'H', f: 'BI' },
	    0x1D470: { c: 'I', f: 'BI' },
	    0x1D471: { c: 'J', f: 'BI' },
	    0x1D472: { c: 'K', f: 'BI' },
	    0x1D473: { c: 'L', f: 'BI' },
	    0x1D474: { c: 'M', f: 'BI' },
	    0x1D475: { c: 'N', f: 'BI' },
	    0x1D476: { c: 'O', f: 'BI' },
	    0x1D477: { c: 'P', f: 'BI' },
	    0x1D478: { c: 'Q', f: 'BI' },
	    0x1D479: { c: 'R', f: 'BI' },
	    0x1D47A: { c: 'S', f: 'BI' },
	    0x1D47B: { c: 'T', f: 'BI' },
	    0x1D47C: { c: 'U', f: 'BI' },
	    0x1D47D: { c: 'V', f: 'BI' },
	    0x1D47E: { c: 'W', f: 'BI' },
	    0x1D47F: { c: 'X', f: 'BI' },
	    0x1D480: { c: 'Y', f: 'BI' },
	    0x1D481: { c: 'Z', f: 'BI' },
	    0x1D482: { c: 'a', f: 'BI' },
	    0x1D483: { c: 'b', f: 'BI' },
	    0x1D484: { c: 'c', f: 'BI' },
	    0x1D485: { c: 'd', f: 'BI' },
	    0x1D486: { c: 'e', f: 'BI' },
	    0x1D487: { c: 'f', f: 'BI' },
	    0x1D488: { c: 'g', f: 'BI' },
	    0x1D489: { c: 'h', f: 'BI' },
	    0x1D48A: { c: 'i', f: 'BI' },
	    0x1D48B: { c: 'j', f: 'BI' },
	    0x1D48C: { c: 'k', f: 'BI' },
	    0x1D48D: { c: 'l', f: 'BI' },
	    0x1D48E: { c: 'm', f: 'BI' },
	    0x1D48F: { c: 'n', f: 'BI' },
	    0x1D490: { c: 'o', f: 'BI' },
	    0x1D491: { c: 'p', f: 'BI' },
	    0x1D492: { c: 'q', f: 'BI' },
	    0x1D493: { c: 'r', f: 'BI' },
	    0x1D494: { c: 's', f: 'BI' },
	    0x1D495: { c: 't', f: 'BI' },
	    0x1D496: { c: 'u', f: 'BI' },
	    0x1D497: { c: 'v', f: 'BI' },
	    0x1D498: { c: 'w', f: 'BI' },
	    0x1D499: { c: 'x', f: 'BI' },
	    0x1D49A: { c: 'y', f: 'BI' },
	    0x1D49B: { c: 'z', f: 'BI' },
	    0x1D49C: { c: 'A', f: 'SC' },
	    0x1D49E: { c: 'C', f: 'SC' },
	    0x1D49F: { c: 'D', f: 'SC' },
	    0x1D4A2: { c: 'G', f: 'SC' },
	    0x1D4A5: { c: 'J', f: 'SC' },
	    0x1D4A6: { c: 'K', f: 'SC' },
	    0x1D4A9: { c: 'N', f: 'SC' },
	    0x1D4AA: { c: 'O', f: 'SC' },
	    0x1D4AB: { c: 'P', f: 'SC' },
	    0x1D4AC: { c: 'Q', f: 'SC' },
	    0x1D4AE: { c: 'S', f: 'SC' },
	    0x1D4AF: { c: 'T', f: 'SC' },
	    0x1D4B0: { c: 'U', f: 'SC' },
	    0x1D4B1: { c: 'V', f: 'SC' },
	    0x1D4B2: { c: 'W', f: 'SC' },
	    0x1D4B3: { c: 'X', f: 'SC' },
	    0x1D4B4: { c: 'Y', f: 'SC' },
	    0x1D4B5: { c: 'Z', f: 'SC' },
	    0x1D504: { c: 'A', f: 'FR' },
	    0x1D505: { c: 'B', f: 'FR' },
	    0x1D507: { c: 'D', f: 'FR' },
	    0x1D508: { c: 'E', f: 'FR' },
	    0x1D509: { c: 'F', f: 'FR' },
	    0x1D50A: { c: 'G', f: 'FR' },
	    0x1D50D: { c: 'J', f: 'FR' },
	    0x1D50E: { c: 'K', f: 'FR' },
	    0x1D50F: { c: 'L', f: 'FR' },
	    0x1D510: { c: 'M', f: 'FR' },
	    0x1D511: { c: 'N', f: 'FR' },
	    0x1D512: { c: 'O', f: 'FR' },
	    0x1D513: { c: 'P', f: 'FR' },
	    0x1D514: { c: 'Q', f: 'FR' },
	    0x1D516: { c: 'S', f: 'FR' },
	    0x1D517: { c: 'T', f: 'FR' },
	    0x1D518: { c: 'U', f: 'FR' },
	    0x1D519: { c: 'V', f: 'FR' },
	    0x1D51A: { c: 'W', f: 'FR' },
	    0x1D51B: { c: 'X', f: 'FR' },
	    0x1D51C: { c: 'Y', f: 'FR' },
	    0x1D51E: { c: 'a', f: 'FR' },
	    0x1D51F: { c: 'b', f: 'FR' },
	    0x1D520: { c: 'c', f: 'FR' },
	    0x1D521: { c: 'd', f: 'FR' },
	    0x1D522: { c: 'e', f: 'FR' },
	    0x1D523: { c: 'f', f: 'FR' },
	    0x1D524: { c: 'g', f: 'FR' },
	    0x1D525: { c: 'h', f: 'FR' },
	    0x1D526: { c: 'i', f: 'FR' },
	    0x1D527: { c: 'j', f: 'FR' },
	    0x1D528: { c: 'k', f: 'FR' },
	    0x1D529: { c: 'l', f: 'FR' },
	    0x1D52A: { c: 'm', f: 'FR' },
	    0x1D52B: { c: 'n', f: 'FR' },
	    0x1D52C: { c: 'o', f: 'FR' },
	    0x1D52D: { c: 'p', f: 'FR' },
	    0x1D52E: { c: 'q', f: 'FR' },
	    0x1D52F: { c: 'r', f: 'FR' },
	    0x1D530: { c: 's', f: 'FR' },
	    0x1D531: { c: 't', f: 'FR' },
	    0x1D532: { c: 'u', f: 'FR' },
	    0x1D533: { c: 'v', f: 'FR' },
	    0x1D534: { c: 'w', f: 'FR' },
	    0x1D535: { c: 'x', f: 'FR' },
	    0x1D536: { c: 'y', f: 'FR' },
	    0x1D537: { c: 'z', f: 'FR' },
	    0x1D538: { c: 'A', f: 'A' },
	    0x1D539: { c: 'B', f: 'A' },
	    0x1D53B: { c: 'D', f: 'A' },
	    0x1D53C: { c: 'E', f: 'A' },
	    0x1D53D: { c: 'F', f: 'A' },
	    0x1D53E: { c: 'G', f: 'A' },
	    0x1D540: { c: 'I', f: 'A' },
	    0x1D541: { c: 'J', f: 'A' },
	    0x1D542: { c: 'K', f: 'A' },
	    0x1D543: { c: 'L', f: 'A' },
	    0x1D544: { c: 'M', f: 'A' },
	    0x1D546: { c: 'O', f: 'A' },
	    0x1D54A: { c: 'S', f: 'A' },
	    0x1D54B: { c: 'T', f: 'A' },
	    0x1D54C: { c: 'U', f: 'A' },
	    0x1D54D: { c: 'V', f: 'A' },
	    0x1D54E: { c: 'W', f: 'A' },
	    0x1D54F: { c: 'X', f: 'A' },
	    0x1D550: { c: 'Y', f: 'A' },
	    0x1D56C: { c: 'A', f: 'FRB' },
	    0x1D56D: { c: 'B', f: 'FRB' },
	    0x1D56E: { c: 'C', f: 'FRB' },
	    0x1D56F: { c: 'D', f: 'FRB' },
	    0x1D570: { c: 'E', f: 'FRB' },
	    0x1D571: { c: 'F', f: 'FRB' },
	    0x1D572: { c: 'G', f: 'FRB' },
	    0x1D573: { c: 'H', f: 'FRB' },
	    0x1D574: { c: 'I', f: 'FRB' },
	    0x1D575: { c: 'J', f: 'FRB' },
	    0x1D576: { c: 'K', f: 'FRB' },
	    0x1D577: { c: 'L', f: 'FRB' },
	    0x1D578: { c: 'M', f: 'FRB' },
	    0x1D579: { c: 'N', f: 'FRB' },
	    0x1D57A: { c: 'O', f: 'FRB' },
	    0x1D57B: { c: 'P', f: 'FRB' },
	    0x1D57C: { c: 'Q', f: 'FRB' },
	    0x1D57D: { c: 'R', f: 'FRB' },
	    0x1D57E: { c: 'S', f: 'FRB' },
	    0x1D57F: { c: 'T', f: 'FRB' },
	    0x1D580: { c: 'U', f: 'FRB' },
	    0x1D581: { c: 'V', f: 'FRB' },
	    0x1D582: { c: 'W', f: 'FRB' },
	    0x1D583: { c: 'X', f: 'FRB' },
	    0x1D584: { c: 'Y', f: 'FRB' },
	    0x1D585: { c: 'Z', f: 'FRB' },
	    0x1D586: { c: 'a', f: 'FRB' },
	    0x1D587: { c: 'b', f: 'FRB' },
	    0x1D588: { c: 'c', f: 'FRB' },
	    0x1D589: { c: 'd', f: 'FRB' },
	    0x1D58A: { c: 'e', f: 'FRB' },
	    0x1D58B: { c: 'f', f: 'FRB' },
	    0x1D58C: { c: 'g', f: 'FRB' },
	    0x1D58D: { c: 'h', f: 'FRB' },
	    0x1D58E: { c: 'i', f: 'FRB' },
	    0x1D58F: { c: 'j', f: 'FRB' },
	    0x1D590: { c: 'k', f: 'FRB' },
	    0x1D591: { c: 'l', f: 'FRB' },
	    0x1D592: { c: 'm', f: 'FRB' },
	    0x1D593: { c: 'n', f: 'FRB' },
	    0x1D594: { c: 'o', f: 'FRB' },
	    0x1D595: { c: 'p', f: 'FRB' },
	    0x1D596: { c: 'q', f: 'FRB' },
	    0x1D597: { c: 'r', f: 'FRB' },
	    0x1D598: { c: 's', f: 'FRB' },
	    0x1D599: { c: 't', f: 'FRB' },
	    0x1D59A: { c: 'u', f: 'FRB' },
	    0x1D59B: { c: 'v', f: 'FRB' },
	    0x1D59C: { c: 'w', f: 'FRB' },
	    0x1D59D: { c: 'x', f: 'FRB' },
	    0x1D59E: { c: 'y', f: 'FRB' },
	    0x1D59F: { c: 'z', f: 'FRB' },
	    0x1D5A0: { c: 'A', f: 'SS' },
	    0x1D5A1: { c: 'B', f: 'SS' },
	    0x1D5A2: { c: 'C', f: 'SS' },
	    0x1D5A3: { c: 'D', f: 'SS' },
	    0x1D5A4: { c: 'E', f: 'SS' },
	    0x1D5A5: { c: 'F', f: 'SS' },
	    0x1D5A6: { c: 'G', f: 'SS' },
	    0x1D5A7: { c: 'H', f: 'SS' },
	    0x1D5A8: { c: 'I', f: 'SS' },
	    0x1D5A9: { c: 'J', f: 'SS' },
	    0x1D5AA: { c: 'K', f: 'SS' },
	    0x1D5AB: { c: 'L', f: 'SS' },
	    0x1D5AC: { c: 'M', f: 'SS' },
	    0x1D5AD: { c: 'N', f: 'SS' },
	    0x1D5AE: { c: 'O', f: 'SS' },
	    0x1D5AF: { c: 'P', f: 'SS' },
	    0x1D5B0: { c: 'Q', f: 'SS' },
	    0x1D5B1: { c: 'R', f: 'SS' },
	    0x1D5B2: { c: 'S', f: 'SS' },
	    0x1D5B3: { c: 'T', f: 'SS' },
	    0x1D5B4: { c: 'U', f: 'SS' },
	    0x1D5B5: { c: 'V', f: 'SS' },
	    0x1D5B6: { c: 'W', f: 'SS' },
	    0x1D5B7: { c: 'X', f: 'SS' },
	    0x1D5B8: { c: 'Y', f: 'SS' },
	    0x1D5B9: { c: 'Z', f: 'SS' },
	    0x1D5BA: { c: 'a', f: 'SS' },
	    0x1D5BB: { c: 'b', f: 'SS' },
	    0x1D5BC: { c: 'c', f: 'SS' },
	    0x1D5BD: { c: 'd', f: 'SS' },
	    0x1D5BE: { c: 'e', f: 'SS' },
	    0x1D5BF: { c: 'f', f: 'SS' },
	    0x1D5C0: { c: 'g', f: 'SS' },
	    0x1D5C1: { c: 'h', f: 'SS' },
	    0x1D5C2: { c: 'i', f: 'SS' },
	    0x1D5C3: { c: 'j', f: 'SS' },
	    0x1D5C4: { c: 'k', f: 'SS' },
	    0x1D5C5: { c: 'l', f: 'SS' },
	    0x1D5C6: { c: 'm', f: 'SS' },
	    0x1D5C7: { c: 'n', f: 'SS' },
	    0x1D5C8: { c: 'o', f: 'SS' },
	    0x1D5C9: { c: 'p', f: 'SS' },
	    0x1D5CA: { c: 'q', f: 'SS' },
	    0x1D5CB: { c: 'r', f: 'SS' },
	    0x1D5CC: { c: 's', f: 'SS' },
	    0x1D5CD: { c: 't', f: 'SS' },
	    0x1D5CE: { c: 'u', f: 'SS' },
	    0x1D5CF: { c: 'v', f: 'SS' },
	    0x1D5D0: { c: 'w', f: 'SS' },
	    0x1D5D1: { c: 'x', f: 'SS' },
	    0x1D5D2: { c: 'y', f: 'SS' },
	    0x1D5D3: { c: 'z', f: 'SS' },
	    0x1D5D4: { c: 'A', f: 'SSB' },
	    0x1D5D5: { c: 'B', f: 'SSB' },
	    0x1D5D6: { c: 'C', f: 'SSB' },
	    0x1D5D7: { c: 'D', f: 'SSB' },
	    0x1D5D8: { c: 'E', f: 'SSB' },
	    0x1D5D9: { c: 'F', f: 'SSB' },
	    0x1D5DA: { c: 'G', f: 'SSB' },
	    0x1D5DB: { c: 'H', f: 'SSB' },
	    0x1D5DC: { c: 'I', f: 'SSB' },
	    0x1D5DD: { c: 'J', f: 'SSB' },
	    0x1D5DE: { c: 'K', f: 'SSB' },
	    0x1D5DF: { c: 'L', f: 'SSB' },
	    0x1D5E0: { c: 'M', f: 'SSB' },
	    0x1D5E1: { c: 'N', f: 'SSB' },
	    0x1D5E2: { c: 'O', f: 'SSB' },
	    0x1D5E3: { c: 'P', f: 'SSB' },
	    0x1D5E4: { c: 'Q', f: 'SSB' },
	    0x1D5E5: { c: 'R', f: 'SSB' },
	    0x1D5E6: { c: 'S', f: 'SSB' },
	    0x1D5E7: { c: 'T', f: 'SSB' },
	    0x1D5E8: { c: 'U', f: 'SSB' },
	    0x1D5E9: { c: 'V', f: 'SSB' },
	    0x1D5EA: { c: 'W', f: 'SSB' },
	    0x1D5EB: { c: 'X', f: 'SSB' },
	    0x1D5EC: { c: 'Y', f: 'SSB' },
	    0x1D5ED: { c: 'Z', f: 'SSB' },
	    0x1D5EE: { c: 'a', f: 'SSB' },
	    0x1D5EF: { c: 'b', f: 'SSB' },
	    0x1D5F0: { c: 'c', f: 'SSB' },
	    0x1D5F1: { c: 'd', f: 'SSB' },
	    0x1D5F2: { c: 'e', f: 'SSB' },
	    0x1D5F3: { c: 'f', f: 'SSB' },
	    0x1D5F4: { c: 'g', f: 'SSB' },
	    0x1D5F5: { c: 'h', f: 'SSB' },
	    0x1D5F6: { c: 'i', f: 'SSB' },
	    0x1D5F7: { c: 'j', f: 'SSB' },
	    0x1D5F8: { c: 'k', f: 'SSB' },
	    0x1D5F9: { c: 'l', f: 'SSB' },
	    0x1D5FA: { c: 'm', f: 'SSB' },
	    0x1D5FB: { c: 'n', f: 'SSB' },
	    0x1D5FC: { c: 'o', f: 'SSB' },
	    0x1D5FD: { c: 'p', f: 'SSB' },
	    0x1D5FE: { c: 'q', f: 'SSB' },
	    0x1D5FF: { c: 'r', f: 'SSB' },
	    0x1D600: { c: 's', f: 'SSB' },
	    0x1D601: { c: 't', f: 'SSB' },
	    0x1D602: { c: 'u', f: 'SSB' },
	    0x1D603: { c: 'v', f: 'SSB' },
	    0x1D604: { c: 'w', f: 'SSB' },
	    0x1D605: { c: 'x', f: 'SSB' },
	    0x1D606: { c: 'y', f: 'SSB' },
	    0x1D607: { c: 'z', f: 'SSB' },
	    0x1D608: { c: 'A', f: 'SSI' },
	    0x1D609: { c: 'B', f: 'SSI' },
	    0x1D60A: { c: 'C', f: 'SSI' },
	    0x1D60B: { c: 'D', f: 'SSI' },
	    0x1D60C: { c: 'E', f: 'SSI' },
	    0x1D60D: { c: 'F', f: 'SSI' },
	    0x1D60E: { c: 'G', f: 'SSI' },
	    0x1D60F: { c: 'H', f: 'SSI' },
	    0x1D610: { c: 'I', f: 'SSI' },
	    0x1D611: { c: 'J', f: 'SSI' },
	    0x1D612: { c: 'K', f: 'SSI' },
	    0x1D613: { c: 'L', f: 'SSI' },
	    0x1D614: { c: 'M', f: 'SSI' },
	    0x1D615: { c: 'N', f: 'SSI' },
	    0x1D616: { c: 'O', f: 'SSI' },
	    0x1D617: { c: 'P', f: 'SSI' },
	    0x1D618: { c: 'Q', f: 'SSI' },
	    0x1D619: { c: 'R', f: 'SSI' },
	    0x1D61A: { c: 'S', f: 'SSI' },
	    0x1D61B: { c: 'T', f: 'SSI' },
	    0x1D61C: { c: 'U', f: 'SSI' },
	    0x1D61D: { c: 'V', f: 'SSI' },
	    0x1D61E: { c: 'W', f: 'SSI' },
	    0x1D61F: { c: 'X', f: 'SSI' },
	    0x1D620: { c: 'Y', f: 'SSI' },
	    0x1D621: { c: 'Z', f: 'SSI' },
	    0x1D622: { c: 'a', f: 'SSI' },
	    0x1D623: { c: 'b', f: 'SSI' },
	    0x1D624: { c: 'c', f: 'SSI' },
	    0x1D625: { c: 'd', f: 'SSI' },
	    0x1D626: { c: 'e', f: 'SSI' },
	    0x1D627: { c: 'f', f: 'SSI' },
	    0x1D628: { c: 'g', f: 'SSI' },
	    0x1D629: { c: 'h', f: 'SSI' },
	    0x1D62A: { c: 'i', f: 'SSI' },
	    0x1D62B: { c: 'j', f: 'SSI' },
	    0x1D62C: { c: 'k', f: 'SSI' },
	    0x1D62D: { c: 'l', f: 'SSI' },
	    0x1D62E: { c: 'm', f: 'SSI' },
	    0x1D62F: { c: 'n', f: 'SSI' },
	    0x1D630: { c: 'o', f: 'SSI' },
	    0x1D631: { c: 'p', f: 'SSI' },
	    0x1D632: { c: 'q', f: 'SSI' },
	    0x1D633: { c: 'r', f: 'SSI' },
	    0x1D634: { c: 's', f: 'SSI' },
	    0x1D635: { c: 't', f: 'SSI' },
	    0x1D636: { c: 'u', f: 'SSI' },
	    0x1D637: { c: 'v', f: 'SSI' },
	    0x1D638: { c: 'w', f: 'SSI' },
	    0x1D639: { c: 'x', f: 'SSI' },
	    0x1D63A: { c: 'y', f: 'SSI' },
	    0x1D63B: { c: 'z', f: 'SSI' },
	    0x1D670: { c: 'A', f: 'T' },
	    0x1D671: { c: 'B', f: 'T' },
	    0x1D672: { c: 'C', f: 'T' },
	    0x1D673: { c: 'D', f: 'T' },
	    0x1D674: { c: 'E', f: 'T' },
	    0x1D675: { c: 'F', f: 'T' },
	    0x1D676: { c: 'G', f: 'T' },
	    0x1D677: { c: 'H', f: 'T' },
	    0x1D678: { c: 'I', f: 'T' },
	    0x1D679: { c: 'J', f: 'T' },
	    0x1D67A: { c: 'K', f: 'T' },
	    0x1D67B: { c: 'L', f: 'T' },
	    0x1D67C: { c: 'M', f: 'T' },
	    0x1D67D: { c: 'N', f: 'T' },
	    0x1D67E: { c: 'O', f: 'T' },
	    0x1D67F: { c: 'P', f: 'T' },
	    0x1D680: { c: 'Q', f: 'T' },
	    0x1D681: { c: 'R', f: 'T' },
	    0x1D682: { c: 'S', f: 'T' },
	    0x1D683: { c: 'T', f: 'T' },
	    0x1D684: { c: 'U', f: 'T' },
	    0x1D685: { c: 'V', f: 'T' },
	    0x1D686: { c: 'W', f: 'T' },
	    0x1D687: { c: 'X', f: 'T' },
	    0x1D688: { c: 'Y', f: 'T' },
	    0x1D689: { c: 'Z', f: 'T' },
	    0x1D68A: { c: 'a', f: 'T' },
	    0x1D68B: { c: 'b', f: 'T' },
	    0x1D68C: { c: 'c', f: 'T' },
	    0x1D68D: { c: 'd', f: 'T' },
	    0x1D68E: { c: 'e', f: 'T' },
	    0x1D68F: { c: 'f', f: 'T' },
	    0x1D690: { c: 'g', f: 'T' },
	    0x1D691: { c: 'h', f: 'T' },
	    0x1D692: { c: 'i', f: 'T' },
	    0x1D693: { c: 'j', f: 'T' },
	    0x1D694: { c: 'k', f: 'T' },
	    0x1D695: { c: 'l', f: 'T' },
	    0x1D696: { c: 'm', f: 'T' },
	    0x1D697: { c: 'n', f: 'T' },
	    0x1D698: { c: 'o', f: 'T' },
	    0x1D699: { c: 'p', f: 'T' },
	    0x1D69A: { c: 'q', f: 'T' },
	    0x1D69B: { c: 'r', f: 'T' },
	    0x1D69C: { c: 's', f: 'T' },
	    0x1D69D: { c: 't', f: 'T' },
	    0x1D69E: { c: 'u', f: 'T' },
	    0x1D69F: { c: 'v', f: 'T' },
	    0x1D6A0: { c: 'w', f: 'T' },
	    0x1D6A1: { c: 'x', f: 'T' },
	    0x1D6A2: { c: 'y', f: 'T' },
	    0x1D6A3: { c: 'z', f: 'T' },
	    0x1D6A8: { c: 'A', f: 'B' },
	    0x1D6A9: { c: 'B', f: 'B' },
	    0x1D6AA: { c: '\\393', f: 'B' },
	    0x1D6AB: { c: '\\394', f: 'B' },
	    0x1D6AC: { c: 'E', f: 'B' },
	    0x1D6AD: { c: 'Z', f: 'B' },
	    0x1D6AE: { c: 'H', f: 'B' },
	    0x1D6AF: { c: '\\398', f: 'B' },
	    0x1D6B0: { c: 'I', f: 'B' },
	    0x1D6B1: { c: 'K', f: 'B' },
	    0x1D6B2: { c: '\\39B', f: 'B' },
	    0x1D6B3: { c: 'M', f: 'B' },
	    0x1D6B4: { c: 'N', f: 'B' },
	    0x1D6B5: { c: '\\39E', f: 'B' },
	    0x1D6B6: { c: 'O', f: 'B' },
	    0x1D6B7: { c: '\\3A0', f: 'B' },
	    0x1D6B8: { c: 'P', f: 'B' },
	    0x1D6BA: { c: '\\3A3', f: 'B' },
	    0x1D6BB: { c: 'T', f: 'B' },
	    0x1D6BC: { c: '\\3A5', f: 'B' },
	    0x1D6BD: { c: '\\3A6', f: 'B' },
	    0x1D6BE: { c: 'X', f: 'B' },
	    0x1D6BF: { c: '\\3A8', f: 'B' },
	    0x1D6C0: { c: '\\3A9', f: 'B' },
	    0x1D6C1: { c: '\\2207', f: 'B' },
	    0x1D6E2: { c: 'A', f: 'I' },
	    0x1D6E3: { c: 'B', f: 'I' },
	    0x1D6E4: { c: '\\393', f: 'I' },
	    0x1D6E5: { c: '\\394', f: 'I' },
	    0x1D6E6: { c: 'E', f: 'I' },
	    0x1D6E7: { c: 'Z', f: 'I' },
	    0x1D6E8: { c: 'H', f: 'I' },
	    0x1D6E9: { c: '\\398', f: 'I' },
	    0x1D6EA: { c: 'I', f: 'I' },
	    0x1D6EB: { c: 'K', f: 'I' },
	    0x1D6EC: { c: '\\39B', f: 'I' },
	    0x1D6ED: { c: 'M', f: 'I' },
	    0x1D6EE: { c: 'N', f: 'I' },
	    0x1D6EF: { c: '\\39E', f: 'I' },
	    0x1D6F0: { c: 'O', f: 'I' },
	    0x1D6F1: { c: '\\3A0', f: 'I' },
	    0x1D6F2: { c: 'P', f: 'I' },
	    0x1D6F4: { c: '\\3A3', f: 'I' },
	    0x1D6F5: { c: 'T', f: 'I' },
	    0x1D6F6: { c: '\\3A5', f: 'I' },
	    0x1D6F7: { c: '\\3A6', f: 'I' },
	    0x1D6F8: { c: 'X', f: 'I' },
	    0x1D6F9: { c: '\\3A8', f: 'I' },
	    0x1D6FA: { c: '\\3A9', f: 'I' },
	    0x1D6FC: { c: '\\3B1', f: 'I' },
	    0x1D6FD: { c: '\\3B2', f: 'I' },
	    0x1D6FE: { c: '\\3B3', f: 'I' },
	    0x1D6FF: { c: '\\3B4', f: 'I' },
	    0x1D700: { c: '\\3B5', f: 'I' },
	    0x1D701: { c: '\\3B6', f: 'I' },
	    0x1D702: { c: '\\3B7', f: 'I' },
	    0x1D703: { c: '\\3B8', f: 'I' },
	    0x1D704: { c: '\\3B9', f: 'I' },
	    0x1D705: { c: '\\3BA', f: 'I' },
	    0x1D706: { c: '\\3BB', f: 'I' },
	    0x1D707: { c: '\\3BC', f: 'I' },
	    0x1D708: { c: '\\3BD', f: 'I' },
	    0x1D709: { c: '\\3BE', f: 'I' },
	    0x1D70A: { c: '\\3BF', f: 'I' },
	    0x1D70B: { c: '\\3C0', f: 'I' },
	    0x1D70C: { c: '\\3C1', f: 'I' },
	    0x1D70D: { c: '\\3C2', f: 'I' },
	    0x1D70E: { c: '\\3C3', f: 'I' },
	    0x1D70F: { c: '\\3C4', f: 'I' },
	    0x1D710: { c: '\\3C5', f: 'I' },
	    0x1D711: { c: '\\3C6', f: 'I' },
	    0x1D712: { c: '\\3C7', f: 'I' },
	    0x1D713: { c: '\\3C8', f: 'I' },
	    0x1D714: { c: '\\3C9', f: 'I' },
	    0x1D715: { c: '\\2202' },
	    0x1D716: { c: '\\3F5', f: 'I' },
	    0x1D717: { c: '\\3D1', f: 'I' },
	    0x1D718: { c: '\\E009', f: 'A' },
	    0x1D719: { c: '\\3D5', f: 'I' },
	    0x1D71A: { c: '\\3F1', f: 'I' },
	    0x1D71B: { c: '\\3D6', f: 'I' },
	    0x1D71C: { c: 'A', f: 'BI' },
	    0x1D71D: { c: 'B', f: 'BI' },
	    0x1D71E: { c: '\\393', f: 'BI' },
	    0x1D71F: { c: '\\394', f: 'BI' },
	    0x1D720: { c: 'E', f: 'BI' },
	    0x1D721: { c: 'Z', f: 'BI' },
	    0x1D722: { c: 'H', f: 'BI' },
	    0x1D723: { c: '\\398', f: 'BI' },
	    0x1D724: { c: 'I', f: 'BI' },
	    0x1D725: { c: 'K', f: 'BI' },
	    0x1D726: { c: '\\39B', f: 'BI' },
	    0x1D727: { c: 'M', f: 'BI' },
	    0x1D728: { c: 'N', f: 'BI' },
	    0x1D729: { c: '\\39E', f: 'BI' },
	    0x1D72A: { c: 'O', f: 'BI' },
	    0x1D72B: { c: '\\3A0', f: 'BI' },
	    0x1D72C: { c: 'P', f: 'BI' },
	    0x1D72E: { c: '\\3A3', f: 'BI' },
	    0x1D72F: { c: 'T', f: 'BI' },
	    0x1D730: { c: '\\3A5', f: 'BI' },
	    0x1D731: { c: '\\3A6', f: 'BI' },
	    0x1D732: { c: 'X', f: 'BI' },
	    0x1D733: { c: '\\3A8', f: 'BI' },
	    0x1D734: { c: '\\3A9', f: 'BI' },
	    0x1D736: { c: '\\3B1', f: 'BI' },
	    0x1D737: { c: '\\3B2', f: 'BI' },
	    0x1D738: { c: '\\3B3', f: 'BI' },
	    0x1D739: { c: '\\3B4', f: 'BI' },
	    0x1D73A: { c: '\\3B5', f: 'BI' },
	    0x1D73B: { c: '\\3B6', f: 'BI' },
	    0x1D73C: { c: '\\3B7', f: 'BI' },
	    0x1D73D: { c: '\\3B8', f: 'BI' },
	    0x1D73E: { c: '\\3B9', f: 'BI' },
	    0x1D73F: { c: '\\3BA', f: 'BI' },
	    0x1D740: { c: '\\3BB', f: 'BI' },
	    0x1D741: { c: '\\3BC', f: 'BI' },
	    0x1D742: { c: '\\3BD', f: 'BI' },
	    0x1D743: { c: '\\3BE', f: 'BI' },
	    0x1D744: { c: '\\3BF', f: 'BI' },
	    0x1D745: { c: '\\3C0', f: 'BI' },
	    0x1D746: { c: '\\3C1', f: 'BI' },
	    0x1D747: { c: '\\3C2', f: 'BI' },
	    0x1D748: { c: '\\3C3', f: 'BI' },
	    0x1D749: { c: '\\3C4', f: 'BI' },
	    0x1D74A: { c: '\\3C5', f: 'BI' },
	    0x1D74B: { c: '\\3C6', f: 'BI' },
	    0x1D74C: { c: '\\3C7', f: 'BI' },
	    0x1D74D: { c: '\\3C8', f: 'BI' },
	    0x1D74E: { c: '\\3C9', f: 'BI' },
	    0x1D74F: { c: '\\2202', f: 'B' },
	    0x1D750: { c: '\\3F5', f: 'BI' },
	    0x1D751: { c: '\\3D1', f: 'BI' },
	    0x1D752: { c: '\\E009', f: 'A' },
	    0x1D753: { c: '\\3D5', f: 'BI' },
	    0x1D754: { c: '\\3F1', f: 'BI' },
	    0x1D755: { c: '\\3D6', f: 'BI' },
	    0x1D756: { c: 'A', f: 'SSB' },
	    0x1D757: { c: 'B', f: 'SSB' },
	    0x1D758: { c: '\\393', f: 'SSB' },
	    0x1D759: { c: '\\394', f: 'SSB' },
	    0x1D75A: { c: 'E', f: 'SSB' },
	    0x1D75B: { c: 'Z', f: 'SSB' },
	    0x1D75C: { c: 'H', f: 'SSB' },
	    0x1D75D: { c: '\\398', f: 'SSB' },
	    0x1D75E: { c: 'I', f: 'SSB' },
	    0x1D75F: { c: 'K', f: 'SSB' },
	    0x1D760: { c: '\\39B', f: 'SSB' },
	    0x1D761: { c: 'M', f: 'SSB' },
	    0x1D762: { c: 'N', f: 'SSB' },
	    0x1D763: { c: '\\39E', f: 'SSB' },
	    0x1D764: { c: 'O', f: 'SSB' },
	    0x1D765: { c: '\\3A0', f: 'SSB' },
	    0x1D766: { c: 'P', f: 'SSB' },
	    0x1D768: { c: '\\3A3', f: 'SSB' },
	    0x1D769: { c: 'T', f: 'SSB' },
	    0x1D76A: { c: '\\3A5', f: 'SSB' },
	    0x1D76B: { c: '\\3A6', f: 'SSB' },
	    0x1D76C: { c: 'X', f: 'SSB' },
	    0x1D76D: { c: '\\3A8', f: 'SSB' },
	    0x1D76E: { c: '\\3A9', f: 'SSB' },
	    0x1D7CE: { c: '0', f: 'B' },
	    0x1D7CF: { c: '1', f: 'B' },
	    0x1D7D0: { c: '2', f: 'B' },
	    0x1D7D1: { c: '3', f: 'B' },
	    0x1D7D2: { c: '4', f: 'B' },
	    0x1D7D3: { c: '5', f: 'B' },
	    0x1D7D4: { c: '6', f: 'B' },
	    0x1D7D5: { c: '7', f: 'B' },
	    0x1D7D6: { c: '8', f: 'B' },
	    0x1D7D7: { c: '9', f: 'B' },
	    0x1D7E2: { c: '0', f: 'SS' },
	    0x1D7E3: { c: '1', f: 'SS' },
	    0x1D7E4: { c: '2', f: 'SS' },
	    0x1D7E5: { c: '3', f: 'SS' },
	    0x1D7E6: { c: '4', f: 'SS' },
	    0x1D7E7: { c: '5', f: 'SS' },
	    0x1D7E8: { c: '6', f: 'SS' },
	    0x1D7E9: { c: '7', f: 'SS' },
	    0x1D7EA: { c: '8', f: 'SS' },
	    0x1D7EB: { c: '9', f: 'SS' },
	    0x1D7EC: { c: '0', f: 'SSB' },
	    0x1D7ED: { c: '1', f: 'SSB' },
	    0x1D7EE: { c: '2', f: 'SSB' },
	    0x1D7EF: { c: '3', f: 'SSB' },
	    0x1D7F0: { c: '4', f: 'SSB' },
	    0x1D7F1: { c: '5', f: 'SSB' },
	    0x1D7F2: { c: '6', f: 'SSB' },
	    0x1D7F3: { c: '7', f: 'SSB' },
	    0x1D7F4: { c: '8', f: 'SSB' },
	    0x1D7F5: { c: '9', f: 'SSB' },
	    0x1D7F6: { c: '0', f: 'T' },
	    0x1D7F7: { c: '1', f: 'T' },
	    0x1D7F8: { c: '2', f: 'T' },
	    0x1D7F9: { c: '3', f: 'T' },
	    0x1D7FA: { c: '4', f: 'T' },
	    0x1D7FB: { c: '5', f: 'T' },
	    0x1D7FC: { c: '6', f: 'T' },
	    0x1D7FD: { c: '7', f: 'T' },
	    0x1D7FE: { c: '8', f: 'T' },
	    0x1D7FF: { c: '9', f: 'T' },
	});
	//# sourceMappingURL=normal.js.map

/***/ }),
/* 312 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.normal = {
	    0x20: [0, 0, .25],
	    0x21: [.716, 0, .278],
	    0x22: [.694, -0.379, .5],
	    0x23: [.694, .194, .833],
	    0x24: [.75, .056, .5],
	    0x25: [.75, .056, .833],
	    0x26: [.716, .022, .778],
	    0x27: [.694, -0.379, .278],
	    0x28: [.75, .25, .389],
	    0x29: [.75, .25, .389],
	    0x2A: [.75, -0.32, .5],
	    0x2B: [.583, .082, .778],
	    0x2C: [.121, .194, .278],
	    0x2D: [.252, -0.179, .333],
	    0x2E: [.12, 0, .278],
	    0x2F: [.75, .25, .5],
	    0x30: [.666, .022, .5],
	    0x31: [.666, 0, .5],
	    0x32: [.666, 0, .5],
	    0x33: [.665, .022, .5],
	    0x34: [.677, 0, .5],
	    0x35: [.666, .022, .5],
	    0x36: [.666, .022, .5],
	    0x37: [.676, .022, .5],
	    0x38: [.666, .022, .5],
	    0x39: [.666, .022, .5],
	    0x3A: [.43, 0, .278],
	    0x3B: [.43, .194, .278],
	    0x3C: [.54, .04, .778],
	    0x3D: [.583, .082, .778],
	    0x3E: [.54, .04, .778],
	    0x3F: [.705, 0, .472],
	    0x40: [.705, .011, .778],
	    0x41: [.716, 0, .75],
	    0x42: [.683, 0, .708],
	    0x43: [.705, .021, .722],
	    0x44: [.683, 0, .764],
	    0x45: [.68, 0, .681],
	    0x46: [.68, 0, .653],
	    0x47: [.705, .022, .785],
	    0x48: [.683, 0, .75],
	    0x49: [.683, 0, .361],
	    0x4A: [.683, .022, .514],
	    0x4B: [.683, 0, .778],
	    0x4C: [.683, 0, .625],
	    0x4D: [.683, 0, .917],
	    0x4E: [.683, 0, .75],
	    0x4F: [.705, .022, .778],
	    0x50: [.683, 0, .681],
	    0x51: [.705, .193, .778],
	    0x52: [.683, .022, .736],
	    0x53: [.705, .022, .556],
	    0x54: [.677, 0, .722],
	    0x55: [.683, .022, .75],
	    0x56: [.683, .022, .75],
	    0x57: [.683, .022, 1.028],
	    0x58: [.683, 0, .75],
	    0x59: [.683, 0, .75],
	    0x5A: [.683, 0, .611],
	    0x5B: [.75, .25, .278],
	    0x5C: [.75, .25, .5],
	    0x5D: [.75, .25, .278],
	    0x5E: [.694, -0.531, .5],
	    0x5F: [-0.025, .062, .5],
	    0x60: [.699, -0.505, .5],
	    0x61: [.448, .011, .5],
	    0x62: [.694, .011, .556],
	    0x63: [.448, .011, .444],
	    0x64: [.694, .011, .556],
	    0x65: [.448, .011, .444],
	    0x66: [.705, 0, .306, { ic: .066 }],
	    0x67: [.453, .206, .5],
	    0x68: [.694, 0, .556],
	    0x69: [.669, 0, .278],
	    0x6A: [.669, .205, .306],
	    0x6B: [.694, 0, .528],
	    0x6C: [.694, 0, .278],
	    0x6D: [.442, 0, .833],
	    0x6E: [.442, 0, .556],
	    0x6F: [.448, .01, .5],
	    0x70: [.442, .194, .556],
	    0x71: [.442, .194, .528],
	    0x72: [.442, 0, .392],
	    0x73: [.448, .011, .394],
	    0x74: [.615, .01, .389],
	    0x75: [.442, .011, .556],
	    0x76: [.431, .011, .528],
	    0x77: [.431, .011, .722],
	    0x78: [.431, 0, .528],
	    0x79: [.431, .204, .528],
	    0x7A: [.431, 0, .444],
	    0x7B: [.75, .25, .5],
	    0x7C: [.75, .249, .278],
	    0x7D: [.75, .25, .5],
	    0x7E: [.318, -0.215, .5],
	    0xA0: [0, 0, .25],
	    0xA3: [.714, .011, .769],
	    0xA5: [.683, 0, .75],
	    0xA8: [.669, -0.554, .5],
	    0xAC: [.356, -0.089, .667],
	    0xAE: [.709, .175, .947],
	    0xAF: [.59, -0.544, .5],
	    0xB0: [.715, -0.542, .5],
	    0xB1: [.666, 0, .778],
	    0xB4: [.699, -0.505, .5],
	    0xB7: [.31, -0.19, .278],
	    0xD7: [.491, -0.009, .778],
	    0xF0: [.749, .021, .556],
	    0xF7: [.537, .036, .778],
	    0x131: [.442, 0, .278, { sk: .0278 }],
	    0x237: [.442, .205, .306, { sk: .0833 }],
	    0x2B9: [.56, -0.043, .275],
	    0x2C6: [.694, -0.531, .5],
	    0x2C7: [.644, -0.513, .5],
	    0x2C9: [.59, -0.544, .5],
	    0x2CA: [.699, -0.505, .5],
	    0x2CB: [.699, -0.505, .5],
	    0x2D8: [.694, -0.515, .5],
	    0x2D9: [.669, -0.549, .5],
	    0x2DA: [.715, -0.542, .5],
	    0x2DC: [.668, -0.565, .5],
	    0x300: [.699, -0.505, 0],
	    0x301: [.699, -0.505, 0],
	    0x302: [.694, -0.531, 0],
	    0x303: [.668, -0.565, 0],
	    0x304: [.59, -0.544, 0],
	    0x306: [.694, -0.515, 0],
	    0x307: [.669, -0.549, 0],
	    0x308: [.669, -0.554, 0],
	    0x30A: [.715, -0.542, 0],
	    0x30B: [.701, -0.51, 0],
	    0x30C: [.644, -0.513, 0],
	    0x338: [.716, .215, 0],
	    0x391: [.716, 0, .75],
	    0x392: [.683, 0, .708],
	    0x393: [.68, 0, .625],
	    0x394: [.716, 0, .833],
	    0x395: [.68, 0, .681],
	    0x396: [.683, 0, .611],
	    0x397: [.683, 0, .75],
	    0x398: [.705, .022, .778],
	    0x399: [.683, 0, .361],
	    0x39A: [.683, 0, .778],
	    0x39B: [.716, 0, .694],
	    0x39C: [.683, 0, .917],
	    0x39D: [.683, 0, .75],
	    0x39E: [.677, 0, .667],
	    0x39F: [.705, .022, .778],
	    0x3A0: [.68, 0, .75],
	    0x3A1: [.683, 0, .681],
	    0x3A3: [.683, 0, .722],
	    0x3A4: [.677, 0, .722],
	    0x3A5: [.705, 0, .778],
	    0x3A6: [.683, 0, .722],
	    0x3A7: [.683, 0, .75],
	    0x3A8: [.683, 0, .778],
	    0x3A9: [.704, 0, .722],
	    0x2000: [0, 0, .5],
	    0x2001: [0, 0, 1],
	    0x2002: [0, 0, .5],
	    0x2003: [0, 0, 1],
	    0x2004: [0, 0, .333],
	    0x2005: [0, 0, .25],
	    0x2006: [0, 0, .167],
	    0x2009: [0, 0, .167],
	    0x200A: [0, 0, .1],
	    0x200B: [0, 0, 0],
	    0x200C: [0, 0, 0],
	    0x2013: [.285, -0.248, .5],
	    0x2014: [.285, -0.248, 1],
	    0x2015: [.285, -0.248, 1],
	    0x2016: [.75, .25, .5],
	    0x2017: [-0.025, .062, .5],
	    0x2018: [.694, -0.379, .278],
	    0x2019: [.694, -0.379, .278],
	    0x201C: [.694, -0.379, .5],
	    0x201D: [.694, -0.379, .5],
	    0x2020: [.705, .216, .444],
	    0x2021: [.705, .205, .444],
	    0x2022: [.444, -0.055, .5],
	    0x2026: [.12, 0, 1.172],
	    0x2032: [.56, -0.043, .275],
	    0x2033: [.56, 0, .55],
	    0x2034: [.56, 0, .825],
	    0x2035: [.56, -0.043, .275],
	    0x2036: [.56, 0, .55],
	    0x2037: [.56, 0, .825],
	    0x203E: [.59, -0.544, .5],
	    0x2044: [.75, .25, .5],
	    0x2057: [.56, 0, 1.1],
	    0x2060: [0, 0, 0],
	    0x2061: [0, 0, 0],
	    0x2062: [0, 0, 0],
	    0x2063: [0, 0, 0],
	    0x2064: [0, 0, 0],
	    0x20D7: [.714, -0.516, .5],
	    0x2102: [.702, .019, .722],
	    0x210B: [.717, .036, .969, { ic: .272, sk: .333 }],
	    0x210C: [.666, .133, .72],
	    0x210D: [.683, 0, .778],
	    0x210E: [.694, .011, .576, { sk: -0.0278 }],
	    0x210F: [.695, .013, .54, { ic: .022 }],
	    0x2110: [.717, .314, 1.052, { ic: .081, sk: .417 }],
	    0x2111: [.686, .026, .554],
	    0x2112: [.717, .017, .874, { ic: .161, sk: .306 }],
	    0x2113: [.705, .02, .417, { sk: .111 }],
	    0x2115: [.683, .02, .722],
	    0x2118: [.453, .216, .636, { sk: .111 }],
	    0x2119: [.683, 0, .611],
	    0x211A: [.701, .181, .778],
	    0x211B: [.717, .017, .85, { ic: .037, sk: .194 }],
	    0x211C: [.686, .026, .828],
	    0x211D: [.683, 0, .722],
	    0x2124: [.683, 0, .667],
	    0x2126: [.704, 0, .722],
	    0x2127: [.684, .022, .722],
	    0x2128: [.729, .139, .602],
	    0x212C: [.708, .028, .908, { ic: .02, sk: .194 }],
	    0x212D: [.685, .024, .613],
	    0x2130: [.707, .008, .562, { ic: .156, sk: .139 }],
	    0x2131: [.735, .036, .895, { ic: .095, sk: .222 }],
	    0x2132: [.695, 0, .556],
	    0x2133: [.721, .05, 1.08, { ic: .136, sk: .444 }],
	    0x2135: [.694, 0, .611],
	    0x2136: [.763, .021, .667, { ic: .02 }],
	    0x2137: [.764, .043, .444],
	    0x2138: [.764, .043, .667],
	    0x2141: [.705, .023, .639],
	    0x2190: [.511, .011, 1],
	    0x2191: [.694, .193, .5],
	    0x2192: [.511, .011, 1],
	    0x2193: [.694, .194, .5],
	    0x2194: [.511, .011, 1],
	    0x2195: [.772, .272, .5],
	    0x2196: [.72, .195, 1],
	    0x2197: [.72, .195, 1],
	    0x2198: [.695, .22, 1],
	    0x2199: [.695, .22, 1],
	    0x219A: [.437, -0.06, 1],
	    0x219B: [.437, -0.06, 1],
	    0x219E: [.417, -0.083, 1],
	    0x21A0: [.417, -0.083, 1],
	    0x21A2: [.417, -0.083, 1.111],
	    0x21A3: [.417, -0.083, 1.111],
	    0x21A6: [.511, .011, 1],
	    0x21A9: [.511, .011, 1.126],
	    0x21AA: [.511, .011, 1.126],
	    0x21AB: [.575, .041, 1],
	    0x21AC: [.575, .041, 1],
	    0x21AD: [.417, -0.083, 1.389],
	    0x21AE: [.437, -0.06, 1],
	    0x21B0: [.722, 0, .5],
	    0x21B1: [.722, 0, .5],
	    0x21B6: [.461, 0, 1],
	    0x21B7: [.46, 0, 1],
	    0x21BA: [.65, .083, .778],
	    0x21BB: [.65, .083, .778],
	    0x21BC: [.511, -0.23, 1],
	    0x21BD: [.27, .011, 1],
	    0x21BE: [.694, .194, .417],
	    0x21BF: [.694, .194, .417],
	    0x21C0: [.511, -0.23, 1],
	    0x21C1: [.27, .011, 1],
	    0x21C2: [.694, .194, .417],
	    0x21C3: [.694, .194, .417],
	    0x21C4: [.667, 0, 1],
	    0x21C6: [.667, 0, 1],
	    0x21C7: [.583, .083, 1],
	    0x21C8: [.694, .193, .833],
	    0x21C9: [.583, .083, 1],
	    0x21CA: [.694, .194, .833],
	    0x21CB: [.514, .014, 1],
	    0x21CC: [.671, .011, 1],
	    0x21CD: [.534, .035, 1],
	    0x21CE: [.534, .037, 1],
	    0x21CF: [.534, .035, 1],
	    0x21D0: [.525, .024, 1],
	    0x21D1: [.694, .194, .611],
	    0x21D2: [.525, .024, 1],
	    0x21D3: [.694, .194, .611],
	    0x21D4: [.526, .025, 1],
	    0x21D5: [.772, .272, .611],
	    0x21DA: [.611, .111, 1],
	    0x21DB: [.611, .111, 1],
	    0x21DD: [.417, -0.083, 1],
	    0x21E0: [.437, -0.064, 1.334],
	    0x21E2: [.437, -0.064, 1.334],
	    0x2200: [.694, .022, .556],
	    0x2201: [.846, .021, .5],
	    0x2202: [.715, .022, .531, { ic: .035, sk: .0833 }],
	    0x2203: [.694, 0, .556],
	    0x2204: [.716, .215, .556],
	    0x2205: [.772, .078, .5],
	    0x2206: [.716, 0, .833],
	    0x2207: [.683, .033, .833],
	    0x2208: [.54, .04, .667],
	    0x2209: [.716, .215, .667],
	    0x220B: [.54, .04, .667],
	    0x220C: [.716, .215, .667],
	    0x220D: [.44, 0, .429, { ic: .027 }],
	    0x220F: [.75, .25, .944],
	    0x2210: [.75, .25, .944],
	    0x2211: [.75, .25, 1.056],
	    0x2212: [.583, .082, .778],
	    0x2213: [.5, .166, .778],
	    0x2214: [.766, .093, .778],
	    0x2215: [.75, .25, .5],
	    0x2216: [.75, .25, .5],
	    0x2217: [.465, -0.035, .5],
	    0x2218: [.444, -0.055, .5],
	    0x2219: [.444, -0.055, .5],
	    0x221A: [.8, .2, .833, { ic: .02 }],
	    0x221D: [.442, .011, .778],
	    0x221E: [.442, .011, 1],
	    0x2220: [.694, 0, .722],
	    0x2221: [.714, .02, .722],
	    0x2222: [.551, .051, .722],
	    0x2223: [.75, .249, .278],
	    0x2224: [.75, .252, .278, { ic: .019 }],
	    0x2225: [.75, .25, .5],
	    0x2226: [.75, .25, .5, { ic: .018 }],
	    0x2227: [.598, .022, .667],
	    0x2228: [.598, .022, .667],
	    0x2229: [.598, .022, .667],
	    0x222A: [.598, .022, .667],
	    0x222B: [.716, .216, .417, { ic: .055 }],
	    0x222C: [.805, .306, .819, { ic: .138 }],
	    0x222D: [.805, .306, 1.166, { ic: .138 }],
	    0x222E: [.805, .306, .472, { ic: .138 }],
	    0x2234: [.471, .082, .667],
	    0x2235: [.471, .082, .667],
	    0x223C: [.367, -0.133, .778],
	    0x223D: [.367, -0.133, .778],
	    0x2240: [.583, .083, .278],
	    0x2241: [.467, -0.032, .778],
	    0x2242: [.463, -0.034, .778],
	    0x2243: [.464, -0.036, .778],
	    0x2244: [.716, .215, .778],
	    0x2245: [.589, -0.022, .778],
	    0x2247: [.652, .155, .778],
	    0x2248: [.483, -0.055, .778],
	    0x2249: [.716, .215, .778],
	    0x224A: [.579, .039, .778],
	    0x224D: [.484, -0.016, .778],
	    0x224E: [.492, -0.008, .778],
	    0x224F: [.492, -0.133, .778],
	    0x2250: [.67, -0.133, .778],
	    0x2251: [.609, .108, .778],
	    0x2252: [.601, .101, .778],
	    0x2253: [.601, .102, .778],
	    0x2256: [.367, -0.133, .778],
	    0x2257: [.721, -0.133, .778],
	    0x225C: [.859, -0.133, .778],
	    0x2260: [.716, .215, .778],
	    0x2261: [.464, -0.036, .778],
	    0x2262: [.716, .215, .778],
	    0x2264: [.636, .138, .778],
	    0x2265: [.636, .138, .778],
	    0x2266: [.753, .175, .778],
	    0x2267: [.753, .175, .778],
	    0x2268: [.752, .286, .778],
	    0x2269: [.752, .286, .778],
	    0x226A: [.568, .067, 1],
	    0x226B: [.567, .067, 1],
	    0x226C: [.75, .25, .5],
	    0x226D: [.716, .215, .778],
	    0x226E: [.708, .209, .778],
	    0x226F: [.708, .209, .778],
	    0x2270: [.801, .303, .778],
	    0x2271: [.801, .303, .778],
	    0x2272: [.732, .228, .778],
	    0x2273: [.732, .228, .778],
	    0x2274: [.732, .228, .778],
	    0x2275: [.732, .228, .778],
	    0x2276: [.681, .253, .778],
	    0x2277: [.681, .253, .778],
	    0x2278: [.716, .253, .778],
	    0x2279: [.716, .253, .778],
	    0x227A: [.539, .041, .778],
	    0x227B: [.539, .041, .778],
	    0x227C: [.58, .153, .778],
	    0x227D: [.58, .154, .778],
	    0x227E: [.732, .228, .778],
	    0x227F: [.732, .228, .778],
	    0x2280: [.705, .208, .778],
	    0x2281: [.705, .208, .778],
	    0x2282: [.54, .04, .778],
	    0x2283: [.54, .04, .778],
	    0x2284: [.716, .215, .778],
	    0x2285: [.716, .215, .778],
	    0x2286: [.636, .138, .778],
	    0x2287: [.636, .138, .778],
	    0x2288: [.801, .303, .778],
	    0x2289: [.801, .303, .778],
	    0x228A: [.635, .241, .778],
	    0x228B: [.635, .241, .778],
	    0x228E: [.598, .022, .667],
	    0x228F: [.539, .041, .778],
	    0x2290: [.539, .041, .778],
	    0x2291: [.636, .138, .778],
	    0x2292: [.636, .138, .778],
	    0x2293: [.598, 0, .667],
	    0x2294: [.598, 0, .667],
	    0x2295: [.583, .083, .778],
	    0x2296: [.583, .083, .778],
	    0x2297: [.583, .083, .778],
	    0x2298: [.583, .083, .778],
	    0x2299: [.583, .083, .778],
	    0x229A: [.582, .082, .778],
	    0x229B: [.582, .082, .778],
	    0x229D: [.582, .082, .778],
	    0x229E: [.689, 0, .778],
	    0x229F: [.689, 0, .778],
	    0x22A0: [.689, 0, .778],
	    0x22A1: [.689, 0, .778],
	    0x22A2: [.694, 0, .611],
	    0x22A3: [.694, 0, .611],
	    0x22A4: [.668, 0, .778],
	    0x22A5: [.668, 0, .778],
	    0x22A8: [.75, .249, .867],
	    0x22A9: [.694, 0, .722],
	    0x22AA: [.694, 0, .889],
	    0x22AC: [.695, 0, .611],
	    0x22AD: [.695, 0, .611],
	    0x22AE: [.695, 0, .722],
	    0x22AF: [.695, 0, .722],
	    0x22B2: [.539, .041, .778],
	    0x22B3: [.539, .041, .778],
	    0x22B4: [.636, .138, .778],
	    0x22B5: [.636, .138, .778],
	    0x22B8: [.408, -0.092, 1.111],
	    0x22BA: [.431, .212, .556],
	    0x22BB: [.716, 0, .611],
	    0x22BC: [.716, 0, .611],
	    0x22C0: [.75, .249, .833],
	    0x22C1: [.75, .249, .833],
	    0x22C2: [.75, .249, .833],
	    0x22C3: [.75, .249, .833],
	    0x22C4: [.488, -0.012, .5],
	    0x22C5: [.31, -0.19, .278],
	    0x22C6: [.486, -0.016, .5],
	    0x22C7: [.545, .044, .778],
	    0x22C8: [.505, .005, .9],
	    0x22C9: [.492, -0.008, .778],
	    0x22CA: [.492, -0.008, .778],
	    0x22CB: [.694, .022, .778],
	    0x22CC: [.694, .022, .778],
	    0x22CD: [.464, -0.036, .778],
	    0x22CE: [.578, .021, .76],
	    0x22CF: [.578, .022, .76],
	    0x22D0: [.54, .04, .778],
	    0x22D1: [.54, .04, .778],
	    0x22D2: [.598, .022, .667],
	    0x22D3: [.598, .022, .667],
	    0x22D4: [.736, .022, .667],
	    0x22D6: [.541, .041, .778],
	    0x22D7: [.541, .041, .778],
	    0x22D8: [.568, .067, 1.333],
	    0x22D9: [.568, .067, 1.333],
	    0x22DA: [.886, .386, .778],
	    0x22DB: [.886, .386, .778],
	    0x22DE: [.734, 0, .778],
	    0x22DF: [.734, 0, .778],
	    0x22E0: [.801, .303, .778],
	    0x22E1: [.801, .303, .778],
	    0x22E2: [.716, .215, .778],
	    0x22E3: [.716, .215, .778],
	    0x22E6: [.73, .359, .778],
	    0x22E7: [.73, .359, .778],
	    0x22E8: [.73, .359, .778],
	    0x22E9: [.73, .359, .778],
	    0x22EA: [.706, .208, .778],
	    0x22EB: [.706, .208, .778],
	    0x22EC: [.802, .303, .778],
	    0x22ED: [.801, .303, .778],
	    0x22EE: [1.3, .03, .278],
	    0x22EF: [.31, -0.19, 1.172],
	    0x22F1: [1.52, -0.1, 1.282],
	    0x2305: [.716, 0, .611],
	    0x2306: [.813, .097, .611],
	    0x2308: [.75, .25, .444],
	    0x2309: [.75, .25, .444],
	    0x230A: [.75, .25, .444],
	    0x230B: [.75, .25, .444],
	    0x231C: [.694, -0.306, .5],
	    0x231D: [.694, -0.306, .5],
	    0x231E: [.366, .022, .5],
	    0x231F: [.366, .022, .5],
	    0x2322: [.388, -0.122, 1],
	    0x2323: [.378, -0.134, 1],
	    0x2329: [.75, .25, .389],
	    0x232A: [.75, .25, .389],
	    0x23B0: [.744, .244, .412],
	    0x23B1: [.744, .244, .412],
	    0x23D0: [.602, 0, .667],
	    0x24C8: [.709, .175, .902],
	    0x250C: [.694, -0.306, .5],
	    0x2510: [.694, -0.306, .5],
	    0x2514: [.366, .022, .5],
	    0x2518: [.366, .022, .5],
	    0x2571: [.694, .195, .889],
	    0x2572: [.694, .195, .889],
	    0x25A0: [.689, 0, .778],
	    0x25A1: [.689, 0, .778],
	    0x25AA: [.689, 0, .778],
	    0x25B2: [.575, .02, .722],
	    0x25B3: [.716, 0, .889],
	    0x25B4: [.575, .02, .722],
	    0x25B5: [.716, 0, .889],
	    0x25B6: [.539, .041, .778],
	    0x25B8: [.539, .041, .778],
	    0x25B9: [.505, .005, .5],
	    0x25BC: [.576, .019, .722],
	    0x25BD: [.5, .215, .889],
	    0x25BE: [.576, .019, .722],
	    0x25BF: [.5, .215, .889],
	    0x25C0: [.539, .041, .778],
	    0x25C2: [.539, .041, .778],
	    0x25C3: [.505, .005, .5],
	    0x25CA: [.716, .132, .667],
	    0x25EF: [.715, .215, 1],
	    0x25FB: [.689, 0, .778],
	    0x25FC: [.689, 0, .778],
	    0x2605: [.694, .111, .944],
	    0x2660: [.727, .13, .778],
	    0x2661: [.716, .033, .778],
	    0x2662: [.727, .162, .778],
	    0x2663: [.726, .13, .778],
	    0x266D: [.75, .022, .389],
	    0x266E: [.734, .223, .389],
	    0x266F: [.723, .223, .389],
	    0x2713: [.706, .034, .833],
	    0x2720: [.716, .022, .833],
	    0x2758: [.75, .249, .278],
	    0x27E8: [.75, .25, .389],
	    0x27E9: [.75, .25, .389],
	    0x27EE: [.744, .244, .412],
	    0x27EF: [.744, .244, .412],
	    0x27F5: [.511, .011, 1.609],
	    0x27F6: [.511, .011, 1.638],
	    0x27F7: [.511, .011, 1.859],
	    0x27F8: [.525, .024, 1.609],
	    0x27F9: [.525, .024, 1.638],
	    0x27FA: [.525, .024, 1.858],
	    0x27FC: [.511, .011, 1.638],
	    0x29EB: [.716, .132, .667],
	    0x29F8: [.716, .215, .778],
	    0x2A00: [.75, .25, 1.111],
	    0x2A01: [.75, .25, 1.111],
	    0x2A02: [.75, .25, 1.111],
	    0x2A04: [.75, .249, .833],
	    0x2A06: [.75, .249, .833],
	    0x2A0C: [.805, .306, 1.638, { ic: .138 }],
	    0x2A2F: [.491, -0.009, .778],
	    0x2A3F: [.683, 0, .75],
	    0x2A5E: [.813, .097, .611],
	    0x2A7D: [.636, .138, .778],
	    0x2A7E: [.636, .138, .778],
	    0x2A85: [.762, .29, .778],
	    0x2A86: [.762, .29, .778],
	    0x2A87: [.635, .241, .778],
	    0x2A88: [.635, .241, .778],
	    0x2A89: [.761, .387, .778],
	    0x2A8A: [.761, .387, .778],
	    0x2A8B: [1.003, .463, .778],
	    0x2A8C: [1.003, .463, .778],
	    0x2A95: [.636, .138, .778],
	    0x2A96: [.636, .138, .778],
	    0x2AAF: [.636, .138, .778],
	    0x2AB0: [.636, .138, .778],
	    0x2AB5: [.752, .286, .778],
	    0x2AB6: [.752, .286, .778],
	    0x2AB7: [.761, .294, .778],
	    0x2AB8: [.761, .294, .778],
	    0x2AB9: [.761, .337, .778],
	    0x2ABA: [.761, .337, .778],
	    0x2AC5: [.753, .215, .778],
	    0x2AC6: [.753, .215, .778],
	    0x2ACB: [.783, .385, .778],
	    0x2ACC: [.783, .385, .778],
	    0x3008: [.75, .25, .389],
	    0x3009: [.75, .25, .389],
	    0xE006: [.43, .023, .222, { ic: .018 }],
	    0xE007: [.431, .024, .389, { ic: .018 }],
	    0xE008: [.605, .085, .778],
	    0xE009: [.434, .006, .667, { ic: .067 }],
	    0xE00C: [.752, .284, .778],
	    0xE00D: [.752, .284, .778],
	    0xE00E: [.919, .421, .778],
	    0xE00F: [.801, .303, .778],
	    0xE010: [.801, .303, .778],
	    0xE011: [.919, .421, .778],
	    0xE016: [.828, .33, .778],
	    0xE017: [.752, .332, .778],
	    0xE018: [.828, .33, .778],
	    0xE019: [.752, .333, .778],
	    0xE01A: [.634, .255, .778],
	    0xE01B: [.634, .254, .778],
	    0x1D400: [.698, 0, .869],
	    0x1D401: [.686, 0, .818],
	    0x1D402: [.697, .011, .831],
	    0x1D403: [.686, 0, .882],
	    0x1D404: [.68, 0, .756],
	    0x1D405: [.68, 0, .724],
	    0x1D406: [.697, .01, .904],
	    0x1D407: [.686, 0, .9],
	    0x1D408: [.686, 0, .436],
	    0x1D409: [.686, .011, .594],
	    0x1D40A: [.686, 0, .901],
	    0x1D40B: [.686, 0, .692],
	    0x1D40C: [.686, 0, 1.092],
	    0x1D40D: [.686, 0, .9],
	    0x1D40E: [.696, .01, .864],
	    0x1D40F: [.686, 0, .786],
	    0x1D410: [.696, .193, .864],
	    0x1D411: [.686, .011, .862],
	    0x1D412: [.697, .011, .639],
	    0x1D413: [.675, 0, .8],
	    0x1D414: [.686, .011, .885],
	    0x1D415: [.686, .007, .869],
	    0x1D416: [.686, .007, 1.189],
	    0x1D417: [.686, 0, .869],
	    0x1D418: [.686, 0, .869],
	    0x1D419: [.686, 0, .703],
	    0x1D41A: [.453, .006, .559],
	    0x1D41B: [.694, .006, .639],
	    0x1D41C: [.453, .006, .511],
	    0x1D41D: [.694, .006, .639],
	    0x1D41E: [.452, .006, .527],
	    0x1D41F: [.7, 0, .351, { ic: .101 }],
	    0x1D420: [.455, .201, .575],
	    0x1D421: [.694, 0, .639],
	    0x1D422: [.695, 0, .319],
	    0x1D423: [.695, .2, .351],
	    0x1D424: [.694, 0, .607],
	    0x1D425: [.694, 0, .319],
	    0x1D426: [.45, 0, .958],
	    0x1D427: [.45, 0, .639],
	    0x1D428: [.452, .005, .575],
	    0x1D429: [.45, .194, .639],
	    0x1D42A: [.45, .194, .607],
	    0x1D42B: [.45, 0, .474],
	    0x1D42C: [.453, .006, .454],
	    0x1D42D: [.635, .005, .447],
	    0x1D42E: [.45, .006, .639],
	    0x1D42F: [.444, 0, .607],
	    0x1D430: [.444, 0, .831],
	    0x1D431: [.444, 0, .607],
	    0x1D432: [.444, .2, .607],
	    0x1D433: [.444, 0, .511],
	    0x1D434: [.716, 0, .75, { sk: .139 }],
	    0x1D435: [.683, 0, .759, { sk: .0833 }],
	    0x1D436: [.705, .022, .715, { ic: .045, sk: .0833 }],
	    0x1D437: [.683, 0, .828, { sk: .0556 }],
	    0x1D438: [.68, 0, .738, { ic: .026, sk: .0833 }],
	    0x1D439: [.68, 0, .643, { ic: .106, sk: .0833 }],
	    0x1D43A: [.705, .022, .786, { sk: .0833 }],
	    0x1D43B: [.683, 0, .831, { ic: .057, sk: .0556 }],
	    0x1D43C: [.683, 0, .44, { ic: .064, sk: .111 }],
	    0x1D43D: [.683, .022, .555, { ic: .078, sk: .167 }],
	    0x1D43E: [.683, 0, .849, { ic: .04, sk: .0556 }],
	    0x1D43F: [.683, 0, .681, { sk: .0278 }],
	    0x1D440: [.683, 0, .97, { ic: .081, sk: .0833 }],
	    0x1D441: [.683, 0, .803, { ic: .085, sk: .0833 }],
	    0x1D442: [.704, .022, .763, { sk: .0833 }],
	    0x1D443: [.683, 0, .642, { ic: .109, sk: .0833 }],
	    0x1D444: [.704, .194, .791, { sk: .0833 }],
	    0x1D445: [.683, .021, .759, { sk: .0833 }],
	    0x1D446: [.705, .022, .613, { ic: .032, sk: .0833 }],
	    0x1D447: [.677, 0, .584, { ic: .12, sk: .0833 }],
	    0x1D448: [.683, .022, .683, { ic: .084, sk: .0278 }],
	    0x1D449: [.683, .022, .583, { ic: .186 }],
	    0x1D44A: [.683, .022, .944, { ic: .104 }],
	    0x1D44B: [.683, 0, .828, { ic: .024, sk: .0833 }],
	    0x1D44C: [.683, 0, .581, { ic: .182 }],
	    0x1D44D: [.683, 0, .683, { ic: .04, sk: .0833 }],
	    0x1D44E: [.441, .01, .529],
	    0x1D44F: [.694, .011, .429],
	    0x1D450: [.442, .011, .433, { sk: .0556 }],
	    0x1D451: [.694, .01, .52, { sk: .167 }],
	    0x1D452: [.442, .011, .466, { sk: .0556 }],
	    0x1D453: [.705, .205, .49, { ic: .06, sk: .167 }],
	    0x1D454: [.442, .205, .477, { sk: .0278 }],
	    0x1D456: [.661, .011, .345],
	    0x1D457: [.661, .204, .412],
	    0x1D458: [.694, .011, .521],
	    0x1D459: [.694, .011, .298, { sk: .0833 }],
	    0x1D45A: [.442, .011, .878],
	    0x1D45B: [.442, .011, .6],
	    0x1D45C: [.441, .011, .485, { sk: .0556 }],
	    0x1D45D: [.442, .194, .503, { sk: .0833 }],
	    0x1D45E: [.442, .194, .446, { ic: .014, sk: .0833 }],
	    0x1D45F: [.442, .011, .451, { sk: .0556 }],
	    0x1D460: [.442, .01, .469, { sk: .0556 }],
	    0x1D461: [.626, .011, .361, { sk: .0833 }],
	    0x1D462: [.442, .011, .572, { sk: .0278 }],
	    0x1D463: [.443, .011, .485, { sk: .0278 }],
	    0x1D464: [.443, .011, .716, { sk: .0833 }],
	    0x1D465: [.442, .011, .572, { sk: .0278 }],
	    0x1D466: [.442, .205, .49, { sk: .0556 }],
	    0x1D467: [.442, .011, .465, { sk: .0556 }],
	    0x1D468: [.711, 0, .869, { sk: .16 }],
	    0x1D469: [.686, 0, .866, { sk: .0958 }],
	    0x1D46A: [.703, .017, .817, { ic: .038, sk: .0958 }],
	    0x1D46B: [.686, 0, .938, { sk: .0639 }],
	    0x1D46C: [.68, 0, .81, { ic: .015, sk: .0958 }],
	    0x1D46D: [.68, 0, .689, { ic: .12, sk: .0958 }],
	    0x1D46E: [.703, .016, .887, { sk: .0958 }],
	    0x1D46F: [.686, 0, .982, { ic: .045, sk: .0639 }],
	    0x1D470: [.686, 0, .511, { ic: .062, sk: .128 }],
	    0x1D471: [.686, .017, .631, { ic: .063, sk: .192 }],
	    0x1D472: [.686, 0, .971, { ic: .032, sk: .0639 }],
	    0x1D473: [.686, 0, .756, { sk: .0319 }],
	    0x1D474: [.686, 0, 1.142, { ic: .077, sk: .0958 }],
	    0x1D475: [.686, 0, .95, { ic: .077, sk: .0958 }],
	    0x1D476: [.703, .017, .837, { sk: .0958 }],
	    0x1D477: [.686, 0, .723, { ic: .124, sk: .0958 }],
	    0x1D478: [.703, .194, .869, { sk: .0958 }],
	    0x1D479: [.686, .017, .872, { sk: .0958 }],
	    0x1D47A: [.703, .017, .693, { ic: .021, sk: .0958 }],
	    0x1D47B: [.675, 0, .637, { ic: .135, sk: .0958 }],
	    0x1D47C: [.686, .016, .8, { ic: .077, sk: .0319 }],
	    0x1D47D: [.686, .016, .678, { ic: .208 }],
	    0x1D47E: [.686, .017, 1.093, { ic: .114 }],
	    0x1D47F: [.686, 0, .947, { sk: .0958 }],
	    0x1D480: [.686, 0, .675, { ic: .201 }],
	    0x1D481: [.686, 0, .773, { ic: .032, sk: .0958 }],
	    0x1D482: [.452, .008, .633],
	    0x1D483: [.694, .008, .521],
	    0x1D484: [.451, .008, .513, { sk: .0639 }],
	    0x1D485: [.694, .008, .61, { sk: .192 }],
	    0x1D486: [.452, .008, .554, { sk: .0639 }],
	    0x1D487: [.701, .201, .568, { ic: .056, sk: .192 }],
	    0x1D488: [.452, .202, .545, { sk: .0319 }],
	    0x1D489: [.694, .008, .668, { sk: -0.0319 }],
	    0x1D48A: [.694, .008, .405],
	    0x1D48B: [.694, .202, .471],
	    0x1D48C: [.694, .008, .604],
	    0x1D48D: [.694, .008, .348, { sk: .0958 }],
	    0x1D48E: [.452, .008, 1.032],
	    0x1D48F: [.452, .008, .713],
	    0x1D490: [.452, .008, .585, { sk: .0639 }],
	    0x1D491: [.452, .194, .601, { sk: .0958 }],
	    0x1D492: [.452, .194, .542, { sk: .0958 }],
	    0x1D493: [.452, .008, .529, { sk: .0639 }],
	    0x1D494: [.451, .008, .531, { sk: .0639 }],
	    0x1D495: [.643, .007, .415, { sk: .0958 }],
	    0x1D496: [.452, .008, .681, { sk: .0319 }],
	    0x1D497: [.453, .008, .567, { sk: .0319 }],
	    0x1D498: [.453, .008, .831, { sk: .0958 }],
	    0x1D499: [.452, .008, .659, { sk: .0319 }],
	    0x1D49A: [.452, .202, .59, { sk: .0639 }],
	    0x1D49B: [.452, .008, .555, { sk: .0639 }],
	    0x1D49C: [.717, .008, .803, { ic: .213, sk: .389 }],
	    0x1D49E: [.728, .026, .666, { ic: .153, sk: .278 }],
	    0x1D49F: [.708, .031, .774, { ic: .081, sk: .111 }],
	    0x1D4A2: [.717, .037, .61, { ic: .128, sk: .25 }],
	    0x1D4A5: [.717, .314, 1.052, { ic: .081, sk: .417 }],
	    0x1D4A6: [.717, .037, .914, { ic: .29, sk: .361 }],
	    0x1D4A9: [.726, .036, .902, { ic: .306, sk: .389 }],
	    0x1D4AA: [.707, .008, .738, { ic: .067, sk: .167 }],
	    0x1D4AB: [.716, .037, 1.013, { ic: .018, sk: .222 }],
	    0x1D4AC: [.717, .017, .883, { sk: .278 }],
	    0x1D4AE: [.708, .036, .868, { ic: .148, sk: .333 }],
	    0x1D4AF: [.735, .037, .747, { ic: .249, sk: .222 }],
	    0x1D4B0: [.717, .017, .8, { ic: .16, sk: .25 }],
	    0x1D4B1: [.717, .017, .622, { ic: .228, sk: .222 }],
	    0x1D4B2: [.717, .017, .805, { ic: .221, sk: .25 }],
	    0x1D4B3: [.717, .017, .944, { ic: .187, sk: .278 }],
	    0x1D4B4: [.716, .017, .71, { ic: .249, sk: .194 }],
	    0x1D4B5: [.717, .016, .821, { ic: .211, sk: .306 }],
	    0x1D504: [.696, .026, .718],
	    0x1D505: [.691, .027, .884],
	    0x1D507: [.685, .027, .832],
	    0x1D508: [.685, .024, .663],
	    0x1D509: [.686, .153, .611],
	    0x1D50A: [.69, .026, .785],
	    0x1D50D: [.686, .139, .552],
	    0x1D50E: [.68, .027, .668, { ic: .014 }],
	    0x1D50F: [.686, .026, .666],
	    0x1D510: [.692, .027, 1.05],
	    0x1D511: [.686, .025, .832],
	    0x1D512: [.729, .027, .827],
	    0x1D513: [.692, .218, .828],
	    0x1D514: [.729, .069, .827],
	    0x1D516: [.692, .027, .829],
	    0x1D517: [.701, .027, .669],
	    0x1D518: [.697, .027, .646, { ic: .019 }],
	    0x1D519: [.686, .026, .831],
	    0x1D51A: [.686, .027, 1.046],
	    0x1D51B: [.688, .027, .719],
	    0x1D51C: [.686, .218, .833],
	    0x1D51E: [.47, .035, .5],
	    0x1D51F: [.685, .031, .513],
	    0x1D520: [.466, .029, .389],
	    0x1D521: [.609, .033, .499],
	    0x1D522: [.467, .03, .401],
	    0x1D523: [.681, .221, .326],
	    0x1D524: [.47, .209, .504],
	    0x1D525: [.688, .205, .521],
	    0x1D526: [.673, .02, .279],
	    0x1D527: [.672, .208, .281],
	    0x1D528: [.689, .025, .389],
	    0x1D529: [.685, .02, .28],
	    0x1D52A: [.475, .026, .767],
	    0x1D52B: [.475, .022, .527],
	    0x1D52C: [.48, .028, .489],
	    0x1D52D: [.541, .212, .5],
	    0x1D52E: [.479, .219, .489],
	    0x1D52F: [.474, .021, .389],
	    0x1D530: [.478, .029, .443],
	    0x1D531: [.64, .02, .333, { ic: .015 }],
	    0x1D532: [.474, .023, .517],
	    0x1D533: [.53, .028, .512],
	    0x1D534: [.532, .028, .774],
	    0x1D535: [.472, .188, .389],
	    0x1D536: [.528, .218, .499],
	    0x1D537: [.471, .214, .391],
	    0x1D538: [.701, 0, .722],
	    0x1D539: [.683, 0, .667],
	    0x1D53B: [.683, 0, .722],
	    0x1D53C: [.683, 0, .667],
	    0x1D53D: [.683, 0, .611],
	    0x1D53E: [.702, .019, .778],
	    0x1D540: [.683, 0, .389],
	    0x1D541: [.683, .077, .5],
	    0x1D542: [.683, 0, .778],
	    0x1D543: [.683, 0, .667],
	    0x1D544: [.683, 0, .944],
	    0x1D546: [.701, .019, .778],
	    0x1D54A: [.702, .012, .556],
	    0x1D54B: [.683, 0, .667],
	    0x1D54C: [.683, .019, .722],
	    0x1D54D: [.683, .02, .722],
	    0x1D54E: [.683, .019, 1],
	    0x1D54F: [.683, 0, .722],
	    0x1D550: [.683, 0, .722],
	    0x1D56C: [.686, .031, .847],
	    0x1D56D: [.684, .031, 1.044],
	    0x1D56E: [.676, .032, .723],
	    0x1D56F: [.683, .029, .982],
	    0x1D570: [.686, .029, .783],
	    0x1D571: [.684, .146, .722],
	    0x1D572: [.687, .029, .927],
	    0x1D573: [.683, .126, .851],
	    0x1D574: [.681, .025, .655],
	    0x1D575: [.68, .141, .652],
	    0x1D576: [.681, .026, .789, { ic: .017 }],
	    0x1D577: [.683, .028, .786],
	    0x1D578: [.683, .032, 1.239],
	    0x1D579: [.679, .03, .983],
	    0x1D57A: [.726, .03, .976],
	    0x1D57B: [.688, .223, .977],
	    0x1D57C: [.726, .083, .976],
	    0x1D57D: [.688, .028, .978],
	    0x1D57E: [.685, .031, .978],
	    0x1D57F: [.686, .03, .79, { ic: .012 }],
	    0x1D580: [.688, .039, .851, { ic: .02 }],
	    0x1D581: [.685, .029, .982],
	    0x1D582: [.683, .03, 1.235],
	    0x1D583: [.681, .035, .849],
	    0x1D584: [.688, .214, .984],
	    0x1D585: [.677, .148, .711],
	    0x1D586: [.472, .032, .603],
	    0x1D587: [.69, .032, .59],
	    0x1D588: [.473, .026, .464],
	    0x1D589: [.632, .028, .589],
	    0x1D58A: [.471, .027, .472],
	    0x1D58B: [.687, .222, .388],
	    0x1D58C: [.472, .208, .595],
	    0x1D58D: [.687, .207, .615],
	    0x1D58E: [.686, .025, .331],
	    0x1D58F: [.682, .203, .332],
	    0x1D590: [.682, .025, .464],
	    0x1D591: [.681, .024, .337],
	    0x1D592: [.476, .031, .921],
	    0x1D593: [.473, .028, .654],
	    0x1D594: [.482, .034, .609],
	    0x1D595: [.557, .207, .604],
	    0x1D596: [.485, .211, .596],
	    0x1D597: [.472, .026, .46],
	    0x1D598: [.479, .034, .523],
	    0x1D599: [.648, .027, .393, { ic: .014 }],
	    0x1D59A: [.472, .032, .589, { ic: .014 }],
	    0x1D59B: [.546, .027, .604],
	    0x1D59C: [.549, .032, .918],
	    0x1D59D: [.471, .188, .459],
	    0x1D59E: [.557, .221, .589],
	    0x1D59F: [.471, .214, .461],
	    0x1D5A0: [.694, 0, .667],
	    0x1D5A1: [.694, 0, .667],
	    0x1D5A2: [.705, .011, .639],
	    0x1D5A3: [.694, 0, .722],
	    0x1D5A4: [.691, 0, .597],
	    0x1D5A5: [.691, 0, .569],
	    0x1D5A6: [.704, .011, .667],
	    0x1D5A7: [.694, 0, .708],
	    0x1D5A8: [.694, 0, .278],
	    0x1D5A9: [.694, .022, .472],
	    0x1D5AA: [.694, 0, .694],
	    0x1D5AB: [.694, 0, .542],
	    0x1D5AC: [.694, 0, .875],
	    0x1D5AD: [.694, 0, .708],
	    0x1D5AE: [.715, .022, .736],
	    0x1D5AF: [.694, 0, .639],
	    0x1D5B0: [.715, .125, .736],
	    0x1D5B1: [.694, 0, .646],
	    0x1D5B2: [.716, .022, .556],
	    0x1D5B3: [.688, 0, .681],
	    0x1D5B4: [.694, .022, .688],
	    0x1D5B5: [.694, 0, .667],
	    0x1D5B6: [.694, 0, .944],
	    0x1D5B7: [.694, 0, .667],
	    0x1D5B8: [.694, 0, .667],
	    0x1D5B9: [.694, 0, .611],
	    0x1D5BA: [.46, .01, .481],
	    0x1D5BB: [.694, .011, .517],
	    0x1D5BC: [.46, .01, .444],
	    0x1D5BD: [.694, .01, .517],
	    0x1D5BE: [.461, .01, .444],
	    0x1D5BF: [.705, 0, .306, { ic: .041 }],
	    0x1D5C0: [.455, .206, .5],
	    0x1D5C1: [.694, 0, .517],
	    0x1D5C2: [.68, 0, .239],
	    0x1D5C3: [.68, .205, .267],
	    0x1D5C4: [.694, 0, .489],
	    0x1D5C5: [.694, 0, .239],
	    0x1D5C6: [.455, 0, .794],
	    0x1D5C7: [.455, 0, .517],
	    0x1D5C8: [.46, .01, .5],
	    0x1D5C9: [.455, .194, .517],
	    0x1D5CA: [.455, .194, .517],
	    0x1D5CB: [.455, 0, .342],
	    0x1D5CC: [.46, .01, .383],
	    0x1D5CD: [.571, .01, .361],
	    0x1D5CE: [.444, .01, .517],
	    0x1D5CF: [.444, 0, .461],
	    0x1D5D0: [.444, 0, .683],
	    0x1D5D1: [.444, 0, .461],
	    0x1D5D2: [.444, .204, .461],
	    0x1D5D3: [.444, 0, .435],
	    0x1D5D4: [.694, 0, .733],
	    0x1D5D5: [.694, 0, .733],
	    0x1D5D6: [.704, .011, .703],
	    0x1D5D7: [.694, 0, .794],
	    0x1D5D8: [.691, 0, .642],
	    0x1D5D9: [.691, 0, .611],
	    0x1D5DA: [.705, .011, .733],
	    0x1D5DB: [.694, 0, .794],
	    0x1D5DC: [.694, 0, .331],
	    0x1D5DD: [.694, .022, .519],
	    0x1D5DE: [.694, 0, .764],
	    0x1D5DF: [.694, 0, .581],
	    0x1D5E0: [.694, 0, .978],
	    0x1D5E1: [.694, 0, .794],
	    0x1D5E2: [.716, .022, .794],
	    0x1D5E3: [.694, 0, .703],
	    0x1D5E4: [.716, .106, .794],
	    0x1D5E5: [.694, 0, .703],
	    0x1D5E6: [.716, .022, .611],
	    0x1D5E7: [.688, 0, .733],
	    0x1D5E8: [.694, .022, .764],
	    0x1D5E9: [.694, 0, .733],
	    0x1D5EA: [.694, 0, 1.039],
	    0x1D5EB: [.694, 0, .733],
	    0x1D5EC: [.694, 0, .733],
	    0x1D5ED: [.694, 0, .672],
	    0x1D5EE: [.475, .011, .525],
	    0x1D5EF: [.694, .01, .561],
	    0x1D5F0: [.475, .011, .489],
	    0x1D5F1: [.694, .011, .561],
	    0x1D5F2: [.474, .01, .511],
	    0x1D5F3: [.705, 0, .336, { ic: .045 }],
	    0x1D5F4: [.469, .206, .55],
	    0x1D5F5: [.694, 0, .561],
	    0x1D5F6: [.695, 0, .256],
	    0x1D5F7: [.695, .205, .286],
	    0x1D5F8: [.694, 0, .531],
	    0x1D5F9: [.694, 0, .256],
	    0x1D5FA: [.469, 0, .867],
	    0x1D5FB: [.468, 0, .561],
	    0x1D5FC: [.474, .011, .55],
	    0x1D5FD: [.469, .194, .561],
	    0x1D5FE: [.469, .194, .561],
	    0x1D5FF: [.469, 0, .372],
	    0x1D600: [.474, .01, .422],
	    0x1D601: [.589, .01, .404],
	    0x1D602: [.458, .011, .561],
	    0x1D603: [.458, 0, .5],
	    0x1D604: [.458, 0, .744],
	    0x1D605: [.458, 0, .5],
	    0x1D606: [.458, .205, .5],
	    0x1D607: [.458, 0, .476],
	    0x1D608: [.694, 0, .667],
	    0x1D609: [.694, 0, .667, { ic: .029 }],
	    0x1D60A: [.705, .01, .639, { ic: .08 }],
	    0x1D60B: [.694, 0, .722, { ic: .025 }],
	    0x1D60C: [.691, 0, .597, { ic: .091 }],
	    0x1D60D: [.691, 0, .569, { ic: .104 }],
	    0x1D60E: [.705, .011, .667, { ic: .063 }],
	    0x1D60F: [.694, 0, .708, { ic: .06 }],
	    0x1D610: [.694, 0, .278, { ic: .06 }],
	    0x1D611: [.694, .022, .472, { ic: .063 }],
	    0x1D612: [.694, 0, .694, { ic: .091 }],
	    0x1D613: [.694, 0, .542],
	    0x1D614: [.694, 0, .875, { ic: .054 }],
	    0x1D615: [.694, 0, .708, { ic: .058 }],
	    0x1D616: [.716, .022, .736, { ic: .027 }],
	    0x1D617: [.694, 0, .639, { ic: .051 }],
	    0x1D618: [.716, .125, .736, { ic: .027 }],
	    0x1D619: [.694, 0, .646, { ic: .052 }],
	    0x1D61A: [.716, .022, .556, { ic: .053 }],
	    0x1D61B: [.688, 0, .681, { ic: .109 }],
	    0x1D61C: [.694, .022, .688, { ic: .059 }],
	    0x1D61D: [.694, 0, .667, { ic: .132 }],
	    0x1D61E: [.694, 0, .944, { ic: .132 }],
	    0x1D61F: [.694, 0, .667, { ic: .091 }],
	    0x1D620: [.694, 0, .667, { ic: .143 }],
	    0x1D621: [.694, 0, .611, { ic: .091 }],
	    0x1D622: [.461, .01, .481],
	    0x1D623: [.694, .011, .517, { ic: .022 }],
	    0x1D624: [.46, .011, .444, { ic: .055 }],
	    0x1D625: [.694, .01, .517, { ic: .071 }],
	    0x1D626: [.46, .011, .444, { ic: .028 }],
	    0x1D627: [.705, 0, .306, { ic: .188 }],
	    0x1D628: [.455, .206, .5, { ic: .068 }],
	    0x1D629: [.694, 0, .517],
	    0x1D62A: [.68, 0, .239, { ic: .076 }],
	    0x1D62B: [.68, .204, .267, { ic: .069 }],
	    0x1D62C: [.694, 0, .489, { ic: .054 }],
	    0x1D62D: [.694, 0, .239, { ic: .072 }],
	    0x1D62E: [.455, 0, .794],
	    0x1D62F: [.454, 0, .517],
	    0x1D630: [.461, .011, .5, { ic: .023 }],
	    0x1D631: [.455, .194, .517, { ic: .021 }],
	    0x1D632: [.455, .194, .517, { ic: .021 }],
	    0x1D633: [.455, 0, .342, { ic: .082 }],
	    0x1D634: [.461, .011, .383, { ic: .053 }],
	    0x1D635: [.571, .011, .361, { ic: .049 }],
	    0x1D636: [.444, .01, .517, { ic: .02 }],
	    0x1D637: [.444, 0, .461, { ic: .079 }],
	    0x1D638: [.444, 0, .683, { ic: .079 }],
	    0x1D639: [.444, 0, .461, { ic: .076 }],
	    0x1D63A: [.444, .205, .461, { ic: .079 }],
	    0x1D63B: [.444, 0, .435, { ic: .059 }],
	    0x1D670: [.623, 0, .525],
	    0x1D671: [.611, 0, .525],
	    0x1D672: [.622, .011, .525],
	    0x1D673: [.611, 0, .525],
	    0x1D674: [.611, 0, .525],
	    0x1D675: [.611, 0, .525],
	    0x1D676: [.622, .011, .525],
	    0x1D677: [.611, 0, .525],
	    0x1D678: [.611, 0, .525],
	    0x1D679: [.611, .011, .525],
	    0x1D67A: [.611, 0, .525],
	    0x1D67B: [.611, 0, .525],
	    0x1D67C: [.611, 0, .525],
	    0x1D67D: [.611, 0, .525],
	    0x1D67E: [.621, .01, .525],
	    0x1D67F: [.611, 0, .525],
	    0x1D680: [.621, .138, .525],
	    0x1D681: [.611, .011, .525],
	    0x1D682: [.622, .011, .525],
	    0x1D683: [.611, 0, .525],
	    0x1D684: [.611, .011, .525],
	    0x1D685: [.611, .007, .525],
	    0x1D686: [.611, .007, .525],
	    0x1D687: [.611, 0, .525],
	    0x1D688: [.611, 0, .525],
	    0x1D689: [.611, 0, .525],
	    0x1D68A: [.439, .006, .525],
	    0x1D68B: [.611, .006, .525],
	    0x1D68C: [.44, .006, .525],
	    0x1D68D: [.611, .006, .525],
	    0x1D68E: [.44, .006, .525],
	    0x1D68F: [.617, 0, .525],
	    0x1D690: [.442, .229, .525],
	    0x1D691: [.611, 0, .525],
	    0x1D692: [.612, 0, .525],
	    0x1D693: [.612, .228, .525],
	    0x1D694: [.611, 0, .525],
	    0x1D695: [.611, 0, .525],
	    0x1D696: [.436, 0, .525, { ic: .011 }],
	    0x1D697: [.436, 0, .525],
	    0x1D698: [.44, .006, .525],
	    0x1D699: [.437, .221, .525],
	    0x1D69A: [.437, .221, .525, { ic: .02 }],
	    0x1D69B: [.437, 0, .525],
	    0x1D69C: [.44, .006, .525],
	    0x1D69D: [.554, .006, .525],
	    0x1D69E: [.431, .005, .525],
	    0x1D69F: [.431, 0, .525],
	    0x1D6A0: [.431, 0, .525],
	    0x1D6A1: [.431, 0, .525],
	    0x1D6A2: [.431, .228, .525],
	    0x1D6A3: [.431, 0, .525],
	    0x1D6A8: [.698, 0, .869],
	    0x1D6A9: [.686, 0, .818],
	    0x1D6AA: [.68, 0, .692],
	    0x1D6AB: [.698, 0, .958],
	    0x1D6AC: [.68, 0, .756],
	    0x1D6AD: [.686, 0, .703],
	    0x1D6AE: [.686, 0, .9],
	    0x1D6AF: [.696, .01, .894],
	    0x1D6B0: [.686, 0, .436],
	    0x1D6B1: [.686, 0, .901],
	    0x1D6B2: [.698, 0, .806],
	    0x1D6B3: [.686, 0, 1.092],
	    0x1D6B4: [.686, 0, .9],
	    0x1D6B5: [.675, 0, .767],
	    0x1D6B6: [.696, .01, .864],
	    0x1D6B7: [.68, 0, .9],
	    0x1D6B8: [.686, 0, .786],
	    0x1D6BA: [.686, 0, .831],
	    0x1D6BB: [.675, 0, .8],
	    0x1D6BC: [.697, 0, .894],
	    0x1D6BD: [.686, 0, .831],
	    0x1D6BE: [.686, 0, .869],
	    0x1D6BF: [.686, 0, .894],
	    0x1D6C0: [.696, 0, .831],
	    0x1D6C1: [.686, .024, .958],
	    0x1D6E2: [.716, 0, .75, { sk: .139 }],
	    0x1D6E3: [.683, 0, .759, { sk: .0833 }],
	    0x1D6E4: [.68, 0, .615, { ic: .106, sk: .0833 }],
	    0x1D6E5: [.716, 0, .833, { sk: .167 }],
	    0x1D6E6: [.68, 0, .738, { ic: .026, sk: .0833 }],
	    0x1D6E7: [.683, 0, .683, { ic: .04, sk: .0833 }],
	    0x1D6E8: [.683, 0, .831, { ic: .057, sk: .0556 }],
	    0x1D6E9: [.704, .022, .763, { sk: .0833 }],
	    0x1D6EA: [.683, 0, .44, { ic: .064, sk: .111 }],
	    0x1D6EB: [.683, 0, .849, { ic: .04, sk: .0556 }],
	    0x1D6EC: [.716, 0, .694, { sk: .167 }],
	    0x1D6ED: [.683, 0, .97, { ic: .081, sk: .0833 }],
	    0x1D6EE: [.683, 0, .803, { ic: .085, sk: .0833 }],
	    0x1D6EF: [.677, 0, .742, { ic: .035, sk: .0833 }],
	    0x1D6F0: [.704, .022, .763, { sk: .0833 }],
	    0x1D6F1: [.68, 0, .831, { ic: .056, sk: .0556 }],
	    0x1D6F2: [.683, 0, .642, { ic: .109, sk: .0833 }],
	    0x1D6F4: [.683, 0, .78, { ic: .026, sk: .0833 }],
	    0x1D6F5: [.677, 0, .584, { ic: .12, sk: .0833 }],
	    0x1D6F6: [.705, 0, .583, { ic: .117, sk: .0556 }],
	    0x1D6F7: [.683, 0, .667, { sk: .0833 }],
	    0x1D6F8: [.683, 0, .828, { ic: .024, sk: .0833 }],
	    0x1D6F9: [.683, 0, .612, { ic: .08, sk: .0556 }],
	    0x1D6FA: [.704, 0, .772, { ic: .014, sk: .0833 }],
	    0x1D6FC: [.442, .011, .64, { sk: .0278 }],
	    0x1D6FD: [.705, .194, .566, { sk: .0833 }],
	    0x1D6FE: [.441, .216, .518, { ic: .025 }],
	    0x1D6FF: [.717, .01, .444, { sk: .0556 }],
	    0x1D700: [.452, .022, .466, { sk: .0833 }],
	    0x1D701: [.704, .204, .438, { ic: .033, sk: .0833 }],
	    0x1D702: [.442, .216, .497, { sk: .0556 }],
	    0x1D703: [.705, .01, .469, { sk: .0833 }],
	    0x1D704: [.442, .01, .354, { sk: .0556 }],
	    0x1D705: [.442, .011, .576],
	    0x1D706: [.694, .012, .583],
	    0x1D707: [.442, .216, .603, { sk: .0278 }],
	    0x1D708: [.442, 0, .494, { ic: .036, sk: .0278 }],
	    0x1D709: [.704, .205, .438, { sk: .111 }],
	    0x1D70A: [.441, .011, .485, { sk: .0556 }],
	    0x1D70B: [.431, .011, .57],
	    0x1D70C: [.442, .216, .517, { sk: .0833 }],
	    0x1D70D: [.442, .107, .363, { ic: .042, sk: .0833 }],
	    0x1D70E: [.431, .011, .571],
	    0x1D70F: [.431, .013, .437, { ic: .08, sk: .0278 }],
	    0x1D710: [.443, .01, .54, { sk: .0278 }],
	    0x1D711: [.442, .218, .654, { sk: .0833 }],
	    0x1D712: [.442, .204, .626, { sk: .0556 }],
	    0x1D713: [.694, .205, .651, { sk: .111 }],
	    0x1D714: [.443, .011, .622],
	    0x1D715: [.715, .022, .531, { ic: .035, sk: .0833 }],
	    0x1D716: [.431, .011, .406, { sk: .0556 }],
	    0x1D717: [.705, .011, .591, { sk: .0833 }],
	    0x1D718: [.434, .006, .667, { ic: .067 }],
	    0x1D719: [.694, .205, .596, { sk: .0833 }],
	    0x1D71A: [.442, .194, .517, { sk: .0833 }],
	    0x1D71B: [.431, .01, .828],
	    0x1D71C: [.711, 0, .869, { sk: .16 }],
	    0x1D71D: [.686, 0, .866, { sk: .0958 }],
	    0x1D71E: [.68, 0, .657, { ic: .12, sk: .0958 }],
	    0x1D71F: [.711, 0, .958, { sk: .192 }],
	    0x1D720: [.68, 0, .81, { ic: .015, sk: .0958 }],
	    0x1D721: [.686, 0, .773, { ic: .032, sk: .0958 }],
	    0x1D722: [.686, 0, .982, { ic: .045, sk: .0639 }],
	    0x1D723: [.702, .017, .867, { sk: .0958 }],
	    0x1D724: [.686, 0, .511, { ic: .062, sk: .128 }],
	    0x1D725: [.686, 0, .971, { ic: .032, sk: .0639 }],
	    0x1D726: [.711, 0, .806, { sk: .192 }],
	    0x1D727: [.686, 0, 1.142, { ic: .077, sk: .0958 }],
	    0x1D728: [.686, 0, .95, { ic: .077, sk: .0958 }],
	    0x1D729: [.675, 0, .841, { ic: .026, sk: .0958 }],
	    0x1D72A: [.703, .017, .837, { sk: .0958 }],
	    0x1D72B: [.68, 0, .982, { ic: .044, sk: .0639 }],
	    0x1D72C: [.686, 0, .723, { ic: .124, sk: .0958 }],
	    0x1D72E: [.686, 0, .885, { ic: .017, sk: .0958 }],
	    0x1D72F: [.675, 0, .637, { ic: .135, sk: .0958 }],
	    0x1D730: [.703, 0, .671, { ic: .131, sk: .0639 }],
	    0x1D731: [.686, 0, .767, { sk: .0958 }],
	    0x1D732: [.686, 0, .947, { sk: .0958 }],
	    0x1D733: [.686, 0, .714, { ic: .076, sk: .0639 }],
	    0x1D734: [.703, 0, .879, { sk: .0958 }],
	    0x1D736: [.452, .008, .761, { sk: .0319 }],
	    0x1D737: [.701, .194, .66, { sk: .0958 }],
	    0x1D738: [.451, .211, .59, { ic: .027 }],
	    0x1D739: [.725, .008, .522, { sk: .0639 }],
	    0x1D73A: [.461, .017, .529, { sk: .0958 }],
	    0x1D73B: [.711, .202, .508, { ic: .013, sk: .0958 }],
	    0x1D73C: [.452, .211, .6, { sk: .0639 }],
	    0x1D73D: [.702, .008, .562, { sk: .0958 }],
	    0x1D73E: [.452, .008, .412, { sk: .0639 }],
	    0x1D73F: [.452, .008, .668],
	    0x1D740: [.694, .013, .671],
	    0x1D741: [.452, .211, .708, { sk: .0319 }],
	    0x1D742: [.452, 0, .577, { ic: .031, sk: .0319 }],
	    0x1D743: [.711, .201, .508, { sk: .128 }],
	    0x1D744: [.452, .008, .585, { sk: .0639 }],
	    0x1D745: [.444, .008, .682],
	    0x1D746: [.451, .211, .612, { sk: .0958 }],
	    0x1D747: [.451, .105, .424, { ic: .033, sk: .0958 }],
	    0x1D748: [.444, .008, .686],
	    0x1D749: [.444, .013, .521, { ic: .089, sk: .0319 }],
	    0x1D74A: [.453, .008, .631, { sk: .0319 }],
	    0x1D74B: [.452, .216, .747, { sk: .0958 }],
	    0x1D74C: [.452, .201, .718, { sk: .0639 }],
	    0x1D74D: [.694, .202, .758, { sk: .128 }],
	    0x1D74E: [.453, .008, .718],
	    0x1D74F: [.71, .017, .628, { ic: .029, sk: .0958 }],
	    0x1D750: [.444, .007, .483, { sk: .0639 }],
	    0x1D751: [.701, .008, .692, { sk: .0958 }],
	    0x1D752: [.434, .006, .667, { ic: .067 }],
	    0x1D753: [.694, .202, .712, { sk: .0958 }],
	    0x1D754: [.451, .194, .612, { sk: .0958 }],
	    0x1D755: [.444, .008, .975],
	    0x1D756: [.694, 0, .733],
	    0x1D757: [.694, 0, .733],
	    0x1D758: [.691, 0, .581],
	    0x1D759: [.694, 0, .917],
	    0x1D75A: [.691, 0, .642],
	    0x1D75B: [.694, 0, .672],
	    0x1D75C: [.694, 0, .794],
	    0x1D75D: [.716, .022, .856],
	    0x1D75E: [.694, 0, .331],
	    0x1D75F: [.694, 0, .764],
	    0x1D760: [.694, 0, .672],
	    0x1D761: [.694, 0, .978],
	    0x1D762: [.694, 0, .794],
	    0x1D763: [.688, 0, .733],
	    0x1D764: [.716, .022, .794],
	    0x1D765: [.691, 0, .794],
	    0x1D766: [.694, 0, .703],
	    0x1D768: [.694, 0, .794],
	    0x1D769: [.688, 0, .733],
	    0x1D76A: [.715, 0, .856],
	    0x1D76B: [.694, 0, .794],
	    0x1D76C: [.694, 0, .733],
	    0x1D76D: [.694, 0, .856],
	    0x1D76E: [.716, 0, .794],
	    0x1D7CE: [.654, .01, .575],
	    0x1D7CF: [.655, 0, .575],
	    0x1D7D0: [.654, 0, .575],
	    0x1D7D1: [.655, .011, .575],
	    0x1D7D2: [.656, 0, .575],
	    0x1D7D3: [.655, .011, .575],
	    0x1D7D4: [.655, .011, .575],
	    0x1D7D5: [.676, .011, .575],
	    0x1D7D6: [.654, .011, .575],
	    0x1D7D7: [.654, .011, .575],
	    0x1D7E2: [.678, .022, .5],
	    0x1D7E3: [.678, 0, .5],
	    0x1D7E4: [.677, 0, .5],
	    0x1D7E5: [.678, .022, .5],
	    0x1D7E6: [.656, 0, .5],
	    0x1D7E7: [.656, .021, .5],
	    0x1D7E8: [.677, .022, .5],
	    0x1D7E9: [.656, .011, .5],
	    0x1D7EA: [.678, .022, .5],
	    0x1D7EB: [.677, .022, .5],
	    0x1D7EC: [.715, .022, .55],
	    0x1D7ED: [.716, 0, .55],
	    0x1D7EE: [.716, 0, .55],
	    0x1D7EF: [.716, .022, .55],
	    0x1D7F0: [.694, 0, .55],
	    0x1D7F1: [.694, .022, .55],
	    0x1D7F2: [.716, .022, .55],
	    0x1D7F3: [.695, .011, .55],
	    0x1D7F4: [.715, .022, .55],
	    0x1D7F5: [.716, .022, .55],
	    0x1D7F6: [.621, .01, .525],
	    0x1D7F7: [.622, 0, .525],
	    0x1D7F8: [.622, 0, .525],
	    0x1D7F9: [.622, .011, .525],
	    0x1D7FA: [.624, 0, .525],
	    0x1D7FB: [.611, .01, .525],
	    0x1D7FC: [.622, .011, .525],
	    0x1D7FD: [.627, .01, .525],
	    0x1D7FE: [.621, .01, .525],
	    0x1D7FF: [.622, .011, .525],
	};
	//# sourceMappingURL=normal.js.map

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var sans_serif_bold_italic_js_1 = __webpack_require__(314);
	exports.sansSerifBoldItalic = FontData_js_1.AddCSS(sans_serif_bold_italic_js_1.sansSerifBoldItalic, {
	    0x131: { f: 'SSB' },
	    0x237: { f: 'SSB' },
	});
	//# sourceMappingURL=sans-serif-bold-italic.js.map

/***/ }),
/* 314 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.sansSerifBoldItalic = {
	    0x131: [.458, 0, .256],
	    0x237: [.458, .205, .286],
	};
	//# sourceMappingURL=sans-serif-bold-italic.js.map

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var sans_serif_bold_js_1 = __webpack_require__(316);
	exports.sansSerifBold = FontData_js_1.AddCSS(sans_serif_bold_js_1.sansSerifBold, {
	    0x2015: { c: '\\2014' },
	    0x2017: { c: '_' },
	    0x2044: { c: '/' },
	    0x2206: { c: '\\394' },
	});
	//# sourceMappingURL=sans-serif-bold.js.map

/***/ }),
/* 316 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.sansSerifBold = {
	    0x21: [.694, 0, .367],
	    0x22: [.694, -0.442, .558],
	    0x23: [.694, .193, .917],
	    0x24: [.75, .056, .55],
	    0x25: [.75, .056, 1.029],
	    0x26: [.716, .022, .831],
	    0x27: [.694, -0.442, .306],
	    0x28: [.75, .249, .428],
	    0x29: [.75, .25, .428],
	    0x2A: [.75, -0.293, .55],
	    0x2B: [.617, .116, .856],
	    0x2C: [.146, .106, .306],
	    0x2D: [.273, -0.186, .367],
	    0x2E: [.146, 0, .306],
	    0x2F: [.75, .249, .55],
	    0x3A: [.458, 0, .306],
	    0x3B: [.458, .106, .306],
	    0x3D: [.407, -0.094, .856],
	    0x3F: [.705, 0, .519],
	    0x40: [.704, .011, .733],
	    0x5B: [.75, .25, .343],
	    0x5D: [.75, .25, .343],
	    0x5E: [.694, -0.537, .55],
	    0x5F: [-0.023, .11, .55],
	    0x7E: [.344, -0.198, .55],
	    0x131: [.458, 0, .256],
	    0x237: [.458, .205, .286],
	    0x300: [.694, -0.537, 0],
	    0x301: [.694, -0.537, 0],
	    0x302: [.694, -0.537, 0],
	    0x303: [.694, -0.548, 0],
	    0x304: [.66, -0.56, 0],
	    0x306: [.694, -0.552, 0],
	    0x307: [.695, -0.596, 0],
	    0x308: [.695, -0.595, 0],
	    0x30A: [.694, -0.538, 0],
	    0x30B: [.694, -0.537, 0],
	    0x30C: [.657, -0.5, 0],
	    0x2013: [.327, -0.24, .55],
	    0x2014: [.327, -0.24, 1.1],
	    0x2015: [.327, -0.24, 1.1],
	    0x2017: [-0.023, .11, .55],
	    0x2018: [.694, -0.443, .306],
	    0x2019: [.694, -0.442, .306],
	    0x201C: [.694, -0.443, .558],
	    0x201D: [.694, -0.442, .558],
	    0x2044: [.75, .249, .55],
	    0x2206: [.694, 0, .917],
	};
	//# sourceMappingURL=sans-serif-bold.js.map

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var sans_serif_italic_js_1 = __webpack_require__(318);
	exports.sansSerifItalic = FontData_js_1.AddCSS(sans_serif_italic_js_1.sansSerifItalic, {
	    0x391: { c: 'A' },
	    0x392: { c: 'B' },
	    0x395: { c: 'E' },
	    0x396: { c: 'Z' },
	    0x397: { c: 'H' },
	    0x399: { c: 'I' },
	    0x39A: { c: 'K' },
	    0x39C: { c: 'M' },
	    0x39D: { c: 'N' },
	    0x39F: { c: 'O' },
	    0x3A1: { c: 'P' },
	    0x3A4: { c: 'T' },
	    0x3A7: { c: 'X' },
	    0x2015: { c: '\\2014' },
	    0x2017: { c: '_' },
	    0x2044: { c: '/' },
	    0x2206: { c: '\\394' },
	});
	//# sourceMappingURL=sans-serif-italic.js.map

/***/ }),
/* 318 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.sansSerifItalic = {
	    0x21: [.694, 0, .319, { ic: .036 }],
	    0x22: [.694, -0.471, .5],
	    0x23: [.694, .194, .833, { ic: .018 }],
	    0x24: [.75, .056, .5, { ic: .065 }],
	    0x25: [.75, .056, .833],
	    0x26: [.716, .022, .758],
	    0x27: [.694, -0.471, .278, { ic: .057 }],
	    0x28: [.75, .25, .389, { ic: .102 }],
	    0x29: [.75, .25, .389],
	    0x2A: [.75, -0.306, .5, { ic: .068 }],
	    0x2B: [.583, .083, .778],
	    0x2C: [.098, .125, .278],
	    0x2D: [.259, -0.186, .333],
	    0x2E: [.098, 0, .278],
	    0x2F: [.75, .25, .5, { ic: .1 }],
	    0x30: [.678, .022, .5, { ic: .049 }],
	    0x31: [.678, 0, .5],
	    0x32: [.678, 0, .5, { ic: .051 }],
	    0x33: [.678, .022, .5, { ic: .044 }],
	    0x34: [.656, 0, .5, { ic: .021 }],
	    0x35: [.656, .022, .5, { ic: .055 }],
	    0x36: [.678, .022, .5, { ic: .048 }],
	    0x37: [.656, .011, .5, { ic: .096 }],
	    0x38: [.678, .022, .5, { ic: .054 }],
	    0x39: [.677, .022, .5, { ic: .045 }],
	    0x3A: [.444, 0, .278],
	    0x3B: [.444, .125, .278],
	    0x3D: [.37, -0.13, .778, { ic: .018 }],
	    0x3F: [.704, 0, .472, { ic: .064 }],
	    0x40: [.705, .01, .667, { ic: .04 }],
	    0x5B: [.75, .25, .289, { ic: .136 }],
	    0x5D: [.75, .25, .289, { ic: .064 }],
	    0x5E: [.694, -0.527, .5, { ic: .033 }],
	    0x5F: [-0.038, .114, .5, { ic: .065 }],
	    0x7E: [.327, -0.193, .5, { ic: .06 }],
	    0x131: [.444, 0, .239, { ic: .019 }],
	    0x237: [.444, .204, .267, { ic: .019 }],
	    0x300: [.694, -0.527, 0],
	    0x301: [.694, -0.527, 0, { ic: .063 }],
	    0x302: [.694, -0.527, 0, { ic: .033 }],
	    0x303: [.677, -0.543, 0, { ic: .06 }],
	    0x304: [.631, -0.552, 0, { ic: .064 }],
	    0x306: [.694, -0.508, 0, { ic: .073 }],
	    0x307: [.68, -0.576, 0],
	    0x308: [.68, -0.582, 0, { ic: .04 }],
	    0x30A: [.693, -0.527, 0],
	    0x30B: [.694, -0.527, 0, { ic: .063 }],
	    0x30C: [.654, -0.487, 0, { ic: .06 }],
	    0x391: [.694, 0, .667],
	    0x392: [.694, 0, .667, { ic: .029 }],
	    0x393: [.691, 0, .542, { ic: .104 }],
	    0x394: [.694, 0, .833],
	    0x395: [.691, 0, .597, { ic: .091 }],
	    0x396: [.694, 0, .611, { ic: .091 }],
	    0x397: [.694, 0, .708, { ic: .06 }],
	    0x398: [.715, .022, .778, { ic: .026 }],
	    0x399: [.694, 0, .278, { ic: .06 }],
	    0x39A: [.694, 0, .694, { ic: .091 }],
	    0x39B: [.694, 0, .611],
	    0x39C: [.694, 0, .875, { ic: .054 }],
	    0x39D: [.694, 0, .708, { ic: .058 }],
	    0x39E: [.688, 0, .667, { ic: .098 }],
	    0x39F: [.716, .022, .736, { ic: .027 }],
	    0x3A0: [.691, 0, .708, { ic: .06 }],
	    0x3A1: [.694, 0, .639, { ic: .051 }],
	    0x3A3: [.694, 0, .722, { ic: .091 }],
	    0x3A4: [.688, 0, .681, { ic: .109 }],
	    0x3A5: [.716, 0, .778, { ic: .065 }],
	    0x3A6: [.694, 0, .722, { ic: .021 }],
	    0x3A7: [.694, 0, .667, { ic: .091 }],
	    0x3A8: [.694, 0, .778, { ic: .076 }],
	    0x3A9: [.716, 0, .722, { ic: .047 }],
	    0x2013: [.312, -0.236, .5, { ic: .065 }],
	    0x2014: [.312, -0.236, 1, { ic: .065 }],
	    0x2015: [.312, -0.236, 1, { ic: .065 }],
	    0x2017: [-0.038, .114, .5, { ic: .065 }],
	    0x2018: [.694, -0.471, .278, { ic: .058 }],
	    0x2019: [.694, -0.471, .278, { ic: .057 }],
	    0x201C: [.694, -0.471, .5, { ic: .114 }],
	    0x201D: [.694, -0.471, .5],
	    0x2044: [.75, .25, .5, { ic: .1 }],
	    0x2206: [.694, 0, .833],
	};
	//# sourceMappingURL=sans-serif-italic.js.map

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var sans_serif_js_1 = __webpack_require__(320);
	exports.sansSerif = FontData_js_1.AddCSS(sans_serif_js_1.sansSerif, {
	    0x391: { c: 'A' },
	    0x392: { c: 'B' },
	    0x395: { c: 'E' },
	    0x396: { c: 'Z' },
	    0x397: { c: 'H' },
	    0x399: { c: 'I' },
	    0x39A: { c: 'K' },
	    0x39C: { c: 'M' },
	    0x39D: { c: 'N' },
	    0x39F: { c: 'O' },
	    0x3A1: { c: 'P' },
	    0x3A4: { c: 'T' },
	    0x3A7: { c: 'X' },
	    0x2015: { c: '\\2014' },
	    0x2017: { c: '_' },
	    0x2044: { c: '/' },
	    0x2206: { c: '\\394' },
	});
	//# sourceMappingURL=sans-serif.js.map

/***/ }),
/* 320 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.sansSerif = {
	    0x21: [.694, 0, .319],
	    0x22: [.694, -0.471, .5],
	    0x23: [.694, .194, .833],
	    0x24: [.75, .056, .5],
	    0x25: [.75, .056, .833],
	    0x26: [.716, .022, .758],
	    0x27: [.694, -0.471, .278],
	    0x28: [.75, .25, .389],
	    0x29: [.75, .25, .389],
	    0x2A: [.75, -0.306, .5],
	    0x2B: [.583, .082, .778],
	    0x2C: [.098, .125, .278],
	    0x2D: [.259, -0.186, .333],
	    0x2E: [.098, 0, .278],
	    0x2F: [.75, .25, .5],
	    0x3A: [.444, 0, .278],
	    0x3B: [.444, .125, .278],
	    0x3D: [.37, -0.13, .778],
	    0x3F: [.704, 0, .472],
	    0x40: [.704, .011, .667],
	    0x5B: [.75, .25, .289],
	    0x5D: [.75, .25, .289],
	    0x5E: [.694, -0.527, .5],
	    0x5F: [-0.038, .114, .5],
	    0x7E: [.327, -0.193, .5],
	    0x131: [.444, 0, .239],
	    0x237: [.444, .205, .267],
	    0x300: [.694, -0.527, 0],
	    0x301: [.694, -0.527, 0],
	    0x302: [.694, -0.527, 0],
	    0x303: [.677, -0.543, 0],
	    0x304: [.631, -0.552, 0],
	    0x306: [.694, -0.508, 0],
	    0x307: [.68, -0.576, 0],
	    0x308: [.68, -0.582, 0],
	    0x30A: [.694, -0.527, 0],
	    0x30B: [.694, -0.527, 0],
	    0x30C: [.654, -0.487, 0],
	    0x391: [.694, 0, .667],
	    0x392: [.694, 0, .667],
	    0x393: [.691, 0, .542],
	    0x394: [.694, 0, .833],
	    0x395: [.691, 0, .597],
	    0x396: [.694, 0, .611],
	    0x397: [.694, 0, .708],
	    0x398: [.716, .021, .778],
	    0x399: [.694, 0, .278],
	    0x39A: [.694, 0, .694],
	    0x39B: [.694, 0, .611],
	    0x39C: [.694, 0, .875],
	    0x39D: [.694, 0, .708],
	    0x39E: [.688, 0, .667],
	    0x39F: [.715, .022, .736],
	    0x3A0: [.691, 0, .708],
	    0x3A1: [.694, 0, .639],
	    0x3A3: [.694, 0, .722],
	    0x3A4: [.688, 0, .681],
	    0x3A5: [.716, 0, .778],
	    0x3A6: [.694, 0, .722],
	    0x3A7: [.694, 0, .667],
	    0x3A8: [.694, 0, .778],
	    0x3A9: [.716, 0, .722],
	    0x2013: [.312, -0.236, .5],
	    0x2014: [.312, -0.236, 1],
	    0x2015: [.312, -0.236, 1],
	    0x2017: [-0.038, .114, .5],
	    0x2018: [.694, -0.471, .278],
	    0x2019: [.694, -0.471, .278],
	    0x201C: [.694, -0.471, .5],
	    0x201D: [.694, -0.471, .5],
	    0x2044: [.75, .25, .5],
	    0x2206: [.694, 0, .833],
	};
	//# sourceMappingURL=sans-serif.js.map

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var script_bold_js_1 = __webpack_require__(322);
	exports.scriptBold = script_bold_js_1.scriptBold;
	//# sourceMappingURL=script-bold.js.map

/***/ }),
/* 322 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.scriptBold = {};
	//# sourceMappingURL=script-bold.js.map

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var script_js_1 = __webpack_require__(324);
	exports.script = script_js_1.script;
	//# sourceMappingURL=script.js.map

/***/ }),
/* 324 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.script = {};
	//# sourceMappingURL=script.js.map

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var smallop_js_1 = __webpack_require__(326);
	exports.smallop = FontData_js_1.AddCSS(smallop_js_1.smallop, {
	    0x2044: { c: '/' },
	    0x2329: { c: '\\27E8' },
	    0x232A: { c: '\\27E9' },
	    0x2758: { c: '\\2223' },
	    0x2A0C: { c: '\\222C\\222C' },
	    0x3008: { c: '\\27E8' },
	    0x3009: { c: '\\27E9' },
	});
	//# sourceMappingURL=smallop.js.map

/***/ }),
/* 326 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.smallop = {
	    0x28: [.85, .349, .458],
	    0x29: [.85, .349, .458],
	    0x2F: [.85, .349, .578],
	    0x5B: [.85, .349, .417],
	    0x5C: [.85, .349, .578],
	    0x5D: [.85, .349, .417],
	    0x7B: [.85, .349, .583],
	    0x7D: [.85, .349, .583],
	    0x2C6: [.744, -0.551, .556],
	    0x2DC: [.722, -0.597, .556],
	    0x302: [.744, -0.551, 0],
	    0x303: [.722, -0.597, 0],
	    0x2016: [.602, 0, .778],
	    0x2044: [.85, .349, .578],
	    0x2191: [.6, 0, .667],
	    0x2193: [.6, 0, .667],
	    0x21D1: [.599, 0, .778],
	    0x21D3: [.6, 0, .778],
	    0x220F: [.75, .25, .944],
	    0x2210: [.75, .25, .944],
	    0x2211: [.75, .25, 1.056],
	    0x221A: [.85, .35, 1, { ic: .02 }],
	    0x2223: [.627, .015, .333],
	    0x2225: [.627, .015, .556],
	    0x222B: [.805, .306, .472, { ic: .138 }],
	    0x222C: [.805, .306, .819, { ic: .138 }],
	    0x222D: [.805, .306, 1.166, { ic: .138 }],
	    0x222E: [.805, .306, .472, { ic: .138 }],
	    0x22C0: [.75, .249, .833],
	    0x22C1: [.75, .249, .833],
	    0x22C2: [.75, .249, .833],
	    0x22C3: [.75, .249, .833],
	    0x2308: [.85, .349, .472],
	    0x2309: [.85, .349, .472],
	    0x230A: [.85, .349, .472],
	    0x230B: [.85, .349, .472],
	    0x2329: [.85, .35, .472],
	    0x232A: [.85, .35, .472],
	    0x23D0: [.602, 0, .667],
	    0x2758: [.627, .015, .333],
	    0x27E8: [.85, .35, .472],
	    0x27E9: [.85, .35, .472],
	    0x2A00: [.75, .25, 1.111],
	    0x2A01: [.75, .25, 1.111],
	    0x2A02: [.75, .25, 1.111],
	    0x2A04: [.75, .249, .833],
	    0x2A06: [.75, .249, .833],
	    0x2A0C: [.805, .306, 1.638, { ic: .138 }],
	    0x3008: [.85, .35, .472],
	    0x3009: [.85, .35, .472],
	};
	//# sourceMappingURL=smallop.js.map

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var tex_calligraphic_bold_js_1 = __webpack_require__(328);
	exports.texCalligraphicBold = FontData_js_1.AddCSS(tex_calligraphic_bold_js_1.texCalligraphicBold, {
	    0x131: { f: 'B' },
	    0x237: { f: 'B' },
	});
	//# sourceMappingURL=tex-calligraphic-bold.js.map

/***/ }),
/* 328 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texCalligraphicBold = {
	    0x41: [.751, .049, .921, { ic: .068, sk: .224 }],
	    0x42: [.705, .017, .748, { sk: .16 }],
	    0x43: [.703, .02, .613, { sk: .16 }],
	    0x44: [.686, 0, .892, { sk: .0958 }],
	    0x45: [.703, .016, .607, { ic: .02, sk: .128 }],
	    0x46: [.686, .03, .814, { ic: .116, sk: .128 }],
	    0x47: [.703, .113, .682, { sk: .128 }],
	    0x48: [.686, .048, .987, { sk: .128 }],
	    0x49: [.686, 0, .642, { ic: .104, sk: .0319 }],
	    0x4A: [.686, .114, .779, { ic: .158, sk: .192 }],
	    0x4B: [.703, .017, .871, { sk: .0639 }],
	    0x4C: [.703, .017, .788, { sk: .16 }],
	    0x4D: [.703, .049, 1.378, { sk: .16 }],
	    0x4E: [.84, .049, .937, { ic: .168, sk: .0958 }],
	    0x4F: [.703, .017, .906, { sk: .128 }],
	    0x50: [.686, .067, .81, { ic: .036, sk: .0958 }],
	    0x51: [.703, .146, .939, { sk: .128 }],
	    0x52: [.686, .017, .99, { sk: .0958 }],
	    0x53: [.703, .016, .696, { ic: .025, sk: .16 }],
	    0x54: [.72, .069, .644, { ic: .303, sk: .0319 }],
	    0x55: [.686, .024, .715, { ic: .056, sk: .0958 }],
	    0x56: [.686, .077, .737, { ic: .037, sk: .0319 }],
	    0x57: [.686, .077, 1.169, { ic: .037, sk: .0958 }],
	    0x58: [.686, 0, .817, { ic: .089, sk: .16 }],
	    0x59: [.686, .164, .759, { ic: .038, sk: .0958 }],
	    0x5A: [.686, 0, .818, { ic: .035, sk: .16 }],
	    0x131: [.452, .008, .394, { sk: .0319 }],
	    0x237: [.451, .201, .439, { sk: .0958 }],
	};
	//# sourceMappingURL=tex-calligraphic-bold.js.map

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var tex_calligraphic_js_1 = __webpack_require__(330);
	exports.texCalligraphic = tex_calligraphic_js_1.texCalligraphic;
	//# sourceMappingURL=tex-calligraphic.js.map

/***/ }),
/* 330 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texCalligraphic = {
	    0x41: [.728, .05, .798, { ic: .021, sk: .194 }],
	    0x42: [.705, .022, .657, { sk: .139 }],
	    0x43: [.705, .025, .527, { sk: .139 }],
	    0x44: [.683, 0, .771, { sk: .0833 }],
	    0x45: [.705, .022, .528, { ic: .036, sk: .111 }],
	    0x46: [.683, .032, .719, { ic: .11, sk: .111 }],
	    0x47: [.704, .119, .595, { sk: .111 }],
	    0x48: [.683, .048, .845, { sk: .111 }],
	    0x49: [.683, 0, .545, { ic: .097, sk: .0278 }],
	    0x4A: [.683, .119, .678, { ic: .161, sk: .167 }],
	    0x4B: [.705, .022, .762, { sk: .0556 }],
	    0x4C: [.705, .022, .69, { sk: .139 }],
	    0x4D: [.705, .05, 1.201, { sk: .139 }],
	    0x4E: [.789, .05, .82, { ic: .159, sk: .0833 }],
	    0x4F: [.705, .022, .796, { sk: .111 }],
	    0x50: [.683, .057, .696, { ic: .037, sk: .0833 }],
	    0x51: [.705, .131, .817, { sk: .111 }],
	    0x52: [.682, .022, .848, { sk: .0833 }],
	    0x53: [.705, .022, .606, { ic: .036, sk: .139 }],
	    0x54: [.717, .068, .545, { ic: .288, sk: .0278 }],
	    0x55: [.683, .028, .626, { ic: .061, sk: .0833 }],
	    0x56: [.683, .052, .613, { ic: .045, sk: .0278 }],
	    0x57: [.683, .053, .988, { ic: .046, sk: .0833 }],
	    0x58: [.683, 0, .713, { ic: .094, sk: .139 }],
	    0x59: [.683, .143, .668, { ic: .046, sk: .0833 }],
	    0x5A: [.683, 0, .725, { ic: .042, sk: .139 }],
	};
	//# sourceMappingURL=tex-calligraphic.js.map

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var tex_mathit_js_1 = __webpack_require__(332);
	exports.texMathit = tex_mathit_js_1.texMathit;
	//# sourceMappingURL=tex-mathit.js.map

/***/ }),
/* 332 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texMathit = {
	    0x41: [.716, 0, .743],
	    0x42: [.683, 0, .704],
	    0x43: [.705, .021, .716],
	    0x44: [.683, 0, .755],
	    0x45: [.68, 0, .678],
	    0x46: [.68, 0, .653],
	    0x47: [.705, .022, .774],
	    0x48: [.683, 0, .743],
	    0x49: [.683, 0, .386],
	    0x4A: [.683, .021, .525],
	    0x4B: [.683, 0, .769],
	    0x4C: [.683, 0, .627],
	    0x4D: [.683, 0, .897],
	    0x4E: [.683, 0, .743],
	    0x4F: [.704, .022, .767],
	    0x50: [.683, 0, .678],
	    0x51: [.704, .194, .767],
	    0x52: [.683, .022, .729],
	    0x53: [.705, .022, .562],
	    0x54: [.677, 0, .716],
	    0x55: [.683, .022, .743],
	    0x56: [.683, .022, .743],
	    0x57: [.683, .022, .999],
	    0x58: [.683, 0, .743],
	    0x59: [.683, 0, .743],
	    0x5A: [.683, 0, .613],
	    0x61: [.442, .011, .511],
	    0x62: [.694, .011, .46],
	    0x63: [.441, .01, .46],
	    0x64: [.694, .011, .511],
	    0x65: [.442, .01, .46],
	    0x66: [.705, .204, .307],
	    0x67: [.442, .205, .46],
	    0x68: [.694, .011, .511],
	    0x69: [.656, .01, .307],
	    0x6A: [.656, .204, .307],
	    0x6B: [.694, .011, .46],
	    0x6C: [.694, .011, .256],
	    0x6D: [.442, .011, .818],
	    0x6E: [.442, .011, .562],
	    0x6F: [.442, .011, .511],
	    0x70: [.442, .194, .511],
	    0x71: [.442, .194, .46],
	    0x72: [.442, .011, .422],
	    0x73: [.442, .011, .409],
	    0x74: [.626, .011, .332],
	    0x75: [.441, .011, .537],
	    0x76: [.443, .01, .46],
	    0x77: [.443, .011, .664],
	    0x78: [.442, .011, .464],
	    0x79: [.441, .205, .486],
	    0x7A: [.442, .011, .409],
	};
	//# sourceMappingURL=tex-mathit.js.map

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var tex_oldstyle_bold_js_1 = __webpack_require__(334);
	exports.texOldstyleBold = tex_oldstyle_bold_js_1.texOldstyleBold;
	//# sourceMappingURL=tex-oldstyle-bold.js.map

/***/ }),
/* 334 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texOldstyleBold = {
	    0x30: [.46, .017, .575],
	    0x31: [.461, 0, .575],
	    0x32: [.46, 0, .575],
	    0x33: [.461, .211, .575],
	    0x34: [.469, .194, .575],
	    0x35: [.461, .211, .575],
	    0x36: [.66, .017, .575],
	    0x37: [.476, .211, .575],
	    0x38: [.661, .017, .575],
	    0x39: [.461, .21, .575],
	    0x41: [.751, .049, .921, { ic: .068, sk: .224 }],
	    0x42: [.705, .017, .748, { sk: .16 }],
	    0x43: [.703, .02, .613, { sk: .16 }],
	    0x44: [.686, 0, .892, { sk: .0958 }],
	    0x45: [.703, .016, .607, { ic: .02, sk: .128 }],
	    0x46: [.686, .03, .814, { ic: .116, sk: .128 }],
	    0x47: [.703, .113, .682, { sk: .128 }],
	    0x48: [.686, .048, .987, { sk: .128 }],
	    0x49: [.686, 0, .642, { ic: .104, sk: .0319 }],
	    0x4A: [.686, .114, .779, { ic: .158, sk: .192 }],
	    0x4B: [.703, .017, .871, { sk: .0639 }],
	    0x4C: [.703, .017, .788, { sk: .16 }],
	    0x4D: [.703, .049, 1.378, { sk: .16 }],
	    0x4E: [.84, .049, .937, { ic: .168, sk: .0958 }],
	    0x4F: [.703, .017, .906, { sk: .128 }],
	    0x50: [.686, .067, .81, { ic: .036, sk: .0958 }],
	    0x51: [.703, .146, .939, { sk: .128 }],
	    0x52: [.686, .017, .99, { sk: .0958 }],
	    0x53: [.703, .016, .696, { ic: .025, sk: .16 }],
	    0x54: [.72, .069, .644, { ic: .303, sk: .0319 }],
	    0x55: [.686, .024, .715, { ic: .056, sk: .0958 }],
	    0x56: [.686, .077, .737, { ic: .037, sk: .0319 }],
	    0x57: [.686, .077, 1.169, { ic: .037, sk: .0958 }],
	    0x58: [.686, 0, .817, { ic: .089, sk: .16 }],
	    0x59: [.686, .164, .759, { ic: .038, sk: .0958 }],
	    0x5A: [.686, 0, .818, { ic: .035, sk: .16 }],
	};
	//# sourceMappingURL=tex-oldstyle-bold.js.map

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var tex_oldstyle_js_1 = __webpack_require__(336);
	exports.texOldstyle = tex_oldstyle_js_1.texOldstyle;
	//# sourceMappingURL=tex-oldstyle.js.map

/***/ }),
/* 336 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texOldstyle = {
	    0x30: [.452, .022, .5],
	    0x31: [.453, 0, .5],
	    0x32: [.453, 0, .5],
	    0x33: [.452, .216, .5],
	    0x34: [.464, .194, .5],
	    0x35: [.453, .216, .5],
	    0x36: [.665, .022, .5],
	    0x37: [.463, .216, .5],
	    0x38: [.666, .021, .5],
	    0x39: [.453, .216, .5],
	    0x41: [.728, .05, .798, { ic: .021, sk: .194 }],
	    0x42: [.705, .022, .657, { sk: .139 }],
	    0x43: [.705, .025, .527, { sk: .139 }],
	    0x44: [.683, 0, .771, { sk: .0833 }],
	    0x45: [.705, .022, .528, { ic: .036, sk: .111 }],
	    0x46: [.683, .032, .719, { ic: .11, sk: .111 }],
	    0x47: [.704, .119, .595, { sk: .111 }],
	    0x48: [.683, .048, .845, { sk: .111 }],
	    0x49: [.683, 0, .545, { ic: .097, sk: .0278 }],
	    0x4A: [.683, .119, .678, { ic: .161, sk: .167 }],
	    0x4B: [.705, .022, .762, { sk: .0556 }],
	    0x4C: [.705, .022, .69, { sk: .139 }],
	    0x4D: [.705, .05, 1.201, { sk: .139 }],
	    0x4E: [.789, .05, .82, { ic: .159, sk: .0833 }],
	    0x4F: [.705, .022, .796, { sk: .111 }],
	    0x50: [.683, .057, .696, { ic: .037, sk: .0833 }],
	    0x51: [.705, .131, .817, { sk: .111 }],
	    0x52: [.682, .022, .848, { sk: .0833 }],
	    0x53: [.705, .022, .606, { ic: .036, sk: .139 }],
	    0x54: [.717, .068, .545, { ic: .288, sk: .0278 }],
	    0x55: [.683, .028, .626, { ic: .061, sk: .0833 }],
	    0x56: [.683, .052, .613, { ic: .045, sk: .0278 }],
	    0x57: [.683, .053, .988, { ic: .046, sk: .0833 }],
	    0x58: [.683, 0, .713, { ic: .094, sk: .139 }],
	    0x59: [.683, .143, .668, { ic: .046, sk: .0833 }],
	    0x5A: [.683, 0, .725, { ic: .042, sk: .139 }],
	};
	//# sourceMappingURL=tex-oldstyle.js.map

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var tex_size3_js_1 = __webpack_require__(338);
	exports.texSize3 = FontData_js_1.AddCSS(tex_size3_js_1.texSize3, {
	    0x2044: { c: '/' },
	    0x2329: { c: '\\27E8' },
	    0x232A: { c: '\\27E9' },
	    0x3008: { c: '\\27E8' },
	    0x3009: { c: '\\27E9' },
	});
	//# sourceMappingURL=tex-size3.js.map

/***/ }),
/* 338 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texSize3 = {
	    0x28: [1.45, .949, .736],
	    0x29: [1.45, .949, .736],
	    0x2F: [1.45, .949, 1.044],
	    0x5B: [1.45, .949, .528],
	    0x5C: [1.45, .949, 1.044],
	    0x5D: [1.45, .949, .528],
	    0x7B: [1.45, .949, .75],
	    0x7D: [1.45, .949, .75],
	    0x2C6: [.772, -0.564, 1.444],
	    0x2DC: [.749, -0.61, 1.444],
	    0x302: [.772, -0.564, 0],
	    0x303: [.749, -0.61, 0],
	    0x2044: [1.45, .949, 1.044],
	    0x221A: [1.45, .95, 1, { ic: .02 }],
	    0x2308: [1.45, .949, .583],
	    0x2309: [1.45, .949, .583],
	    0x230A: [1.45, .949, .583],
	    0x230B: [1.45, .949, .583],
	    0x2329: [1.45, .95, .75],
	    0x232A: [1.45, .949, .75],
	    0x27E8: [1.45, .95, .75],
	    0x27E9: [1.45, .949, .75],
	    0x3008: [1.45, .95, .75],
	    0x3009: [1.45, .949, .75],
	};
	//# sourceMappingURL=tex-size3.js.map

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var tex_size4_js_1 = __webpack_require__(340);
	exports.texSize4 = FontData_js_1.AddCSS(tex_size4_js_1.texSize4, {
	    0x2044: { c: '/' },
	    0x2329: { c: '\\27E8' },
	    0x232A: { c: '\\27E9' },
	    0x3008: { c: '\\27E8' },
	    0x3009: { c: '\\27E9' },
	    0xE155: { c: '\\E153\\E152' },
	    0xE156: { c: '\\E151\\E150' },
	});
	//# sourceMappingURL=tex-size4.js.map

/***/ }),
/* 340 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texSize4 = {
	    0x28: [1.75, 1.249, .792],
	    0x29: [1.75, 1.249, .792],
	    0x2F: [1.75, 1.249, 1.278],
	    0x5B: [1.75, 1.249, .583],
	    0x5C: [1.75, 1.249, 1.278],
	    0x5D: [1.75, 1.249, .583],
	    0x7B: [1.75, 1.249, .806],
	    0x7D: [1.75, 1.249, .806],
	    0x2C6: [.845, -0.561, 1.889, { ic: .013 }],
	    0x2DC: [.823, -0.583, 1.889],
	    0x302: [.845, -0.561, 0, { ic: .013 }],
	    0x303: [.823, -0.583, 0],
	    0x2044: [1.75, 1.249, 1.278],
	    0x221A: [1.75, 1.25, 1, { ic: .02 }],
	    0x2308: [1.75, 1.249, .639],
	    0x2309: [1.75, 1.249, .639],
	    0x230A: [1.75, 1.249, .639],
	    0x230B: [1.75, 1.249, .639],
	    0x2329: [1.75, 1.248, .806],
	    0x232A: [1.75, 1.248, .806],
	    0x239B: [1.154, .655, .875],
	    0x239C: [.61, .01, .875],
	    0x239D: [1.165, .644, .875],
	    0x239E: [1.154, .655, .875],
	    0x239F: [.61, .01, .875],
	    0x23A0: [1.165, .644, .875],
	    0x23A1: [1.154, .645, .667],
	    0x23A2: [.602, 0, .667],
	    0x23A3: [1.155, .644, .667],
	    0x23A4: [1.154, .645, .667],
	    0x23A5: [.602, 0, .667],
	    0x23A6: [1.155, .644, .667],
	    0x23A7: [.899, .01, .889],
	    0x23A8: [1.16, .66, .889],
	    0x23A9: [.01, .899, .889],
	    0x23AA: [.29, .015, .889],
	    0x23AB: [.899, .01, .889],
	    0x23AC: [1.16, .66, .889],
	    0x23AD: [.01, .899, .889],
	    0x23B7: [.935, .885, 1.056],
	    0x27E8: [1.75, 1.248, .806],
	    0x27E9: [1.75, 1.248, .806],
	    0x3008: [1.75, 1.248, .806],
	    0x3009: [1.75, 1.248, .806],
	    0xE000: [.625, .014, 1.056],
	    0xE001: [.605, .014, 1.056, { ic: .02 }],
	    0xE150: [.12, .213, .45, { ic: .01 }],
	    0xE151: [.12, .213, .45, { ic: .024 }],
	    0xE152: [.333, 0, .45, { ic: .01 }],
	    0xE153: [.333, 0, .45, { ic: .024 }],
	    0xE154: [.32, .2, .4, { ic: .01 }],
	    0xE155: [.333, 0, .9, { ic: .01 }],
	    0xE156: [.12, .213, .9, { ic: .01 }],
	};
	//# sourceMappingURL=tex-size4.js.map

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(293);
	var tex_variant_js_1 = __webpack_require__(342);
	exports.texVariant = FontData_js_1.AddCSS(tex_variant_js_1.texVariant, {
	    0x3F0: { c: '\\E009' },
	    0x210F: { f: '' },
	    0x2224: { c: '\\E006' },
	    0x2226: { c: '\\E007' },
	    0x2268: { c: '\\E00C' },
	    0x2269: { c: '\\E00D' },
	    0x2270: { c: '\\E011' },
	    0x2271: { c: '\\E00E' },
	    0x2288: { c: '\\E016' },
	    0x2289: { c: '\\E018' },
	    0x228A: { c: '\\E01A' },
	    0x228B: { c: '\\E01B' },
	    0x2A87: { c: '\\E010' },
	    0x2A88: { c: '\\E00F' },
	    0x2ACB: { c: '\\E017' },
	    0x2ACC: { c: '\\E019' },
	});
	//# sourceMappingURL=tex-variant.js.map

/***/ }),
/* 342 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.texVariant = {
	    0x2C6: [.845, -0.561, 2.333, { ic: .013 }],
	    0x2DC: [.899, -0.628, 2.333],
	    0x302: [.845, -0.561, 0, { ic: .013 }],
	    0x303: [.899, -0.628, 0],
	    0x3F0: [.434, .006, .667, { ic: .067 }],
	    0x210F: [.695, .013, .54, { ic: .022 }],
	    0x2190: [.437, -0.064, .5],
	    0x2192: [.437, -0.064, .5],
	    0x21CC: [.514, .014, 1],
	    0x2204: [.86, .166, .556],
	    0x2205: [.587, 0, .778],
	    0x2212: [.27, -0.23, .5],
	    0x2216: [.43, .023, .778],
	    0x221D: [.472, -0.028, .778],
	    0x2223: [.43, .023, .222],
	    0x2224: [.43, .023, .222, { ic: .018 }],
	    0x2225: [.431, .023, .389],
	    0x2226: [.431, .024, .389, { ic: .018 }],
	    0x223C: [.365, -0.132, .778],
	    0x2248: [.481, -0.05, .778],
	    0x2268: [.752, .284, .778],
	    0x2269: [.752, .284, .778],
	    0x2270: [.919, .421, .778],
	    0x2271: [.919, .421, .778],
	    0x2288: [.828, .33, .778],
	    0x2289: [.828, .33, .778],
	    0x228A: [.634, .255, .778],
	    0x228B: [.634, .254, .778],
	    0x22A8: [.694, 0, .611],
	    0x22C5: [.189, 0, .278],
	    0x2322: [.378, -0.122, .778],
	    0x2323: [.378, -0.143, .778],
	    0x25B3: [.575, .02, .722],
	    0x25BD: [.576, .019, .722],
	    0x2A87: [.801, .303, .778],
	    0x2A88: [.801, .303, .778],
	    0x2ACB: [.752, .332, .778],
	    0x2ACC: [.752, .333, .778],
	};
	//# sourceMappingURL=tex-variant.js.map

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var FontData_js_1 = __webpack_require__(212);
	exports.HDW1 = [.75, .25, .875];
	exports.HDW2 = [.85, .349, .667];
	exports.HDW3 = [.583, .082, .5];
	exports.VSIZES = [1, 1.2, 1.8, 2.4, 3];
	var DELIM2F = { c: 0x2F, dir: FontData_js_1.V, sizes: exports.VSIZES };
	var DELIMAF = { c: 0xAF, dir: FontData_js_1.H, sizes: [.59], stretch: [0, 0xAF], HDW: [.59, -0.544, .5] };
	var DELIM2C6 = { c: 0x2C6, dir: FontData_js_1.H, sizes: [.517, .817, 1.335, 1.777, 1.909] };
	var DELIM2DC = { c: 0x2DC, dir: FontData_js_1.H, sizes: [.583, .805, 1.33, 1.773, 1.887] };
	var DELIM2013 = { c: 0x2013, dir: FontData_js_1.H, sizes: [.5], stretch: [0, 0x2013], HDW: [.285, -0.248, .5] };
	var DELIM2190 = { c: 0x2190, dir: FontData_js_1.H, sizes: [1], stretch: [0x2190, 0x2212], HDW: exports.HDW3 };
	var DELIM2192 = { c: 0x2192, dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x2192], HDW: exports.HDW3 };
	var DELIM2194 = { c: 0x2194, dir: FontData_js_1.H, sizes: [1], stretch: [0x2190, 0x2212, 0x2192], HDW: exports.HDW3 };
	var DELIM21A4 = { c: 0x21A4, dir: FontData_js_1.H, stretch: [0x2190, 0x2212, 0x2223], HDW: exports.HDW3, min: 1.278 };
	var DELIM21A6 = { c: 0x21A6, dir: FontData_js_1.H, sizes: [1], stretch: [0x2223, 0x2212, 0x2192], HDW: exports.HDW3 };
	var DELIM21D0 = { c: 0x21D0, dir: FontData_js_1.H, sizes: [1], stretch: [0x21D0, 0x3D], HDW: exports.HDW3 };
	var DELIM21D2 = { c: 0x21D2, dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x3D, 0x21D2], HDW: exports.HDW3 };
	var DELIM21D4 = { c: 0x21D4, dir: FontData_js_1.H, sizes: [1], stretch: [0x21D0, 0x3D, 0x21D2], HDW: exports.HDW3 };
	var DELIM2212 = { c: 0x2212, dir: FontData_js_1.H, sizes: [.778], stretch: [0, 0x2212], HDW: exports.HDW3 };
	var DELIM2223 = { c: 0x2223, dir: FontData_js_1.V, sizes: [1], stretch: [0, 0x2223], HDW: [.627, .015, .333] };
	var DELIM23DC = { c: 0x23DC, dir: FontData_js_1.H, sizes: [.778, 1], schar: [0x2322, 0x2322], stretch: [0xE150, 0xE154, 0xE151],
	    HDW: [.32, .2, .5] };
	var DELIM23DD = { c: 0x23DD, dir: FontData_js_1.H, sizes: [.778, 1], schar: [0x2323, 0x2323], stretch: [0xE152, 0xE154, 0xE153],
	    HDW: [.32, .2, .5] };
	var DELIM23DE = { c: 0x23DE, dir: FontData_js_1.H, stretch: [0xE150, 0xE154, 0xE151, 0xE155], HDW: [.32, .2, .5], min: 1.8 };
	var DELIM23DF = { c: 0x23DF, dir: FontData_js_1.H, stretch: [0xE152, 0xE154, 0xE153, 0xE156], HDW: [.32, .2, .5], min: 1.8 };
	var DELIM27E8 = { c: 0x27E8, dir: FontData_js_1.V, sizes: exports.VSIZES };
	var DELIM27E9 = { c: 0x27E9, dir: FontData_js_1.V, sizes: exports.VSIZES };
	var DELIM2906 = { c: 0x2906, dir: FontData_js_1.H, stretch: [0x21D0, 0x3D, 0x2223], HDW: exports.HDW3, min: 1.278 };
	var DELIM2907 = { c: 0x2907, dir: FontData_js_1.H, stretch: [0x22A8, 0x3D, 0x21D2], HDW: exports.HDW3, min: 1.278 };
	exports.delimiters = {
	    0x28: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x239B, 0x239C, 0x239D], HDW: [.85, .349, .875] },
	    0x29: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x239E, 0x239F, 0x23A0], HDW: [.85, .349, .875] },
	    0x2D: DELIM2212,
	    0x2F: DELIM2F,
	    0x3D: { dir: FontData_js_1.H, sizes: [.767], stretch: [0, 0x3D], HDW: exports.HDW3 },
	    0x5B: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A1, 0x23A2, 0x23A3], HDW: exports.HDW2 },
	    0x5C: { dir: FontData_js_1.V, sizes: exports.VSIZES },
	    0x5D: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A4, 0x23A5, 0x23A6], HDW: exports.HDW2 },
	    0x5E: DELIM2C6,
	    0x5F: DELIM2013,
	    0x7B: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A7, 0x23AA, 0x23A9, 0x23A8], HDW: [.85, .349, .889] },
	    0x7C: { dir: FontData_js_1.V, sizes: [1], stretch: [0, 0x2223], HDW: [.75, .25, .333] },
	    0x7D: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23AB, 0x23AA, 0x23AD, 0x23AC], HDW: [.85, .349, .889] },
	    0x7E: DELIM2DC,
	    0xAF: DELIMAF,
	    0x2C6: DELIM2C6,
	    0x2C9: DELIMAF,
	    0x2DC: DELIM2DC,
	    0x302: DELIM2C6,
	    0x303: DELIM2DC,
	    0x332: DELIM2013,
	    0x2013: DELIM2013,
	    0x2014: DELIM2013,
	    0x2015: DELIM2013,
	    0x2016: { dir: FontData_js_1.V, sizes: [.602, 1], schar: [0, 0x2225], stretch: [0, 0x2225], HDW: [.602, 0, .556] },
	    0x2017: DELIM2013,
	    0x203E: DELIMAF,
	    0x20D7: DELIM2192,
	    0x2190: DELIM2190,
	    0x2191: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x2191, 0x23D0], HDW: [.6, 0, .667] },
	    0x2192: DELIM2192,
	    0x2193: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x23D0, 0x2193], HDW: [.6, 0, .667] },
	    0x2194: DELIM2194,
	    0x2195: { dir: FontData_js_1.V, sizes: [1.044], stretch: [0x2191, 0x23D0, 0x2193], HDW: exports.HDW1 },
	    0x219E: { dir: FontData_js_1.H, sizes: [1], stretch: [0x219E, 0x2212], HDW: exports.HDW3 },
	    0x21A0: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x21A0], HDW: exports.HDW3 },
	    0x21A4: DELIM21A4,
	    0x21A5: { dir: FontData_js_1.V, stretch: [0x2191, 0x23D0, 0x22A5], HDW: exports.HDW1, min: 1.555 },
	    0x21A6: DELIM21A6,
	    0x21A7: { dir: FontData_js_1.V, stretch: [0x22A4, 0x23D0, 0x2193], HDW: exports.HDW1, min: 1.555 },
	    0x21B0: { dir: FontData_js_1.V, sizes: [.722], stretch: [0x21B0, 0x23D0], HDW: exports.HDW1 },
	    0x21B1: { dir: FontData_js_1.V, sizes: [.722], stretch: [0x21B1, 0x23D0], HDW: exports.HDW1 },
	    0x21BC: { dir: FontData_js_1.H, sizes: [1], stretch: [0x21BC, 0x2212], HDW: exports.HDW3 },
	    0x21BD: { dir: FontData_js_1.H, sizes: [1], stretch: [0x21BD, 0x2212], HDW: exports.HDW3 },
	    0x21BE: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x21BE, 0x23D0], HDW: exports.HDW1 },
	    0x21BF: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x21BF, 0x23D0], HDW: exports.HDW1 },
	    0x21C0: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x21C0], HDW: exports.HDW3 },
	    0x21C1: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2212, 0x21C1], HDW: exports.HDW3 },
	    0x21C2: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x23D0, 0x21C2], HDW: exports.HDW1 },
	    0x21C3: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x23D0, 0x21C3], HDW: exports.HDW1 },
	    0x21D0: DELIM21D0,
	    0x21D1: { dir: FontData_js_1.V, sizes: [.888], stretch: [0x21D1, 0x2016], HDW: [.599, 0, .778] },
	    0x21D2: DELIM21D2,
	    0x21D3: { dir: FontData_js_1.V, sizes: [.888], stretch: [0, 0x2016, 0x21D3], HDW: [.6, 0, .778] },
	    0x21D4: DELIM21D4,
	    0x21D5: { dir: FontData_js_1.V, sizes: [1.044], stretch: [0x21D1, 0x2016, 0x21D3], HDW: [.75, .25, .778] },
	    0x21DA: { dir: FontData_js_1.H, sizes: [1], stretch: [0x21DA, 0x2261], HDW: [.464, -0.036, .5] },
	    0x21DB: { dir: FontData_js_1.H, sizes: [1], stretch: [0, 0x2261, 0x21DB], HDW: [.464, -0.036, .5] },
	    0x2212: DELIM2212,
	    0x2215: DELIM2F,
	    0x221A: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0xE001, 0xE000, 0x23B7], HDW: [.85, .35, 1.056] },
	    0x2223: DELIM2223,
	    0x2225: { dir: FontData_js_1.V, sizes: [1], stretch: [0, 0x2225], HDW: [.627, .015, .556] },
	    0x2308: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A1, 0x23A2], HDW: exports.HDW2 },
	    0x2309: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0x23A4, 0x23A5], HDW: exports.HDW2 },
	    0x230A: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0, 0x23A2, 0x23A3], HDW: exports.HDW2 },
	    0x230B: { dir: FontData_js_1.V, sizes: exports.VSIZES, stretch: [0, 0x23A5, 0x23A6], HDW: exports.HDW2 },
	    0x2312: DELIM23DC,
	    0x2322: DELIM23DC,
	    0x2323: DELIM23DD,
	    0x2329: DELIM27E8,
	    0x232A: DELIM27E9,
	    0x23AA: { dir: FontData_js_1.V, sizes: [.32], stretch: [0x23AA, 0x23AA, 0x23AA], HDW: [.29, .015, .889] },
	    0x23AF: DELIM2013,
	    0x23B0: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23A7, 0x23AA, 0x23AD], HDW: [.75, .25, .889] },
	    0x23B1: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23AB, 0x23AA, 0x23A9], HDW: [.75, .25, .889] },
	    0x23B4: { dir: FontData_js_1.H, stretch: [0x250C, 0x2212, 0x2510], HDW: exports.HDW3, min: 1 },
	    0x23B5: { dir: FontData_js_1.H, stretch: [0x2514, 0x2212, 0x2518], HDW: exports.HDW3, min: 1 },
	    0x23D0: { dir: FontData_js_1.V, sizes: [.602, 1], schar: [0, 0x2223], stretch: [0, 0x2223], HDW: [.602, 0, .333] },
	    0x23DC: DELIM23DC,
	    0x23DD: DELIM23DD,
	    0x23DE: DELIM23DE,
	    0x23DF: DELIM23DF,
	    0x23E0: { dir: FontData_js_1.H, stretch: [0x2CA, 0x2C9, 0x2CB], HDW: [.59, -0.544, .5], min: 1 },
	    0x23E1: { dir: FontData_js_1.H, stretch: [0x2CB, 0x2C9, 0x2CA], HDW: [.59, -0.544, .5], min: 1 },
	    0x2500: DELIM2013,
	    0x2758: DELIM2223,
	    0x27E8: DELIM27E8,
	    0x27E9: DELIM27E9,
	    0x27EE: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23A7, 0x23AA, 0x23A9], HDW: [.75, .25, .889] },
	    0x27EF: { dir: FontData_js_1.V, sizes: [.989], stretch: [0x23AB, 0x23AA, 0x23AD], HDW: [.75, .25, .889] },
	    0x27F5: DELIM2190,
	    0x27F6: DELIM2192,
	    0x27F7: DELIM2194,
	    0x27F8: DELIM21D0,
	    0x27F9: DELIM21D2,
	    0x27FA: DELIM21D4,
	    0x27FB: DELIM21A4,
	    0x27FC: DELIM21A6,
	    0x27FD: DELIM2906,
	    0x27FE: DELIM2907,
	    0x2906: DELIM2906,
	    0x2907: DELIM2907,
	    0x294E: { dir: FontData_js_1.H, stretch: [0x21BC, 0x2212, 0x21C0], HDW: exports.HDW3, min: 2 },
	    0x294F: { dir: FontData_js_1.V, stretch: [0x21BE, 0x23D0, 0x21C2], HDW: exports.HDW1, min: 1.776 },
	    0x2950: { dir: FontData_js_1.H, stretch: [0x21BD, 0x2212, 0x21C1], HDW: exports.HDW3, min: 2 },
	    0x2951: { dir: FontData_js_1.V, stretch: [0x21BF, 0x23D0, 0x21C3], HDW: exports.HDW1, min: .5 },
	    0x295A: { dir: FontData_js_1.H, stretch: [0x21BC, 0x2212, 0x2223], HDW: exports.HDW3, min: 1.278 },
	    0x295B: { dir: FontData_js_1.H, stretch: [0x2223, 0x2212, 0x21C0], HDW: exports.HDW3, min: 1.278 },
	    0x295C: { dir: FontData_js_1.V, stretch: [0x21BE, 0x23D0, 0x22A5], HDW: exports.HDW1, min: 1.556 },
	    0x295D: { dir: FontData_js_1.V, stretch: [0x22A4, 0x23D0, 0x21C2], HDW: exports.HDW1, min: 1.556 },
	    0x295E: { dir: FontData_js_1.H, stretch: [0x21BD, 0x2212, 0x2223], HDW: exports.HDW3, min: 1.278 },
	    0x295F: { dir: FontData_js_1.H, stretch: [0x2223, 0x2212, 0x21C1], HDW: exports.HDW3, min: 1.278 },
	    0x2960: { dir: FontData_js_1.V, stretch: [0x21BF, 0x23D0, 0x22A5], HDW: exports.HDW1, min: 1.776 },
	    0x2961: { dir: FontData_js_1.V, stretch: [0x22A4, 0x23D0, 0x21C3], HDW: exports.HDW1, min: 1.776 },
	    0x3008: DELIM27E8,
	    0x3009: DELIM27E9,
	    0xFE37: DELIM23DE,
	    0xFE38: DELIM23DF,
	};
	//# sourceMappingURL=delimiters.js.map

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var DOMAdaptor_js_1 = __webpack_require__(345);
	var Document_js_1 = __webpack_require__(346);
	var Element_js_1 = __webpack_require__(347);
	var Text_js_1 = __webpack_require__(348);
	var Window_js_1 = __webpack_require__(349);
	var Parser_js_1 = __webpack_require__(351);
	var Styles_js_1 = __webpack_require__(203);
	var Options_js_1 = __webpack_require__(160);
	var LiteAdaptor = (function (_super) {
	    __extends(LiteAdaptor, _super);
	    function LiteAdaptor(options) {
	        if (options === void 0) { options = null; }
	        var _this = _super.call(this) || this;
	        var CLASS = _this.constructor;
	        _this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
	        _this.parser = new Parser_js_1.LiteParser();
	        _this.window = new Window_js_1.LiteWindow();
	        return _this;
	    }
	    LiteAdaptor.prototype.parse = function (text, format) {
	        return this.parser.parseFromString(text, format, this);
	    };
	    ;
	    LiteAdaptor.prototype.create = function (kind, ns) {
	        if (ns === void 0) { ns = null; }
	        return new Element_js_1.LiteElement(kind);
	    };
	    LiteAdaptor.prototype.text = function (text) {
	        return new Text_js_1.LiteText(text);
	    };
	    LiteAdaptor.prototype.comment = function (text) {
	        return new Text_js_1.LiteComment(text);
	    };
	    LiteAdaptor.prototype.createDocument = function () {
	        return new Document_js_1.LiteDocument();
	    };
	    LiteAdaptor.prototype.head = function (doc) {
	        return doc.head;
	    };
	    LiteAdaptor.prototype.body = function (doc) {
	        return doc.body;
	    };
	    LiteAdaptor.prototype.root = function (doc) {
	        return doc.root;
	    };
	    LiteAdaptor.prototype.tags = function (node, name, ns) {
	        if (ns === void 0) { ns = null; }
	        var stack = [];
	        var tags = [];
	        if (ns) {
	            return tags;
	        }
	        var n = node;
	        while (n) {
	            var kind = n.kind;
	            if (kind !== '#text' && kind !== '#comment') {
	                n = n;
	                if (kind === name) {
	                    tags.push(n);
	                }
	                if (n.children.length) {
	                    stack = n.children.concat(stack);
	                }
	            }
	            n = stack.shift();
	        }
	        return tags;
	    };
	    LiteAdaptor.prototype.elementById = function (node, id) {
	        var stack = [];
	        var n = node;
	        while (n) {
	            if (n.kind !== '#text' && n.kind !== '#comment') {
	                n = n;
	                if (n.attributes['id'] === id) {
	                    return n;
	                }
	                if (n.children.length) {
	                    stack = n.children.concat(stack);
	                }
	            }
	            n = stack.shift();
	        }
	        return null;
	    };
	    LiteAdaptor.prototype.elementsByClass = function (node, name) {
	        var stack = [];
	        var tags = [];
	        var n = node;
	        while (n) {
	            if (n.kind !== '#text' && n.kind !== '#comment') {
	                n = n;
	                var classes = (n.attributes['class'] || '').trim().split(/ +/);
	                if (classes.includes(name)) {
	                    tags.push(n);
	                }
	                if (n.children.length) {
	                    stack = n.children.concat(stack);
	                }
	            }
	            n = stack.shift();
	        }
	        return tags;
	    };
	    LiteAdaptor.prototype.getElements = function (nodes, document) {
	        var e_1, _a;
	        var containers = [];
	        var body = this.body(document);
	        try {
	            for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {
	                var node = nodes_1_1.value;
	                if (typeof (node) === 'string') {
	                    if (node.charAt(0) === '#') {
	                        var n = this.elementById(body, node.slice(1));
	                        if (n) {
	                            containers.push(n);
	                        }
	                    }
	                    else if (node.charAt(0) === '.') {
	                        containers = containers.concat(this.elementsByClass(body, node.slice(1)));
	                    }
	                    else if (node.match(/^[-a-z][-a-z0-9]*$/i)) {
	                        containers = containers.concat(this.tags(body, node));
	                    }
	                }
	                else if (Array.isArray(node)) {
	                    containers = containers.concat(node);
	                }
	                else if (node instanceof this.window.NodeList || node instanceof this.window.HTMLCollection) {
	                    containers = containers.concat(node.nodes);
	                }
	                else {
	                    containers.push(node);
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return containers;
	    };
	    LiteAdaptor.prototype.parent = function (node) {
	        return node.parent;
	    };
	    LiteAdaptor.prototype.childIndex = function (node) {
	        return (node.parent ? node.parent.children.findIndex(function (n) { return n === node; }) : -1);
	    };
	    LiteAdaptor.prototype.append = function (node, child) {
	        if (child.parent) {
	            this.remove(child);
	        }
	        node.children.push(child);
	        child.parent = node;
	        return child;
	    };
	    LiteAdaptor.prototype.insert = function (nchild, ochild) {
	        if (nchild.parent) {
	            this.remove(nchild);
	        }
	        if (ochild && ochild.parent) {
	            var i = this.childIndex(ochild);
	            ochild.parent.children.splice(i, 0, nchild);
	            nchild.parent = ochild.parent;
	        }
	    };
	    LiteAdaptor.prototype.remove = function (child) {
	        var i = this.childIndex(child);
	        if (i >= 0) {
	            child.parent.children.splice(i, 1);
	        }
	        child.parent = null;
	        return child;
	    };
	    LiteAdaptor.prototype.replace = function (nnode, onode) {
	        var i = this.childIndex(onode);
	        if (i >= 0) {
	            onode.parent.children[i] = nnode;
	        }
	        return onode;
	    };
	    LiteAdaptor.prototype.clone = function (node) {
	        var _this = this;
	        var nnode = new Element_js_1.LiteElement(node.kind);
	        nnode.attributes = __assign({}, node.attributes);
	        nnode.children = node.children.map(function (n) {
	            if (n.kind === '#text') {
	                return new Text_js_1.LiteText(n.value);
	            }
	            else if (n.kind === '#comment') {
	                return new Text_js_1.LiteComment(n.value);
	            }
	            else {
	                var m = _this.clone(n);
	                m.parent = nnode;
	                return m;
	            }
	        });
	        return nnode;
	    };
	    LiteAdaptor.prototype.split = function (node, n) {
	        var text = new Text_js_1.LiteText(node.value.slice(n));
	        node.value = node.value.slice(0, n);
	        node.parent.children.splice(this.childIndex(node) + 1, 0, text);
	        text.parent = node.parent;
	        return text;
	    };
	    LiteAdaptor.prototype.next = function (node) {
	        var parent = node.parent;
	        if (!parent)
	            return;
	        var i = this.childIndex(node) + 1;
	        return (i >= 0 && i < parent.children.length ? parent.children[i] : null);
	    };
	    LiteAdaptor.prototype.previous = function (node) {
	        var parent = node.parent;
	        if (!parent)
	            return;
	        var i = this.childIndex(node) - 1;
	        return (i >= 0 ? parent.children[i] : null);
	    };
	    LiteAdaptor.prototype.firstChild = function (node) {
	        return node.children[0];
	    };
	    LiteAdaptor.prototype.lastChild = function (node) {
	        return node.children[node.children.length - 1];
	    };
	    LiteAdaptor.prototype.childNodes = function (node) {
	        return __spread(node.children);
	    };
	    LiteAdaptor.prototype.childNode = function (node, i) {
	        return node.children[i];
	    };
	    LiteAdaptor.prototype.kind = function (node) {
	        return node.kind;
	    };
	    LiteAdaptor.prototype.value = function (node) {
	        return (node.kind === '#text' ? node.value : '');
	    };
	    LiteAdaptor.prototype.textContent = function (node) {
	        var _this = this;
	        return node.children.reduce(function (s, n) {
	            return s + (n.kind === '#text' ? n.value :
	                n.kind === '#comment' ? '' : _this.textContent(n));
	        }, "");
	    };
	    LiteAdaptor.prototype.innerHTML = function (node) {
	        return this.parser.serializeInner(this, node);
	    };
	    LiteAdaptor.prototype.outerHTML = function (node) {
	        return this.parser.serialize(this, node);
	    };
	    LiteAdaptor.prototype.setAttribute = function (node, name, value, ns) {
	        if (ns === void 0) { ns = null; }
	        if (typeof value !== 'string') {
	            value = String(value);
	        }
	        if (ns) {
	            name = ns.replace(/.*\//, '') + ':' + name.replace(/^.*:/, '');
	        }
	        node.attributes[name] = value;
	        if (name === 'style') {
	            node.styles = null;
	        }
	    };
	    LiteAdaptor.prototype.getAttribute = function (node, name) {
	        return node.attributes[name];
	    };
	    LiteAdaptor.prototype.removeAttribute = function (node, name) {
	        delete node.attributes[name];
	    };
	    LiteAdaptor.prototype.hasAttribute = function (node, name) {
	        return node.attributes.hasOwnProperty(name);
	    };
	    LiteAdaptor.prototype.allAttributes = function (node) {
	        var e_2, _a;
	        var attributes = node.attributes;
	        var list = [];
	        try {
	            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var name_1 = _c.value;
	                list.push({ name: name_1, value: attributes[name_1] });
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        return list;
	    };
	    LiteAdaptor.prototype.addClass = function (node, name) {
	        var classes = (node.attributes['class'] || '').split(/ /);
	        if (!classes.find(function (n) { return n === name; })) {
	            classes.push(name);
	            node.attributes['class'] = classes.join(' ');
	        }
	    };
	    LiteAdaptor.prototype.removeClass = function (node, name) {
	        var classes = (node.attributes['class'] || '').split(/ /);
	        var i = classes.findIndex(function (n) { return n === name; });
	        if (i >= 0) {
	            classes.splice(i, 1);
	            node.attributes['class'] = classes.join(' ');
	        }
	    };
	    LiteAdaptor.prototype.hasClass = function (node, name) {
	        var classes = (node.attributes['class'] || '').split(/ /);
	        return !!classes.find(function (n) { return n === name; });
	    };
	    LiteAdaptor.prototype.setStyle = function (node, name, value) {
	        if (!node.styles) {
	            node.styles = new Styles_js_1.Styles(this.getAttribute(node, 'style'));
	        }
	        node.styles.set(name, value);
	        node.attributes['style'] = node.styles.cssText;
	    };
	    LiteAdaptor.prototype.getStyle = function (node, name) {
	        if (!node.styles) {
	            var style = this.getAttribute(node, 'style');
	            if (!style) {
	                return '';
	            }
	            node.styles = new Styles_js_1.Styles(style);
	        }
	        return node.styles.get(name);
	    };
	    LiteAdaptor.prototype.allStyles = function (node) {
	        return this.getAttribute(node, 'style');
	    };
	    LiteAdaptor.prototype.fontSize = function (node) {
	        return this.options.fontSize;
	    };
	    LiteAdaptor.prototype.nodeSize = function (node, em, local) {
	        if (em === void 0) { em = 1; }
	        if (local === void 0) { local = null; }
	        var text = this.textContent(node);
	        return [.6 * text.length, 0];
	    };
	    LiteAdaptor.prototype.nodeBBox = function (node) {
	        return { left: 0, right: 0, top: 0, bottom: 0 };
	    };
	    LiteAdaptor.OPTIONS = {
	        fontSize: 16,
	    };
	    return LiteAdaptor;
	}(DOMAdaptor_js_1.AbstractDOMAdaptor));
	exports.LiteAdaptor = LiteAdaptor;
	function liteAdaptor(options) {
	    if (options === void 0) { options = null; }
	    return new LiteAdaptor(options);
	}
	exports.liteAdaptor = liteAdaptor;
	//# sourceMappingURL=liteAdaptor.js.map

/***/ }),
/* 345 */
/***/ (function(module, exports) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var AbstractDOMAdaptor = (function () {
	    function AbstractDOMAdaptor(document) {
	        if (document === void 0) { document = null; }
	        this.document = document;
	    }
	    AbstractDOMAdaptor.prototype.node = function (kind, def, children, ns) {
	        var e_1, _a;
	        if (def === void 0) { def = {}; }
	        if (children === void 0) { children = []; }
	        var node = this.create(kind, ns);
	        this.setAttributes(node, def);
	        try {
	            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {
	                var child = children_1_1.value;
	                this.append(node, child);
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return node;
	    };
	    AbstractDOMAdaptor.prototype.setAttributes = function (node, def) {
	        var e_2, _a, e_3, _b, e_4, _c;
	        if (def.style && typeof (def.style) !== 'string') {
	            try {
	                for (var _d = __values(Object.keys(def.style)), _e = _d.next(); !_e.done; _e = _d.next()) {
	                    var key = _e.value;
	                    this.setStyle(node, key.replace(/-([a-z])/g, function (m, c) { return c.toUpperCase(); }), def.style[key]);
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	        }
	        if (def.properties) {
	            try {
	                for (var _f = __values(Object.keys(def.properties)), _g = _f.next(); !_g.done; _g = _f.next()) {
	                    var key = _g.value;
	                    node[key] = def.properties[key];
	                }
	            }
	            catch (e_3_1) { e_3 = { error: e_3_1 }; }
	            finally {
	                try {
	                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
	                }
	                finally { if (e_3) throw e_3.error; }
	            }
	        }
	        try {
	            for (var _h = __values(Object.keys(def)), _j = _h.next(); !_j.done; _j = _h.next()) {
	                var key = _j.value;
	                if ((key !== 'style' || typeof (def.style) === 'string') && key !== 'properties') {
	                    this.setAttribute(node, key, def[key]);
	                }
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	    };
	    AbstractDOMAdaptor.prototype.replace = function (nnode, onode) {
	        this.insert(nnode, onode);
	        this.remove(onode);
	        return onode;
	    };
	    AbstractDOMAdaptor.prototype.childNode = function (node, i) {
	        return this.childNodes(node)[i];
	    };
	    AbstractDOMAdaptor.prototype.allClasses = function (node) {
	        var classes = this.getAttribute(node, 'class');
	        return (!classes ? [] :
	            classes.replace(/  +/g, ' ').replace(/^ /, '').replace(/ $/, '').split(/ /));
	    };
	    return AbstractDOMAdaptor;
	}());
	exports.AbstractDOMAdaptor = AbstractDOMAdaptor;
	//# sourceMappingURL=DOMAdaptor.js.map

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Element_js_1 = __webpack_require__(347);
	var LiteDocument = (function () {
	    function LiteDocument() {
	        this.root = new Element_js_1.LiteElement('html', {}, [
	            this.head = new Element_js_1.LiteElement('head'),
	            this.body = new Element_js_1.LiteElement('body')
	        ]);
	    }
	    Object.defineProperty(LiteDocument.prototype, "kind", {
	        get: function () {
	            return '#document';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return LiteDocument;
	}());
	exports.LiteDocument = LiteDocument;
	//# sourceMappingURL=Document.js.map

/***/ }),
/* 347 */
/***/ (function(module, exports) {

	"use strict";
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var LiteElement = (function () {
	    function LiteElement(kind, attributes, children) {
	        var e_1, _a;
	        if (attributes === void 0) { attributes = {}; }
	        if (children === void 0) { children = []; }
	        this.kind = kind;
	        this.attributes = __assign({}, attributes);
	        this.children = __spread(children);
	        try {
	            for (var _b = __values(this.children), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                child.parent = this;
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        this.styles = null;
	    }
	    return LiteElement;
	}());
	exports.LiteElement = LiteElement;
	//# sourceMappingURL=Element.js.map

/***/ }),
/* 348 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var LiteText = (function () {
	    function LiteText(text) {
	        if (text === void 0) { text = ""; }
	        this.value = text;
	    }
	    Object.defineProperty(LiteText.prototype, "kind", {
	        get: function () {
	            return '#text';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return LiteText;
	}());
	exports.LiteText = LiteText;
	var LiteComment = (function (_super) {
	    __extends(LiteComment, _super);
	    function LiteComment() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(LiteComment.prototype, "kind", {
	        get: function () {
	            return '#comment';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return LiteComment;
	}(LiteText));
	exports.LiteComment = LiteComment;
	//# sourceMappingURL=Text.js.map

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Element_js_1 = __webpack_require__(347);
	var Document_js_1 = __webpack_require__(346);
	var List_js_1 = __webpack_require__(350);
	var Parser_js_1 = __webpack_require__(351);
	var LiteWindow = (function () {
	    function LiteWindow() {
	        this.DOMParser = Parser_js_1.LiteParser;
	        this.NodeList = List_js_1.LiteList;
	        this.HTMLCollection = List_js_1.LiteList;
	        this.HTMLElement = Element_js_1.LiteElement;
	        this.DocumentFragment = List_js_1.LiteList;
	        this.Document = Document_js_1.LiteDocument;
	        this.document = new Document_js_1.LiteDocument();
	    }
	    return LiteWindow;
	}());
	exports.LiteWindow = LiteWindow;
	//# sourceMappingURL=Window.js.map

/***/ }),
/* 350 */
/***/ (function(module, exports) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var LiteList = (function () {
	    function LiteList(children) {
	        this.nodes = [];
	        this.nodes = __spread(children);
	    }
	    LiteList.prototype.append = function (node) {
	        this.nodes.push(node);
	    };
	    LiteList.prototype[Symbol.iterator] = function () {
	        var i = 0;
	        return {
	            next: function () {
	                return (i === this.nodes.length ?
	                    { value: null, done: true } :
	                    { value: this.nodes[i++], done: false });
	            }
	        };
	    };
	    return LiteList;
	}());
	exports.LiteList = LiteList;
	//# sourceMappingURL=List.js.map

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Entities = __webpack_require__(176);
	var Element_js_1 = __webpack_require__(347);
	var Text_js_1 = __webpack_require__(348);
	var PATTERNS;
	(function (PATTERNS) {
	    PATTERNS.TAGNAME = '[a-z][^\\s\\n>]*';
	    PATTERNS.ATTNAME = '[a-z][^\\s\\n>=]*';
	    PATTERNS.VALUE = "(?:'[^']*'|\"[^\"]*\"|[^\\s\\n]+)";
	    PATTERNS.VALUESPLIT = "(?:'([^']*)'|\"([^\"]*)\"|([^\\s\\n]+))";
	    PATTERNS.SPACE = '(?:\\s|\\n)+';
	    PATTERNS.OPTIONALSPACE = '(?:\\s|\\n)*';
	    PATTERNS.ATTRIBUTE = PATTERNS.ATTNAME + '(?:' + PATTERNS.OPTIONALSPACE + '=' + PATTERNS.OPTIONALSPACE + PATTERNS.VALUE + ')?';
	    PATTERNS.ATTRIBUTESPLIT = '(' + PATTERNS.ATTNAME + ')(?:' + PATTERNS.OPTIONALSPACE + '=' + PATTERNS.OPTIONALSPACE + PATTERNS.VALUESPLIT + ')?';
	    PATTERNS.TAG = '(<(?:' + PATTERNS.TAGNAME + '(?:' + PATTERNS.SPACE + PATTERNS.ATTRIBUTE + ')*' +
	        PATTERNS.OPTIONALSPACE + '/?|/' + PATTERNS.TAGNAME + '|!--[^]*?--|![^]*?)(?:>|$))';
	    PATTERNS.tag = new RegExp(PATTERNS.TAG, "i");
	    PATTERNS.attr = new RegExp(PATTERNS.ATTRIBUTE, "i");
	    PATTERNS.attrsplit = new RegExp(PATTERNS.ATTRIBUTESPLIT, "i");
	})(PATTERNS = exports.PATTERNS || (exports.PATTERNS = {}));
	var LiteParser = (function () {
	    function LiteParser() {
	    }
	    LiteParser.prototype.parseFromString = function (text, format, adaptor) {
	        if (format === void 0) { format = 'text/html'; }
	        if (adaptor === void 0) { adaptor = null; }
	        var root = adaptor.createDocument();
	        var node = adaptor.body(root);
	        var parts = text.replace(/<\?.*?\?>/g, '').split(PATTERNS.tag);
	        while (parts.length) {
	            var text_1 = parts.shift();
	            var tag = parts.shift();
	            if (text_1) {
	                this.addText(adaptor, node, text_1);
	            }
	            if (tag && tag.charAt(tag.length - 1) === '>') {
	                if (tag.charAt(1) === '!') {
	                    this.addComment(adaptor, node, tag);
	                }
	                else if (tag.charAt(1) === '/') {
	                    node = this.closeTag(adaptor, node, tag);
	                }
	                else {
	                    node = this.openTag(adaptor, node, tag, parts);
	                }
	            }
	        }
	        this.checkDocument(adaptor, root);
	        return root;
	    };
	    LiteParser.prototype.addText = function (adaptor, node, text) {
	        text = Entities.translate(text);
	        return adaptor.append(node, adaptor.text(text));
	    };
	    LiteParser.prototype.addComment = function (adaptor, node, comment) {
	        return adaptor.append(node, new Text_js_1.LiteComment(comment));
	    };
	    LiteParser.prototype.closeTag = function (adaptor, node, tag) {
	        var kind = tag.slice(2, tag.length - 1).toLowerCase();
	        while (adaptor.parent(node) && adaptor.kind(node) !== kind) {
	            node = adaptor.parent(node);
	        }
	        return adaptor.parent(node);
	    };
	    LiteParser.prototype.openTag = function (adaptor, node, tag, parts) {
	        var PCDATA = this.constructor.PCDATA;
	        var SELF_CLOSING = this.constructor.SELF_CLOSING;
	        var kind = tag.match(/<(.*?)[\s\n>/]/)[1].toLowerCase();
	        var child = adaptor.node(kind);
	        var attributes = tag.replace(/^<.*?[\s\n>]/, '').split(PATTERNS.attrsplit);
	        if (attributes.pop().match(/>$/) || attributes.length < 5) {
	            this.addAttributes(adaptor, child, attributes);
	            adaptor.append(node, child);
	            if (!SELF_CLOSING[kind] && !tag.match(/\/>$/)) {
	                if (PCDATA[kind]) {
	                    this.handlePCDATA(adaptor, child, kind, parts);
	                }
	                else {
	                    node = child;
	                }
	            }
	        }
	        return node;
	    };
	    LiteParser.prototype.addAttributes = function (adaptor, node, attributes) {
	        var CDATA_ATTR = this.constructor.CDATA_ATTR;
	        while (attributes.length) {
	            var _a = __read(attributes.splice(0, 5), 5), space = _a[0], name_1 = _a[1], v1 = _a[2], v2 = _a[3], v3 = _a[4];
	            var value = v1 || v2 || v3 || '';
	            if (!CDATA_ATTR[name_1]) {
	                value = Entities.translate(value);
	            }
	            adaptor.setAttribute(node, name_1, value);
	        }
	    };
	    LiteParser.prototype.handlePCDATA = function (adaptor, node, kind, parts) {
	        var pcdata = [];
	        var etag = '</' + kind + '>';
	        var ptag = '';
	        while (parts.length && ptag !== etag) {
	            pcdata.push(ptag);
	            pcdata.push(parts.shift());
	            ptag = parts.shift();
	        }
	        adaptor.append(node, adaptor.text(pcdata.join('')));
	    };
	    LiteParser.prototype.checkDocument = function (adaptor, root) {
	        var e_1, _a;
	        var node = this.getOnlyChild(adaptor, adaptor.body(root));
	        if (!node)
	            return;
	        switch (adaptor.kind(node)) {
	            case 'html':
	                try {
	                    for (var _b = __values(node.children), _c = _b.next(); !_c.done; _c = _b.next()) {
	                        var child = _c.value;
	                        switch (adaptor.kind(child)) {
	                            case 'head':
	                                root.head = child;
	                                break;
	                            case 'body':
	                                root.body = child;
	                                break;
	                        }
	                    }
	                }
	                catch (e_1_1) { e_1 = { error: e_1_1 }; }
	                finally {
	                    try {
	                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                    }
	                    finally { if (e_1) throw e_1.error; }
	                }
	                root.root = node;
	                adaptor.remove(node);
	                if (adaptor.parent(root.body) !== node) {
	                    adaptor.append(node, root.body);
	                }
	                if (adaptor.parent(root.head) !== node) {
	                    adaptor.insert(root.head, root.body);
	                }
	                break;
	            case 'head':
	                root.head = adaptor.replace(node, root.head);
	                break;
	            case 'body':
	                root.body = adaptor.replace(node, root.body);
	                break;
	        }
	    };
	    LiteParser.prototype.getOnlyChild = function (adaptor, body) {
	        var e_2, _a;
	        var node = null;
	        try {
	            for (var _b = __values(adaptor.childNodes(body)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var child = _c.value;
	                if (child instanceof Element_js_1.LiteElement) {
	                    if (node)
	                        return null;
	                    node = child;
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        return node;
	    };
	    LiteParser.prototype.serialize = function (adaptor, node) {
	        var _this = this;
	        var SELF_CLOSING = this.constructor.SELF_CLOSING;
	        var CDATA = this.constructor.CDATA_ATTR;
	        var tag = adaptor.kind(node);
	        var attributes = adaptor.allAttributes(node).map(function (x) { return x.name + '="' + (CDATA[x.name] ? x.value : _this.protectAttribute(x.value)) + '"'; }).join(' ');
	        var html = '<' + tag + (attributes ? ' ' + attributes : '') + '>'
	            + (SELF_CLOSING[tag] ? '' : adaptor.innerHTML(node) + '</' + tag + '>');
	        return html;
	    };
	    LiteParser.prototype.serializeInner = function (adaptor, node) {
	        var _this = this;
	        var PCDATA = this.constructor.PCDATA;
	        if (PCDATA.hasOwnProperty(node.kind)) {
	            return adaptor.childNodes(node).map(function (x) { return adaptor.value(x); }).join('');
	        }
	        return adaptor.childNodes(node).map(function (x) {
	            var kind = adaptor.kind(x);
	            return (kind === '#text' ? _this.protectHTML(adaptor.value(x)) :
	                kind === '#comment' ? adaptor.value(x) :
	                    _this.serialize(adaptor, x));
	        }).join('');
	    };
	    LiteParser.prototype.protectAttribute = function (text) {
	        if (typeof text !== 'string') {
	            text = String(text);
	        }
	        return text.replace(/"/g, '&quot;');
	    };
	    LiteParser.prototype.protectHTML = function (text) {
	        return text.replace(/&/g, '&amp;')
	            .replace(/</g, '&lt;')
	            .replace(/>/g, '&gt;');
	    };
	    LiteParser.SELF_CLOSING = {
	        area: true,
	        base: true,
	        br: true,
	        col: true,
	        command: true,
	        embed: true,
	        hr: true,
	        img: true,
	        input: true,
	        keygen: true,
	        link: true,
	        menuitem: true,
	        meta: true,
	        param: true,
	        source: true,
	        track: true,
	        wbr: true
	    };
	    LiteParser.PCDATA = {
	        option: true,
	        textarea: true,
	        fieldset: true,
	        title: true,
	        style: true,
	        script: true
	    };
	    LiteParser.CDATA_ATTR = {
	        style: true,
	        datafld: true,
	        datasrc: true,
	        href: true,
	        src: true,
	        longdesc: true,
	        usemap: true,
	        cite: true,
	        datetime: true,
	        action: true,
	        axis: true,
	        profile: true,
	        content: true,
	        scheme: true
	    };
	    return LiteParser;
	}());
	exports.LiteParser = LiteParser;
	//# sourceMappingURL=Parser.js.map

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var mathjax_js_1 = __webpack_require__(154);
	var HTMLHandler_js_1 = __webpack_require__(353);
	function RegisterHTMLHandler(adaptor) {
	    var handler = new HTMLHandler_js_1.HTMLHandler(adaptor);
	    mathjax_js_1.mathjax.handlers.register(handler);
	    return handler;
	}
	exports.RegisterHTMLHandler = RegisterHTMLHandler;
	//# sourceMappingURL=html.js.map

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Handler_js_1 = __webpack_require__(354);
	var HTMLDocument_js_1 = __webpack_require__(368);
	var HTMLHandler = (function (_super) {
	    __extends(HTMLHandler, _super);
	    function HTMLHandler() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.documentClass = HTMLDocument_js_1.HTMLDocument;
	        return _this;
	    }
	    HTMLHandler.prototype.handlesDocument = function (document) {
	        var adaptor = this.adaptor;
	        if (typeof (document) === 'string') {
	            try {
	                document = adaptor.parse(document, 'text/html');
	            }
	            catch (err) { }
	        }
	        if (document instanceof adaptor.window.Document ||
	            document instanceof adaptor.window.HTMLElement ||
	            document instanceof adaptor.window.DocumentFragment) {
	            return true;
	        }
	        return false;
	    };
	    HTMLHandler.prototype.create = function (document, options) {
	        var adaptor = this.adaptor;
	        if (typeof (document) === 'string') {
	            document = adaptor.parse(document, 'text/html');
	        }
	        else if (document instanceof adaptor.window.HTMLElement ||
	            document instanceof adaptor.window.DocumentFragment) {
	            var child = document;
	            document = adaptor.parse('', 'text/html');
	            adaptor.append(adaptor.body(document), child);
	        }
	        return _super.prototype.create.call(this, document, options);
	    };
	    return HTMLHandler;
	}(Handler_js_1.AbstractHandler));
	exports.HTMLHandler = HTMLHandler;
	//# sourceMappingURL=HTMLHandler.js.map

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var MathDocument_js_1 = __webpack_require__(355);
	var DefaultMathDocument = (function (_super) {
	    __extends(DefaultMathDocument, _super);
	    function DefaultMathDocument() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    return DefaultMathDocument;
	}(MathDocument_js_1.AbstractMathDocument));
	var AbstractHandler = (function () {
	    function AbstractHandler(adaptor, priority) {
	        if (priority === void 0) { priority = 5; }
	        this.documentClass = DefaultMathDocument;
	        this.adaptor = adaptor;
	        this.priority = priority;
	    }
	    Object.defineProperty(AbstractHandler.prototype, "name", {
	        get: function () {
	            return this.constructor.NAME;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractHandler.prototype.handlesDocument = function (document) {
	        return false;
	    };
	    AbstractHandler.prototype.create = function (document, options) {
	        return new this.documentClass(document, this.adaptor, options);
	    };
	    AbstractHandler.NAME = 'generic';
	    return AbstractHandler;
	}());
	exports.AbstractHandler = AbstractHandler;
	//# sourceMappingURL=Handler.js.map

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Options_js_1 = __webpack_require__(160);
	var InputJax_js_1 = __webpack_require__(159);
	var OutputJax_js_1 = __webpack_require__(200);
	var MathList_js_1 = __webpack_require__(356);
	var MathItem_js_1 = __webpack_require__(165);
	var MmlFactory_js_1 = __webpack_require__(358);
	var BitField_js_1 = __webpack_require__(367);
	var PrioritizedList_js_1 = __webpack_require__(156);
	var RenderList = (function (_super) {
	    __extends(RenderList, _super);
	    function RenderList() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    RenderList.create = function (actions) {
	        var e_1, _a;
	        var list = new this();
	        try {
	            for (var _b = __values(Object.keys(actions)), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var id = _c.value;
	                var _d = __read(this.action(id, actions[id]), 2), action = _d[0], priority = _d[1];
	                if (priority) {
	                    list.add(action, priority);
	                }
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return list;
	    };
	    RenderList.action = function (id, action) {
	        var _a, _b, _c, _d;
	        var renderDoc, renderMath;
	        var convert = true;
	        var priority = action[0];
	        if (action.length === 1 || typeof action[1] === 'boolean') {
	            action.length === 2 && (convert = action[1]);
	            _a = __read(this.methodActions(id), 2), renderDoc = _a[0], renderMath = _a[1];
	        }
	        else if (typeof action[1] === 'string') {
	            if (typeof action[2] === 'string') {
	                action.length === 4 && (convert = action[3]);
	                var _e = __read(action.slice(1), 2), method1 = _e[0], method2 = _e[1];
	                _b = __read(this.methodActions(method1, method2), 2), renderDoc = _b[0], renderMath = _b[1];
	            }
	            else {
	                action.length === 3 && (convert = action[2]);
	                _c = __read(this.methodActions(action[1]), 2), renderDoc = _c[0], renderMath = _c[1];
	            }
	        }
	        else {
	            action.length === 4 && (convert = action[3]);
	            _d = __read(action.slice(1), 2), renderDoc = _d[0], renderMath = _d[1];
	        }
	        return [{ id: id, renderDoc: renderDoc, renderMath: renderMath, convert: convert }, priority];
	    };
	    RenderList.methodActions = function (method1, method2) {
	        if (method2 === void 0) { method2 = method1; }
	        return [
	            function (document) { method1 && document[method1](); return false; },
	            function (math, document) { method2 && math[method2](document); return false; }
	        ];
	    };
	    RenderList.prototype.renderDoc = function (document, start) {
	        var e_2, _a;
	        if (start === void 0) { start = MathItem_js_1.STATE.UNPROCESSED; }
	        try {
	            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var item = _c.value;
	                if (item.priority >= start) {
	                    if (item.item.renderDoc(document))
	                        return;
	                }
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	    };
	    RenderList.prototype.renderMath = function (math, document, start) {
	        var e_3, _a;
	        if (start === void 0) { start = MathItem_js_1.STATE.UNPROCESSED; }
	        try {
	            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var item = _c.value;
	                if (item.priority >= start) {
	                    if (item.item.renderMath(math, document))
	                        return;
	                }
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	    };
	    RenderList.prototype.renderConvert = function (math, document, end) {
	        var e_4, _a;
	        if (end === void 0) { end = MathItem_js_1.STATE.LAST; }
	        try {
	            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var item = _c.value;
	                if (item.priority > end)
	                    return;
	                if (item.item.convert) {
	                    if (item.item.renderMath(math, document))
	                        return;
	                }
	            }
	        }
	        catch (e_4_1) { e_4 = { error: e_4_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_4) throw e_4.error; }
	        }
	    };
	    RenderList.prototype.findID = function (id) {
	        var e_5, _a;
	        try {
	            for (var _b = __values(this.items), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var item = _c.value;
	                if (item.item.id === id) {
	                    return item.item;
	                }
	            }
	        }
	        catch (e_5_1) { e_5 = { error: e_5_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_5) throw e_5.error; }
	        }
	        return null;
	    };
	    return RenderList;
	}(PrioritizedList_js_1.PrioritizedList));
	exports.RenderList = RenderList;
	var DefaultInputJax = (function (_super) {
	    __extends(DefaultInputJax, _super);
	    function DefaultInputJax() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    DefaultInputJax.prototype.compile = function (math) {
	        return null;
	    };
	    return DefaultInputJax;
	}(InputJax_js_1.AbstractInputJax));
	var DefaultOutputJax = (function (_super) {
	    __extends(DefaultOutputJax, _super);
	    function DefaultOutputJax() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    DefaultOutputJax.prototype.typeset = function (math, document) {
	        if (document === void 0) { document = null; }
	        return null;
	    };
	    DefaultOutputJax.prototype.escaped = function (math, document) {
	        return null;
	    };
	    return DefaultOutputJax;
	}(OutputJax_js_1.AbstractOutputJax));
	var DefaultMathList = (function (_super) {
	    __extends(DefaultMathList, _super);
	    function DefaultMathList() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    return DefaultMathList;
	}(MathList_js_1.AbstractMathList));
	var DefaultMathItem = (function (_super) {
	    __extends(DefaultMathItem, _super);
	    function DefaultMathItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    return DefaultMathItem;
	}(MathItem_js_1.AbstractMathItem));
	var AbstractMathDocument = (function () {
	    function AbstractMathDocument(document, adaptor, options) {
	        var _this = this;
	        var CLASS = this.constructor;
	        this.document = document;
	        this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
	        this.math = new (this.options['MathList'] || DefaultMathList)();
	        this.renderActions = RenderList.create(this.options['renderActions']);
	        this.processed = new AbstractMathDocument.ProcessBits();
	        this.outputJax = this.options['OutputJax'] || new DefaultOutputJax();
	        var inputJax = this.options['InputJax'] || [new DefaultInputJax()];
	        if (!Array.isArray(inputJax)) {
	            inputJax = [inputJax];
	        }
	        this.inputJax = inputJax;
	        this.adaptor = adaptor;
	        this.outputJax.setAdaptor(adaptor);
	        this.inputJax.map(function (jax) { return jax.setAdaptor(adaptor); });
	        this.mmlFactory = this.options['MmlFactory'] || new MmlFactory_js_1.MmlFactory();
	        this.inputJax.map(function (jax) { return jax.setMmlFactory(_this.mmlFactory); });
	        this.outputJax.initialize();
	        this.inputJax.map(function (jax) { return jax.initialize(); });
	    }
	    Object.defineProperty(AbstractMathDocument.prototype, "kind", {
	        get: function () {
	            return this.constructor.KIND;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AbstractMathDocument.prototype.addRenderAction = function (id) {
	        var action = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            action[_i - 1] = arguments[_i];
	        }
	        var _a = __read(RenderList.action(id, action), 2), fn = _a[0], p = _a[1];
	        this.renderActions.add(fn, p);
	    };
	    AbstractMathDocument.prototype.removeRenderAction = function (id) {
	        var action = this.renderActions.findID(id);
	        if (action) {
	            this.renderActions.remove(action);
	        }
	    };
	    AbstractMathDocument.prototype.render = function () {
	        this.renderActions.renderDoc(this);
	        return this;
	    };
	    AbstractMathDocument.prototype.rerender = function (start) {
	        if (start === void 0) { start = MathItem_js_1.STATE.RERENDER; }
	        this.state(start - 1);
	        this.render();
	        return this;
	    };
	    AbstractMathDocument.prototype.convert = function (math, options) {
	        if (options === void 0) { options = {}; }
	        var _a = Options_js_1.userOptions({
	            format: this.inputJax[0].name, display: true, end: MathItem_js_1.STATE.LAST,
	            em: 16, ex: 8, containerWidth: null, lineWidth: 1000000, scale: 1
	        }, options), format = _a.format, display = _a.display, end = _a.end, ex = _a.ex, em = _a.em, containerWidth = _a.containerWidth, lineWidth = _a.lineWidth, scale = _a.scale;
	        if (containerWidth === null) {
	            containerWidth = 80 * ex;
	        }
	        var jax = this.inputJax.reduce(function (jax, ijax) { return (ijax.name === format ? ijax : jax); }, null);
	        var mitem = new this.options.MathItem(math, jax, display);
	        mitem.start.node = this.adaptor.body(this.document);
	        mitem.setMetrics(em, ex, containerWidth, lineWidth, scale);
	        mitem.convert(this, end);
	        return (mitem.typesetRoot || mitem.root);
	    };
	    AbstractMathDocument.prototype.findMath = function (options) {
	        if (options === void 0) { options = null; }
	        this.processed.set('findMath');
	        return this;
	    };
	    AbstractMathDocument.prototype.compile = function () {
	        var e_6, _a, e_7, _b;
	        if (!this.processed.isSet('compile')) {
	            var recompile = [];
	            try {
	                for (var _c = __values(this.math), _d = _c.next(); !_d.done; _d = _c.next()) {
	                    var math = _d.value;
	                    this.compileMath(math);
	                    if (math.inputData.recompile !== undefined) {
	                        recompile.push(math);
	                    }
	                }
	            }
	            catch (e_6_1) { e_6 = { error: e_6_1 }; }
	            finally {
	                try {
	                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
	                }
	                finally { if (e_6) throw e_6.error; }
	            }
	            try {
	                for (var recompile_1 = __values(recompile), recompile_1_1 = recompile_1.next(); !recompile_1_1.done; recompile_1_1 = recompile_1.next()) {
	                    var math = recompile_1_1.value;
	                    var data = math.inputData.recompile;
	                    math.state(data.state);
	                    math.inputData.recompile = data;
	                    this.compileMath(math);
	                }
	            }
	            catch (e_7_1) { e_7 = { error: e_7_1 }; }
	            finally {
	                try {
	                    if (recompile_1_1 && !recompile_1_1.done && (_b = recompile_1.return)) _b.call(recompile_1);
	                }
	                finally { if (e_7) throw e_7.error; }
	            }
	            this.processed.set('compile');
	        }
	        return this;
	    };
	    AbstractMathDocument.prototype.compileMath = function (math) {
	        try {
	            math.compile(this);
	        }
	        catch (err) {
	            if (err.retry || err.restart) {
	                throw err;
	            }
	            this.options['compileError'](this, math, err);
	            math.inputData['error'] = err;
	        }
	    };
	    AbstractMathDocument.prototype.compileError = function (math, err) {
	        math.root = this.mmlFactory.create('math', null, [
	            this.mmlFactory.create('merror', { 'data-mjx-error': err.message }, [
	                this.mmlFactory.create('mtext', null, [
	                    this.mmlFactory.create('text').setText('Math input error')
	                ])
	            ])
	        ]);
	        if (math.display) {
	            math.root.attributes.set('display', 'block');
	        }
	    };
	    AbstractMathDocument.prototype.typeset = function () {
	        var e_8, _a;
	        if (!this.processed.isSet('typeset')) {
	            try {
	                for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var math = _c.value;
	                    try {
	                        math.typeset(this);
	                    }
	                    catch (err) {
	                        if (err.retry || err.restart) {
	                            throw err;
	                        }
	                        this.options['typesetError'](this, math, err);
	                        math.outputData['error'] = err;
	                    }
	                }
	            }
	            catch (e_8_1) { e_8 = { error: e_8_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_8) throw e_8.error; }
	            }
	            this.processed.set('typeset');
	        }
	        return this;
	    };
	    AbstractMathDocument.prototype.typesetError = function (math, err) {
	        math.typesetRoot = this.adaptor.node('span', { 'data-mjx-error': err.message }, [this.adaptor.text('Math output error')]);
	    };
	    AbstractMathDocument.prototype.getMetrics = function () {
	        if (!this.processed.isSet('getMetrics')) {
	            this.outputJax.getMetrics(this);
	            this.processed.set('getMetrics');
	        }
	        return this;
	    };
	    AbstractMathDocument.prototype.updateDocument = function () {
	        var e_9, _a;
	        if (!this.processed.isSet('updateDocument')) {
	            try {
	                for (var _b = __values(this.math.reversed()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var math = _c.value;
	                    math.updateDocument(this);
	                }
	            }
	            catch (e_9_1) { e_9 = { error: e_9_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_9) throw e_9.error; }
	            }
	            this.processed.set('updateDocument');
	        }
	        return this;
	    };
	    AbstractMathDocument.prototype.removeFromDocument = function (restore) {
	        if (restore === void 0) { restore = false; }
	        return this;
	    };
	    AbstractMathDocument.prototype.state = function (state, restore) {
	        var e_10, _a;
	        if (restore === void 0) { restore = false; }
	        try {
	            for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var math = _c.value;
	                math.state(state, restore);
	            }
	        }
	        catch (e_10_1) { e_10 = { error: e_10_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_10) throw e_10.error; }
	        }
	        if (state < MathItem_js_1.STATE.INSERTED) {
	            this.processed.clear('updateDocument');
	        }
	        if (state < MathItem_js_1.STATE.TYPESET) {
	            this.processed.clear('typeset');
	            this.processed.clear('getMetrics');
	        }
	        if (state < MathItem_js_1.STATE.COMPILED) {
	            this.processed.clear('compile');
	        }
	        return this;
	    };
	    AbstractMathDocument.prototype.reset = function () {
	        this.processed.reset();
	        return this;
	    };
	    AbstractMathDocument.prototype.clear = function () {
	        this.reset();
	        this.math.clear();
	        return this;
	    };
	    AbstractMathDocument.prototype.concat = function (list) {
	        this.math.merge(list);
	        return this;
	    };
	    AbstractMathDocument.KIND = 'MathDocument';
	    AbstractMathDocument.OPTIONS = {
	        OutputJax: null,
	        InputJax: null,
	        MmlFactory: null,
	        MathList: DefaultMathList,
	        MathItem: DefaultMathItem,
	        compileError: function (doc, math, err) {
	            doc.compileError(math, err);
	        },
	        typesetError: function (doc, math, err) {
	            doc.typesetError(math, err);
	        },
	        renderActions: Options_js_1.expandable({
	            find: [MathItem_js_1.STATE.FINDMATH, 'findMath', '', false],
	            compile: [MathItem_js_1.STATE.COMPILED],
	            metrics: [MathItem_js_1.STATE.METRICS, 'getMetrics', '', false],
	            typeset: [MathItem_js_1.STATE.TYPESET],
	            update: [MathItem_js_1.STATE.INSERTED, 'updateDocument', false]
	        })
	    };
	    AbstractMathDocument.ProcessBits = BitField_js_1.BitFieldClass('findMath', 'compile', 'getMetrics', 'typeset', 'updateDocument');
	    return AbstractMathDocument;
	}());
	exports.AbstractMathDocument = AbstractMathDocument;
	//# sourceMappingURL=MathDocument.js.map

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var LinkedList_js_1 = __webpack_require__(357);
	var AbstractMathList = (function (_super) {
	    __extends(AbstractMathList, _super);
	    function AbstractMathList() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    AbstractMathList.prototype.isBefore = function (a, b) {
	        return (a.start.i < b.start.i || (a.start.i === b.start.i && a.start.n < b.start.n));
	    };
	    return AbstractMathList;
	}(LinkedList_js_1.LinkedList));
	exports.AbstractMathList = AbstractMathList;
	//# sourceMappingURL=MathList.js.map

/***/ }),
/* 357 */
/***/ (function(module, exports) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var END = Symbol();
	var ListItem = (function () {
	    function ListItem(data) {
	        if (data === void 0) { data = null; }
	        this.next = null;
	        this.prev = null;
	        this.data = data;
	    }
	    return ListItem;
	}());
	exports.ListItem = ListItem;
	var LinkedList = (function () {
	    function LinkedList() {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        this.list = new ListItem(END);
	        this.list.next = this.list.prev = this.list;
	        this.push.apply(this, __spread(args));
	    }
	    LinkedList.prototype.toArray = function () {
	        return Array.from(this);
	    };
	    LinkedList.prototype.isBefore = function (a, b) {
	        return (a < b);
	    };
	    LinkedList.prototype.push = function () {
	        var e_1, _a;
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        try {
	            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
	                var data = args_1_1.value;
	                var item = new ListItem(data);
	                item.next = this.list;
	                item.prev = this.list.prev;
	                this.list.prev = item;
	                item.prev.next = item;
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return this;
	    };
	    LinkedList.prototype.pop = function () {
	        var item = this.list.prev;
	        if (item.data === END) {
	            return null;
	        }
	        this.list.prev = item.prev;
	        item.prev.next = this.list;
	        item.next = item.prev = null;
	        return item.data;
	    };
	    LinkedList.prototype.unshift = function () {
	        var e_2, _a;
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        try {
	            for (var _b = __values(args.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var data = _c.value;
	                var item = new ListItem(data);
	                item.next = this.list.next;
	                item.prev = this.list;
	                this.list.next = item;
	                item.next.prev = item;
	            }
	        }
	        catch (e_2_1) { e_2 = { error: e_2_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_2) throw e_2.error; }
	        }
	        return this;
	    };
	    LinkedList.prototype.shift = function () {
	        var item = this.list.next;
	        if (item.data === END) {
	            return null;
	        }
	        this.list.next = item.next;
	        item.next.prev = this.list;
	        item.next = item.prev = null;
	        return item.data;
	    };
	    LinkedList.prototype.clear = function () {
	        this.list.next.prev = this.list.prev.next = null;
	        this.list.next = this.list.prev = this.list;
	        return this;
	    };
	    LinkedList.prototype[Symbol.iterator] = function () {
	        var current = this.list;
	        return {
	            next: function () {
	                current = current.next;
	                return (current.data === END ?
	                    { value: null, done: true } :
	                    { value: current.data, done: false });
	            }
	        };
	    };
	    LinkedList.prototype.reversed = function () {
	        var _a;
	        var current = this.list;
	        return _a = {},
	            _a[Symbol.iterator] = function () {
	                return this;
	            },
	            _a.next = function () {
	                current = current.prev;
	                return (current.data === END ?
	                    { value: null, done: true } :
	                    { value: current.data, done: false });
	            },
	            _a.toArray = function () {
	                return Array.from(this);
	            },
	            _a;
	    };
	    LinkedList.prototype.insert = function (data, isBefore) {
	        if (isBefore === void 0) { isBefore = null; }
	        if (isBefore === null) {
	            isBefore = this.isBefore.bind(this);
	        }
	        var item = new ListItem(data);
	        var cur = this.list.next;
	        while (cur.data !== END && isBefore(cur.data, item.data)) {
	            cur = cur.next;
	        }
	        item.prev = cur.prev;
	        item.next = cur;
	        cur.prev.next = cur.prev = item;
	        return this;
	    };
	    LinkedList.prototype.sort = function (isBefore) {
	        var e_3, _a;
	        if (isBefore === void 0) { isBefore = null; }
	        if (isBefore === null) {
	            isBefore = this.isBefore.bind(this);
	        }
	        var lists = [];
	        try {
	            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var item = _c.value;
	                lists.push(new LinkedList(item));
	            }
	        }
	        catch (e_3_1) { e_3 = { error: e_3_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_3) throw e_3.error; }
	        }
	        this.list.next = this.list.prev = this.list;
	        while (lists.length > 1) {
	            var l1 = lists.shift();
	            var l2 = lists.shift();
	            l1.merge(l2, isBefore);
	            lists.push(l1);
	        }
	        if (lists.length) {
	            this.list = lists[0].list;
	        }
	        return this;
	    };
	    LinkedList.prototype.merge = function (list, isBefore) {
	        var _a, _b, _c, _d, _e;
	        if (isBefore === void 0) { isBefore = null; }
	        if (isBefore === null) {
	            isBefore = this.isBefore.bind(this);
	        }
	        var lcur = this.list.next;
	        var mcur = list.list.next;
	        while (lcur.data !== END && mcur.data !== END) {
	            if (isBefore(mcur.data, lcur.data)) {
	                _a = __read([lcur, mcur], 2), mcur.prev.next = _a[0], lcur.prev.next = _a[1];
	                _b = __read([lcur.prev, mcur.prev], 2), mcur.prev = _b[0], lcur.prev = _b[1];
	                _c = __read([list.list, this.list], 2), this.list.prev.next = _c[0], list.list.prev.next = _c[1];
	                _d = __read([list.list.prev, this.list.prev], 2), this.list.prev = _d[0], list.list.prev = _d[1];
	                _e = __read([mcur.next, lcur], 2), lcur = _e[0], mcur = _e[1];
	            }
	            else {
	                lcur = lcur.next;
	            }
	        }
	        if (mcur.data !== END) {
	            this.list.prev.next = list.list.next;
	            list.list.next.prev = this.list.prev;
	            list.list.prev.next = this.list;
	            this.list.prev = list.list.prev;
	            list.list.next = list.list.prev = list.list;
	        }
	        return this;
	    };
	    return LinkedList;
	}());
	exports.LinkedList = LinkedList;
	//# sourceMappingURL=LinkedList.js.map

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var NodeFactory_js_1 = __webpack_require__(359);
	var MML_js_1 = __webpack_require__(360);
	var MmlFactory = (function (_super) {
	    __extends(MmlFactory, _super);
	    function MmlFactory() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlFactory.prototype, "MML", {
	        get: function () {
	            return this.node;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlFactory.defaultNodes = MML_js_1.MML;
	    return MmlFactory;
	}(NodeFactory_js_1.AbstractNodeFactory));
	exports.MmlFactory = MmlFactory;
	//# sourceMappingURL=MmlFactory.js.map

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Factory_js_1 = __webpack_require__(183);
	var AbstractNodeFactory = (function (_super) {
	    __extends(AbstractNodeFactory, _super);
	    function AbstractNodeFactory() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    AbstractNodeFactory.prototype.create = function (kind, properties, children) {
	        if (properties === void 0) { properties = {}; }
	        if (children === void 0) { children = []; }
	        return this.node[kind](properties, children);
	    };
	    return AbstractNodeFactory;
	}(Factory_js_1.AbstractFactory));
	exports.AbstractNodeFactory = AbstractNodeFactory;
	//# sourceMappingURL=NodeFactory.js.map

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var math_js_1 = __webpack_require__(216);
	var mi_js_1 = __webpack_require__(219);
	var mn_js_1 = __webpack_require__(224);
	var mo_js_1 = __webpack_require__(171);
	var mtext_js_1 = __webpack_require__(230);
	var mspace_js_1 = __webpack_require__(233);
	var ms_js_1 = __webpack_require__(227);
	var mrow_js_1 = __webpack_require__(244);
	var mfrac_js_1 = __webpack_require__(250);
	var msqrt_js_1 = __webpack_require__(253);
	var mroot_js_1 = __webpack_require__(256);
	var mstyle_js_1 = __webpack_require__(361);
	var merror_js_1 = __webpack_require__(362);
	var mpadded_js_1 = __webpack_require__(236);
	var mphantom_js_1 = __webpack_require__(363);
	var mfenced_js_1 = __webpack_require__(247);
	var menclose_js_1 = __webpack_require__(241);
	var maction_js_1 = __webpack_require__(280);
	var msubsup_js_1 = __webpack_require__(261);
	var munderover_js_1 = __webpack_require__(264);
	var mmultiscripts_js_1 = __webpack_require__(267);
	var mtable_js_1 = __webpack_require__(271);
	var mtr_js_1 = __webpack_require__(274);
	var mtd_js_1 = __webpack_require__(277);
	var maligngroup_js_1 = __webpack_require__(364);
	var malignmark_js_1 = __webpack_require__(365);
	var mglyph_js_1 = __webpack_require__(283);
	var semantics_js_1 = __webpack_require__(286);
	var TeXAtom_js_1 = __webpack_require__(289);
	var mathchoice_js_1 = __webpack_require__(366);
	exports.MML = (_a = {},
	    _a[math_js_1.MmlMath.prototype.kind] = math_js_1.MmlMath,
	    _a[mi_js_1.MmlMi.prototype.kind] = mi_js_1.MmlMi,
	    _a[mn_js_1.MmlMn.prototype.kind] = mn_js_1.MmlMn,
	    _a[mo_js_1.MmlMo.prototype.kind] = mo_js_1.MmlMo,
	    _a[mtext_js_1.MmlMtext.prototype.kind] = mtext_js_1.MmlMtext,
	    _a[mspace_js_1.MmlMspace.prototype.kind] = mspace_js_1.MmlMspace,
	    _a[ms_js_1.MmlMs.prototype.kind] = ms_js_1.MmlMs,
	    _a[mrow_js_1.MmlMrow.prototype.kind] = mrow_js_1.MmlMrow,
	    _a[mrow_js_1.MmlInferredMrow.prototype.kind] = mrow_js_1.MmlInferredMrow,
	    _a[mfrac_js_1.MmlMfrac.prototype.kind] = mfrac_js_1.MmlMfrac,
	    _a[msqrt_js_1.MmlMsqrt.prototype.kind] = msqrt_js_1.MmlMsqrt,
	    _a[mroot_js_1.MmlMroot.prototype.kind] = mroot_js_1.MmlMroot,
	    _a[mstyle_js_1.MmlMstyle.prototype.kind] = mstyle_js_1.MmlMstyle,
	    _a[merror_js_1.MmlMerror.prototype.kind] = merror_js_1.MmlMerror,
	    _a[mpadded_js_1.MmlMpadded.prototype.kind] = mpadded_js_1.MmlMpadded,
	    _a[mphantom_js_1.MmlMphantom.prototype.kind] = mphantom_js_1.MmlMphantom,
	    _a[mfenced_js_1.MmlMfenced.prototype.kind] = mfenced_js_1.MmlMfenced,
	    _a[menclose_js_1.MmlMenclose.prototype.kind] = menclose_js_1.MmlMenclose,
	    _a[maction_js_1.MmlMaction.prototype.kind] = maction_js_1.MmlMaction,
	    _a[msubsup_js_1.MmlMsub.prototype.kind] = msubsup_js_1.MmlMsub,
	    _a[msubsup_js_1.MmlMsup.prototype.kind] = msubsup_js_1.MmlMsup,
	    _a[msubsup_js_1.MmlMsubsup.prototype.kind] = msubsup_js_1.MmlMsubsup,
	    _a[munderover_js_1.MmlMunder.prototype.kind] = munderover_js_1.MmlMunder,
	    _a[munderover_js_1.MmlMover.prototype.kind] = munderover_js_1.MmlMover,
	    _a[munderover_js_1.MmlMunderover.prototype.kind] = munderover_js_1.MmlMunderover,
	    _a[mmultiscripts_js_1.MmlMmultiscripts.prototype.kind] = mmultiscripts_js_1.MmlMmultiscripts,
	    _a[mmultiscripts_js_1.MmlMprescripts.prototype.kind] = mmultiscripts_js_1.MmlMprescripts,
	    _a[mmultiscripts_js_1.MmlNone.prototype.kind] = mmultiscripts_js_1.MmlNone,
	    _a[mtable_js_1.MmlMtable.prototype.kind] = mtable_js_1.MmlMtable,
	    _a[mtr_js_1.MmlMlabeledtr.prototype.kind] = mtr_js_1.MmlMlabeledtr,
	    _a[mtr_js_1.MmlMtr.prototype.kind] = mtr_js_1.MmlMtr,
	    _a[mtd_js_1.MmlMtd.prototype.kind] = mtd_js_1.MmlMtd,
	    _a[maligngroup_js_1.MmlMaligngroup.prototype.kind] = maligngroup_js_1.MmlMaligngroup,
	    _a[malignmark_js_1.MmlMalignmark.prototype.kind] = malignmark_js_1.MmlMalignmark,
	    _a[mglyph_js_1.MmlMglyph.prototype.kind] = mglyph_js_1.MmlMglyph,
	    _a[semantics_js_1.MmlSemantics.prototype.kind] = semantics_js_1.MmlSemantics,
	    _a[semantics_js_1.MmlAnnotation.prototype.kind] = semantics_js_1.MmlAnnotation,
	    _a[semantics_js_1.MmlAnnotationXML.prototype.kind] = semantics_js_1.MmlAnnotationXML,
	    _a[TeXAtom_js_1.TeXAtom.prototype.kind] = TeXAtom_js_1.TeXAtom,
	    _a[mathchoice_js_1.mathchoice.prototype.kind] = mathchoice_js_1.mathchoice,
	    _a[MmlNode_js_1.TextNode.prototype.kind] = MmlNode_js_1.TextNode,
	    _a[MmlNode_js_1.XMLNode.prototype.kind] = MmlNode_js_1.XMLNode,
	    _a);
	//# sourceMappingURL=MML.js.map

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var Attributes_js_1 = __webpack_require__(168);
	var MmlMstyle = (function (_super) {
	    __extends(MmlMstyle, _super);
	    function MmlMstyle() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMstyle.prototype, "kind", {
	        get: function () {
	            return 'mstyle';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMstyle.prototype, "notParent", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMstyle.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        var scriptlevel = this.attributes.getExplicit('scriptlevel');
	        if (scriptlevel != null) {
	            scriptlevel = scriptlevel.toString();
	            if (scriptlevel.match(/^\s*[-+]/)) {
	                level += parseInt(scriptlevel);
	            }
	            else {
	                level = parseInt(scriptlevel);
	            }
	        }
	        var displaystyle = this.attributes.getExplicit('displaystyle');
	        if (displaystyle != null) {
	            display = (displaystyle === true);
	        }
	        attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
	        this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);
	    };
	    MmlMstyle.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { scriptlevel: Attributes_js_1.INHERIT, displaystyle: Attributes_js_1.INHERIT, scriptsizemultiplier: 1 / Math.sqrt(2), scriptminsize: '8px', mathbackground: Attributes_js_1.INHERIT, mathcolor: Attributes_js_1.INHERIT, dir: Attributes_js_1.INHERIT, infixlinebreakstyle: 'before' });
	    return MmlMstyle;
	}(MmlNode_js_1.AbstractMmlLayoutNode));
	exports.MmlMstyle = MmlMstyle;
	//# sourceMappingURL=mstyle.js.map

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMerror = (function (_super) {
	    __extends(MmlMerror, _super);
	    function MmlMerror() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMerror.prototype, "kind", {
	        get: function () {
	            return 'merror';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMerror.prototype, "arity", {
	        get: function () {
	            return -1;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMerror.prototype, "linebreakContainer", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMerror.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);
	    return MmlMerror;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMerror = MmlMerror;
	//# sourceMappingURL=merror.js.map

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMphantom = (function (_super) {
	    __extends(MmlMphantom, _super);
	    function MmlMphantom() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;
	        return _this;
	    }
	    Object.defineProperty(MmlMphantom.prototype, "kind", {
	        get: function () {
	            return 'mphantom';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMphantom.defaults = __assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults);
	    return MmlMphantom;
	}(MmlNode_js_1.AbstractMmlLayoutNode));
	exports.MmlMphantom = MmlMphantom;
	//# sourceMappingURL=mphantom.js.map

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var Attributes_js_1 = __webpack_require__(168);
	var MmlMaligngroup = (function (_super) {
	    __extends(MmlMaligngroup, _super);
	    function MmlMaligngroup() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMaligngroup.prototype, "kind", {
	        get: function () {
	            return 'maligngroup';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMaligngroup.prototype, "isSpacelike", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMaligngroup.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {
	        attributes = this.addInheritedAttributes(attributes, this.attributes.getAllAttributes());
	        _super.prototype.setChildInheritedAttributes.call(this, attributes, display, level, prime);
	    };
	    MmlMaligngroup.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlLayoutNode.defaults), { groupalign: Attributes_js_1.INHERIT });
	    return MmlMaligngroup;
	}(MmlNode_js_1.AbstractMmlLayoutNode));
	exports.MmlMaligngroup = MmlMaligngroup;
	//# sourceMappingURL=maligngroup.js.map

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var MmlMalignmark = (function (_super) {
	    __extends(MmlMalignmark, _super);
	    function MmlMalignmark() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(MmlMalignmark.prototype, "kind", {
	        get: function () {
	            return 'malignmark';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMalignmark.prototype, "arity", {
	        get: function () {
	            return 0;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(MmlMalignmark.prototype, "isSpacelike", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MmlMalignmark.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { edge: 'left' });
	    return MmlMalignmark;
	}(MmlNode_js_1.AbstractMmlNode));
	exports.MmlMalignmark = MmlMalignmark;
	//# sourceMappingURL=malignmark.js.map

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MmlNode_js_1 = __webpack_require__(167);
	var mathchoice = (function (_super) {
	    __extends(mathchoice, _super);
	    function mathchoice() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(mathchoice.prototype, "kind", {
	        get: function () {
	            return 'mathchoice';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(mathchoice.prototype, "arity", {
	        get: function () {
	            return 4;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(mathchoice.prototype, "notParent", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    mathchoice.prototype.setInheritedAttributes = function (attributes, display, level, prime) {
	        var selection = (display ? 0 : Math.max(0, Math.min(level, 2)) + 1);
	        var child = this.childNodes[selection] || this.factory.create('mrow');
	        this.parent.replaceChild(child, this);
	        child.setInheritedAttributes(attributes, display, level, prime);
	    };
	    mathchoice.defaults = __assign({}, MmlNode_js_1.AbstractMmlBaseNode.defaults);
	    return mathchoice;
	}(MmlNode_js_1.AbstractMmlBaseNode));
	exports.mathchoice = mathchoice;
	//# sourceMappingURL=mathchoice.js.map

/***/ }),
/* 367 */
/***/ (function(module, exports) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var BitField = (function () {
	    function BitField() {
	        this.bits = 0;
	    }
	    BitField.allocate = function () {
	        var e_1, _a;
	        var names = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            names[_i] = arguments[_i];
	        }
	        try {
	            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {
	                var name_1 = names_1_1.value;
	                if (this.has(name_1)) {
	                    throw new Error('Bit already allocated for ' + name_1);
	                }
	                if (this.next === BitField.MAXBIT) {
	                    throw new Error('Maximum number of bits already allocated');
	                }
	                this.names.set(name_1, this.next);
	                this.next <<= 1;
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	    };
	    BitField.has = function (name) {
	        return this.names.has(name);
	    };
	    BitField.prototype.set = function (name) {
	        this.bits |= this.getBit(name);
	    };
	    BitField.prototype.clear = function (name) {
	        this.bits &= ~this.getBit(name);
	    };
	    BitField.prototype.isSet = function (name) {
	        return !!(this.bits & this.getBit(name));
	    };
	    BitField.prototype.reset = function () {
	        this.bits = 0;
	    };
	    BitField.prototype.getBit = function (name) {
	        var bit = this.constructor.names.get(name);
	        if (!bit) {
	            throw new Error('Unknown bit-field name: ' + name);
	        }
	        return bit;
	    };
	    BitField.MAXBIT = 1 << 31;
	    BitField.next = 1;
	    BitField.names = new Map();
	    return BitField;
	}());
	exports.BitField = BitField;
	function BitFieldClass() {
	    var names = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        names[_i] = arguments[_i];
	    }
	    var Bits = (function (_super) {
	        __extends(Bits, _super);
	        function Bits() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        return Bits;
	    }(BitField));
	    Bits.allocate.apply(Bits, __spread(names));
	    return Bits;
	}
	exports.BitFieldClass = BitFieldClass;
	//# sourceMappingURL=BitField.js.map

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var __assign = (this && this.__assign) || function () {
	    __assign = Object.assign || function(t) {
	        for (var s, i = 1, n = arguments.length; i < n; i++) {
	            s = arguments[i];
	            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	                t[p] = s[p];
	        }
	        return t;
	    };
	    return __assign.apply(this, arguments);
	};
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var MathDocument_js_1 = __webpack_require__(355);
	var Options_js_1 = __webpack_require__(160);
	var HTMLMathItem_js_1 = __webpack_require__(369);
	var HTMLMathList_js_1 = __webpack_require__(370);
	var HTMLDomStrings_js_1 = __webpack_require__(371);
	var MathItem_js_1 = __webpack_require__(165);
	var HTMLDocument = (function (_super) {
	    __extends(HTMLDocument, _super);
	    function HTMLDocument(document, adaptor, options) {
	        var _this = this;
	        var _a = __read(Options_js_1.separateOptions(options, HTMLDomStrings_js_1.HTMLDomStrings.OPTIONS), 2), html = _a[0], dom = _a[1];
	        _this = _super.call(this, document, adaptor, html) || this;
	        _this.domStrings = _this.options['DomStrings'] || new HTMLDomStrings_js_1.HTMLDomStrings(dom);
	        _this.domStrings.adaptor = adaptor;
	        _this.styles = [];
	        return _this;
	    }
	    HTMLDocument.prototype.findPosition = function (N, index, delim, nodes) {
	        var e_1, _a;
	        var adaptor = this.adaptor;
	        try {
	            for (var _b = __values(nodes[N]), _c = _b.next(); !_c.done; _c = _b.next()) {
	                var list = _c.value;
	                var _d = __read(list, 2), node = _d[0], n = _d[1];
	                if (index <= n && adaptor.kind(node) === '#text') {
	                    return { node: node, n: Math.max(index, 0), delim: delim };
	                }
	                index -= n;
	            }
	        }
	        catch (e_1_1) { e_1 = { error: e_1_1 }; }
	        finally {
	            try {
	                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	            }
	            finally { if (e_1) throw e_1.error; }
	        }
	        return { node: null, n: 0, delim: delim };
	    };
	    HTMLDocument.prototype.mathItem = function (item, jax, nodes) {
	        var math = item.math;
	        var start = this.findPosition(item.n, item.start.n, item.open, nodes);
	        var end = this.findPosition(item.n, item.end.n, item.close, nodes);
	        return new this.options.MathItem(math, jax, item.display, start, end);
	    };
	    HTMLDocument.prototype.findMath = function (options) {
	        var e_2, _a, e_3, _b, _c, e_4, _d, e_5, _e;
	        if (!this.processed.isSet('findMath')) {
	            this.adaptor.document = this.document;
	            options = Options_js_1.userOptions({ elements: this.options.elements || [this.adaptor.body(this.document)] }, options);
	            try {
	                for (var _f = __values(this.adaptor.getElements(options['elements'], this.document)), _g = _f.next(); !_g.done; _g = _f.next()) {
	                    var container = _g.value;
	                    var _h = __read([null, null], 2), strings = _h[0], nodes = _h[1];
	                    try {
	                        for (var _j = (e_3 = void 0, __values(this.inputJax)), _k = _j.next(); !_k.done; _k = _j.next()) {
	                            var jax = _k.value;
	                            var list = new (this.options['MathList'])();
	                            if (jax.processStrings) {
	                                if (strings === null) {
	                                    _c = __read(this.domStrings.find(container), 2), strings = _c[0], nodes = _c[1];
	                                }
	                                try {
	                                    for (var _l = (e_4 = void 0, __values(jax.findMath(strings))), _m = _l.next(); !_m.done; _m = _l.next()) {
	                                        var math = _m.value;
	                                        list.push(this.mathItem(math, jax, nodes));
	                                    }
	                                }
	                                catch (e_4_1) { e_4 = { error: e_4_1 }; }
	                                finally {
	                                    try {
	                                        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
	                                    }
	                                    finally { if (e_4) throw e_4.error; }
	                                }
	                            }
	                            else {
	                                try {
	                                    for (var _o = (e_5 = void 0, __values(jax.findMath(container))), _p = _o.next(); !_p.done; _p = _o.next()) {
	                                        var math = _p.value;
	                                        var item = new this.options.MathItem(math.math, jax, math.display, math.start, math.end);
	                                        list.push(item);
	                                    }
	                                }
	                                catch (e_5_1) { e_5 = { error: e_5_1 }; }
	                                finally {
	                                    try {
	                                        if (_p && !_p.done && (_e = _o.return)) _e.call(_o);
	                                    }
	                                    finally { if (e_5) throw e_5.error; }
	                                }
	                            }
	                            this.math.merge(list);
	                        }
	                    }
	                    catch (e_3_1) { e_3 = { error: e_3_1 }; }
	                    finally {
	                        try {
	                            if (_k && !_k.done && (_b = _j.return)) _b.call(_j);
	                        }
	                        finally { if (e_3) throw e_3.error; }
	                    }
	                }
	            }
	            catch (e_2_1) { e_2 = { error: e_2_1 }; }
	            finally {
	                try {
	                    if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
	                }
	                finally { if (e_2) throw e_2.error; }
	            }
	            this.processed.set('findMath');
	        }
	        return this;
	    };
	    HTMLDocument.prototype.updateDocument = function () {
	        if (!this.processed.isSet('updateDocument')) {
	            this.addPageElements();
	            this.addStyleSheet();
	            _super.prototype.updateDocument.call(this);
	            this.processed.set('updateDocument');
	        }
	        return this;
	    };
	    HTMLDocument.prototype.addPageElements = function () {
	        var body = this.adaptor.body(this.document);
	        var node = this.documentPageElements();
	        if (node) {
	            this.adaptor.append(body, node);
	        }
	    };
	    HTMLDocument.prototype.addStyleSheet = function () {
	        var sheet = this.documentStyleSheet();
	        if (sheet) {
	            var head = this.adaptor.head(this.document);
	            var styles = this.findSheet(head, this.adaptor.getAttribute(sheet, 'id'));
	            if (styles) {
	                this.adaptor.replace(sheet, styles);
	            }
	            else {
	                this.adaptor.append(head, sheet);
	            }
	        }
	    };
	    HTMLDocument.prototype.findSheet = function (head, id) {
	        var e_6, _a;
	        if (id) {
	            try {
	                for (var _b = __values(this.adaptor.tags(head, 'style')), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var sheet = _c.value;
	                    if (this.adaptor.getAttribute(sheet, 'id') === id) {
	                        return sheet;
	                    }
	                }
	            }
	            catch (e_6_1) { e_6 = { error: e_6_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_6) throw e_6.error; }
	            }
	        }
	        return null;
	    };
	    HTMLDocument.prototype.removeFromDocument = function (restore) {
	        var e_7, _a;
	        if (restore === void 0) { restore = false; }
	        if (this.processed.isSet('updateDocument')) {
	            try {
	                for (var _b = __values(this.math), _c = _b.next(); !_c.done; _c = _b.next()) {
	                    var math = _c.value;
	                    if (math.state() >= MathItem_js_1.STATE.INSERTED) {
	                        math.state(MathItem_js_1.STATE.TYPESET, restore);
	                    }
	                }
	            }
	            catch (e_7_1) { e_7 = { error: e_7_1 }; }
	            finally {
	                try {
	                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	                }
	                finally { if (e_7) throw e_7.error; }
	            }
	        }
	        this.processed.clear('updateDocument');
	        return this;
	    };
	    HTMLDocument.prototype.documentStyleSheet = function () {
	        return this.outputJax.styleSheet(this);
	    };
	    HTMLDocument.prototype.documentPageElements = function () {
	        return this.outputJax.pageElements(this);
	    };
	    HTMLDocument.prototype.addStyles = function (styles) {
	        this.styles.push(styles);
	    };
	    HTMLDocument.prototype.getStyles = function () {
	        return this.styles;
	    };
	    HTMLDocument.KIND = 'HTML';
	    HTMLDocument.OPTIONS = __assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS), { renderActions: Options_js_1.expandable(__assign(__assign({}, MathDocument_js_1.AbstractMathDocument.OPTIONS.renderActions), { styles: [MathItem_js_1.STATE.INSERTED + 1, '', 'updateStyleSheet', false] })), MathList: HTMLMathList_js_1.HTMLMathList, MathItem: HTMLMathItem_js_1.HTMLMathItem, DomStrings: null });
	    return HTMLDocument;
	}(MathDocument_js_1.AbstractMathDocument));
	exports.HTMLDocument = HTMLDocument;
	//# sourceMappingURL=HTMLDocument.js.map

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var MathItem_js_1 = __webpack_require__(165);
	var HTMLMathItem = (function (_super) {
	    __extends(HTMLMathItem, _super);
	    function HTMLMathItem(math, jax, display, start, end) {
	        if (display === void 0) { display = true; }
	        if (start === void 0) { start = { node: null, n: 0, delim: '' }; }
	        if (end === void 0) { end = { node: null, n: 0, delim: '' }; }
	        return _super.call(this, math, jax, display, start, end) || this;
	    }
	    Object.defineProperty(HTMLMathItem.prototype, "adaptor", {
	        get: function () {
	            return this.inputJax.adaptor;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    HTMLMathItem.prototype.updateDocument = function (html) {
	        if (this.state() < MathItem_js_1.STATE.INSERTED) {
	            if (this.inputJax.processStrings) {
	                var node = this.start.node;
	                if (node === this.end.node) {
	                    if (this.end.n && this.end.n < this.adaptor.value(this.end.node).length) {
	                        this.adaptor.split(this.end.node, this.end.n);
	                    }
	                    if (this.start.n) {
	                        node = this.adaptor.split(this.start.node, this.start.n);
	                    }
	                    this.adaptor.replace(this.typesetRoot, node);
	                }
	                else {
	                    if (this.start.n) {
	                        node = this.adaptor.split(node, this.start.n);
	                    }
	                    while (node !== this.end.node) {
	                        var next = this.adaptor.next(node);
	                        this.adaptor.remove(node);
	                        node = next;
	                    }
	                    this.adaptor.insert(this.typesetRoot, node);
	                    if (this.end.n < this.adaptor.value(node).length) {
	                        this.adaptor.split(node, this.end.n);
	                    }
	                    this.adaptor.remove(node);
	                }
	            }
	            else {
	                this.adaptor.replace(this.typesetRoot, this.start.node);
	            }
	            this.start.node = this.end.node = this.typesetRoot;
	            this.start.n = this.end.n = 0;
	            this.state(MathItem_js_1.STATE.INSERTED);
	        }
	    };
	    HTMLMathItem.prototype.updateStyleSheet = function (document) {
	        document.addStyleSheet();
	    };
	    HTMLMathItem.prototype.removeFromDocument = function (restore) {
	        if (restore === void 0) { restore = false; }
	        if (this.state() >= MathItem_js_1.STATE.TYPESET) {
	            var adaptor = this.adaptor;
	            var node = this.start.node;
	            var math = adaptor.text('');
	            if (restore) {
	                var text = this.start.delim + this.math + this.end.delim;
	                if (this.inputJax.processStrings) {
	                    math = adaptor.text(text);
	                }
	                else {
	                    var doc = adaptor.parse(text, 'text/html');
	                    math = adaptor.firstChild(adaptor.body(doc));
	                }
	            }
	            if (adaptor.parent(node)) {
	                adaptor.replace(math, node);
	            }
	            this.start.node = this.end.node = math;
	            this.start.n = this.end.n = 0;
	        }
	    };
	    return HTMLMathItem;
	}(MathItem_js_1.AbstractMathItem));
	exports.HTMLMathItem = HTMLMathItem;
	//# sourceMappingURL=HTMLMathItem.js.map

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var MathList_js_1 = __webpack_require__(356);
	var HTMLMathList = (function (_super) {
	    __extends(HTMLMathList, _super);
	    function HTMLMathList() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    return HTMLMathList;
	}(MathList_js_1.AbstractMathList));
	exports.HTMLMathList = HTMLMathList;
	//# sourceMappingURL=HTMLMathList.js.map

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Options_js_1 = __webpack_require__(160);
	var HTMLDomStrings = (function () {
	    function HTMLDomStrings(options) {
	        if (options === void 0) { options = null; }
	        var CLASS = this.constructor;
	        this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, CLASS.OPTIONS), options);
	        this.init();
	        this.getPatterns();
	    }
	    HTMLDomStrings.prototype.init = function () {
	        this.strings = [];
	        this.string = '';
	        this.snodes = [];
	        this.nodes = [];
	        this.stack = [];
	    };
	    HTMLDomStrings.prototype.getPatterns = function () {
	        var skip = Options_js_1.makeArray(this.options['skipHtmlTags']);
	        var ignore = Options_js_1.makeArray(this.options['ignoreHtmlClass']);
	        var process = Options_js_1.makeArray(this.options['processHtmlClass']);
	        this.skipHtmlTags = new RegExp('^(?:' + skip.join('|') + ')$', 'i');
	        this.ignoreHtmlClass = new RegExp('(?:^| )(?:' + ignore.join('|') + ')(?: |$)');
	        this.processHtmlClass = new RegExp('(?:^| )(?:' + process + ')(?: |$)');
	    };
	    HTMLDomStrings.prototype.pushString = function () {
	        if (this.string.match(/\S/)) {
	            this.strings.push(this.string);
	            this.nodes.push(this.snodes);
	        }
	        this.string = '';
	        this.snodes = [];
	    };
	    HTMLDomStrings.prototype.extendString = function (node, text) {
	        this.snodes.push([node, text.length]);
	        this.string += text;
	    };
	    HTMLDomStrings.prototype.handleText = function (node, ignore) {
	        if (!ignore) {
	            this.extendString(node, this.adaptor.value(node));
	        }
	        return this.adaptor.next(node);
	    };
	    HTMLDomStrings.prototype.handleTag = function (node, ignore) {
	        if (!ignore) {
	            var text = this.options['includeHtmlTags'][this.adaptor.kind(node)];
	            this.extendString(node, text);
	        }
	        return this.adaptor.next(node);
	    };
	    HTMLDomStrings.prototype.handleContainer = function (node, ignore) {
	        this.pushString();
	        var cname = this.adaptor.getAttribute(node, 'class') || '';
	        var tname = this.adaptor.kind(node) || '';
	        var process = this.processHtmlClass.exec(cname);
	        var next = node;
	        if (this.adaptor.firstChild(node) && !this.adaptor.getAttribute(node, 'data-MJX') &&
	            (process || !this.skipHtmlTags.exec(tname))) {
	            if (this.adaptor.next(node)) {
	                this.stack.push([this.adaptor.next(node), ignore]);
	            }
	            next = this.adaptor.firstChild(node);
	            ignore = (ignore || this.ignoreHtmlClass.exec(cname)) && !process;
	        }
	        else {
	            next = this.adaptor.next(node);
	        }
	        return [next, ignore];
	    };
	    HTMLDomStrings.prototype.find = function (node) {
	        var _a, _b;
	        this.init();
	        var stop = this.adaptor.next(node);
	        var ignore = false;
	        var include = this.options['includeHtmlTags'];
	        while (node && node !== stop) {
	            if (this.adaptor.kind(node) === '#text') {
	                node = this.handleText(node, ignore);
	            }
	            else if (include[this.adaptor.kind(node)] !== undefined) {
	                node = this.handleTag(node, ignore);
	            }
	            else {
	                _a = __read(this.handleContainer(node, ignore), 2), node = _a[0], ignore = _a[1];
	            }
	            if (!node && this.stack.length) {
	                this.pushString();
	                _b = __read(this.stack.pop(), 2), node = _b[0], ignore = _b[1];
	            }
	        }
	        this.pushString();
	        var result = [this.strings, this.nodes];
	        this.init();
	        return result;
	    };
	    HTMLDomStrings.OPTIONS = {
	        skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code', 'annotation', 'annotation-xml'],
	        includeHtmlTags: { br: '\n', wbr: '', '#comment': '' },
	        ignoreHtmlClass: 'mathjax_ignore',
	        processHtmlClass: 'mathjax_process'
	    };
	    return HTMLDomStrings;
	}());
	exports.HTMLDomStrings = HTMLDomStrings;
	//# sourceMappingURL=HTMLDomStrings.js.map

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	__webpack_require__(192);
	__webpack_require__(373);
	__webpack_require__(374);
	__webpack_require__(378);
	__webpack_require__(381);
	__webpack_require__(382);
	__webpack_require__(383);
	__webpack_require__(387);
	__webpack_require__(392);
	__webpack_require__(394);
	__webpack_require__(398);
	__webpack_require__(399);
	__webpack_require__(393);
	__webpack_require__(402);
	__webpack_require__(406);
	__webpack_require__(408);
	__webpack_require__(403);
	__webpack_require__(410);
	__webpack_require__(411);
	__webpack_require__(412);
	__webpack_require__(416);
	__webpack_require__(417);
	__webpack_require__(418);
	if (typeof MathJax !== 'undefined' && MathJax.loader) {
	    MathJax.loader.preLoad('[tex]/action', '[tex]/ams', '[tex]/amsCd', '[tex]/bbox', '[tex]/boldsymbol', '[tex]/braket', '[tex]/bussproofs', '[tex]/cancel', '[tex]/color', '[tex]/color_v2', '[tex]/enclose', '[tex]/extpfeil', '[tex]/html', '[tex]/mhchem', '[tex]/newcommand', '[tex]/noerrors', '[tex]/noundefined', '[tex]/physics', '[tex]/unicode', '[tex]/verb', '[tex]/configMacros', '[tex]/tagFormat');
	}
	exports.AllPackages = [
	    'base',
	    'action',
	    'ams',
	    'amsCd',
	    'bbox',
	    'boldsymbol',
	    'braket',
	    'bussproofs',
	    'cancel',
	    'color',
	    'enclose',
	    'extpfeil',
	    'html',
	    'mhchem',
	    'newcommand',
	    'noerrors',
	    'noundefined',
	    'unicode',
	    'verb',
	    'configMacros',
	    'tagFormat'
	];
	//# sourceMappingURL=AllPackages.js.map

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var TexParser_js_1 = __webpack_require__(173);
	var SymbolMap_js_1 = __webpack_require__(190);
	var BaseMethods_js_1 = __webpack_require__(195);
	exports.ActionMethods = {};
	exports.ActionMethods.Macro = BaseMethods_js_1.default.Macro;
	exports.ActionMethods.Toggle = function (parser, name) {
	    var children = [];
	    var arg;
	    while ((arg = parser.GetArgument(name)) !== '\\endtoggle') {
	        children.push(new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml());
	    }
	    parser.Push(parser.create('node', 'maction', children, { actiontype: 'toggle' }));
	};
	exports.ActionMethods.Mathtip = function (parser, name) {
	    var arg = parser.ParseArg(name);
	    var tip = parser.ParseArg(name);
	    parser.Push(parser.create('node', 'maction', [arg, tip], { actiontype: 'tooltip' }));
	};
	new SymbolMap_js_1.CommandMap('action-macros', {
	    toggle: 'Toggle',
	    mathtip: 'Mathtip',
	    texttip: ['Macro', '\\mathtip{#1}{\\text{#2}}', 2]
	}, exports.ActionMethods);
	exports.ActionConfiguration = Configuration_js_1.Configuration.create('action', { handler: { macro: ['action-macros'] } });
	//# sourceMappingURL=ActionConfiguration.js.map

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var AmsItems_js_1 = __webpack_require__(375);
	var Tags_js_1 = __webpack_require__(186);
	__webpack_require__(376);
	var AmsTags = (function (_super) {
	    __extends(AmsTags, _super);
	    function AmsTags() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    return AmsTags;
	}(Tags_js_1.AbstractTags));
	exports.AmsTags = AmsTags;
	var init = function (config) {
	    config.append(Configuration_js_1.Configuration.extension());
	};
	exports.AmsConfiguration = Configuration_js_1.Configuration.create('ams', { handler: {
	        delimiter: ['AMSsymbols-delimiter', 'AMSmath-delimiter'],
	        macro: ['AMSsymbols-mathchar0mi', 'AMSsymbols-mathchar0m0',
	            'AMSsymbols-delimiter', 'AMSsymbols-macros',
	            'AMSmath-mathchar0mo', 'AMSmath-macros', 'AMSmath-delimiter'],
	        environment: ['AMSmath-environment']
	    },
	    items: (_a = {}, _a[AmsItems_js_1.MultlineItem.prototype.kind] = AmsItems_js_1.MultlineItem, _a),
	    tags: { 'ams': AmsTags },
	    init: init
	});
	//# sourceMappingURL=AmsConfiguration.js.map

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var BaseItems_js_1 = __webpack_require__(193);
	var ParseUtil_js_1 = __webpack_require__(174);
	var NodeUtil_js_1 = __webpack_require__(170);
	var TexError_js_1 = __webpack_require__(175);
	var TexConstants_js_1 = __webpack_require__(189);
	var MultlineItem = (function (_super) {
	    __extends(MultlineItem, _super);
	    function MultlineItem(factory) {
	        var args = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            args[_i - 1] = arguments[_i];
	        }
	        var _this = _super.call(this, factory) || this;
	        _this.factory.configuration.tags.start('multline', true, args[0]);
	        return _this;
	    }
	    Object.defineProperty(MultlineItem.prototype, "kind", {
	        get: function () {
	            return 'multline';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    MultlineItem.prototype.EndEntry = function () {
	        if (this.table.length) {
	            ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);
	        }
	        var shove = this.getProperty('shove');
	        var mtd = this.create('node', 'mtd', this.nodes, shove ? { columnalign: shove } : {});
	        this.setProperty('shove', null);
	        this.row.push(mtd);
	        this.Clear();
	    };
	    MultlineItem.prototype.EndRow = function () {
	        if (this.row.length !== 1) {
	            throw new TexError_js_1.default('MultlineRowsOneCol', 'The rows within the %1 environment must have exactly one column', 'multline');
	        }
	        var row = this.create('node', 'mtr', this.row);
	        this.table.push(row);
	        this.row = [];
	    };
	    MultlineItem.prototype.EndTable = function () {
	        _super.prototype.EndTable.call(this);
	        if (this.table.length) {
	            var m = this.table.length - 1, i = void 0, label = -1;
	            if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign')) {
	                NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.LEFT);
	            }
	            if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign')) {
	                NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.RIGHT);
	            }
	            var tag = this.factory.configuration.tags.getTag();
	            if (tag) {
	                label = (this.arraydef.side === TexConstants_js_1.TexConstant.Align.LEFT ? 0 : this.table.length - 1);
	                var mtr = this.table[label];
	                var mlabel = this.create('node', 'mlabeledtr', [tag].concat(NodeUtil_js_1.default.getChildren(mtr)));
	                NodeUtil_js_1.default.copyAttributes(mtr, mlabel);
	                this.table[label] = mlabel;
	            }
	        }
	        this.factory.configuration.tags.end();
	    };
	    return MultlineItem;
	}(BaseItems_js_1.ArrayItem));
	exports.MultlineItem = MultlineItem;
	//# sourceMappingURL=AmsItems.js.map

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var AmsMethods_js_1 = __webpack_require__(377);
	var sm = __webpack_require__(190);
	var TexConstants_js_1 = __webpack_require__(189);
	var ParseMethods_js_1 = __webpack_require__(188);
	var ParseUtil_js_1 = __webpack_require__(174);
	var MmlNode_js_1 = __webpack_require__(167);
	var COLS = function (W) {
	    var WW = [];
	    for (var i = 0, m = W.length; i < m; i++) {
	        WW[i] = ParseUtil_js_1.default.Em(W[i]);
	    }
	    return WW.join(' ');
	};
	new sm.CharacterMap('AMSmath-mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {
	    iiiint: ['\u2A0C', { texClass: MmlNode_js_1.TEXCLASS.OP }]
	});
	new sm.CommandMap('AMSmath-macros', {
	    mathring: ['Accent', '02DA'],
	    nobreakspace: 'Tilde',
	    negmedspace: ['Spacer', TexConstants_js_1.TexConstant.Length.NEGATIVEMEDIUMMATHSPACE],
	    negthickspace: ['Spacer', TexConstants_js_1.TexConstant.Length.NEGATIVETHICKMATHSPACE],
	    idotsint: ['MultiIntegral', '\\int\\cdots\\int'],
	    dddot: ['Accent', '20DB'],
	    ddddot: ['Accent', '20DC'],
	    sideset: ['Macro', '\\mathop{\\mathop{\\rlap{\\phantom{#3}}}\\nolimits#1' +
	            '\\!\\mathop{#3}\\nolimits#2}', 3],
	    boxed: ['Macro', '\\fbox{$\\displaystyle{#1}$}', 1],
	    tag: 'HandleTag',
	    notag: 'HandleNoTag',
	    eqref: ['HandleRef', true],
	    substack: ['Macro', '\\begin{subarray}{c}#1\\end{subarray}', 1],
	    injlim: ['NamedOp', 'inj&thinsp;lim'],
	    projlim: ['NamedOp', 'proj&thinsp;lim'],
	    varliminf: ['Macro', '\\mathop{\\underline{\\mmlToken{mi}{lim}}}'],
	    varlimsup: ['Macro', '\\mathop{\\overline{\\mmlToken{mi}{lim}}}'],
	    varinjlim: ['Macro', '\\mathop{\\underrightarrow{\\mmlToken{mi}{lim}}}'],
	    varprojlim: ['Macro', '\\mathop{\\underleftarrow{\\mmlToken{mi}{lim}}}'],
	    DeclareMathOperator: 'HandleDeclareOp',
	    operatorname: 'HandleOperatorName',
	    SkipLimits: 'SkipLimits',
	    genfrac: 'Genfrac',
	    frac: ['Genfrac', '', '', '', ''],
	    tfrac: ['Genfrac', '', '', '', '1'],
	    dfrac: ['Genfrac', '', '', '', '0'],
	    binom: ['Genfrac', '(', ')', '0', ''],
	    tbinom: ['Genfrac', '(', ')', '0', '1'],
	    dbinom: ['Genfrac', '(', ')', '0', '0'],
	    cfrac: 'CFrac',
	    shoveleft: ['HandleShove', TexConstants_js_1.TexConstant.Align.LEFT],
	    shoveright: ['HandleShove', TexConstants_js_1.TexConstant.Align.RIGHT],
	    xrightarrow: ['xArrow', 0x2192, 5, 6],
	    xleftarrow: ['xArrow', 0x2190, 7, 3]
	}, AmsMethods_js_1.default);
	new sm.EnvironmentMap('AMSmath-environment', ParseMethods_js_1.default.environment, {
	    'eqnarray*': ['EqnArray', null, false, true, 'rcl',
	        '0 ' + TexConstants_js_1.TexConstant.Length.THICKMATHSPACE, '.5em'],
	    align: ['EqnArray', null, true, true, 'rlrlrlrlrlrl',
	        COLS([0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0])],
	    'align*': ['EqnArray', null, false, true, 'rlrlrlrlrlrl',
	        COLS([0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0])],
	    multline: ['Multline', null, true],
	    'multline*': ['Multline', null, false],
	    split: ['EqnArray', null, false, false, 'rl', COLS([0])],
	    gather: ['EqnArray', null, true, true, 'c'],
	    'gather*': ['EqnArray', null, false, true, 'c'],
	    alignat: ['AlignAt', null, true, true],
	    'alignat*': ['AlignAt', null, false, true],
	    alignedat: ['AlignAt', null, false, false],
	    aligned: ['AmsEqnArray', null, null, null, 'rlrlrlrlrlrl',
	        COLS([0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0]), '.5em', 'D'],
	    gathered: ['AmsEqnArray', null, null, null, 'c', null, '.5em', 'D'],
	    subarray: ['Array', null, null, null, null, COLS([0]), '0.1em', 'S', 1],
	    smallmatrix: ['Array', null, null, null, 'c', COLS([1 / 3]),
	        '.2em', 'S', 1],
	    matrix: ['Array', null, null, null, 'c'],
	    pmatrix: ['Array', null, '(', ')', 'c'],
	    bmatrix: ['Array', null, '[', ']', 'c'],
	    Bmatrix: ['Array', null, '\\{', '\\}', 'c'],
	    vmatrix: ['Array', null, '\\vert', '\\vert', 'c'],
	    Vmatrix: ['Array', null, '\\Vert', '\\Vert', 'c'],
	    cases: ['Array', null, '\\{', '.', 'll', null, '.2em', 'T']
	}, AmsMethods_js_1.default);
	new sm.DelimiterMap('AMSmath-delimiter', ParseMethods_js_1.default.delimiter, {
	    '\\lvert': ['\u007C', { texClass: MmlNode_js_1.TEXCLASS.OPEN }],
	    '\\rvert': ['\u007C', { texClass: MmlNode_js_1.TEXCLASS.CLOSE }],
	    '\\lVert': ['\u2016', { texClass: MmlNode_js_1.TEXCLASS.OPEN }],
	    '\\rVert': ['\u2016', { texClass: MmlNode_js_1.TEXCLASS.CLOSE }]
	});
	new sm.CharacterMap('AMSsymbols-mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {
	    digamma: '\u03DD',
	    varkappa: '\u03F0',
	    varGamma: ['\u0393', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varDelta: ['\u0394', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varTheta: ['\u0398', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varLambda: ['\u039B', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varXi: ['\u039E', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varPi: ['\u03A0', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varSigma: ['\u03A3', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varUpsilon: ['\u03A5', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varPhi: ['\u03A6', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varPsi: ['\u03A8', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    varOmega: ['\u03A9', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],
	    beth: '\u2136',
	    gimel: '\u2137',
	    daleth: '\u2138',
	    backprime: ['\u2035', { variantForm: true }],
	    hslash: '\u210F',
	    varnothing: ['\u2205', { variantForm: true }],
	    blacktriangle: '\u25B4',
	    triangledown: ['\u25BD', { variantForm: true }],
	    blacktriangledown: '\u25BE',
	    square: '\u25FB',
	    Box: '\u25FB',
	    blacksquare: '\u25FC',
	    lozenge: '\u25CA',
	    Diamond: '\u25CA',
	    blacklozenge: '\u29EB',
	    circledS: ['\u24C8', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    bigstar: '\u2605',
	    sphericalangle: '\u2222',
	    measuredangle: '\u2221',
	    nexists: '\u2204',
	    complement: '\u2201',
	    mho: '\u2127',
	    eth: ['\u00F0', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    Finv: '\u2132',
	    diagup: '\u2571',
	    Game: '\u2141',
	    diagdown: '\u2572',
	    Bbbk: ['\u006B',
	        { mathvariant: TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK }],
	    yen: '\u00A5',
	    circledR: '\u00AE',
	    checkmark: '\u2713',
	    maltese: '\u2720'
	});
	new sm.CharacterMap('AMSsymbols-mathchar0m0', ParseMethods_js_1.default.mathchar0mo, {
	    dotplus: '\u2214',
	    ltimes: '\u22C9',
	    smallsetminus: ['\u2216', { variantForm: true }],
	    rtimes: '\u22CA',
	    Cap: '\u22D2',
	    doublecap: '\u22D2',
	    leftthreetimes: '\u22CB',
	    Cup: '\u22D3',
	    doublecup: '\u22D3',
	    rightthreetimes: '\u22CC',
	    barwedge: '\u22BC',
	    curlywedge: '\u22CF',
	    veebar: '\u22BB',
	    curlyvee: '\u22CE',
	    doublebarwedge: '\u2A5E',
	    boxminus: '\u229F',
	    circleddash: '\u229D',
	    boxtimes: '\u22A0',
	    circledast: '\u229B',
	    boxdot: '\u22A1',
	    circledcirc: '\u229A',
	    boxplus: '\u229E',
	    centerdot: ['\u22C5', { variantForm: true }],
	    divideontimes: '\u22C7',
	    intercal: '\u22BA',
	    leqq: '\u2266',
	    geqq: '\u2267',
	    leqslant: '\u2A7D',
	    geqslant: '\u2A7E',
	    eqslantless: '\u2A95',
	    eqslantgtr: '\u2A96',
	    lesssim: '\u2272',
	    gtrsim: '\u2273',
	    lessapprox: '\u2A85',
	    gtrapprox: '\u2A86',
	    approxeq: '\u224A',
	    lessdot: '\u22D6',
	    gtrdot: '\u22D7',
	    lll: '\u22D8',
	    llless: '\u22D8',
	    ggg: '\u22D9',
	    gggtr: '\u22D9',
	    lessgtr: '\u2276',
	    gtrless: '\u2277',
	    lesseqgtr: '\u22DA',
	    gtreqless: '\u22DB',
	    lesseqqgtr: '\u2A8B',
	    gtreqqless: '\u2A8C',
	    doteqdot: '\u2251',
	    Doteq: '\u2251',
	    eqcirc: '\u2256',
	    risingdotseq: '\u2253',
	    circeq: '\u2257',
	    fallingdotseq: '\u2252',
	    triangleq: '\u225C',
	    backsim: '\u223D',
	    thicksim: ['\u223C', { variantForm: true }],
	    backsimeq: '\u22CD',
	    thickapprox: ['\u2248', { variantForm: true }],
	    subseteqq: '\u2AC5',
	    supseteqq: '\u2AC6',
	    Subset: '\u22D0',
	    Supset: '\u22D1',
	    sqsubset: '\u228F',
	    sqsupset: '\u2290',
	    preccurlyeq: '\u227C',
	    succcurlyeq: '\u227D',
	    curlyeqprec: '\u22DE',
	    curlyeqsucc: '\u22DF',
	    precsim: '\u227E',
	    succsim: '\u227F',
	    precapprox: '\u2AB7',
	    succapprox: '\u2AB8',
	    vartriangleleft: '\u22B2',
	    lhd: '\u22B2',
	    vartriangleright: '\u22B3',
	    rhd: '\u22B3',
	    trianglelefteq: '\u22B4',
	    unlhd: '\u22B4',
	    trianglerighteq: '\u22B5',
	    unrhd: '\u22B5',
	    vDash: ['\u22A8', { variantForm: true }],
	    Vdash: '\u22A9',
	    Vvdash: '\u22AA',
	    smallsmile: ['\u2323', { variantForm: true }],
	    shortmid: ['\u2223', { variantForm: true }],
	    smallfrown: ['\u2322', { variantForm: true }],
	    shortparallel: ['\u2225', { variantForm: true }],
	    bumpeq: '\u224F',
	    between: '\u226C',
	    Bumpeq: '\u224E',
	    pitchfork: '\u22D4',
	    varpropto: ['\u221D', { variantForm: true }],
	    backepsilon: '\u220D',
	    blacktriangleleft: '\u25C2',
	    blacktriangleright: '\u25B8',
	    therefore: '\u2234',
	    because: '\u2235',
	    eqsim: '\u2242',
	    vartriangle: ['\u25B3', { variantForm: true }],
	    Join: '\u22C8',
	    nless: '\u226E',
	    ngtr: '\u226F',
	    nleq: '\u2270',
	    ngeq: '\u2271',
	    nleqslant: ['\u2A87', { variantForm: true }],
	    ngeqslant: ['\u2A88', { variantForm: true }],
	    nleqq: ['\u2270', { variantForm: true }],
	    ngeqq: ['\u2271', { variantForm: true }],
	    lneq: '\u2A87',
	    gneq: '\u2A88',
	    lneqq: '\u2268',
	    gneqq: '\u2269',
	    lvertneqq: ['\u2268', { variantForm: true }],
	    gvertneqq: ['\u2269', { variantForm: true }],
	    lnsim: '\u22E6',
	    gnsim: '\u22E7',
	    lnapprox: '\u2A89',
	    gnapprox: '\u2A8A',
	    nprec: '\u2280',
	    nsucc: '\u2281',
	    npreceq: ['\u22E0', { variantForm: true }],
	    nsucceq: ['\u22E1', { variantForm: true }],
	    precneqq: '\u2AB5',
	    succneqq: '\u2AB6',
	    precnsim: '\u22E8',
	    succnsim: '\u22E9',
	    precnapprox: '\u2AB9',
	    succnapprox: '\u2ABA',
	    nsim: '\u2241',
	    ncong: '\u2246',
	    nshortmid: ['\u2224', { variantForm: true }],
	    nshortparallel: ['\u2226', { variantForm: true }],
	    nmid: '\u2224',
	    nparallel: '\u2226',
	    nvdash: '\u22AC',
	    nvDash: '\u22AD',
	    nVdash: '\u22AE',
	    nVDash: '\u22AF',
	    ntriangleleft: '\u22EA',
	    ntriangleright: '\u22EB',
	    ntrianglelefteq: '\u22EC',
	    ntrianglerighteq: '\u22ED',
	    nsubseteq: '\u2288',
	    nsupseteq: '\u2289',
	    nsubseteqq: ['\u2288', { variantForm: true }],
	    nsupseteqq: ['\u2289', { variantForm: true }],
	    subsetneq: '\u228A',
	    supsetneq: '\u228B',
	    varsubsetneq: ['\u228A', { variantForm: true }],
	    varsupsetneq: ['\u228B', { variantForm: true }],
	    subsetneqq: '\u2ACB',
	    supsetneqq: '\u2ACC',
	    varsubsetneqq: ['\u2ACB', { variantForm: true }],
	    varsupsetneqq: ['\u2ACC', { variantForm: true }],
	    leftleftarrows: '\u21C7',
	    rightrightarrows: '\u21C9',
	    leftrightarrows: '\u21C6',
	    rightleftarrows: '\u21C4',
	    Lleftarrow: '\u21DA',
	    Rrightarrow: '\u21DB',
	    twoheadleftarrow: '\u219E',
	    twoheadrightarrow: '\u21A0',
	    leftarrowtail: '\u21A2',
	    rightarrowtail: '\u21A3',
	    looparrowleft: '\u21AB',
	    looparrowright: '\u21AC',
	    leftrightharpoons: '\u21CB',
	    rightleftharpoons: ['\u21CC', { variantForm: true }],
	    curvearrowleft: '\u21B6',
	    curvearrowright: '\u21B7',
	    circlearrowleft: '\u21BA',
	    circlearrowright: '\u21BB',
	    Lsh: '\u21B0',
	    Rsh: '\u21B1',
	    upuparrows: '\u21C8',
	    downdownarrows: '\u21CA',
	    upharpoonleft: '\u21BF',
	    upharpoonright: '\u21BE',
	    downharpoonleft: '\u21C3',
	    restriction: '\u21BE',
	    multimap: '\u22B8',
	    downharpoonright: '\u21C2',
	    leftrightsquigarrow: '\u21AD',
	    rightsquigarrow: '\u21DD',
	    leadsto: '\u21DD',
	    dashrightarrow: '\u21E2',
	    dashleftarrow: '\u21E0',
	    nleftarrow: '\u219A',
	    nrightarrow: '\u219B',
	    nLeftarrow: '\u21CD',
	    nRightarrow: '\u21CF',
	    nleftrightarrow: '\u21AE',
	    nLeftrightarrow: '\u21CE'
	});
	new sm.DelimiterMap('AMSsymbols-delimiter', ParseMethods_js_1.default.delimiter, {
	    '\\ulcorner': '\u231C',
	    '\\urcorner': '\u231D',
	    '\\llcorner': '\u231E',
	    '\\lrcorner': '\u231F'
	});
	new sm.CommandMap('AMSsymbols-macros', {
	    implies: ['Macro', '\\;\\Longrightarrow\\;'],
	    impliedby: ['Macro', '\\;\\Longleftarrow\\;']
	}, AmsMethods_js_1.default);
	//# sourceMappingURL=AmsMappings.js.map

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var ParseUtil_js_1 = __webpack_require__(174);
	var NodeUtil_js_1 = __webpack_require__(170);
	var TexConstants_js_1 = __webpack_require__(189);
	var TexParser_js_1 = __webpack_require__(173);
	var TexError_js_1 = __webpack_require__(175);
	var Symbol_js_1 = __webpack_require__(191);
	var MapHandler_js_1 = __webpack_require__(184);
	var BaseMethods_js_1 = __webpack_require__(195);
	var MmlNode_js_1 = __webpack_require__(167);
	var AmsMethods = {};
	AmsMethods.AmsEqnArray = function (parser, begin, numbered, taggable, align, spacing, style) {
	    var args = parser.GetBrackets('\\begin{' + begin.getName() + '}');
	    var array = BaseMethods_js_1.default.EqnArray(parser, begin, numbered, taggable, align, spacing, style);
	    return ParseUtil_js_1.default.setArrayAlign(array, args);
	};
	AmsMethods.AlignAt = function (parser, begin, numbered, taggable) {
	    var name = begin.getName();
	    var n, valign, align = '', spacing = [];
	    if (!taggable) {
	        valign = parser.GetBrackets('\\begin{' + name + '}');
	    }
	    n = parser.GetArgument('\\begin{' + name + '}');
	    if (n.match(/[^0-9]/)) {
	        throw new TexError_js_1.default('PositiveIntegerArg', 'Argument to %1 must me a positive integer', '\\begin{' + name + '}');
	    }
	    var count = parseInt(n, 10);
	    while (count > 0) {
	        align += 'rl';
	        spacing.push('0em 0em');
	        count--;
	    }
	    var spaceStr = spacing.join(' ');
	    if (taggable) {
	        return AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);
	    }
	    var array = AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);
	    return ParseUtil_js_1.default.setArrayAlign(array, valign);
	};
	AmsMethods.Multline = function (parser, begin, numbered) {
	    parser.Push(begin);
	    ParseUtil_js_1.default.checkEqnEnv(parser);
	    var item = parser.itemFactory.create('multline', numbered, parser.stack);
	    item.arraydef = {
	        displaystyle: true,
	        rowspacing: '.5em',
	        columnwidth: '100%',
	        width: parser.options['multlineWidth'],
	        side: parser.options['tagSide'],
	        minlabelspacing: parser.options['tagIndent']
	    };
	    return item;
	};
	AmsMethods.HandleDeclareOp = function (parser, name) {
	    var limits = (parser.GetStar() ? '' : '\\nolimits\\SkipLimits');
	    var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
	    if (cs.charAt(0) === '\\') {
	        cs = cs.substr(1);
	    }
	    var op = parser.GetArgument(name);
	    if (!op.match(/\\text/)) {
	        op = op.replace(/\*/g, '\\text{*}').replace(/-/g, '\\text{-}');
	    }
	    parser.configuration.handlers.retrieve(MapHandler_js_1.ExtensionMaps.NEW_COMMAND).
	        add(cs, new Symbol_js_1.Macro(cs, AmsMethods.Macro, ['\\mathop{\\rm ' + op + '}' + limits]));
	};
	AmsMethods.HandleOperatorName = function (parser, name) {
	    var limits = (parser.GetStar() ? '' : '\\nolimits\\SkipLimits');
	    var op = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
	    if (!op.match(/\\text/)) {
	        op = op.replace(/\*/g, '\\text{*}').replace(/-/g, '\\text{-}');
	    }
	    parser.string = '\\mathop{\\rm ' + op + '}' + limits + ' ' +
	        parser.string.slice(parser.i);
	    parser.i = 0;
	};
	AmsMethods.SkipLimits = function (parser, name) {
	    var c = parser.GetNext(), i = parser.i;
	    if (c === '\\' && ++parser.i && parser.GetCS() !== 'limits') {
	        parser.i = i;
	    }
	};
	AmsMethods.MultiIntegral = function (parser, name, integral) {
	    var next = parser.GetNext();
	    if (next === '\\') {
	        var i = parser.i;
	        next = parser.GetArgument(name);
	        parser.i = i;
	        if (next === '\\limits') {
	            if (name === '\\idotsint') {
	                integral = '\\!\\!\\mathop{\\,\\,' + integral + '}';
	            }
	            else {
	                integral = '\\!\\!\\!\\mathop{\\,\\,\\,' + integral + '}';
	            }
	        }
	    }
	    parser.string = integral + ' ' + parser.string.slice(parser.i);
	    parser.i = 0;
	};
	AmsMethods.xArrow = function (parser, name, chr, l, r) {
	    var def = { width: '+' + ParseUtil_js_1.default.Em((l + r) / 18), lspace: ParseUtil_js_1.default.Em(l / 18) };
	    var bot = parser.GetBrackets(name);
	    var first = parser.ParseArg(name);
	    var arrow = parser.create('token', 'mo', { stretchy: true, texClass: MmlNode_js_1.TEXCLASS.REL }, String.fromCharCode(chr));
	    var mml = parser.create('node', 'munderover', [arrow]);
	    var mpadded = parser.create('node', 'mpadded', [first], def);
	    NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.15em');
	    NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);
	    if (bot) {
	        var bottom = new TexParser_js_1.default(bot, parser.stack.env, parser.configuration).mml();
	        mpadded = parser.create('node', 'mpadded', [bottom], def);
	        NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '-.24em');
	        NodeUtil_js_1.default.setChild(mml, mml.under, mpadded);
	    }
	    NodeUtil_js_1.default.setProperty(mml, 'subsupOK', true);
	    parser.Push(mml);
	};
	AmsMethods.HandleShove = function (parser, name, shove) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'multline') {
	        throw new TexError_js_1.default('CommandOnlyAllowedInEnv', '%1 only allowed in %2 environment', parser.currentCS, 'multline');
	    }
	    if (top.Size()) {
	        throw new TexError_js_1.default('CommandAtTheBeginingOfLine', '%1 must come at the beginning of the line', parser.currentCS);
	    }
	    top.setProperty('shove', shove);
	};
	AmsMethods.CFrac = function (parser, name) {
	    var lr = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));
	    var num = parser.GetArgument(name);
	    var den = parser.GetArgument(name);
	    var lrMap = {
	        l: TexConstants_js_1.TexConstant.Align.LEFT, r: TexConstants_js_1.TexConstant.Align.RIGHT, '': ''
	    };
	    var numNode = new TexParser_js_1.default('\\strut\\textstyle{' + num + '}', parser.stack.env, parser.configuration).mml();
	    var denNode = new TexParser_js_1.default('\\strut\\textstyle{' + den + '}', parser.stack.env, parser.configuration).mml();
	    var frac = parser.create('node', 'mfrac', [numNode, denNode]);
	    lr = lrMap[lr];
	    if (lr == null) {
	        throw new TexError_js_1.default('IllegalAlign', 'Illegal alignment specified in %1', parser.currentCS);
	    }
	    if (lr) {
	        NodeUtil_js_1.default.setProperties(frac, { numalign: lr, denomalign: lr });
	    }
	    parser.Push(frac);
	};
	AmsMethods.Genfrac = function (parser, name, left, right, thick, style) {
	    if (left == null) {
	        left = parser.GetDelimiterArg(name);
	    }
	    if (right == null) {
	        right = parser.GetDelimiterArg(name);
	    }
	    if (thick == null) {
	        thick = parser.GetArgument(name);
	    }
	    if (style == null) {
	        style = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
	    }
	    var num = parser.ParseArg(name);
	    var den = parser.ParseArg(name);
	    var frac = parser.create('node', 'mfrac', [num, den]);
	    if (thick !== '') {
	        NodeUtil_js_1.default.setAttribute(frac, 'linethickness', thick);
	    }
	    if (left || right) {
	        NodeUtil_js_1.default.setProperty(frac, 'withDelims', true);
	        frac = ParseUtil_js_1.default.fixedFence(parser.configuration, left, frac, right);
	    }
	    if (style !== '') {
	        var styleDigit = parseInt(style, 10);
	        var styleAlpha = ['D', 'T', 'S', 'SS'][styleDigit];
	        if (styleAlpha == null) {
	            throw new TexError_js_1.default('BadMathStyleFor', 'Bad math style for %1', parser.currentCS);
	        }
	        frac = parser.create('node', 'mstyle', [frac]);
	        if (styleAlpha === 'D') {
	            NodeUtil_js_1.default.setProperties(frac, { displaystyle: true, scriptlevel: 0 });
	        }
	        else {
	            NodeUtil_js_1.default.setProperties(frac, { displaystyle: false,
	                scriptlevel: styleDigit - 1 });
	        }
	    }
	    parser.Push(frac);
	};
	AmsMethods.HandleTag = function (parser, name) {
	    if (!parser.tags.currentTag.taggable && parser.tags.env) {
	        throw new TexError_js_1.default('CommandNotAllowedInEnv', '%1 not allowed in %2 environment', parser.currentCS, parser.tags.env);
	    }
	    if (parser.tags.currentTag.tag) {
	        throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);
	    }
	    var star = parser.GetStar();
	    var tagId = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
	    parser.tags.tag(tagId, star);
	};
	AmsMethods.HandleNoTag = BaseMethods_js_1.default.HandleNoTag;
	AmsMethods.HandleRef = BaseMethods_js_1.default.HandleRef;
	AmsMethods.Macro = BaseMethods_js_1.default.Macro;
	AmsMethods.Accent = BaseMethods_js_1.default.Accent;
	AmsMethods.Tilde = BaseMethods_js_1.default.Tilde;
	AmsMethods.Array = BaseMethods_js_1.default.Array;
	AmsMethods.Spacer = BaseMethods_js_1.default.Spacer;
	AmsMethods.NamedOp = BaseMethods_js_1.default.NamedOp;
	AmsMethods.EqnArray = BaseMethods_js_1.default.EqnArray;
	exports.default = AmsMethods;
	//# sourceMappingURL=AmsMethods.js.map

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	__webpack_require__(379);
	exports.AmsCdConfiguration = Configuration_js_1.Configuration.create('amsCd', { handler: {
	        character: ['amsCd_special'],
	        macro: ['amsCd_macros'],
	        environment: ['amsCd_environment']
	    },
	    options: {
	        amsCd: {
	            colspace: '5pt',
	            rowspace: '5pt',
	            harrowsize: '2.75em',
	            varrowsize: '1.75em',
	            hideHorizontalLabels: false
	        }
	    } });
	//# sourceMappingURL=AmsCdConfiguration.js.map

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var sm = __webpack_require__(190);
	var ParseMethods_js_1 = __webpack_require__(188);
	var AmsCdMethods_js_1 = __webpack_require__(380);
	new sm.EnvironmentMap('amsCd_environment', ParseMethods_js_1.default.environment, { CD: 'CD' }, AmsCdMethods_js_1.default);
	new sm.CommandMap('amsCd_macros', {
	    minCDarrowwidth: 'minCDarrowwidth',
	    minCDarrowheight: 'minCDarrowheight',
	}, AmsCdMethods_js_1.default);
	new sm.MacroMap('amsCd_special', { '@': 'arrow' }, AmsCdMethods_js_1.default);
	//# sourceMappingURL=AmsCdMappings.js.map

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexParser_js_1 = __webpack_require__(173);
	var BaseConfiguration_js_1 = __webpack_require__(192);
	var MmlNode_js_1 = __webpack_require__(167);
	var NodeUtil_js_1 = __webpack_require__(170);
	var AmsCdMethods = {};
	AmsCdMethods.CD = function (parser, begin) {
	    parser.Push(begin);
	    var item = parser.itemFactory.create('array');
	    var options = parser.configuration.options.amsCd;
	    item.setProperties({
	        minw: parser.stack.env.CD_minw || options.harrowsize,
	        minh: parser.stack.env.CD_minh || options.varrowsize
	    });
	    item.arraydef = {
	        columnalign: 'center',
	        columnspacing: options.colspace,
	        rowspacing: options.rowspace,
	        displaystyle: true
	    };
	    return item;
	};
	AmsCdMethods.arrow = function (parser, name) {
	    var c = parser.string.charAt(parser.i);
	    if (!c.match(/[><VA.|=]/)) {
	        return BaseConfiguration_js_1.Other(parser, name);
	    }
	    else {
	        parser.i++;
	    }
	    var first = parser.stack.Top();
	    if (!first.isKind('array') || first.Size()) {
	        AmsCdMethods.cell(parser, name);
	        first = parser.stack.Top();
	    }
	    var top = first;
	    var arrowRow = ((top.table.length % 2) === 1);
	    var n = (top.row.length + (arrowRow ? 0 : 1)) % 2;
	    while (n) {
	        AmsCdMethods.cell(parser, name);
	        n--;
	    }
	    var mml;
	    var hdef = { minsize: top.getProperty('minw'), stretchy: true }, vdef = { minsize: top.getProperty('minh'),
	        stretchy: true, symmetric: true, lspace: 0, rspace: 0 };
	    if (c === '.') {
	    }
	    else if (c === '|') {
	        mml = parser.create('token', 'mo', vdef, '\u2225');
	    }
	    else if (c === '=') {
	        mml = parser.create('token', 'mo', hdef, '=');
	    }
	    else {
	        var arrow = {
	            '>': '\u2192', '<': '\u2190', 'V': '\u2193', 'A': '\u2191'
	        }[c];
	        var a = parser.GetUpTo(name + c, c);
	        var b = parser.GetUpTo(name + c, c);
	        if (c === '>' || c === '<') {
	            mml = parser.create('token', 'mo', hdef, arrow);
	            if (!a) {
	                a = '\\kern ' + top.getProperty('minw');
	            }
	            if (a || b) {
	                var pad = { width: '+11mu', lspace: '6mu' };
	                mml = parser.create('node', 'munderover', [mml]);
	                if (a) {
	                    var nodeA = new TexParser_js_1.default(a, parser.stack.env, parser.configuration).mml();
	                    var mpadded = parser.create('node', 'mpadded', [nodeA], pad);
	                    NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.1em');
	                    NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);
	                }
	                if (b) {
	                    var nodeB = new TexParser_js_1.default(b, parser.stack.env, parser.configuration).mml();
	                    NodeUtil_js_1.default.setChild(mml, mml.under, parser.create('node', 'mpadded', [nodeB], pad));
	                }
	                if (parser.configuration.options.amsCd.hideHorizontalLabels) {
	                    mml = parser.create('node', 'mpadded', mml, { depth: 0, height: '.67em' });
	                }
	            }
	        }
	        else {
	            var arrowNode = parser.create('token', 'mo', vdef, arrow);
	            mml = arrowNode;
	            if (a || b) {
	                mml = parser.create('node', 'mrow');
	                if (a) {
	                    NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\scriptstyle\\llap{' + a + '}', parser.stack.env, parser.configuration).mml()]);
	                }
	                arrowNode.texClass = MmlNode_js_1.TEXCLASS.ORD;
	                NodeUtil_js_1.default.appendChildren(mml, [arrowNode]);
	                if (b) {
	                    NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\scriptstyle\\rlap{' + b + '}', parser.stack.env, parser.configuration).mml()]);
	                }
	            }
	        }
	    }
	    if (mml) {
	        parser.Push(mml);
	    }
	    AmsCdMethods.cell(parser, name);
	};
	AmsCdMethods.cell = function (parser, name) {
	    var top = parser.stack.Top();
	    if ((top.table || []).length % 2 === 0 && (top.row || []).length === 0) {
	        parser.Push(parser.create('node', 'mpadded', [], { height: '8.5pt', depth: '2pt' }));
	    }
	    parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));
	};
	AmsCdMethods.minCDarrowwidth = function (parser, name) {
	    parser.stack.env.CD_minw = parser.GetDimen(name);
	};
	AmsCdMethods.minCDarrowheight = function (parser, name) {
	    parser.stack.env.CD_minh = parser.GetDimen(name);
	};
	exports.default = AmsCdMethods;
	//# sourceMappingURL=AmsCdMethods.js.map

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var SymbolMap_js_1 = __webpack_require__(190);
	var TexError_js_1 = __webpack_require__(175);
	exports.BboxMethods = {};
	exports.BboxMethods.BBox = function (parser, name) {
	    var bbox = parser.GetBrackets(name, '');
	    var math = parser.ParseArg(name);
	    var parts = bbox.split(/,/);
	    var def, background, style;
	    for (var i = 0, m = parts.length; i < m; i++) {
	        var part = parts[i].trim();
	        var match = part.match(/^(\.\d+|\d+(\.\d*)?)(pt|em|ex|mu|px|in|cm|mm)$/);
	        if (match) {
	            if (def) {
	                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Padding', name);
	            }
	            var pad = BBoxPadding(match[1] + match[3]);
	            if (pad) {
	                def = {
	                    height: '+' + pad,
	                    depth: '+' + pad,
	                    lspace: pad,
	                    width: '+' + (2 * parseInt(match[1], 10)) + match[3]
	                };
	            }
	        }
	        else if (part.match(/^([a-z0-9]+|\#[0-9a-f]{6}|\#[0-9a-f]{3})$/i)) {
	            if (background) {
	                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Background', name);
	            }
	            background = part;
	        }
	        else if (part.match(/^[-a-z]+:/i)) {
	            if (style) {
	                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Style', name);
	            }
	            style = BBoxStyle(part);
	        }
	        else if (part !== '') {
	            throw new TexError_js_1.default('InvalidBBoxProperty', '"%1" doesn\'t look like a color, a padding dimension, or a style', part);
	        }
	    }
	    if (def) {
	        math = parser.create('node', 'mpadded', [math], def);
	    }
	    if (background || style) {
	        def = {};
	        if (background) {
	            Object.assign(def, { mathbackground: background });
	        }
	        if (style) {
	            Object.assign(def, { style: style });
	        }
	        math = parser.create('node', 'mstyle', [math], def);
	    }
	    parser.Push(math);
	};
	var BBoxStyle = function (styles) {
	    return styles;
	};
	var BBoxPadding = function (pad) {
	    return pad;
	};
	new SymbolMap_js_1.CommandMap('bbox', { bbox: 'BBox' }, exports.BboxMethods);
	exports.BboxConfiguration = Configuration_js_1.Configuration.create('bbox', { handler: { macro: ['bbox'] } });
	//# sourceMappingURL=BboxConfiguration.js.map

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var NodeUtil_js_1 = __webpack_require__(170);
	var TexConstants_js_1 = __webpack_require__(189);
	var SymbolMap_js_1 = __webpack_require__(190);
	var NodeFactory_js_1 = __webpack_require__(185);
	var BOLDVARIANT = {};
	BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.NORMAL] = TexConstants_js_1.TexConstant.Variant.BOLD;
	BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.ITALIC] = TexConstants_js_1.TexConstant.Variant.BOLDITALIC;
	BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.FRAKTUR] = TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR;
	BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SCRIPT] = TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT;
	BOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SANSSERIF] = TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF;
	BOLDVARIANT['-tex-calligraphic'] = '-tex-bold-calligraphic';
	BOLDVARIANT['-tex-oldstyle'] = '-tex-bold-oldstyle';
	exports.BoldsymbolMethods = {};
	exports.BoldsymbolMethods.Boldsymbol = function (parser, name) {
	    var boldsymbol = parser.stack.env['boldsymbol'];
	    parser.stack.env['boldsymbol'] = true;
	    var mml = parser.ParseArg(name);
	    parser.stack.env['boldsymbol'] = boldsymbol;
	    parser.Push(mml);
	};
	new SymbolMap_js_1.CommandMap('boldsymbol', { boldsymbol: 'Boldsymbol' }, exports.BoldsymbolMethods);
	function createBoldToken(factory, kind, def, text) {
	    var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);
	    if (kind !== 'mtext' &&
	        factory.configuration.parser.stack.env['boldsymbol']) {
	        NodeUtil_js_1.default.setProperty(token, 'fixBold', true);
	        factory.configuration.addNode('fixBold', token);
	    }
	    return token;
	}
	exports.createBoldToken = createBoldToken;
	function rewriteBoldTokens(arg) {
	    var e_1, _a;
	    try {
	        for (var _b = __values(arg.data.getList('fixBold')), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var node = _c.value;
	            if (NodeUtil_js_1.default.getProperty(node, 'fixBold')) {
	                var variant = NodeUtil_js_1.default.getAttribute(node, 'mathvariant');
	                if (variant == null) {
	                    NodeUtil_js_1.default.setAttribute(node, 'mathvariant', TexConstants_js_1.TexConstant.Variant.BOLD);
	                }
	                else {
	                    NodeUtil_js_1.default.setAttribute(node, 'mathvariant', BOLDVARIANT[variant] || variant);
	                }
	                NodeUtil_js_1.default.removeProperties(node, 'fixBold');
	            }
	        }
	    }
	    catch (e_1_1) { e_1 = { error: e_1_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_1) throw e_1.error; }
	    }
	}
	exports.rewriteBoldTokens = rewriteBoldTokens;
	;
	exports.BoldsymbolConfiguration = Configuration_js_1.Configuration.create('boldsymbol', { handler: { macro: ['boldsymbol'] },
	    nodes: { 'token': createBoldToken },
	    postprocessors: [rewriteBoldTokens] });
	//# sourceMappingURL=BoldsymbolConfiguration.js.map

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var BraketItems_js_1 = __webpack_require__(384);
	__webpack_require__(385);
	exports.BraketConfiguration = Configuration_js_1.Configuration.create('braket', {
	    handler: {
	        character: ['Braket-characters'],
	        macro: ['Braket-macros']
	    },
	    items: (_a = {},
	        _a[BraketItems_js_1.BraketItem.prototype.kind] = BraketItems_js_1.BraketItem,
	        _a)
	});
	//# sourceMappingURL=BraketConfiguration.js.map

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var StackItem_js_1 = __webpack_require__(182);
	var MmlNode_js_1 = __webpack_require__(167);
	var ParseUtil_js_1 = __webpack_require__(174);
	var BraketItem = (function (_super) {
	    __extends(BraketItem, _super);
	    function BraketItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(BraketItem.prototype, "kind", {
	        get: function () {
	            return 'braket';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BraketItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BraketItem.prototype.checkItem = function (item) {
	        if (item.isKind('close')) {
	            return [[this.factory.create('mml', this.toMml())], true];
	        }
	        if (item.isKind('mml')) {
	            this.Push(item.toMml());
	            if (this.getProperty('single')) {
	                return [[this.toMml()], true];
	            }
	            return StackItem_js_1.BaseItem.fail;
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    BraketItem.prototype.toMml = function () {
	        var inner = _super.prototype.toMml.call(this);
	        var open = this.getProperty('open');
	        var close = this.getProperty('close');
	        if (this.getProperty('stretchy')) {
	            return ParseUtil_js_1.default.fenced(this.factory.configuration, open, inner, close);
	        }
	        var attrs = { fence: true, stretchy: false, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.OPEN };
	        var openNode = this.create('token', 'mo', attrs, open);
	        attrs.texClass = MmlNode_js_1.TEXCLASS.CLOSE;
	        var closeNode = this.create('token', 'mo', attrs, close);
	        var mrow = this.create('node', 'mrow', [openNode, inner, closeNode], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.INNER });
	        return mrow;
	    };
	    return BraketItem;
	}(StackItem_js_1.BaseItem));
	exports.BraketItem = BraketItem;
	//# sourceMappingURL=BraketItems.js.map

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var SymbolMap_js_1 = __webpack_require__(190);
	var BraketMethods_js_1 = __webpack_require__(386);
	new SymbolMap_js_1.CommandMap('Braket-macros', {
	    bra: ['Macro', '{\\langle {#1} \\vert}', 1],
	    ket: ['Macro', '{\\vert {#1} \\rangle}', 1],
	    braket: ['Braket', '\u27E8', '\u27E9', false, Infinity],
	    'set': ['Braket', '{', '}', false, 1],
	    Bra: ['Macro', '{\\left\\langle {#1} \\right\\vert}', 1],
	    Ket: ['Macro', '{\\left\\vert {#1} \\right\\rangle}', 1],
	    Braket: ['Braket', '\u27E8', '\u27E9', true, Infinity],
	    Set: ['Braket', '{', '}', true, 1],
	    ketbra: ['Macro', '{\\vert {#1} \\rangle\\langle {#2} \\vert}', 2],
	    Ketbra: ['Macro', '{\\left\\vert {#1} \\right\\rangle\\left\\langle {#2} \\right\\vert}', 2],
	    '|': 'Bar'
	}, BraketMethods_js_1.default);
	new SymbolMap_js_1.MacroMap('Braket-characters', {
	    '|': 'Bar'
	}, BraketMethods_js_1.default);
	//# sourceMappingURL=BraketMappings.js.map

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var BaseMethods_js_1 = __webpack_require__(195);
	var MmlNode_js_1 = __webpack_require__(167);
	var BraketMethods = {};
	BraketMethods.Macro = BaseMethods_js_1.default.Macro;
	BraketMethods.Braket = function (parser, name, open, close, stretchy, barmax) {
	    var next = parser.GetNext();
	    var single = true;
	    if (next === '{') {
	        parser.i++;
	        single = false;
	    }
	    parser.Push(parser.itemFactory.create('braket')
	        .setProperties({ barmax: barmax, barcount: 0, open: open,
	        close: close, stretchy: stretchy, single: single }));
	};
	BraketMethods.Bar = function (parser, name) {
	    var c = name === '|' ? '|' : '\u2225';
	    var top = parser.stack.Top();
	    if (top.kind !== 'braket' ||
	        top.getProperty('barcount') >= top.getProperty('barmax')) {
	        var mml = parser.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.ORD, stretchy: false }, c);
	        parser.Push(mml);
	        return;
	    }
	    if (c === '|' && parser.GetNext() === '|') {
	        parser.i++;
	        c = '\u2225';
	    }
	    var stretchy = top.getProperty('stretchy');
	    if (!stretchy) {
	        var node_1 = parser.create('token', 'mo', { stretchy: false, braketbar: true }, c);
	        parser.Push(node_1);
	        return;
	    }
	    var node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.CLOSE });
	    parser.Push(node);
	    top.setProperty('barcount', top.getProperty('barcount') + 1);
	    node = parser.create('token', 'mo', { stretchy: true, braketbar: true }, c);
	    parser.Push(node);
	    node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OPEN });
	    parser.Push(node);
	};
	exports.default = BraketMethods;
	//# sourceMappingURL=BraketMethods.js.map

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var BussproofsItems_js_1 = __webpack_require__(388);
	var BussproofsUtil_js_1 = __webpack_require__(389);
	__webpack_require__(390);
	exports.BussproofsConfiguration = Configuration_js_1.Configuration.create('bussproofs', { handler: {
	        macro: ['Bussproofs-macros'],
	        environment: ['Bussproofs-environments']
	    },
	    items: (_a = {},
	        _a[BussproofsItems_js_1.ProofTreeItem.prototype.kind] = BussproofsItems_js_1.ProofTreeItem,
	        _a),
	    preprocessors: [
	        [BussproofsUtil_js_1.saveDocument, 1]
	    ],
	    postprocessors: [
	        [BussproofsUtil_js_1.clearDocument, 3],
	        [BussproofsUtil_js_1.makeBsprAttributes, 2],
	        [BussproofsUtil_js_1.balanceRules, 1]
	    ]
	});
	//# sourceMappingURL=BussproofsConfiguration.js.map

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexError_js_1 = __webpack_require__(175);
	var StackItem_js_1 = __webpack_require__(182);
	var Stack_js_1 = __webpack_require__(179);
	var BussproofsUtil = __webpack_require__(389);
	var ProofTreeItem = (function (_super) {
	    __extends(ProofTreeItem, _super);
	    function ProofTreeItem() {
	        var _this = _super !== null && _super.apply(this, arguments) || this;
	        _this.leftLabel = null;
	        _this.rigthLabel = null;
	        _this.innerStack = new Stack_js_1.default(_this.factory, {}, true);
	        return _this;
	    }
	    Object.defineProperty(ProofTreeItem.prototype, "kind", {
	        get: function () {
	            return 'proofTree';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    ProofTreeItem.prototype.checkItem = function (item) {
	        if (item.isKind('end') && item.getName() === 'prooftree') {
	            var node = this.toMml();
	            BussproofsUtil.setProperty(node, 'proof', true);
	            return [[this.factory.create('mml', node), item], true];
	        }
	        if (item.isKind('stop')) {
	            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
	        }
	        this.innerStack.Push(item);
	        return StackItem_js_1.BaseItem.fail;
	    };
	    ProofTreeItem.prototype.toMml = function () {
	        var tree = _super.prototype.toMml.call(this);
	        var start = this.innerStack.Top();
	        if (start.isKind('start') && !start.Size()) {
	            return tree;
	        }
	        this.innerStack.Push(this.factory.create('stop'));
	        var prefix = this.innerStack.Top().toMml();
	        return this.create('node', 'mrow', [prefix, tree], {});
	    };
	    return ProofTreeItem;
	}(StackItem_js_1.BaseItem));
	exports.ProofTreeItem = ProofTreeItem;
	//# sourceMappingURL=BussproofsItems.js.map

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var NodeUtil_js_1 = __webpack_require__(170);
	var ParseUtil_js_1 = __webpack_require__(174);
	var doc = null;
	var item = null;
	var getBBox = function (node) {
	    item.root = node;
	    var width = doc.outputJax.getBBox(item, doc).w;
	    return width;
	};
	var getRule = function (node) {
	    var i = 0;
	    while (node && !NodeUtil_js_1.default.isType(node, 'mtable')) {
	        if (NodeUtil_js_1.default.isType(node, 'text')) {
	            return null;
	        }
	        if (NodeUtil_js_1.default.isType(node, 'mrow')) {
	            node = node.childNodes[0];
	            i = 0;
	            continue;
	        }
	        node = node.parent.childNodes[i];
	        i++;
	    }
	    return node;
	};
	var getPremises = function (rule, direction) {
	    return rule.childNodes[direction === 'up' ? 1 : 0].childNodes[0].
	        childNodes[0].childNodes[0].childNodes[0];
	};
	var getPremise = function (premises, n) {
	    return premises.childNodes[n].childNodes[0].childNodes[0];
	};
	var firstPremise = function (premises) {
	    return getPremise(premises, 0);
	};
	var lastPremise = function (premises) {
	    return getPremise(premises, premises.childNodes.length - 1);
	};
	var getConclusion = function (rule, direction) {
	    return rule.childNodes[direction === 'up' ? 0 : 1].childNodes[0].childNodes[0].childNodes[0];
	};
	var getColumn = function (inf) {
	    while (inf && !NodeUtil_js_1.default.isType(inf, 'mtd')) {
	        inf = inf.parent;
	    }
	    return inf;
	};
	var nextSibling = function (inf) {
	    return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) + 1];
	};
	var previousSibling = function (inf) {
	    return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) - 1];
	};
	var getParentInf = function (inf) {
	    while (inf && exports.getProperty(inf, 'inference') == null) {
	        inf = inf.parent;
	    }
	    return inf;
	};
	var getSpaces = function (inf, rule, right) {
	    if (right === void 0) { right = false; }
	    var result = 0;
	    if (inf === rule) {
	        return result;
	    }
	    if (inf !== rule.parent) {
	        var children_1 = inf.childNodes;
	        var index_1 = right ? children_1.length - 1 : 0;
	        if (NodeUtil_js_1.default.isType(children_1[index_1], 'mspace')) {
	            result += getBBox(children_1[index_1]);
	        }
	        inf = rule.parent;
	    }
	    if (inf === rule) {
	        return result;
	    }
	    var children = inf.childNodes;
	    var index = right ? children.length - 1 : 0;
	    if (children[index] !== rule) {
	        result += getBBox(children[index]);
	    }
	    return result;
	};
	var adjustValue = function (inf, right) {
	    if (right === void 0) { right = false; }
	    var rule = getRule(inf);
	    var conc = getConclusion(rule, exports.getProperty(rule, 'inferenceRule'));
	    var w = getSpaces(inf, rule, right);
	    var x = getBBox(rule);
	    var y = getBBox(conc);
	    return w + ((x - y) / 2);
	};
	var addSpace = function (config, inf, space, right) {
	    if (right === void 0) { right = false; }
	    if (exports.getProperty(inf, 'inferenceRule') ||
	        exports.getProperty(inf, 'labelledRule')) {
	        var mrow = config.nodeFactory.create('node', 'mrow');
	        inf.parent.replaceChild(mrow, inf);
	        mrow.setChildren([inf]);
	        moveProperties(inf, mrow);
	        inf = mrow;
	    }
	    var index = right ? inf.childNodes.length - 1 : 0;
	    var mspace = inf.childNodes[index];
	    if (NodeUtil_js_1.default.isType(mspace, 'mspace')) {
	        NodeUtil_js_1.default.setAttribute(mspace, 'width', ParseUtil_js_1.default.Em(ParseUtil_js_1.default.dimen2em(NodeUtil_js_1.default.getAttribute(mspace, 'width')) + space));
	        return;
	    }
	    mspace = config.nodeFactory.create('node', 'mspace', [], { width: ParseUtil_js_1.default.Em(space) });
	    if (right) {
	        inf.appendChild(mspace);
	        return;
	    }
	    mspace.parent = inf;
	    inf.childNodes.unshift(mspace);
	};
	var moveProperties = function (src, dest) {
	    var props = ['inference', 'proof', 'maxAdjust', 'labelledRule'];
	    props.forEach(function (x) {
	        var value = exports.getProperty(src, x);
	        if (value != null) {
	            exports.setProperty(dest, x, value);
	            exports.removeProperty(src, x);
	        }
	    });
	};
	var adjustSequents = function (config) {
	    var sequents = config.nodeLists['sequent'];
	    if (!sequents) {
	        return;
	    }
	    for (var i = sequents.length - 1, seq = void 0; seq = sequents[i]; i--) {
	        if (exports.getProperty(seq, 'sequentProcessed')) {
	            exports.removeProperty(seq, 'sequentProcessed');
	            continue;
	        }
	        var collect = [];
	        var inf = getParentInf(seq);
	        if (exports.getProperty(inf, 'inference') !== 1) {
	            continue;
	        }
	        collect.push(seq);
	        while (exports.getProperty(inf, 'inference') === 1) {
	            inf = getRule(inf);
	            var premise = firstPremise(getPremises(inf, exports.getProperty(inf, 'inferenceRule')));
	            var sequent = (exports.getProperty(premise, 'inferenceRule')) ?
	                getConclusion(premise, exports.getProperty(premise, 'inferenceRule')) :
	                premise;
	            if (exports.getProperty(sequent, 'sequent')) {
	                seq = sequent.childNodes[0];
	                collect.push(seq);
	                exports.setProperty(seq, 'sequentProcessed', true);
	            }
	            inf = premise;
	        }
	        adjustSequentPairwise(config, collect);
	    }
	};
	var addSequentSpace = function (config, sequent, position, direction, width) {
	    var mspace = config.nodeFactory.create('node', 'mspace', [], { width: ParseUtil_js_1.default.Em(width) });
	    if (direction === 'left') {
	        var row = sequent.childNodes[position].childNodes[0];
	        mspace.parent = row;
	        row.childNodes.unshift(mspace);
	    }
	    else {
	        sequent.childNodes[position].appendChild(mspace);
	    }
	    exports.setProperty(sequent.parent, 'sequentAdjust_' + direction, width);
	};
	var adjustSequentPairwise = function (config, sequents) {
	    var top = sequents.pop();
	    while (sequents.length) {
	        var bottom = sequents.pop();
	        var _a = __read(compareSequents(top, bottom), 2), left = _a[0], right = _a[1];
	        if (exports.getProperty(top.parent, 'axiom')) {
	            addSequentSpace(config, left < 0 ? top : bottom, 0, 'left', Math.abs(left));
	            addSequentSpace(config, right < 0 ? top : bottom, 2, 'right', Math.abs(right));
	        }
	        top = bottom;
	    }
	};
	var compareSequents = function (top, bottom) {
	    var tr = getBBox(top.childNodes[2]);
	    var br = getBBox(bottom.childNodes[2]);
	    var tl = getBBox(top.childNodes[0]);
	    var bl = getBBox(bottom.childNodes[0]);
	    var dl = tl - bl;
	    var dr = tr - br;
	    return [dl, dr];
	};
	exports.balanceRules = function (arg) {
	    var e_1, _a;
	    item = new arg.document.options.MathItem('', null, arg.math.display);
	    var config = arg.data;
	    adjustSequents(config);
	    var inferences = config.nodeLists['inference'] || [];
	    var topAdjust = 0;
	    try {
	        for (var inferences_1 = __values(inferences), inferences_1_1 = inferences_1.next(); !inferences_1_1.done; inferences_1_1 = inferences_1.next()) {
	            var inf = inferences_1_1.value;
	            var isProof = exports.getProperty(inf, 'proof');
	            var label = exports.getProperty(inf, 'labelledRule');
	            var rule = getRule(inf);
	            var premises = getPremises(rule, exports.getProperty(rule, 'inferenceRule'));
	            var premiseF = firstPremise(premises);
	            if (exports.getProperty(premiseF, 'inference')) {
	                var adjust_1 = adjustValue(premiseF);
	                if (adjust_1) {
	                    addSpace(config, premiseF, -adjust_1);
	                    var w_1 = getSpaces(inf, rule, false);
	                    addSpace(config, inf, adjust_1 - w_1);
	                }
	            }
	            var premiseL = lastPremise(premises);
	            if (exports.getProperty(premiseL, 'inference') == null) {
	                continue;
	            }
	            var adjust = adjustValue(premiseL, true);
	            addSpace(config, premiseL, -adjust, true);
	            var w = getSpaces(inf, rule, true);
	            var maxAdjust = exports.getProperty(inf, 'maxAdjust');
	            if (maxAdjust != null) {
	                adjust = Math.max(adjust, maxAdjust);
	            }
	            var column = void 0;
	            if (isProof || !(column = getColumn(inf))) {
	                addSpace(config, exports.getProperty(inf, 'proof') ? inf : inf.parent, adjust - w, true);
	                continue;
	            }
	            var sibling = nextSibling(column);
	            if (sibling) {
	                var pos = config.nodeFactory.create('node', 'mspace', [], { width: adjust - w + 'em' });
	                sibling.appendChild(pos);
	                inf.removeProperty('maxAdjust');
	                continue;
	            }
	            var parentRule = getParentInf(column);
	            if (!parentRule) {
	                continue;
	            }
	            adjust = exports.getProperty(parentRule, 'maxAdjust') ?
	                Math.max(exports.getProperty(parentRule, 'maxAdjust'), adjust) : adjust;
	            exports.setProperty(parentRule, 'maxAdjust', adjust);
	        }
	    }
	    catch (e_1_1) { e_1 = { error: e_1_1 }; }
	    finally {
	        try {
	            if (inferences_1_1 && !inferences_1_1.done && (_a = inferences_1.return)) _a.call(inferences_1);
	        }
	        finally { if (e_1) throw e_1.error; }
	    }
	};
	var property_prefix = 'bspr_';
	var blacklistedProperties = (_a = {},
	    _a[property_prefix + 'maxAdjust'] = true,
	    _a);
	exports.setProperty = function (node, property, value) {
	    NodeUtil_js_1.default.setProperty(node, property_prefix + property, value);
	};
	exports.getProperty = function (node, property) {
	    return NodeUtil_js_1.default.getProperty(node, property_prefix + property);
	};
	exports.removeProperty = function (node, property) {
	    node.removeProperty(property_prefix + property);
	};
	exports.makeBsprAttributes = function (arg) {
	    arg.data.root.walkTree(function (mml, data) {
	        var attr = [];
	        mml.getPropertyNames().forEach(function (x) {
	            if (!blacklistedProperties[x] && x.match(RegExp('^' + property_prefix))) {
	                attr.push(x + ':' + mml.getProperty(x));
	            }
	        });
	        if (attr.length) {
	            NodeUtil_js_1.default.setAttribute(mml, 'semantics', attr.join(';'));
	        }
	    });
	};
	exports.saveDocument = function (arg) {
	    doc = arg.document;
	    if (!('getBBox' in doc.outputJax)) {
	        throw Error('The bussproofs extension requires an output jax with a getBBox() method');
	    }
	};
	exports.clearDocument = function (arg) {
	    doc = null;
	};
	//# sourceMappingURL=BussproofsUtil.js.map

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var BussproofsMethods_js_1 = __webpack_require__(391);
	var ParseMethods_js_1 = __webpack_require__(188);
	var SymbolMap_js_1 = __webpack_require__(190);
	new SymbolMap_js_1.CommandMap('Bussproofs-macros', {
	    AxiomC: 'Axiom',
	    UnaryInfC: ['Inference', 1],
	    BinaryInfC: ['Inference', 2],
	    TrinaryInfC: ['Inference', 3],
	    QuaternaryInfC: ['Inference', 4],
	    QuinaryInfC: ['Inference', 5],
	    RightLabel: ['Label', 'right'],
	    LeftLabel: ['Label', 'left'],
	    AXC: 'Axiom',
	    UIC: ['Inference', 1],
	    BIC: ['Inference', 2],
	    TIC: ['Inference', 3],
	    RL: ['Label', 'right'],
	    LL: ['Label', 'left'],
	    noLine: ['SetLine', 'none', false],
	    singleLine: ['SetLine', 'solid', false],
	    solidLine: ['SetLine', 'solid', false],
	    dashedLine: ['SetLine', 'dashed', false],
	    alwaysNoLine: ['SetLine', 'none', true],
	    alwaysSingleLine: ['SetLine', 'solid', true],
	    alwaysSolidLine: ['SetLine', 'solid', true],
	    alwaysDashedLine: ['SetLine', 'dashed', true],
	    rootAtTop: ['RootAtTop', true],
	    alwaysRootAtTop: ['RootAtTop', true],
	    rootAtBottom: ['RootAtTop', false],
	    alwaysRootAtBottom: ['RootAtTop', false],
	    fCenter: 'FCenter',
	    Axiom: 'AxiomF',
	    UnaryInf: ['InferenceF', 1],
	    BinaryInf: ['InferenceF', 2],
	    TrinaryInf: ['InferenceF', 3],
	    QuaternaryInf: ['InferenceF', 4],
	    QuinaryInf: ['InferenceF', 5]
	}, BussproofsMethods_js_1.default);
	new SymbolMap_js_1.EnvironmentMap('Bussproofs-environments', ParseMethods_js_1.default.environment, {
	    prooftree: ['Prooftree', null, false]
	}, BussproofsMethods_js_1.default);
	//# sourceMappingURL=BussproofsMappings.js.map

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	var __spread = (this && this.__spread) || function () {
	    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexError_js_1 = __webpack_require__(175);
	var TexParser_js_1 = __webpack_require__(173);
	var ParseUtil_js_1 = __webpack_require__(174);
	var BussproofsUtil = __webpack_require__(389);
	var BussproofsMethods = {};
	BussproofsMethods.Prooftree = function (parser, begin) {
	    parser.Push(begin);
	    var newItem = parser.itemFactory.create('proofTree').
	        setProperties({ name: begin.getName(),
	        line: 'solid', currentLine: 'solid', rootAtTop: false });
	    return newItem;
	};
	BussproofsMethods.Axiom = function (parser, name) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'proofTree') {
	        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
	    }
	    var content = paddedContent(parser, parser.GetArgument(name));
	    BussproofsUtil.setProperty(content, 'axiom', true);
	    top.Push(content);
	};
	var paddedContent = function (parser, content) {
	    var nodes = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(content), 0);
	    if (!nodes[0].childNodes[0].childNodes.length) {
	        return parser.create('node', 'mrow', []);
	    }
	    var lpad = parser.create('node', 'mspace', [], { width: '.5ex' });
	    var rpad = parser.create('node', 'mspace', [], { width: '.5ex' });
	    return parser.create('node', 'mrow', __spread([lpad], nodes, [rpad]));
	};
	BussproofsMethods.Inference = function (parser, name, n) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'proofTree') {
	        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
	    }
	    if (top.Size() < n) {
	        throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');
	    }
	    var rootAtTop = top.getProperty('rootAtTop');
	    var childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;
	    var children = [];
	    do {
	        if (children.length) {
	            children.unshift(parser.create('node', 'mtd', [], {}));
	        }
	        children.unshift(parser.create('node', 'mtd', [top.Pop()], { 'rowalign': (rootAtTop ? 'top' : 'bottom') }));
	        n--;
	    } while (n > 0);
	    var row = parser.create('node', 'mtr', children, {});
	    var table = parser.create('node', 'mtable', [row], { framespacing: '0 0' });
	    var conclusion = paddedContent(parser, parser.GetArgument(name));
	    var style = top.getProperty('currentLine');
	    if (style !== top.getProperty('line')) {
	        top.setProperty('currentLine', top.getProperty('line'));
	    }
	    var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);
	    top.setProperty('left', null);
	    top.setProperty('right', null);
	    BussproofsUtil.setProperty(rule, 'inference', childCount);
	    parser.configuration.addNode('inference', rule);
	    top.Push(rule);
	};
	function createRule(parser, premise, conclusions, left, right, style, rootAtTop) {
	    var upper = parser.create('node', 'mtr', [parser.create('node', 'mtd', [premise], {})], {});
	    var lower = parser.create('node', 'mtr', [parser.create('node', 'mtd', conclusions, {})], {});
	    var rule = parser.create('node', 'mtable', rootAtTop ? [lower, upper] : [upper, lower], { align: 'top 2', rowlines: style, framespacing: '0 0' });
	    BussproofsUtil.setProperty(rule, 'inferenceRule', rootAtTop ? 'up' : 'down');
	    var leftLabel, rightLabel;
	    if (left) {
	        leftLabel = parser.create('node', 'mpadded', [left], { height: '+.5em', width: '+.5em', voffset: '-.15em' });
	        BussproofsUtil.setProperty(leftLabel, 'prooflabel', 'left');
	    }
	    if (right) {
	        rightLabel = parser.create('node', 'mpadded', [right], { height: '+.5em', width: '+.5em', voffset: '-.15em' });
	        BussproofsUtil.setProperty(rightLabel, 'prooflabel', 'right');
	    }
	    var children, label;
	    if (left && right) {
	        children = [leftLabel, rule, rightLabel];
	        label = 'both';
	    }
	    else if (left) {
	        children = [leftLabel, rule];
	        label = 'left';
	    }
	    else if (right) {
	        children = [rule, rightLabel];
	        label = 'right';
	    }
	    else {
	        return rule;
	    }
	    rule = parser.create('node', 'mrow', children);
	    BussproofsUtil.setProperty(rule, 'labelledRule', label);
	    return rule;
	}
	;
	BussproofsMethods.Label = function (parser, name, side) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'proofTree') {
	        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
	    }
	    var content = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), 0);
	    var label = (content.length > 1) ?
	        parser.create('node', 'mrow', content, {}) : content[0];
	    top.setProperty(side, label);
	};
	BussproofsMethods.SetLine = function (parser, name, style, always) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'proofTree') {
	        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
	    }
	    top.setProperty('currentLine', style);
	    if (always) {
	        top.setProperty('line', style);
	    }
	};
	BussproofsMethods.RootAtTop = function (parser, name, where) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'proofTree') {
	        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
	    }
	    top.setProperty('rootAtTop', where);
	};
	BussproofsMethods.AxiomF = function (parser, name) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'proofTree') {
	        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
	    }
	    var line = parseFCenterLine(parser, name);
	    BussproofsUtil.setProperty(line, 'axiom', true);
	    top.Push(line);
	};
	function parseFCenterLine(parser, name) {
	    var dollar = parser.GetNext();
	    if (dollar !== '$') {
	        throw new TexError_js_1.default('IllegalUseOfCommand', 'Use of %1 does not match it\'s definition.', name);
	    }
	    parser.i++;
	    var axiom = parser.GetUpTo(name, '$');
	    if (axiom.indexOf('\\fCenter') === -1) {
	        throw new TexError_js_1.default('IllegalUseOfCommand', 'Missing \\fCenter in %1.', name);
	    }
	    var _a = __read(axiom.split('\\fCenter'), 2), prem = _a[0], conc = _a[1];
	    var premise = (new TexParser_js_1.default(prem, parser.stack.env, parser.configuration)).mml();
	    var conclusion = (new TexParser_js_1.default(conc, parser.stack.env, parser.configuration)).mml();
	    var fcenter = (new TexParser_js_1.default('\\fCenter', parser.stack.env, parser.configuration)).mml();
	    var left = parser.create('node', 'mtd', [premise], {});
	    var middle = parser.create('node', 'mtd', [fcenter], {});
	    var right = parser.create('node', 'mtd', [conclusion], {});
	    var row = parser.create('node', 'mtr', [left, middle, right], {});
	    var table = parser.create('node', 'mtable', [row], { columnspacing: '.5ex', columnalign: 'center 2' });
	    BussproofsUtil.setProperty(table, 'sequent', true);
	    parser.configuration.addNode('sequent', row);
	    return table;
	}
	;
	BussproofsMethods.FCenter = function (parser, name) { };
	BussproofsMethods.InferenceF = function (parser, name, n) {
	    var top = parser.stack.Top();
	    if (top.kind !== 'proofTree') {
	        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');
	    }
	    if (top.Size() < n) {
	        throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');
	    }
	    var rootAtTop = top.getProperty('rootAtTop');
	    var childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;
	    var children = [];
	    do {
	        if (children.length) {
	            children.unshift(parser.create('node', 'mtd', [], {}));
	        }
	        children.unshift(parser.create('node', 'mtd', [top.Pop()], { 'rowalign': (rootAtTop ? 'top' : 'bottom') }));
	        n--;
	    } while (n > 0);
	    var row = parser.create('node', 'mtr', children, {});
	    var table = parser.create('node', 'mtable', [row], { framespacing: '0 0' });
	    var conclusion = parseFCenterLine(parser, name);
	    var style = top.getProperty('currentLine');
	    if (style !== top.getProperty('line')) {
	        top.setProperty('currentLine', top.getProperty('line'));
	    }
	    var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);
	    top.setProperty('left', null);
	    top.setProperty('right', null);
	    BussproofsUtil.setProperty(rule, 'inference', childCount);
	    parser.configuration.addNode('inference', rule);
	    top.Push(rule);
	};
	exports.default = BussproofsMethods;
	//# sourceMappingURL=BussproofsMethods.js.map

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var TexConstants_js_1 = __webpack_require__(189);
	var SymbolMap_js_1 = __webpack_require__(190);
	var ParseUtil_js_1 = __webpack_require__(174);
	var EncloseConfiguration_js_1 = __webpack_require__(393);
	exports.CancelMethods = {};
	exports.CancelMethods.Cancel = function (parser, name, notation) {
	    var attr = parser.GetBrackets(name, '');
	    var math = parser.ParseArg(name);
	    var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);
	    def['notation'] = notation;
	    parser.Push(parser.create('node', 'menclose', [math], def));
	};
	exports.CancelMethods.CancelTo = function (parser, name) {
	    var attr = parser.GetBrackets(name, '');
	    var value = parser.ParseArg(name);
	    var math = parser.ParseArg(name);
	    var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);
	    def['notation'] = [TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE,
	        TexConstants_js_1.TexConstant.Notation.UPDIAGONALARROW,
	        TexConstants_js_1.TexConstant.Notation.NORTHEASTARROW].join(' ');
	    value = parser.create('node', 'mpadded', [value], { depth: '-.1em', height: '+.1em', voffset: '.1em' });
	    parser.Push(parser.create('node', 'msup', [parser.create('node', 'menclose', [math], def), value]));
	};
	new SymbolMap_js_1.CommandMap('cancel', {
	    cancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE],
	    bcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],
	    xcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE + ' ' +
	            TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],
	    cancelto: 'CancelTo'
	}, exports.CancelMethods);
	exports.CancelConfiguration = Configuration_js_1.Configuration.create('cancel', { handler: { macro: ['cancel'] } });
	//# sourceMappingURL=CancelConfiguration.js.map

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var SymbolMap_js_1 = __webpack_require__(190);
	var ParseUtil_js_1 = __webpack_require__(174);
	exports.ENCLOSE_OPTIONS = {
	    'data-arrowhead': 1,
	    color: 1,
	    mathcolor: 1,
	    background: 1,
	    mathbackground: 1,
	    'data-padding': 1,
	    'data-thickness': 1
	};
	exports.EncloseMethods = {};
	exports.EncloseMethods.Enclose = function (parser, name) {
	    var notation = parser.GetArgument(name).replace(/,/g, ' ');
	    var attr = parser.GetBrackets(name, '');
	    var math = parser.ParseArg(name);
	    var def = ParseUtil_js_1.default.keyvalOptions(attr, exports.ENCLOSE_OPTIONS);
	    def.notation = notation;
	    parser.Push(parser.create('node', 'menclose', [math], def));
	};
	new SymbolMap_js_1.CommandMap('enclose', { enclose: 'Enclose' }, exports.EncloseMethods);
	exports.EncloseConfiguration = Configuration_js_1.Configuration.create('enclose', { handler: { macro: ['enclose'] } });
	//# sourceMappingURL=EncloseConfiguration.js.map

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var SymbolMap_js_1 = __webpack_require__(190);
	var Configuration_js_1 = __webpack_require__(187);
	var ColorMethods_js_1 = __webpack_require__(395);
	var ColorUtil_js_1 = __webpack_require__(396);
	new SymbolMap_js_1.CommandMap('color', {
	    color: 'Color',
	    textcolor: 'TextColor',
	    definecolor: 'DefineColor',
	    colorbox: 'ColorBox',
	    fcolorbox: 'FColorBox'
	}, ColorMethods_js_1.ColorMethods);
	var config = function (config, jax) {
	    jax.parseOptions.options.color.model = new ColorUtil_js_1.ColorModel();
	};
	exports.ColorConfiguration = Configuration_js_1.Configuration.create('color', {
	    handler: {
	        macro: ['color'],
	    },
	    options: {
	        color: {
	            padding: '5px',
	            borderWidth: '2px'
	        }
	    },
	    config: config
	});
	//# sourceMappingURL=ColorConfiguration.js.map

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var NodeUtil_js_1 = __webpack_require__(170);
	var ParseUtil_js_1 = __webpack_require__(174);
	function padding(colorPadding) {
	    var pad = "+" + colorPadding;
	    var unit = colorPadding.replace(/^.*?([a-z]*)$/, '$1');
	    var pad2 = 2 * parseFloat(pad);
	    return {
	        width: "+" + pad2 + unit,
	        height: pad,
	        depth: pad,
	        lspace: colorPadding,
	    };
	}
	;
	exports.ColorMethods = {};
	exports.ColorMethods.Color = function (parser, name) {
	    var model = parser.GetBrackets(name, '');
	    var colorDef = parser.GetArgument(name);
	    var colorModel = parser.options.color.model;
	    var color = colorModel.getColor(model, colorDef);
	    var style = parser.itemFactory.create('style')
	        .setProperties({ styles: { mathcolor: color } });
	    parser.stack.env['color'] = color;
	    parser.Push(style);
	};
	exports.ColorMethods.TextColor = function (parser, name) {
	    var model = parser.GetBrackets(name, '');
	    var colorDef = parser.GetArgument(name);
	    var colorModel = parser.options.color.model;
	    var color = colorModel.getColor(model, colorDef);
	    var old = parser.stack.env['color'];
	    parser.stack.env['color'] = color;
	    var math = parser.ParseArg(name);
	    if (old) {
	        parser.stack.env['color'] = old;
	    }
	    else {
	        delete parser.stack.env['color'];
	    }
	    var node = parser.create('node', 'mstyle', [math], { mathcolor: color });
	    parser.Push(node);
	};
	exports.ColorMethods.DefineColor = function (parser, name) {
	    var cname = parser.GetArgument(name);
	    var model = parser.GetArgument(name);
	    var def = parser.GetArgument(name);
	    var colorModel = parser.options.color.model;
	    colorModel.defineColor(model, cname, def);
	};
	exports.ColorMethods.ColorBox = function (parser, name) {
	    var cname = parser.GetArgument(name);
	    var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
	    var options = parser.options.color;
	    var colorModel = options.model;
	    var node = parser.create('node', 'mpadded', math, {
	        mathbackground: colorModel.getColor('named', cname)
	    });
	    NodeUtil_js_1.default.setProperties(node, padding(options.padding));
	    parser.Push(node);
	};
	exports.ColorMethods.FColorBox = function (parser, name) {
	    var fname = parser.GetArgument(name);
	    var cname = parser.GetArgument(name);
	    var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));
	    var options = parser.options.color;
	    var colorModel = options.model;
	    var node = parser.create('node', 'mpadded', math, {
	        mathbackground: colorModel.getColor('named', cname),
	        style: "border: " + options.borderWidth + " solid " + colorModel.getColor('named', fname)
	    });
	    NodeUtil_js_1.default.setProperties(node, padding(options.padding));
	    parser.Push(node);
	};
	//# sourceMappingURL=ColorMethods.js.map

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexError_js_1 = __webpack_require__(175);
	var ColorConstants_js_1 = __webpack_require__(397);
	var ColorModelProcessors = new Map();
	var ColorModel = (function () {
	    function ColorModel() {
	        this.userColors = new Map();
	    }
	    ColorModel.prototype.normalizeColor = function (model, def) {
	        if (!model || model === 'named') {
	            return def;
	        }
	        if (ColorModelProcessors.has(model)) {
	            var modelProcessor = ColorModelProcessors.get(model);
	            return modelProcessor(def);
	        }
	        throw new TexError_js_1.default('UndefinedColorModel', 'Color model \'%1\' not defined', model);
	    };
	    ColorModel.prototype.getColor = function (model, def) {
	        if (!model || model === 'named') {
	            return this.getColorByName(def);
	        }
	        return this.normalizeColor(model, def);
	    };
	    ColorModel.prototype.getColorByName = function (name) {
	        if (this.userColors.has(name)) {
	            return this.userColors.get(name);
	        }
	        if (ColorConstants_js_1.COLORS.has(name)) {
	            return ColorConstants_js_1.COLORS.get(name);
	        }
	        return name;
	    };
	    ColorModel.prototype.defineColor = function (model, name, def) {
	        var normalized = this.normalizeColor(model, def);
	        this.userColors.set(name, normalized);
	    };
	    return ColorModel;
	}());
	exports.ColorModel = ColorModel;
	ColorModelProcessors.set('rgb', function (rgb) {
	    var e_1, _a;
	    var rgbParts = rgb.trim().split(/\s*,\s*/);
	    var RGB = '#';
	    if (rgbParts.length !== 3) {
	        throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'rgb');
	    }
	    try {
	        for (var rgbParts_1 = __values(rgbParts), rgbParts_1_1 = rgbParts_1.next(); !rgbParts_1_1.done; rgbParts_1_1 = rgbParts_1.next()) {
	            var rgbPart = rgbParts_1_1.value;
	            if (!rgbPart.match(/^(\d+(\.\d*)?|\.\d+)$/)) {
	                throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');
	            }
	            var n = parseFloat(rgbPart);
	            if (n < 0 || n > 1) {
	                throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'rgb', '0', '1');
	            }
	            var pn = Math.floor(n * 255).toString(16);
	            if (pn.length < 2) {
	                pn = '0' + pn;
	            }
	            RGB += pn;
	        }
	    }
	    catch (e_1_1) { e_1 = { error: e_1_1 }; }
	    finally {
	        try {
	            if (rgbParts_1_1 && !rgbParts_1_1.done && (_a = rgbParts_1.return)) _a.call(rgbParts_1);
	        }
	        finally { if (e_1) throw e_1.error; }
	    }
	    return RGB;
	});
	ColorModelProcessors.set('RGB', function (rgb) {
	    var e_2, _a;
	    var rgbParts = rgb.trim().split(/\s*,\s*/);
	    var RGB = '#';
	    if (rgbParts.length !== 3) {
	        throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'RGB');
	    }
	    try {
	        for (var rgbParts_2 = __values(rgbParts), rgbParts_2_1 = rgbParts_2.next(); !rgbParts_2_1.done; rgbParts_2_1 = rgbParts_2.next()) {
	            var rgbPart = rgbParts_2_1.value;
	            if (!rgbPart.match(/^\d+$/)) {
	                throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
	            }
	            var n = parseInt(rgbPart);
	            if (n > 255) {
	                throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'RGB', '0', '255');
	            }
	            var pn = n.toString(16);
	            if (pn.length < 2) {
	                pn = '0' + pn;
	            }
	            RGB += pn;
	        }
	    }
	    catch (e_2_1) { e_2 = { error: e_2_1 }; }
	    finally {
	        try {
	            if (rgbParts_2_1 && !rgbParts_2_1.done && (_a = rgbParts_2.return)) _a.call(rgbParts_2);
	        }
	        finally { if (e_2) throw e_2.error; }
	    }
	    return RGB;
	});
	ColorModelProcessors.set('gray', function (gray) {
	    if (!gray.match(/^\s*(\d+(\.\d*)?|\.\d+)\s*$/)) {
	        throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');
	    }
	    var n = parseFloat(gray);
	    if (n < 0 || n > 1) {
	        throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'gray', '0', '1');
	    }
	    var pn = Math.floor(n * 255).toString(16);
	    if (pn.length < 2) {
	        pn = '0' + pn;
	    }
	    return "#" + pn + pn + pn;
	});
	//# sourceMappingURL=ColorUtil.js.map

/***/ }),
/* 397 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.COLORS = new Map([
	    ['Apricot', '#FBB982'],
	    ['Aquamarine', '#00B5BE'],
	    ['Bittersweet', '#C04F17'],
	    ['Black', '#221E1F'],
	    ['Blue', '#2D2F92'],
	    ['BlueGreen', '#00B3B8'],
	    ['BlueViolet', '#473992'],
	    ['BrickRed', '#B6321C'],
	    ['Brown', '#792500'],
	    ['BurntOrange', '#F7921D'],
	    ['CadetBlue', '#74729A'],
	    ['CarnationPink', '#F282B4'],
	    ['Cerulean', '#00A2E3'],
	    ['CornflowerBlue', '#41B0E4'],
	    ['Cyan', '#00AEEF'],
	    ['Dandelion', '#FDBC42'],
	    ['DarkOrchid', '#A4538A'],
	    ['Emerald', '#00A99D'],
	    ['ForestGreen', '#009B55'],
	    ['Fuchsia', '#8C368C'],
	    ['Goldenrod', '#FFDF42'],
	    ['Gray', '#949698'],
	    ['Green', '#00A64F'],
	    ['GreenYellow', '#DFE674'],
	    ['JungleGreen', '#00A99A'],
	    ['Lavender', '#F49EC4'],
	    ['LimeGreen', '#8DC73E'],
	    ['Magenta', '#EC008C'],
	    ['Mahogany', '#A9341F'],
	    ['Maroon', '#AF3235'],
	    ['Melon', '#F89E7B'],
	    ['MidnightBlue', '#006795'],
	    ['Mulberry', '#A93C93'],
	    ['NavyBlue', '#006EB8'],
	    ['OliveGreen', '#3C8031'],
	    ['Orange', '#F58137'],
	    ['OrangeRed', '#ED135A'],
	    ['Orchid', '#AF72B0'],
	    ['Peach', '#F7965A'],
	    ['Periwinkle', '#7977B8'],
	    ['PineGreen', '#008B72'],
	    ['Plum', '#92268F'],
	    ['ProcessBlue', '#00B0F0'],
	    ['Purple', '#99479B'],
	    ['RawSienna', '#974006'],
	    ['Red', '#ED1B23'],
	    ['RedOrange', '#F26035'],
	    ['RedViolet', '#A1246B'],
	    ['Rhodamine', '#EF559F'],
	    ['RoyalBlue', '#0071BC'],
	    ['RoyalPurple', '#613F99'],
	    ['RubineRed', '#ED017D'],
	    ['Salmon', '#F69289'],
	    ['SeaGreen', '#3FBC9D'],
	    ['Sepia', '#671800'],
	    ['SkyBlue', '#46C5DD'],
	    ['SpringGreen', '#C6DC67'],
	    ['Tan', '#DA9D76'],
	    ['TealBlue', '#00AEB3'],
	    ['Thistle', '#D883B7'],
	    ['Turquoise', '#00B4CE'],
	    ['Violet', '#58429B'],
	    ['VioletRed', '#EF58A0'],
	    ['White', '#FFFFFF'],
	    ['WildStrawberry', '#EE2967'],
	    ['Yellow', '#FFF200'],
	    ['YellowGreen', '#98CC70'],
	    ['YellowOrange', '#FAA21A'],
	]);
	//# sourceMappingURL=ColorConstants.js.map

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var SymbolMap_js_1 = __webpack_require__(190);
	var Configuration_js_1 = __webpack_require__(187);
	exports.ColorV2Methods = {
	    Color: function (parser, name) {
	        var color = parser.GetArgument(name);
	        var old = parser.stack.env['color'];
	        parser.stack.env['color'] = color;
	        var math = parser.ParseArg(name);
	        if (old) {
	            parser.stack.env['color'] = old;
	        }
	        else {
	            delete parser.stack.env['color'];
	        }
	        var node = parser.create('node', 'mstyle', [math], { mathcolor: color });
	        parser.Push(node);
	    }
	};
	new SymbolMap_js_1.CommandMap('colorV2', { color: 'Color' }, exports.ColorV2Methods);
	exports.ColorConfiguration = Configuration_js_1.Configuration.create('colorV2', { handler: { macro: ['colorV2'] } });
	//# sourceMappingURL=ColorV2Configuration.js.map

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __values = (this && this.__values) || function(o) {
	    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
	    if (m) return m.call(o);
	    if (o && typeof o.length === "number") return {
	        next: function () {
	            if (o && i >= o.length) o = void 0;
	            return { value: o && o[i++], done: !o };
	        }
	    };
	    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var Options_js_1 = __webpack_require__(160);
	var SymbolMap_js_1 = __webpack_require__(190);
	var Symbol_js_1 = __webpack_require__(191);
	var NewcommandMethods_js_1 = __webpack_require__(400);
	var MACROSMAP = 'configMacrosMap';
	function configMacrosInit(config) {
	    var macrosMap = new SymbolMap_js_1.CommandMap(MACROSMAP, {}, {});
	    config.append(Configuration_js_1.Configuration.create('configMacroDefinitions', { handler: { macro: [MACROSMAP] } }));
	}
	function configMacrosConfig(config, jax) {
	    var e_1, _a;
	    var macrosMap = jax.parseOptions.handlers.retrieve(MACROSMAP);
	    var macros = jax.parseOptions.options.macros;
	    try {
	        for (var _b = __values(Object.keys(macros)), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var cs = _c.value;
	            var def = (typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs]);
	            var macro = Array.isArray(def[2]) ?
	                new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.MacroWithTemplate, def.slice(0, 2).concat(def[2])) :
	                new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.Macro, def);
	            macrosMap.add(cs, macro);
	        }
	    }
	    catch (e_1_1) { e_1 = { error: e_1_1 }; }
	    finally {
	        try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	        }
	        finally { if (e_1) throw e_1.error; }
	    }
	}
	exports.ConfigMacrosConfiguration = Configuration_js_1.Configuration.create('configMacros', {
	    init: configMacrosInit,
	    config: configMacrosConfig,
	    options: { macros: Options_js_1.expandable({}) }
	});
	//# sourceMappingURL=ConfigMacrosConfiguration.js.map

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexError_js_1 = __webpack_require__(175);
	var sm = __webpack_require__(190);
	var BaseMethods_js_1 = __webpack_require__(195);
	var ParseUtil_js_1 = __webpack_require__(174);
	var NewcommandUtil_js_1 = __webpack_require__(401);
	var NewcommandMethods = {};
	NewcommandMethods.NewCommand = function (parser, name) {
	    var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
	    var n = parser.GetBrackets(name);
	    var opt = parser.GetBrackets(name);
	    var def = parser.GetArgument(name);
	    if (cs.charAt(0) === '\\') {
	        cs = cs.substr(1);
	    }
	    if (!cs.match(/^(.|[a-z]+)$/i)) {
	        throw new TexError_js_1.default('IllegalControlSequenceName', 'Illegal control sequence name for %1', name);
	    }
	    if (n) {
	        n = ParseUtil_js_1.default.trimSpaces(n);
	        if (!n.match(/^[0-9]+$/)) {
	            throw new TexError_js_1.default('IllegalParamNumber', 'Illegal number of parameters specified in %1', name);
	        }
	    }
	    NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, n, opt]);
	};
	NewcommandMethods.NewEnvironment = function (parser, name) {
	    var env = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));
	    var n = parser.GetBrackets(name);
	    var opt = parser.GetBrackets(name);
	    var bdef = parser.GetArgument(name);
	    var edef = parser.GetArgument(name);
	    if (n) {
	        n = ParseUtil_js_1.default.trimSpaces(n);
	        if (!n.match(/^[0-9]+$/)) {
	            throw new TexError_js_1.default('IllegalParamNumber', 'Illegal number of parameters specified in %1', name);
	        }
	    }
	    NewcommandUtil_js_1.default.addEnvironment(parser, env, NewcommandMethods.BeginEnv, [true, bdef, edef, n, opt]);
	};
	NewcommandMethods.MacroDef = function (parser, name) {
	    var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);
	    var params = NewcommandUtil_js_1.default.GetTemplate(parser, name, '\\' + cs);
	    var def = parser.GetArgument(name);
	    !(params instanceof Array) ?
	        NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, params]) :
	        NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.MacroWithTemplate, [def].concat(params));
	};
	NewcommandMethods.Let = function (parser, name) {
	    var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);
	    var c = parser.GetNext();
	    if (c === '=') {
	        parser.i++;
	        c = parser.GetNext();
	    }
	    var handlers = parser.configuration.handlers;
	    if (c === '\\') {
	        name = NewcommandUtil_js_1.default.GetCSname(parser, name);
	        var macro_1 = handlers.get('delimiter').lookup('\\' + name);
	        if (macro_1) {
	            NewcommandUtil_js_1.default.addDelimiter(parser, '\\' + cs, macro_1.char, macro_1.attributes);
	            return;
	        }
	        var map_1 = handlers.get('macro').applicable(name);
	        if (!map_1) {
	            return;
	        }
	        if (map_1 instanceof sm.MacroMap) {
	            var macro_2 = map_1.lookup(name);
	            NewcommandUtil_js_1.default.addMacro(parser, cs, macro_2.func, macro_2.args, macro_2.symbol);
	            return;
	        }
	        macro_1 = map_1.lookup(name);
	        var newArgs = NewcommandUtil_js_1.default.disassembleSymbol(cs, macro_1);
	        var method = function (p, cs) {
	            var rest = [];
	            for (var _i = 2; _i < arguments.length; _i++) {
	                rest[_i - 2] = arguments[_i];
	            }
	            var symb = NewcommandUtil_js_1.default.assembleSymbol(rest);
	            return map_1.parser(p, symb);
	        };
	        NewcommandUtil_js_1.default.addMacro(parser, cs, method, newArgs);
	        return;
	    }
	    parser.i++;
	    var macro = handlers.get('delimiter').lookup(c);
	    if (macro) {
	        NewcommandUtil_js_1.default.addDelimiter(parser, '\\' + cs, macro.char, macro.attributes);
	        return;
	    }
	    NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [c]);
	};
	NewcommandMethods.MacroWithTemplate = function (parser, name, text, n) {
	    var params = [];
	    for (var _i = 4; _i < arguments.length; _i++) {
	        params[_i - 4] = arguments[_i];
	    }
	    var argCount = parseInt(n, 10);
	    if (argCount) {
	        var args = [];
	        parser.GetNext();
	        if (params[0] && !NewcommandUtil_js_1.default.MatchParam(parser, params[0])) {
	            throw new TexError_js_1.default('MismatchUseDef', 'Use of %1 doesn\'t match its definition', name);
	        }
	        for (var i = 0; i < argCount; i++) {
	            args.push(NewcommandUtil_js_1.default.GetParameter(parser, name, params[i + 1]));
	        }
	        text = ParseUtil_js_1.default.substituteArgs(parser, args, text);
	    }
	    parser.string = ParseUtil_js_1.default.addArgs(parser, text, parser.string.slice(parser.i));
	    parser.i = 0;
	    if (++parser.macroCount > parser.configuration.options['maxMacros']) {
	        throw new TexError_js_1.default('MaxMacroSub1', 'MathJax maximum macro substitution count exceeded; ' +
	            'is here a recursive macro call?');
	    }
	};
	NewcommandMethods.BeginEnv = function (parser, begin, bdef, edef, n, def) {
	    if (begin.getProperty('end') && parser.stack.env['closing'] === begin.getName()) {
	        delete parser.stack.env['closing'];
	        var rest = parser.string.slice(parser.i);
	        parser.string = edef;
	        parser.i = 0;
	        parser.Parse();
	        parser.string = rest;
	        parser.i = 0;
	        return parser.itemFactory.create('end').setProperty('name', begin.getName());
	    }
	    if (n) {
	        var args = [];
	        if (def != null) {
	            var optional = parser.GetBrackets('\\begin{' + begin.getName() + '}');
	            args.push(optional == null ? def : optional);
	        }
	        for (var i = args.length; i < n; i++) {
	            args.push(parser.GetArgument('\\begin{' + begin.getName() + '}'));
	        }
	        bdef = ParseUtil_js_1.default.substituteArgs(parser, args, bdef);
	        edef = ParseUtil_js_1.default.substituteArgs(parser, [], edef);
	    }
	    parser.string = ParseUtil_js_1.default.addArgs(parser, bdef, parser.string.slice(parser.i));
	    parser.i = 0;
	    return parser.itemFactory.create('beginEnv').setProperty('name', begin.getName());
	};
	NewcommandMethods.Macro = BaseMethods_js_1.default.Macro;
	exports.default = NewcommandMethods;
	//# sourceMappingURL=NewcommandMethods.js.map

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var ParseUtil_js_1 = __webpack_require__(174);
	var TexError_js_1 = __webpack_require__(175);
	var Symbol_js_1 = __webpack_require__(191);
	var MapHandler_js_1 = __webpack_require__(184);
	var NewcommandUtil;
	(function (NewcommandUtil) {
	    function disassembleSymbol(name, symbol) {
	        var newArgs = [name, symbol.char];
	        if (symbol.attributes) {
	            for (var key in symbol.attributes) {
	                newArgs.push(key);
	                newArgs.push(symbol.attributes[key]);
	            }
	        }
	        return newArgs;
	    }
	    NewcommandUtil.disassembleSymbol = disassembleSymbol;
	    ;
	    function assembleSymbol(args) {
	        var name = args[0];
	        var char = args[1];
	        var attrs = {};
	        for (var i = 2; i < args.length; i = i + 2) {
	            attrs[args[i]] = args[i + 1];
	        }
	        return new Symbol_js_1.Symbol(name, char, attrs);
	    }
	    NewcommandUtil.assembleSymbol = assembleSymbol;
	    ;
	    function GetCSname(parser, cmd) {
	        var c = parser.GetNext();
	        if (c !== '\\') {
	            throw new TexError_js_1.default('MissingCS', '%1 must be followed by a control sequence', cmd);
	        }
	        var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(cmd));
	        return cs.substr(1);
	    }
	    NewcommandUtil.GetCSname = GetCSname;
	    ;
	    function GetTemplate(parser, cmd, cs) {
	        var c = parser.GetNext();
	        var params = [];
	        var n = 0;
	        var i = parser.i;
	        while (parser.i < parser.string.length) {
	            c = parser.GetNext();
	            if (c === '#') {
	                if (i !== parser.i) {
	                    params[n] = parser.string.substr(i, parser.i - i);
	                }
	                c = parser.string.charAt(++parser.i);
	                if (!c.match(/^[1-9]$/)) {
	                    throw new TexError_js_1.default('CantUseHash2', 'Illegal use of # in template for %1', cs);
	                }
	                if (parseInt(c) !== ++n) {
	                    throw new TexError_js_1.default('SequentialParam', 'Parameters for %1 must be numbered sequentially', cs);
	                }
	                i = parser.i + 1;
	            }
	            else if (c === '{') {
	                if (i !== parser.i) {
	                    params[n] = parser.string.substr(i, parser.i - i);
	                }
	                if (params.length > 0) {
	                    return [n.toString()].concat(params);
	                }
	                else {
	                    return n;
	                }
	            }
	            parser.i++;
	        }
	        throw new TexError_js_1.default('MissingReplacementString', 'Missing replacement string for definition of %1', cmd);
	    }
	    NewcommandUtil.GetTemplate = GetTemplate;
	    ;
	    function GetParameter(parser, name, param) {
	        if (param == null) {
	            return parser.GetArgument(name);
	        }
	        var i = parser.i;
	        var j = 0;
	        var hasBraces = 0;
	        while (parser.i < parser.string.length) {
	            var c = parser.string.charAt(parser.i);
	            if (c === '{') {
	                if (parser.i === i) {
	                    hasBraces = 1;
	                }
	                parser.GetArgument(name);
	                j = parser.i - i;
	            }
	            else if (MatchParam(parser, param)) {
	                if (hasBraces) {
	                    i++;
	                    j -= 2;
	                }
	                return parser.string.substr(i, j);
	            }
	            else if (c === '\\') {
	                parser.i++;
	                j++;
	                hasBraces = 0;
	                var match = parser.string.substr(parser.i).match(/[a-z]+|./i);
	                if (match) {
	                    parser.i += match[0].length;
	                    j = parser.i - i;
	                }
	            }
	            else {
	                parser.i++;
	                j++;
	                hasBraces = 0;
	            }
	        }
	        throw new TexError_js_1.default('RunawayArgument', 'Runaway argument for %1?', name);
	    }
	    NewcommandUtil.GetParameter = GetParameter;
	    ;
	    function MatchParam(parser, param) {
	        if (parser.string.substr(parser.i, param.length) !== param) {
	            return 0;
	        }
	        if (param.match(/\\[a-z]+$/i) &&
	            parser.string.charAt(parser.i + param.length).match(/[a-z]/i)) {
	            return 0;
	        }
	        parser.i += param.length;
	        return 1;
	    }
	    NewcommandUtil.MatchParam = MatchParam;
	    ;
	    function addDelimiter(parser, cs, char, attr) {
	        var handlers = parser.configuration.handlers;
	        var handler = handlers.retrieve(MapHandler_js_1.ExtensionMaps.NEW_DELIMITER);
	        handler.add(cs, new Symbol_js_1.Symbol(cs, char, attr));
	    }
	    NewcommandUtil.addDelimiter = addDelimiter;
	    ;
	    function addMacro(parser, cs, func, attr, symbol) {
	        if (symbol === void 0) { symbol = ''; }
	        var handlers = parser.configuration.handlers;
	        var handler = handlers.retrieve(MapHandler_js_1.ExtensionMaps.NEW_COMMAND);
	        handler.add(cs, new Symbol_js_1.Macro(symbol ? symbol : cs, func, attr));
	    }
	    NewcommandUtil.addMacro = addMacro;
	    ;
	    function addEnvironment(parser, env, func, attr) {
	        var handlers = parser.configuration.handlers;
	        var handler = handlers.retrieve(MapHandler_js_1.ExtensionMaps.NEW_ENVIRONMENT);
	        handler.add(env, new Symbol_js_1.Macro(env, func, attr));
	    }
	    NewcommandUtil.addEnvironment = addEnvironment;
	    ;
	})(NewcommandUtil || (NewcommandUtil = {}));
	exports.default = NewcommandUtil;
	//# sourceMappingURL=NewcommandUtil.js.map

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var SymbolMap_js_1 = __webpack_require__(190);
	var AmsMethods_js_1 = __webpack_require__(377);
	var NewcommandUtil_js_1 = __webpack_require__(401);
	var NewcommandConfiguration_js_1 = __webpack_require__(403);
	var TexError_js_1 = __webpack_require__(175);
	exports.ExtpfeilMethods = {};
	exports.ExtpfeilMethods.xArrow = AmsMethods_js_1.default.xArrow;
	exports.ExtpfeilMethods.NewExtArrow = function (parser, name) {
	    var cs = parser.GetArgument(name);
	    var space = parser.GetArgument(name);
	    var chr = parser.GetArgument(name);
	    if (!cs.match(/^\\([a-z]+|.)$/i)) {
	        throw new TexError_js_1.default('NewextarrowArg1', 'First argument to %1 must be a control sequence name', name);
	    }
	    if (!space.match(/^(\d+),(\d+)$/)) {
	        throw new TexError_js_1.default('NewextarrowArg2', 'Second argument to %1 must be two integers separated by a comma', name);
	    }
	    if (!chr.match(/^(\d+|0x[0-9A-F]+)$/i)) {
	        throw new TexError_js_1.default('NewextarrowArg3', 'Third argument to %1 must be a unicode character number', name);
	    }
	    cs = cs.substr(1);
	    var spaces = space.split(',');
	    NewcommandUtil_js_1.default.addMacro(parser, cs, exports.ExtpfeilMethods.xArrow, [parseInt(chr), parseInt(spaces[0]), parseInt(spaces[1])]);
	};
	new SymbolMap_js_1.CommandMap('extpfeil', {
	    xtwoheadrightarrow: ['xArrow', 0x21A0, 12, 16],
	    xtwoheadleftarrow: ['xArrow', 0x219E, 17, 13],
	    xmapsto: ['xArrow', 0x21A6, 6, 7],
	    xlongequal: ['xArrow', 0x003D, 7, 7],
	    xtofrom: ['xArrow', 0x21C4, 12, 12],
	    Newextarrow: 'NewExtArrow'
	}, exports.ExtpfeilMethods);
	var init = function (config) {
	    NewcommandConfiguration_js_1.NewcommandConfiguration.init(config);
	};
	exports.ExtpfeilConfiguration = Configuration_js_1.Configuration.create('extpfeil', { handler: { macro: ['extpfeil'] },
	    init: init });
	//# sourceMappingURL=ExtpfeilConfiguration.js.map

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var NewcommandItems_js_1 = __webpack_require__(404);
	var MapHandler_js_1 = __webpack_require__(184);
	__webpack_require__(405);
	var init = function (config) {
	    if (config.handler['macro'].indexOf(MapHandler_js_1.ExtensionMaps.NEW_COMMAND) < 0) {
	        config.append(Configuration_js_1.Configuration.extension());
	    }
	};
	exports.NewcommandConfiguration = Configuration_js_1.Configuration.create('newcommand', {
	    handler: {
	        macro: ['Newcommand-macros']
	    },
	    items: (_a = {},
	        _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem,
	        _a),
	    options: { maxMacros: 1000 },
	    init: init
	});
	//# sourceMappingURL=NewcommandConfiguration.js.map

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var TexError_js_1 = __webpack_require__(175);
	var StackItem_js_1 = __webpack_require__(182);
	var BeginEnvItem = (function (_super) {
	    __extends(BeginEnvItem, _super);
	    function BeginEnvItem() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(BeginEnvItem.prototype, "kind", {
	        get: function () {
	            return 'beginEnv';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(BeginEnvItem.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    BeginEnvItem.prototype.checkItem = function (item) {
	        if (item.isKind('end')) {
	            if (item.getName() !== this.getName()) {
	                throw new TexError_js_1.default('EnvBadEnd', '\\begin{%1} ended with \\end{%2}', this.getName(), item.getName());
	            }
	            return [[this.factory.create('mml', this.toMml())], true];
	        }
	        if (item.isKind('stop')) {
	            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\end{%1}', this.getName());
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    return BeginEnvItem;
	}(StackItem_js_1.BaseItem));
	exports.BeginEnvItem = BeginEnvItem;
	//# sourceMappingURL=NewcommandItems.js.map

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var NewcommandMethods_js_1 = __webpack_require__(400);
	var SymbolMap_js_1 = __webpack_require__(190);
	new SymbolMap_js_1.CommandMap('Newcommand-macros', {
	    newcommand: 'NewCommand',
	    renewcommand: 'NewCommand',
	    newenvironment: 'NewEnvironment',
	    renewenvironment: 'NewEnvironment',
	    def: 'MacroDef',
	    'let': 'Let'
	}, NewcommandMethods_js_1.default);
	//# sourceMappingURL=NewcommandMappings.js.map

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var SymbolMap_js_1 = __webpack_require__(190);
	var HtmlMethods_js_1 = __webpack_require__(407);
	new SymbolMap_js_1.CommandMap('html_macros', {
	    href: 'Href',
	    'class': 'Class',
	    style: 'Style',
	    cssId: 'Id'
	}, HtmlMethods_js_1.default);
	exports.HtmlConfiguration = Configuration_js_1.Configuration.create('html', { handler: { macro: ['html_macros'] } });
	//# sourceMappingURL=HtmlConfiguration.js.map

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var NodeUtil_js_1 = __webpack_require__(170);
	var HtmlMethods = {};
	HtmlMethods.Href = function (parser, name) {
	    var url = parser.GetArgument(name);
	    var arg = GetArgumentMML(parser, name);
	    NodeUtil_js_1.default.setAttribute(arg, 'href', url);
	    parser.Push(arg);
	};
	HtmlMethods.Class = function (parser, name) {
	    var CLASS = parser.GetArgument(name);
	    var arg = GetArgumentMML(parser, name);
	    var oldClass = NodeUtil_js_1.default.getAttribute(arg, 'class');
	    if (oldClass) {
	        CLASS = oldClass + ' ' + CLASS;
	    }
	    NodeUtil_js_1.default.setAttribute(arg, 'class', CLASS);
	    parser.Push(arg);
	};
	HtmlMethods.Style = function (parser, name) {
	    var style = parser.GetArgument(name);
	    var arg = GetArgumentMML(parser, name);
	    var oldStyle = NodeUtil_js_1.default.getAttribute(arg, 'style');
	    if (oldStyle) {
	        if (style.charAt(style.length - 1) !== ';') {
	            style += ';';
	        }
	        style = oldStyle + ' ' + style;
	    }
	    NodeUtil_js_1.default.setAttribute(arg, 'style', style);
	    parser.Push(arg);
	};
	HtmlMethods.Id = function (parser, name) {
	    var ID = parser.GetArgument(name);
	    var arg = GetArgumentMML(parser, name);
	    NodeUtil_js_1.default.setAttribute(arg, 'id', ID);
	    parser.Push(arg);
	};
	var GetArgumentMML = function (parser, name) {
	    var arg = parser.ParseArg(name);
	    if (!NodeUtil_js_1.default.isInferred(arg)) {
	        return arg;
	    }
	    var children = NodeUtil_js_1.default.getChildren(arg);
	    if (children.length === 1) {
	        return children[0];
	    }
	    var mrow = parser.create('node', 'mrow');
	    NodeUtil_js_1.default.copyChildren(arg, mrow);
	    NodeUtil_js_1.default.copyAttributes(arg, mrow);
	    return mrow;
	};
	exports.default = HtmlMethods;
	//# sourceMappingURL=HtmlMethods.js.map

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var SymbolMap_js_1 = __webpack_require__(190);
	var TexError_js_1 = __webpack_require__(175);
	var BaseMethods_js_1 = __webpack_require__(195);
	var AmsMethods_js_1 = __webpack_require__(377);
	var mhchem_parser_js_1 = __webpack_require__(409);
	var MhchemMethods = {};
	MhchemMethods.Macro = BaseMethods_js_1.default.Macro;
	MhchemMethods.xArrow = AmsMethods_js_1.default.xArrow;
	MhchemMethods.Machine = function (parser, name, machine) {
	    try {
	        var arg = parser.GetArgument(name);
	        var data = mhchem_parser_js_1.mhchemParser.go(arg, machine);
	        var tex = mhchem_parser_js_1.texify.go(data);
	        parser.string = tex + parser.string.substr(parser.i);
	        parser.i = 0;
	    }
	    catch (err) {
	        throw new TexError_js_1.default(err[0], err[1], err.slice(2));
	    }
	};
	new SymbolMap_js_1.CommandMap('mhchem', { ce: ['Machine', 'ce'],
	    pu: ['Machine', 'pu'],
	    longrightleftharpoons: ['Macro',
	        '\\stackrel{\\textstyle{-}\\!\\!{\\rightharpoonup}}{\\smash{{\\leftharpoondown}\\!\\!{-}}}'],
	    longRightleftharpoons: ['Macro',
	        '\\stackrel{\\textstyle{-}\\!\\!{\\rightharpoonup}}{\\smash{\\leftharpoondown}}'],
	    longLeftrightharpoons: ['Macro',
	        '\\stackrel{\\textstyle\\vphantom{{-}}{\\rightharpoonup}}{\\smash{{\\leftharpoondown}\\!\\!{-}}}'],
	    longleftrightarrows: ['Macro',
	        '\\stackrel{\\longrightarrow}{\\smash{\\longleftarrow}\\Rule{0px}{.25em}{0px}}'],
	    tripledash: ['Macro',
	        '\\vphantom{-}\\raise2mu{\\kern2mu\\tiny\\text{-}\\kern1mu\\text{-}\\kern1mu\\text{-}\\kern2mu}'],
	    xrightarrow: ['xArrow', 0x2192, 5, 6],
	    xleftarrow: ['xArrow', 0x2190, 7, 3],
	    xleftrightarrow: ['xArrow', 0x2194, 6, 6],
	    xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],
	    xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],
	    xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]
	}, MhchemMethods);
	exports.MhchemConfiguration = Configuration_js_1.Configuration.create('mhchem', { handler: { macro: ['mhchem'] } });
	//# sourceMappingURL=MhchemConfiguration.js.map

/***/ }),
/* 409 */
/***/ (function(module, exports) {

	"use strict";
	Object.defineProperty(exports, '__esModule', {value: true});
	//
	// Core parser for mhchem syntax  (recursive)
	//
	/** @type {MhchemParser} */
	var mhchemParser = {
	  //
	  // Parses mchem \ce syntax
	  //
	  // Call like
	  //   go("H2O");
	  //
	  go: function (input, stateMachine) {
	    if (!input) { return []; }
	    if (stateMachine === undefined) { stateMachine = 'ce'; }
	    var state = '0';

	    //
	    // String buffers for parsing:
	    //
	    // buffer.a == amount
	    // buffer.o == element
	    // buffer.b == left-side superscript
	    // buffer.p == left-side subscript
	    // buffer.q == right-side subscript
	    // buffer.d == right-side superscript
	    //
	    // buffer.r == arrow
	    // buffer.rdt == arrow, script above, type
	    // buffer.rd == arrow, script above, content
	    // buffer.rqt == arrow, script below, type
	    // buffer.rq == arrow, script below, content
	    //
	    // buffer.text_
	    // buffer.rm
	    // etc.
	    //
	    // buffer.parenthesisLevel == int, starting at 0
	    // buffer.sb == bool, space before
	    // buffer.beginsWithBond == bool
	    //
	    // These letters are also used as state names.
	    //
	    // Other states:
	    // 0 == begin of main part (arrow/operator unlikely)
	    // 1 == next entity
	    // 2 == next entity (arrow/operator unlikely)
	    // 3 == next atom
	    // c == macro
	    //
	    /** @type {Buffer} */
	    var buffer = {};
	    buffer['parenthesisLevel'] = 0;

	    input = input.replace(/\n/g, " ");
	    input = input.replace(/[\u2212\u2013\u2014\u2010]/g, "-");
	    input = input.replace(/[\u2026]/g, "...");

	    //
	    // Looks through mhchemParser.transitions, to execute a matching action
	    // (recursive)
	    //
	    var lastInput;
	    var watchdog = 10;
	    /** @type {ParserOutput[]} */
	    var output = [];
	    while (true) {
	      if (lastInput !== input) {
	        watchdog = 10;
	        lastInput = input;
	      } else {
	        watchdog--;
	      }
	      //
	      // Find actions in transition table
	      //
	      var machine = mhchemParser.stateMachines[stateMachine];
	      var t = machine.transitions[state] || machine.transitions['*'];
	      iterateTransitions:
	      for (var i=0; i<t.length; i++) {
	        var matches = mhchemParser.patterns.match_(t[i].pattern, input);
	        if (matches) {
	          //
	          // Execute actions
	          //
	          var task = t[i].task;
	          for (var iA=0; iA<task.action_.length; iA++) {
	            var o;
	            //
	            // Find and execute action
	            //
	            if (machine.actions[task.action_[iA].type_]) {
	              o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);
	            } else if (mhchemParser.actions[task.action_[iA].type_]) {
	              o = mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);
	            } else {
	              throw ["MhchemBugA", "mhchem bug A. Please report. (" + task.action_[iA].type_ + ")"];  // Trying to use non-existing action
	            }
	            //
	            // Add output
	            //
	            mhchemParser.concatArray(output, o);
	          }
	          //
	          // Set next state,
	          // Shorten input,
	          // Continue with next character
	          //   (= apply only one transition per position)
	          //
	          state = task.nextState || state;
	          if (input.length > 0) {
	            if (!task.revisit) {
	              input = matches.remainder;
	            }
	            if (!task.toContinue) {
	              break iterateTransitions;
	            }
	          } else {
	            return output;
	          }
	        }
	      }
	      //
	      // Prevent infinite loop
	      //
	      if (watchdog <= 0) {
	        throw ["MhchemBugU", "mhchem bug U. Please report."];  // Unexpected character
	      }
	    }
	  },
	  concatArray: function (a, b) {
	    if (b) {
	      if (Array.isArray(b)) {
	        for (var iB=0; iB<b.length; iB++) {
	          a.push(b[iB]);
	        }
	      } else {
	        a.push(b);
	      }
	    }
	  },

	  patterns: {
	    //
	    // Matching patterns
	    // either regexps or function that return null or {match_:"a", remainder:"bc"}
	    //
	    patterns: {
	      // property names must not look like integers ("2") for correct property traversal order, later on
	      'empty': /^$/,
	      'else': /^./,
	      'else2': /^./,
	      'space': /^\s/,
	      'space A': /^\s(?=[A-Z\\$])/,
	      'space$': /^\s$/,
	      'a-z': /^[a-z]/,
	      'x': /^x/,
	      'x$': /^x$/,
	      'i$': /^i$/,
	      'letters': /^(?:[a-zA-Z\u03B1-\u03C9\u0391-\u03A9?@]|(?:\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))))+/,
	      '\\greek': /^\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))/,
	      'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,
	      '$one lowercase latin letter$ $': /^\$(?:([a-z])(?:$|[^a-zA-Z]))\$$/,
	      'one lowercase greek letter $': /^(?:\$?[\u03B1-\u03C9]\$?|\$?\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\s*\$?)(?:\s+|\{\}|(?![a-zA-Z]))$/,
	      'digits': /^[0-9]+/,
	      '-9.,9': /^[+\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))/,
	      '-9.,9 no missing 0': /^[+\-]?[0-9]+(?:[.,][0-9]+)?/,
	      '(-)(9.,9)(e)(99)': function (input) {
	        var m = input.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))?(\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))\))?(?:([eE]|\s*(\*|x|\\times|\u00D7)\s*10\^)([+\-]?[0-9]+|\{[+\-]?[0-9]+\}))?/);
	        if (m && m[0]) {
	          return { match_: m.splice(1), remainder: input.substr(m[0].length) };
	        }
	        return null;
	      },
	      '(-)(9)^(-9)': function (input) {
	        var m = input.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+)?)\^([+\-]?[0-9]+|\{[+\-]?[0-9]+\})/);
	        if (m && m[0]) {
	          return { match_: m.splice(1), remainder: input.substr(m[0].length) };
	        }
	        return null;
	      },
	      'state of aggregation $': function (input) {  // ... or crystal system
	        var a = mhchemParser.patterns.findObserveGroups(input, "", /^\([a-z]{1,3}(?=[\),])/, ")", "");  // (aq), (aq,$\infty$), (aq, sat)
	        if (a  &&  a.remainder.match(/^($|[\s,;\)\]\}])/)) { return a; }  //  AND end of 'phrase'
	        var m = input.match(/^(?:\((?:\\ca\s?)?\$[amothc]\$\))/);  // OR crystal system ($o$) (\ca$c$)
	        if (m) {
	          return { match_: m[0], remainder: input.substr(m[0].length) };
	        }
	        return null;
	      },
	      '_{(state of aggregation)}$': /^_\{(\([a-z]{1,3}\))\}/,
	      '{[(': /^(?:\\\{|\[|\()/,
	      ')]}': /^(?:\)|\]|\\\})/,
	      ', ': /^[,;]\s*/,
	      ',': /^[,;]/,
	      '.': /^[.]/,
	      '. ': /^([.\u22C5\u00B7\u2022])\s*/,
	      '...': /^\.\.\.(?=$|[^.])/,
	      '* ': /^([*])\s*/,
	      '^{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "^{", "", "", "}"); },
	      '^($...$)': function (input) { return mhchemParser.patterns.findObserveGroups(input, "^", "$", "$", ""); },
	      '^a': /^\^([0-9]+|[^\\_])/,
	      '^\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "^", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true); },
	      '^\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "^", /^\\[a-zA-Z]+\{/, "}", ""); },
	      '^\\x': /^\^(\\[a-zA-Z]+)\s*/,
	      '^(-1)': /^\^(-?\d+)/,
	      '\'': /^'/,
	      '_{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "_{", "", "", "}"); },
	      '_($...$)': function (input) { return mhchemParser.patterns.findObserveGroups(input, "_", "$", "$", ""); },
	      '_9': /^_([+\-]?[0-9]+|[^\\])/,
	      '_\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "_", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true); },
	      '_\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "_", /^\\[a-zA-Z]+\{/, "}", ""); },
	      '_\\x': /^_(\\[a-zA-Z]+)\s*/,
	      '^_': /^(?:\^(?=_)|\_(?=\^)|[\^_]$)/,
	      '{}': /^\{\}/,
	      '{...}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "", "{", "}", ""); },
	      '{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "{", "", "", "}"); },
	      '$...$': function (input) { return mhchemParser.patterns.findObserveGroups(input, "", "$", "$", ""); },
	      '${(...)}$': function (input) { return mhchemParser.patterns.findObserveGroups(input, "${", "", "", "}$"); },
	      '$(...)$': function (input) { return mhchemParser.patterns.findObserveGroups(input, "$", "", "", "$"); },
	      '=<>': /^[=<>]/,
	      '#': /^[#\u2261]/,
	      '+': /^\+/,
	      '-$': /^-(?=[\s_},;\]/]|$|\([a-z]+\))/,  // -space -, -; -] -/ -$ -state-of-aggregation
	      '-9': /^-(?=[0-9])/,
	      '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\s,;\)\]\}]))/,
	      '-': /^-/,
	      'pm-operator': /^(?:\\pm|\$\\pm\$|\+-|\+\/-)/,
	      'operator': /^(?:\+|(?:[\-=<>]|<<|>>|\\approx|\$\\approx\$)(?=\s|$|-?[0-9]))/,
	      'arrowUpDown': /^(?:v|\(v\)|\^|\(\^\))(?=$|[\s,;\)\]\}])/,
	      '\\bond{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\bond{", "", "", "}"); },
	      '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\u2192\u27F6\u21CC])/,
	      'CMT': /^[CMT](?=\[)/,
	      '[(...)]': function (input) { return mhchemParser.patterns.findObserveGroups(input, "[", "", "", "]"); },
	      '1st-level escape': /^(&|\\\\|\\hline)\s*/,
	      '\\,': /^(?:\\[,\ ;:])/,  // \\x - but output no space before
	      '\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "", /^\\[a-zA-Z]+\{/, "}", "", "", "{", "}", "", true); },
	      '\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "", /^\\[a-zA-Z]+\{/, "}", ""); },
	      '\\ca': /^\\ca(?:\s+|(?![a-zA-Z]))/,
	      '\\x': /^(?:\\[a-zA-Z]+\s*|\\[_&{}%])/,
	      'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,  // only those with numbers in front, because the others will be formatted correctly anyway
	      'others': /^[\/~|]/,
	      '\\frac{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\frac{", "", "", "}", "{", "", "", "}"); },
	      '\\overset{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\overset{", "", "", "}", "{", "", "", "}"); },
	      '\\underset{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\underset{", "", "", "}", "{", "", "", "}"); },
	      '\\underbrace{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\underbrace{", "", "", "}_", "{", "", "", "}"); },
	      '\\color{(...)}0': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\color{", "", "", "}"); },
	      '\\color{(...)}{(...)}1': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\color{", "", "", "}", "{", "", "", "}"); },
	      '\\color(...){(...)}2': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\color", "\\", "", /^(?=\{)/, "{", "", "", "}"); },
	      '\\ce{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, "\\ce{", "", "", "}"); },
	      'oxidation$': /^(?:[+-][IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,
	      'd-oxidation$': /^(?:[+-]?\s?[IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,  // 0 could be oxidation or charge
	      'roman numeral': /^[IVX]+/,
	      '1/2$': /^[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+(?:\$[a-z]\$|[a-z])?$/,
	      'amount': function (input) {
	        var match;
	        // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing
	        match = input.match(/^(?:(?:(?:\([+\-]?[0-9]+\/[0-9]+\)|[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+|[+\-]?[0-9]+[.,][0-9]+|[+\-]?\.[0-9]+|[+\-]?[0-9]+)(?:[a-z](?=\s*[A-Z]))?)|[+\-]?[a-z](?=\s*[A-Z])|\+(?!\s))/);
	        if (match) {
	          return { match_: match[0], remainder: input.substr(match[0].length) };
	        }
	        var a = mhchemParser.patterns.findObserveGroups(input, "", "$", "$", "");
	        if (a) {  // e.g. $2n-1$, $-$
	          match = a.match_.match(/^\$(?:\(?[+\-]?(?:[0-9]*[a-z]?[+\-])?[0-9]*[a-z](?:[+\-][0-9]*[a-z]?)?\)?|\+|-)\$$/);
	          if (match) {
	            return { match_: match[0], remainder: input.substr(match[0].length) };
	          }
	        }
	        return null;
	      },
	      'amount2': function (input) { return this['amount'](input); },
	      '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,
	      'formula$': function (input) {
	        if (input.match(/^\([a-z]+\)$/)) { return null; }  // state of aggregation = no formula
	        var match = input.match(/^(?:[a-z]|(?:[0-9\ \+\-\,\.\(\)]+[a-z])+[0-9\ \+\-\,\.\(\)]*|(?:[a-z][0-9\ \+\-\,\.\(\)]+)+[a-z]?)$/);
	        if (match) {
	          return { match_: match[0], remainder: input.substr(match[0].length) };
	        }
	        return null;
	      },
	      'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,
	      '/': /^\s*(\/)\s*/,
	      '//': /^\s*(\/\/)\s*/,
	      '*': /^\s*[*.]\s*/
	    },
	    findObserveGroups: function (input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {
	      /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */
	      var _match = function (input, pattern) {
	        if (typeof pattern === "string") {
	          if (input.indexOf(pattern) !== 0) { return null; }
	          return pattern;
	        } else {
	          var match = input.match(pattern);
	          if (!match) { return null; }
	          return match[0];
	        }
	      };
	      /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */
	      var _findObserveGroups = function (input, i, endChars) {
	        var braces = 0;
	        while (i < input.length) {
	          var a = input.charAt(i);
	          var match = _match(input.substr(i), endChars);
	          if (match !== null  &&  braces === 0) {
	            return { endMatchBegin: i, endMatchEnd: i + match.length };
	          } else if (a === "{") {
	            braces++;
	          } else if (a === "}") {
	            if (braces === 0) {
	              throw ["ExtraCloseMissingOpen", "Extra close brace or missing open brace"];
	            } else {
	              braces--;
	            }
	          }
	          i++;
	        }
	        if (braces > 0) {
	          return null;
	        }
	        return null;
	      };
	      var match = _match(input, begExcl);
	      if (match === null) { return null; }
	      input = input.substr(match.length);
	      match = _match(input, begIncl);
	      if (match === null) { return null; }
	      var e = _findObserveGroups(input, match.length, endIncl || endExcl);
	      if (e === null) { return null; }
	      var match1 = input.substring(0, (endIncl ? e.endMatchEnd : e.endMatchBegin));
	      if (!(beg2Excl || beg2Incl)) {
	        return {
	          match_: match1,
	          remainder: input.substr(e.endMatchEnd)
	        };
	      } else {
	        var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);
	        if (group2 === null) { return null; }
	        /** @type {string[]} */
	        var matchRet = [match1, group2.match_];
	        return {
	          match_: (combine ? matchRet.join("") : matchRet),
	          remainder: group2.remainder
	        };
	      }
	    },

	    //
	    // Matching function
	    // e.g. match("a", input) will look for the regexp called "a" and see if it matches
	    // returns null or {match_:"a", remainder:"bc"}
	    //
	    match_: function (m, input) {
	      var pattern = mhchemParser.patterns.patterns[m];
	      if (pattern === undefined) {
	        throw ["MhchemBugP", "mhchem bug P. Please report. (" + m + ")"];  // Trying to use non-existing pattern
	      } else if (typeof pattern === "function") {
	        return mhchemParser.patterns.patterns[m](input);  // cannot use cached var pattern here, because some pattern functions need this===mhchemParser
	      } else {  // RegExp
	        var match = input.match(pattern);
	        if (match) {
	          var mm;
	          if (match[2]) {
	            mm = [ match[1], match[2] ];
	          } else if (match[1]) {
	            mm = match[1];
	          } else {
	            mm = match[0];
	          }
	          return { match_: mm, remainder: input.substr(match[0].length) };
	        }
	        return null;
	      }
	    }
	  },

	  //
	  // Generic state machine actions
	  //
	  actions: {
	    'a=': function (buffer, m) { buffer.a = (buffer.a || "") + m; },
	    'b=': function (buffer, m) { buffer.b = (buffer.b || "") + m; },
	    'p=': function (buffer, m) { buffer.p = (buffer.p || "") + m; },
	    'o=': function (buffer, m) { buffer.o = (buffer.o || "") + m; },
	    'q=': function (buffer, m) { buffer.q = (buffer.q || "") + m; },
	    'd=': function (buffer, m) { buffer.d = (buffer.d || "") + m; },
	    'rm=': function (buffer, m) { buffer.rm = (buffer.rm || "") + m; },
	    'text=': function (buffer, m) { buffer.text_ = (buffer.text_ || "") + m; },
	    'insert': function (buffer, m, a) { return { type_: a }; },
	    'insert+p1': function (buffer, m, a) { return { type_: a, p1: m }; },
	    'insert+p1+p2': function (buffer, m, a) { return { type_: a, p1: m[0], p2: m[1] }; },
	    'copy': function (buffer, m) { return m; },
	    'rm': function (buffer, m) { return { type_: 'rm', p1: m || ""}; },
	    'text': function (buffer, m) { return mhchemParser.go(m, 'text'); },
	    '{text}': function (buffer, m) {
	      var ret = [ "{" ];
	      mhchemParser.concatArray(ret, mhchemParser.go(m, 'text'));
	      ret.push("}");
	      return ret;
	    },
	    'tex-math': function (buffer, m) { return mhchemParser.go(m, 'tex-math'); },
	    'tex-math tight': function (buffer, m) { return mhchemParser.go(m, 'tex-math tight'); },
	    'bond': function (buffer, m, k) { return { type_: 'bond', kind_: k || m }; },
	    'color0-output': function (buffer, m) { return { type_: 'color0', color: m[0] }; },
	    'ce': function (buffer, m) { return mhchemParser.go(m); },
	    '1/2': function (buffer, m) {
	      /** @type {ParserOutput[]} */
	      var ret = [];
	      if (m.match(/^[+\-]/)) {
	        ret.push(m.substr(0, 1));
	        m = m.substr(1);
	      }
	      var n = m.match(/^([0-9]+|\$[a-z]\$|[a-z])\/([0-9]+)(\$[a-z]\$|[a-z])?$/);
	      n[1] = n[1].replace(/\$/g, "");
	      ret.push({ type_: 'frac', p1: n[1], p2: n[2] });
	      if (n[3]) {
	        n[3] = n[3].replace(/\$/g, "");
	        ret.push({ type_: 'tex-math', p1: n[3] });
	      }
	      return ret;
	    },
	    '9,9': function (buffer, m) { return mhchemParser.go(m, '9,9'); }
	  },
	  //
	  // createTransitions
	  // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }
	  // with expansion of 'a|b' to 'a' and 'b' (at 2 places)
	  //
	  createTransitions: function (o) {
	    var pattern, state;
	    /** @type {string[]} */
	    var stateArray;
	    var i;
	    //
	    // 1. Collect all states
	    //
	    /** @type {Transitions} */
	    var transitions = {};
	    for (pattern in o) {
	      for (state in o[pattern]) {
	        stateArray = state.split("|");
	        o[pattern][state].stateArray = stateArray;
	        for (i=0; i<stateArray.length; i++) {
	          transitions[stateArray[i]] = [];
	        }
	      }
	    }
	    //
	    // 2. Fill states
	    //
	    for (pattern in o) {
	      for (state in o[pattern]) {
	        stateArray = o[pattern][state].stateArray || [];
	        for (i=0; i<stateArray.length; i++) {
	          //
	          // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]
	          // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)
	          //
	          /** @type {any} */
	          var p = o[pattern][state];
	          if (p.action_) {
	            p.action_ = [].concat(p.action_);
	            for (var k=0; k<p.action_.length; k++) {
	              if (typeof p.action_[k] === "string") {
	                p.action_[k] = { type_: p.action_[k] };
	              }
	            }
	          } else {
	            p.action_ = [];
	          }
	          //
	          // 2.b Multi-insert
	          //
	          var patternArray = pattern.split("|");
	          for (var j=0; j<patternArray.length; j++) {
	            if (stateArray[i] === '*') {  // insert into all
	              for (var t in transitions) {
	                transitions[t].push({ pattern: patternArray[j], task: p });
	              }
	            } else {
	              transitions[stateArray[i]].push({ pattern: patternArray[j], task: p });
	            }
	          }
	        }
	      }
	    }
	    return transitions;
	  },
	  stateMachines: {}
	};

	//
	// Definition of state machines
	//
	mhchemParser.stateMachines = {
	  //
	  // \ce state machines
	  //
	  //#region ce
	  'ce': {  // main parser
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': { action_: 'output' } },
	      'else':  {
	        '0|1|2': { action_: 'beginsWithBond=false', revisit: true, toContinue: true } },
	      'oxidation$': {
	        '0': { action_: 'oxidation-output' } },
	      'CMT': {
	        'r': { action_: 'rdt=', nextState: 'rt' },
	        'rd': { action_: 'rqt=', nextState: 'rdt' } },
	      'arrowUpDown': {
	        '0|1|2|as': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '1' } },
	      'uprightEntities': {
	        '0|1|2': { action_: [ 'o=', 'output' ], nextState: '1' } },
	      'orbital': {
	        '0|1|2|3': { action_: 'o=', nextState: 'o' } },
	      '->': {
	        '0|1|2|3': { action_: 'r=', nextState: 'r' },
	        'a|as': { action_: [ 'output', 'r=' ], nextState: 'r' },
	        '*': { action_: [ 'output', 'r=' ], nextState: 'r' } },
	      '+': {
	        'o': { action_: 'd= kv',  nextState: 'd' },
	        'd|D': { action_: 'd=', nextState: 'd' },
	        'q': { action_: 'd=',  nextState: 'qd' },
	        'qd|qD': { action_: 'd=', nextState: 'qd' },
	        'dq': { action_: [ 'output', 'd=' ], nextState: 'd' },
	        '3': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '0' } },
	      'amount': {
	        '0|2': { action_: 'a=', nextState: 'a' } },
	      'pm-operator': {
	        '0|1|2|a|as': { action_: [ 'sb=false', 'output', { type_: 'operator', option: '\\pm' } ], nextState: '0' } },
	      'operator': {
	        '0|1|2|a|as': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '0' } },
	      '-$': {
	        'o|q': { action_: [ 'charge or bond', 'output' ],  nextState: 'qd' },
	        'd': { action_: 'd=', nextState: 'd' },
	        'D': { action_: [ 'output', { type_: 'bond', option: "-" } ], nextState: '3' },
	        'q': { action_: 'd=',  nextState: 'qd' },
	        'qd': { action_: 'd=', nextState: 'qd' },
	        'qD|dq': { action_: [ 'output', { type_: 'bond', option: "-" } ], nextState: '3' } },
	      '-9': {
	        '3|o': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '3' } },
	      '- orbital overlap': {
	        'o': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' },
	        'd': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' } },
	      '-': {
	        '0|1|2': { action_: [ { type_: 'output', option: 1 }, 'beginsWithBond=true', { type_: 'bond', option: "-" } ], nextState: '3' },
	        '3': { action_: { type_: 'bond', option: "-" } },
	        'a': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' },
	        'as': { action_: [ { type_: 'output', option: 2 }, { type_: 'bond', option: "-" } ], nextState: '3' },
	        'b': { action_: 'b=' },
	        'o': { action_: { type_: '- after o/d', option: false }, nextState: '2' },
	        'q': { action_: { type_: '- after o/d', option: false }, nextState: '2' },
	        'd|qd|dq': { action_: { type_: '- after o/d', option: true }, nextState: '2' },
	        'D|qD|p': { action_: [ 'output', { type_: 'bond', option: "-" } ], nextState: '3' } },
	      'amount2': {
	        '1|3': { action_: 'a=', nextState: 'a' } },
	      'letters': {
	        '0|1|2|3|a|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },
	        'q|dq': { action_: ['output', 'o='], nextState: 'o' },
	        'd|D|qd|qD': { action_: 'o after d', nextState: 'o' } },
	      'digits': {
	        'o': { action_: 'q=', nextState: 'q' },
	        'd|D': { action_: 'q=', nextState: 'dq' },
	        'q': { action_: [ 'output', 'o=' ], nextState: 'o' },
	        'a': { action_: 'o=', nextState: 'o' } },
	      'space A': {
	        'b|p|bp': {} },
	      'space': {
	        'a': { nextState: 'as' },
	        '0': { action_: 'sb=false' },
	        '1|2': { action_: 'sb=true' },
	        'r|rt|rd|rdt|rdq': { action_: 'output', nextState: '0' },
	        '*': { action_: [ 'output', 'sb=true' ], nextState: '1'} },
	      '1st-level escape': {
	        '1|2': { action_: [ 'output', { type_: 'insert+p1', option: '1st-level escape' } ] },
	        '*': { action_: [ 'output', { type_: 'insert+p1', option: '1st-level escape' } ], nextState: '0' } },
	      '[(...)]': {
	        'r|rt': { action_: 'rd=', nextState: 'rd' },
	        'rd|rdt': { action_: 'rq=', nextState: 'rdq' } },
	      '...': {
	        'o|d|D|dq|qd|qD': { action_: [ 'output', { type_: 'bond', option: "..." } ], nextState: '3' },
	        '*': { action_: [ { type_: 'output', option: 1 }, { type_: 'insert', option: 'ellipsis' } ], nextState: '1' } },
	      '. |* ': {
	        '*': { action_: [ 'output', { type_: 'insert', option: 'addition compound' } ], nextState: '1' } },
	      'state of aggregation $': {
	        '*': { action_: [ 'output', 'state of aggregation' ], nextState: '1' } },
	      '{[(': {
	        'a|as|o': { action_: [ 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' },
	        '0|1|2|3': { action_: [ 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' },
	        '*': { action_: [ 'output', 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' } },
	      ')]}': {
	        '0|1|2|3|b|p|bp|o': { action_: [ 'o=', 'parenthesisLevel--' ], nextState: 'o' },
	        'a|as|d|D|q|qd|qD|dq': { action_: [ 'output', 'o=', 'parenthesisLevel--' ], nextState: 'o' } },
	      ', ': {
	        '*': { action_: [ 'output', 'comma' ], nextState: '0' } },
	      '^_': {  // ^ and _ without a sensible argument
	        '*': { } },
	      '^{(...)}|^($...$)': {
	        '0|1|2|as': { action_: 'b=', nextState: 'b' },
	        'p': { action_: 'b=', nextState: 'bp' },
	        '3|o': { action_: 'd= kv', nextState: 'D' },
	        'q': { action_: 'd=', nextState: 'qD' },
	        'd|D|qd|qD|dq': { action_: [ 'output', 'd=' ], nextState: 'D' } },
	      '^a|^\\x{}{}|^\\x{}|^\\x|\'': {
	        '0|1|2|as': { action_: 'b=', nextState: 'b' },
	        'p': { action_: 'b=', nextState: 'bp' },
	        '3|o': { action_: 'd= kv', nextState: 'd' },
	        'q': { action_: 'd=', nextState: 'qd' },
	        'd|qd|D|qD': { action_: 'd=' },
	        'dq': { action_: [ 'output', 'd=' ], nextState: 'd' } },
	      '_{(state of aggregation)}$': {
	        'd|D|q|qd|qD|dq': { action_: [ 'output', 'q=' ], nextState: 'q' } },
	      '_{(...)}|_($...$)|_9|_\\x{}{}|_\\x{}|_\\x': {
	        '0|1|2|as': { action_: 'p=', nextState: 'p' },
	        'b': { action_: 'p=', nextState: 'bp' },
	        '3|o': { action_: 'q=', nextState: 'q' },
	        'd|D': { action_: 'q=', nextState: 'dq' },
	        'q|qd|qD|dq': { action_: [ 'output', 'q=' ], nextState: 'q' } },
	      '=<>': {
	        '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': { action_: [ { type_: 'output', option: 2 }, 'bond' ], nextState: '3' } },
	      '#': {
	        '0|1|2|3|a|as|o': { action_: [ { type_: 'output', option: 2 }, { type_: 'bond', option: "#" } ], nextState: '3' } },
	      '{}': {
	        '*': { action_: { type_: 'output', option: 1 },  nextState: '1' } },
	      '{...}': {
	        '0|1|2|3|a|as|b|p|bp': { action_: 'o=', nextState: 'o' },
	        'o|d|D|q|qd|qD|dq': { action_: [ 'output', 'o=' ], nextState: 'o' } },
	      '$...$': {
	        'a': { action_: 'a=' },  // 2$n$
	        '0|1|2|3|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },  // not 'amount'
	        'as|o': { action_: 'o=' },
	        'q|d|D|qd|qD|dq': { action_: [ 'output', 'o=' ], nextState: 'o' } },
	      '\\bond{(...)}': {
	        '*': { action_: [ { type_: 'output', option: 2 }, 'bond' ], nextState: "3" } },
	      '\\frac{(...)}': {
	        '*': { action_: [ { type_: 'output', option: 1 }, 'frac-output' ], nextState: '3' } },
	      '\\overset{(...)}': {
	        '*': { action_: [ { type_: 'output', option: 2 }, 'overset-output' ], nextState: '3' } },
	      '\\underset{(...)}': {
	        '*': { action_: [ { type_: 'output', option: 2 }, 'underset-output' ], nextState: '3' } },
	      '\\underbrace{(...)}': {
	        '*': { action_: [ { type_: 'output', option: 2 }, 'underbrace-output' ], nextState: '3' } },
	      '\\color{(...)}{(...)}1|\\color(...){(...)}2': {
	        '*': { action_: [ { type_: 'output', option: 2 }, 'color-output' ], nextState: '3' } },
	      '\\color{(...)}0': {
	        '*': { action_: [ { type_: 'output', option: 2 }, 'color0-output' ] } },
	      '\\ce{(...)}': {
	        '*': { action_: [ { type_: 'output', option: 2 }, 'ce' ], nextState: '3' } },
	      '\\,': {
	        '*': { action_: [ { type_: 'output', option: 1 }, 'copy' ], nextState: '1' } },
	      '\\x{}{}|\\x{}|\\x': {
	        '0|1|2|3|a|as|b|p|bp|o|c0': { action_: [ 'o=', 'output' ], nextState: '3' },
	        '*': { action_: ['output', 'o=', 'output' ], nextState: '3' } },
	      'others': {
	        '*': { action_: [ { type_: 'output', option: 1 }, 'copy' ], nextState: '3' } },
	      'else2': {
	        'a': { action_: 'a to o', nextState: 'o', revisit: true },
	        'as': { action_: [ 'output', 'sb=true' ], nextState: '1', revisit: true },
	        'r|rt|rd|rdt|rdq': { action_: [ 'output' ], nextState: '0', revisit: true },
	        '*': { action_: [ 'output', 'copy' ], nextState: '3' } }
	    }),
	    actions: {
	      'o after d': function (buffer, m) {
	        var ret;
	        if ((buffer.d || "").match(/^[0-9]+$/)) {
	          var tmp = buffer.d;
	          buffer.d = undefined;
	          ret = this['output'](buffer);
	          buffer.b = tmp;
	        } else {
	          ret = this['output'](buffer);
	        }
	        mhchemParser.actions['o='](buffer, m);
	        return ret;
	      },
	      'd= kv': function (buffer, m) {
	        buffer.d = m;
	        buffer.dType = 'kv';
	      },
	      'charge or bond': function (buffer, m) {
	        if (buffer['beginsWithBond']) {
	          /** @type {ParserOutput[]} */
	          var ret = [];
	          mhchemParser.concatArray(ret, this['output'](buffer));
	          mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, "-"));
	          return ret;
	        } else {
	          buffer.d = m;
	        }
	      },
	      '- after o/d': function (buffer, m, isAfterD) {
	        var c1 = mhchemParser.patterns.match_('orbital', buffer.o || "");
	        var c2 = mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || "");
	        var c3 = mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || "");
	        var c4 = mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || "");
	        var hyphenFollows =  m==="-" && ( c1 && c1.remainder===""  ||  c2  ||  c3  ||  c4 );
	        if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {
	          buffer.o = '$' + buffer.o + '$';
	        }
	        /** @type {ParserOutput[]} */
	        var ret = [];
	        if (hyphenFollows) {
	          mhchemParser.concatArray(ret, this['output'](buffer));
	          ret.push({ type_: 'hyphen' });
	        } else {
	          c1 = mhchemParser.patterns.match_('digits', buffer.d || "");
	          if (isAfterD && c1 && c1.remainder==='') {
	            mhchemParser.concatArray(ret, mhchemParser.actions['d='](buffer, m));
	            mhchemParser.concatArray(ret, this['output'](buffer));
	          } else {
	            mhchemParser.concatArray(ret, this['output'](buffer));
	            mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, "-"));
	          }
	        }
	        return ret;
	      },
	      'a to o': function (buffer) {
	        buffer.o = buffer.a;
	        buffer.a = undefined;
	      },
	      'sb=true': function (buffer) { buffer.sb = true; },
	      'sb=false': function (buffer) { buffer.sb = false; },
	      'beginsWithBond=true': function (buffer) { buffer['beginsWithBond'] = true; },
	      'beginsWithBond=false': function (buffer) { buffer['beginsWithBond'] = false; },
	      'parenthesisLevel++': function (buffer) { buffer['parenthesisLevel']++; },
	      'parenthesisLevel--': function (buffer) { buffer['parenthesisLevel']--; },
	      'state of aggregation': function (buffer, m) {
	        return { type_: 'state of aggregation', p1: mhchemParser.go(m, 'o') };
	      },
	      'comma': function (buffer, m) {
	        var a = m.replace(/\s*$/, '');
	        var withSpace = (a !== m);
	        if (withSpace  &&  buffer['parenthesisLevel'] === 0) {
	          return { type_: 'comma enumeration L', p1: a };
	        } else {
	          return { type_: 'comma enumeration M', p1: a };
	        }
	      },
	      'output': function (buffer, m, entityFollows) {
	        // entityFollows:
	        //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)
	        //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)
	        //   2 = 1 + the entity can have an amount, so output a\, instead of converting it to o (can only apply to states a|as)
	        /** @type {ParserOutput | ParserOutput[]} */
	        var ret;
	        if (!buffer.r) {
	          ret = [];
	          if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {
	            //ret = [];
	          } else {
	            if (buffer.sb) {
	              ret.push({ type_: 'entitySkip' });
	            }
	            if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows!==2) {
	              buffer.o = buffer.a;
	              buffer.a = undefined;
	            } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {
	              buffer.o = buffer.a;
	              buffer.d = buffer.b;
	              buffer.q = buffer.p;
	              buffer.a = buffer.b = buffer.p = undefined;
	            } else {
	              if (buffer.o && buffer.dType==='kv' && mhchemParser.patterns.match_('d-oxidation$', buffer.d || "")) {
	                buffer.dType = 'oxidation';
	              } else if (buffer.o && buffer.dType==='kv' && !buffer.q) {
	                buffer.dType = undefined;
	              }
	            }
	            ret.push({
	              type_: 'chemfive',
	              a: mhchemParser.go(buffer.a, 'a'),
	              b: mhchemParser.go(buffer.b, 'bd'),
	              p: mhchemParser.go(buffer.p, 'pq'),
	              o: mhchemParser.go(buffer.o, 'o'),
	              q: mhchemParser.go(buffer.q, 'pq'),
	              d: mhchemParser.go(buffer.d, (buffer.dType === 'oxidation' ? 'oxidation' : 'bd')),
	              dType: buffer.dType
	            });
	          }
	        } else {  // r
	          /** @type {ParserOutput[]} */
	          var rd;
	          if (buffer.rdt === 'M') {
	            rd = mhchemParser.go(buffer.rd, 'tex-math');
	          } else if (buffer.rdt === 'T') {
	            rd = [ { type_: 'text', p1: buffer.rd || "" } ];
	          } else {
	            rd = mhchemParser.go(buffer.rd);
	          }
	          /** @type {ParserOutput[]} */
	          var rq;
	          if (buffer.rqt === 'M') {
	            rq = mhchemParser.go(buffer.rq, 'tex-math');
	          } else if (buffer.rqt === 'T') {
	            rq = [ { type_: 'text', p1: buffer.rq || ""} ];
	          } else {
	            rq = mhchemParser.go(buffer.rq);
	          }
	          ret = {
	            type_: 'arrow',
	            r: buffer.r,
	            rd: rd,
	            rq: rq
	          };
	        }
	        for (var p in buffer) {
	          if (p !== 'parenthesisLevel'  &&  p !== 'beginsWithBond') {
	            delete buffer[p];
	          }
	        }
	        return ret;
	      },
	      'oxidation-output': function (buffer, m) {
	        var ret = [ "{" ];
	        mhchemParser.concatArray(ret, mhchemParser.go(m, 'oxidation'));
	        ret.push("}");
	        return ret;
	      },
	      'frac-output': function (buffer, m) {
	        return { type_: 'frac-ce', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };
	      },
	      'overset-output': function (buffer, m) {
	        return { type_: 'overset', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };
	      },
	      'underset-output': function (buffer, m) {
	        return { type_: 'underset', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };
	      },
	      'underbrace-output': function (buffer, m) {
	        return { type_: 'underbrace', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };
	      },
	      'color-output': function (buffer, m) {
	        return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1]) };
	      },
	      'r=': function (buffer, m) { buffer.r = m; },
	      'rdt=': function (buffer, m) { buffer.rdt = m; },
	      'rd=': function (buffer, m) { buffer.rd = m; },
	      'rqt=': function (buffer, m) { buffer.rqt = m; },
	      'rq=': function (buffer, m) { buffer.rq = m; },
	      'operator': function (buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; }
	    }
	  },
	  'a': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': {} },
	      '1/2$': {
	        '0': { action_: '1/2' } },
	      'else': {
	        '0': { nextState: '1', revisit: true } },
	      '$(...)$': {
	        '*': { action_: 'tex-math tight', nextState: '1' } },
	      ',': {
	        '*': { action_: { type_: 'insert', option: 'commaDecimal' } } },
	      'else2': {
	        '*': { action_: 'copy' } }
	    }),
	    actions: {}
	  },
	  'o': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': {} },
	      '1/2$': {
	        '0': { action_: '1/2' } },
	      'else': {
	        '0': { nextState: '1', revisit: true } },
	      'letters': {
	        '*': { action_: 'rm' } },
	      '\\ca': {
	        '*': { action_: { type_: 'insert', option: 'circa' } } },
	      '\\x{}{}|\\x{}|\\x': {
	        '*': { action_: 'copy' } },
	      '${(...)}$|$(...)$': {
	        '*': { action_: 'tex-math' } },
	      '{(...)}': {
	        '*': { action_: '{text}' } },
	      'else2': {
	        '*': { action_: 'copy' } }
	    }),
	    actions: {}
	  },
	  'text': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': { action_: 'output' } },
	      '{...}': {
	        '*': { action_: 'text=' } },
	      '${(...)}$|$(...)$': {
	        '*': { action_: 'tex-math' } },
	      '\\greek': {
	        '*': { action_: [ 'output', 'rm' ] } },
	      '\\,|\\x{}{}|\\x{}|\\x': {
	        '*': { action_: [ 'output', 'copy' ] } },
	      'else': {
	        '*': { action_: 'text=' } }
	    }),
	    actions: {
	      'output': function (buffer) {
	        if (buffer.text_) {
	          /** @type {ParserOutput} */
	          var ret = { type_: 'text', p1: buffer.text_ };
	          for (var p in buffer) { delete buffer[p]; }
	          return ret;
	        }
	      }
	    }
	  },
	  'pq': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': {} },
	      'state of aggregation $': {
	        '*': { action_: 'state of aggregation' } },
	      'i$': {
	        '0': { nextState: '!f', revisit: true } },
	      '(KV letters),': {
	        '0': { action_: 'rm', nextState: '0' } },
	      'formula$': {
	        '0': { nextState: 'f', revisit: true } },
	      '1/2$': {
	        '0': { action_: '1/2' } },
	      'else': {
	        '0': { nextState: '!f', revisit: true } },
	      '${(...)}$|$(...)$': {
	        '*': { action_: 'tex-math' } },
	      '{(...)}': {
	        '*': { action_: 'text' } },
	      'a-z': {
	        'f': { action_: 'tex-math' } },
	      'letters': {
	        '*': { action_: 'rm' } },
	      '-9.,9': {
	        '*': { action_: '9,9'  } },
	      ',': {
	        '*': { action_: { type_: 'insert+p1', option: 'comma enumeration S' } } },
	      '\\color{(...)}{(...)}1|\\color(...){(...)}2': {
	        '*': { action_: 'color-output' } },
	      '\\color{(...)}0': {
	        '*': { action_: 'color0-output' } },
	      '\\ce{(...)}': {
	        '*': { action_: 'ce' } },
	      '\\,|\\x{}{}|\\x{}|\\x': {
	        '*': { action_: 'copy' } },
	      'else2': {
	        '*': { action_: 'copy' } }
	    }),
	    actions: {
	      'state of aggregation': function (buffer, m) {
	        return { type_: 'state of aggregation subscript', p1: mhchemParser.go(m, 'o') };
	      },
	      'color-output': function (buffer, m) {
	        return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1], 'pq') };
	      }
	    }
	  },
	  'bd': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': {} },
	      'x$': {
	        '0': { nextState: '!f', revisit: true } },
	      'formula$': {
	        '0': { nextState: 'f', revisit: true } },
	      'else': {
	        '0': { nextState: '!f', revisit: true } },
	      '-9.,9 no missing 0': {
	        '*': { action_: '9,9' } },
	      '.': {
	        '*': { action_: { type_: 'insert', option: 'electron dot' } } },
	      'a-z': {
	        'f': { action_: 'tex-math' } },
	      'x': {
	        '*': { action_: { type_: 'insert', option: 'KV x' } } },
	      'letters': {
	        '*': { action_: 'rm' } },
	      '\'': {
	        '*': { action_: { type_: 'insert', option: 'prime' } } },
	      '${(...)}$|$(...)$': {
	        '*': { action_: 'tex-math' } },
	      '{(...)}': {
	        '*': { action_: 'text' } },
	      '\\color{(...)}{(...)}1|\\color(...){(...)}2': {
	        '*': { action_: 'color-output' } },
	      '\\color{(...)}0': {
	        '*': { action_: 'color0-output' } },
	      '\\ce{(...)}': {
	        '*': { action_: 'ce' } },
	      '\\,|\\x{}{}|\\x{}|\\x': {
	        '*': { action_: 'copy' } },
	      'else2': {
	        '*': { action_: 'copy' } }
	    }),
	    actions: {
	      'color-output': function (buffer, m) {
	        return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1], 'bd') };
	      }
	    }
	  },
	  'oxidation': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': {} },
	      'roman numeral': {
	        '*': { action_: 'roman-numeral' } },
	      '${(...)}$|$(...)$': {
	        '*': { action_: 'tex-math' } },
	      'else': {
	        '*': { action_: 'copy' } }
	    }),
	    actions: {
	      'roman-numeral': function (buffer, m) { return { type_: 'roman numeral', p1: m || "" }; }
	    }
	  },
	  'tex-math': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': { action_: 'output' } },
	      '\\ce{(...)}': {
	        '*': { action_: [ 'output', 'ce' ] } },
	      '{...}|\\,|\\x{}{}|\\x{}|\\x': {
	        '*': { action_: 'o=' } },
	      'else': {
	        '*': { action_: 'o=' } }
	    }),
	    actions: {
	      'output': function (buffer) {
	        if (buffer.o) {
	          /** @type {ParserOutput} */
	          var ret = { type_: 'tex-math', p1: buffer.o };
	          for (var p in buffer) { delete buffer[p]; }
	          return ret;
	        }
	      }
	    }
	  },
	  'tex-math tight': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': { action_: 'output' } },
	      '\\ce{(...)}': {
	        '*': { action_: [ 'output', 'ce' ] } },
	      '{...}|\\,|\\x{}{}|\\x{}|\\x': {
	        '*': { action_: 'o=' } },
	      '-|+': {
	        '*': { action_: 'tight operator' } },
	      'else': {
	        '*': { action_: 'o=' } }
	    }),
	    actions: {
	      'tight operator': function (buffer, m) { buffer.o = (buffer.o || "") + "{"+m+"}"; },
	      'output': function (buffer) {
	        if (buffer.o) {
	          /** @type {ParserOutput} */
	          var ret = { type_: 'tex-math', p1: buffer.o };
	          for (var p in buffer) { delete buffer[p]; }
	          return ret;
	        }
	      }
	    }
	  },
	  '9,9': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': {} },
	      ',': {
	        '*': { action_: 'comma' } },
	      'else': {
	        '*': { action_: 'copy' } }
	    }),
	    actions: {
	      'comma': function () { return { type_: 'commaDecimal' }; }
	    }
	  },
	  //#endregion
	  //
	  // \pu state machines
	  //
	  //#region pu
	  'pu': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': { action_: 'output' } },
	      'space$': {
	        '*': { action_: [ 'output', 'space' ] } },
	      '{[(|)]}': {
	        '0|a': { action_: 'copy' } },
	      '(-)(9)^(-9)': {
	        '0': { action_: 'number^', nextState: 'a' } },
	      '(-)(9.,9)(e)(99)': {
	        '0': { action_: 'enumber', nextState: 'a' } },
	      'space': {
	        '0|a': {} },
	      'pm-operator': {
	        '0|a': { action_: { type_: 'operator', option: '\\pm' }, nextState: '0' } },
	      'operator': {
	        '0|a': { action_: 'copy', nextState: '0' } },
	      '//': {
	        'd': { action_: 'o=', nextState: '/' } },
	      '/': {
	        'd': { action_: 'o=', nextState: '/' } },
	      '{...}|else': {
	        '0|d': { action_: 'd=', nextState: 'd' },
	        'a': { action_: [ 'space', 'd=' ], nextState: 'd' },
	        '/|q': { action_: 'q=', nextState: 'q' } }
	    }),
	    actions: {
	      'enumber': function (buffer, m) {
	        /** @type {ParserOutput[]} */
	        var ret = [];
	        if (m[0] === "+-"  ||  m[0] === "+/-") {
	          ret.push("\\pm ");
	        } else if (m[0]) {
	          ret.push(m[0]);
	        }
	        if (m[1]) {
	          mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));
	          if (m[2]) {
	            if (m[2].match(/[,.]/)) {
	              mhchemParser.concatArray(ret, mhchemParser.go(m[2], 'pu-9,9'));
	            } else {
	              ret.push(m[2]);
	            }
	          }
	          m[3] = m[4] || m[3];
	          if (m[3]) {
	            m[3] = m[3].trim();
	            if (m[3] === "e"  ||  m[3].substr(0, 1) === "*") {
	              ret.push({ type_: 'cdot' });
	            } else {
	              ret.push({ type_: 'times' });
	            }
	          }
	        }
	        if (m[3]) {
	          ret.push("10^{"+m[5]+"}");
	        }
	        return ret;
	      },
	      'number^': function (buffer, m) {
	        /** @type {ParserOutput[]} */
	        var ret = [];
	        if (m[0] === "+-"  ||  m[0] === "+/-") {
	          ret.push("\\pm ");
	        } else if (m[0]) {
	          ret.push(m[0]);
	        }
	        mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));
	        ret.push("^{"+m[2]+"}");
	        return ret;
	      },
	      'operator': function (buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; },
	      'space': function () { return { type_: 'pu-space-1' }; },
	      'output': function (buffer) {
	        /** @type {ParserOutput | ParserOutput[]} */
	        var ret;
	        var md = mhchemParser.patterns.match_('{(...)}', buffer.d || "");
	        if (md  &&  md.remainder === '') { buffer.d = md.match_; }
	        var mq = mhchemParser.patterns.match_('{(...)}', buffer.q || "");
	        if (mq  &&  mq.remainder === '') { buffer.q = mq.match_; }
	        if (buffer.d) {
	          buffer.d = buffer.d.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C");
	          buffer.d = buffer.d.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
	        }
	        if (buffer.q) {  // fraction
	          buffer.q = buffer.q.replace(/\u00B0C|\^oC|\^{o}C/g, "{}^{\\circ}C");
	          buffer.q = buffer.q.replace(/\u00B0F|\^oF|\^{o}F/g, "{}^{\\circ}F");
	          var b5 = {
	            d: mhchemParser.go(buffer.d, 'pu'),
	            q: mhchemParser.go(buffer.q, 'pu')
	          };
	          if (buffer.o === '//') {
	            ret = { type_: 'pu-frac', p1: b5.d, p2: b5.q };
	          } else {
	            ret = b5.d;
	            if (b5.d.length > 1  ||  b5.q.length > 1) {
	              ret.push({ type_: ' / ' });
	            } else {
	              ret.push({ type_: '/' });
	            }
	            mhchemParser.concatArray(ret, b5.q);
	          }
	        } else {  // no fraction
	          ret = mhchemParser.go(buffer.d, 'pu-2');
	        }
	        for (var p in buffer) { delete buffer[p]; }
	        return ret;
	      }
	    }
	  },
	  'pu-2': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '*': { action_: 'output' } },
	      '*': {
	        '*': { action_: [ 'output', 'cdot' ], nextState: '0' } },
	      '\\x': {
	        '*': { action_: 'rm=' } },
	      'space': {
	        '*': { action_: [ 'output', 'space' ], nextState: '0' } },
	      '^{(...)}|^(-1)': {
	        '1': { action_: '^(-1)' } },
	      '-9.,9': {
	        '0': { action_: 'rm=', nextState: '0' },
	        '1': { action_: '^(-1)', nextState: '0' } },
	      '{...}|else': {
	        '*': { action_: 'rm=', nextState: '1' } }
	    }),
	    actions: {
	      'cdot': function () { return { type_: 'tight cdot' }; },
	      '^(-1)': function (buffer, m) { buffer.rm += "^{"+m+"}"; },
	      'space': function () { return { type_: 'pu-space-2' }; },
	      'output': function (buffer) {
	        /** @type {ParserOutput | ParserOutput[]} */
	        var ret = [];
	        if (buffer.rm) {
	          var mrm = mhchemParser.patterns.match_('{(...)}', buffer.rm || "");
	          if (mrm  &&  mrm.remainder === '') {
	            ret = mhchemParser.go(mrm.match_, 'pu');
	          } else {
	            ret = { type_: 'rm', p1: buffer.rm };
	          }
	        }
	        for (var p in buffer) { delete buffer[p]; }
	        return ret;
	      }
	    }
	  },
	  'pu-9,9': {
	    transitions: mhchemParser.createTransitions({
	      'empty': {
	        '0': { action_: 'output-0' },
	        'o': { action_: 'output-o' } },
	      ',': {
	        '0': { action_: [ 'output-0', 'comma' ], nextState: 'o' } },
	      '.': {
	        '0': { action_: [ 'output-0', 'copy' ], nextState: 'o' } },
	      'else': {
	        '*': { action_: 'text=' } }
	    }),
	    actions: {
	      'comma': function () { return { type_: 'commaDecimal' }; },
	      'output-0': function (buffer) {
	        /** @type {ParserOutput[]} */
	        var ret = [];
	        buffer.text_ = buffer.text_ || "";
	        if (buffer.text_.length > 4) {
	          var a = buffer.text_.length % 3;
	          if (a === 0) { a = 3; }
	          for (var i=buffer.text_.length-3; i>0; i-=3) {
	            ret.push(buffer.text_.substr(i, 3));
	            ret.push({ type_: '1000 separator' });
	          }
	          ret.push(buffer.text_.substr(0, a));
	          ret.reverse();
	        } else {
	          ret.push(buffer.text_);
	        }
	        for (var p in buffer) { delete buffer[p]; }
	        return ret;
	      },
	      'output-o': function (buffer) {
	        /** @type {ParserOutput[]} */
	        var ret = [];
	        buffer.text_ = buffer.text_ || "";
	        if (buffer.text_.length > 4) {
	          var a = buffer.text_.length - 3;
	          for (var i=0; i<a; i+=3) {
	            ret.push(buffer.text_.substr(i, 3));
	            ret.push({ type_: '1000 separator' });
	          }
	          ret.push(buffer.text_.substr(i));
	        } else {
	          ret.push(buffer.text_);
	        }
	        for (var p in buffer) { delete buffer[p]; }
	        return ret;
	      }
	    }
	  }
	  //#endregion
	};

	//
	// texify: Take MhchemParser output and convert it to TeX
	//
	/** @type {Texify} */
	var texify = {
	  go: function (input, isInner) {  // (recursive, max 4 levels)
	    if (!input) { return ""; }
	    var res = "";
	    var cee = false;
	    for (var i=0; i < input.length; i++) {
	      var inputi = input[i];
	      if (typeof inputi === "string") {
	        res += inputi;
	      } else {
	        res += texify._go2(inputi);
	        if (inputi.type_ === '1st-level escape') { cee = true; }
	      }
	    }
	    if (!isInner && !cee && res) {
	      res = "{" + res + "}";
	    }
	    return res;
	  },
	  _goInner: function (input) {
	    if (!input) { return input; }
	    return texify.go(input, true);
	  },
	  _go2: function (buf) {
	    /** @type {undefined | string} */
	    var res;
	    switch (buf.type_) {
	    case 'chemfive':
	      res = "";
	      var b5 = {
	        a: texify._goInner(buf.a),
	        b: texify._goInner(buf.b),
	        p: texify._goInner(buf.p),
	        o: texify._goInner(buf.o),
	        q: texify._goInner(buf.q),
	        d: texify._goInner(buf.d)
	      };
	      //
	      // a
	      //
	      if (b5.a) {
	        if (b5.a.match(/^[+\-]/)) { b5.a = "{"+b5.a+"}"; }
	        res += b5.a + "\\,";
	      }
	      //
	      // b and p
	      //
	      if (b5.b || b5.p) {
	        res += "{\\vphantom{X}}";
	        res += "^{\\hphantom{"+(b5.b||"")+"}}_{\\hphantom{"+(b5.p||"")+"}}";
	        res += "{\\vphantom{X}}";
	        res += "^{\\smash[t]{\\vphantom{2}}\\llap{"+(b5.b||"")+"}}";
	        res += "_{\\vphantom{2}\\llap{\\smash[t]{"+(b5.p||"")+"}}}";
	      }
	      //
	      // o
	      //
	      if (b5.o) {
	        if (b5.o.match(/^[+\-]/)) { b5.o = "{"+b5.o+"}"; }
	        res += b5.o;
	      }
	      //
	      // q and d
	      //
	      if (buf.dType === 'kv') {
	        if (b5.d || b5.q) {
	          res += "{\\vphantom{X}}";
	        }
	        if (b5.d) {
	          res += "^{"+b5.d+"}";
	        }
	        if (b5.q) {
	          res += "_{\\smash[t]{"+b5.q+"}}";
	        }
	      } else if (buf.dType === 'oxidation') {
	        if (b5.d) {
	          res += "{\\vphantom{X}}";
	          res += "^{"+b5.d+"}";
	        }
	        if (b5.q) {
	          res += "{\\vphantom{X}}";
	          res += "_{\\smash[t]{"+b5.q+"}}";
	        }
	      } else {
	        if (b5.q) {
	          res += "{\\vphantom{X}}";
	          res += "_{\\smash[t]{"+b5.q+"}}";
	        }
	        if (b5.d) {
	          res += "{\\vphantom{X}}";
	          res += "^{"+b5.d+"}";
	        }
	      }
	      break;
	    case 'rm':
	      res = "\\mathrm{"+buf.p1+"}";
	      break;
	    case 'text':
	      if (buf.p1.match(/[\^_]/)) {
	        buf.p1 = buf.p1.replace(" ", "~").replace("-", "\\text{-}");
	        res = "\\mathrm{"+buf.p1+"}";
	      } else {
	        res = "\\text{"+buf.p1+"}";
	      }
	      break;
	    case 'roman numeral':
	      res = "\\mathrm{"+buf.p1+"}";
	      break;
	    case 'state of aggregation':
	      res = "\\mskip2mu "+texify._goInner(buf.p1);
	      break;
	    case 'state of aggregation subscript':
	      res = "\\mskip1mu "+texify._goInner(buf.p1);
	      break;
	    case 'bond':
	      res = texify._getBond(buf.kind_);
	      if (!res) {
	        throw ["MhchemErrorBond", "mhchem Error. Unknown bond type (" + buf.kind_ + ")"];
	      }
	      break;
	    case 'frac':
	      var c = "\\frac{" + buf.p1 + "}{" + buf.p2 + "}";
	      res = "\\mathchoice{\\textstyle"+c+"}{"+c+"}{"+c+"}{"+c+"}";
	      break;
	    case 'pu-frac':
	      var d = "\\frac{" + texify._goInner(buf.p1) + "}{" + texify._goInner(buf.p2) + "}";
	      res = "\\mathchoice{\\textstyle"+d+"}{"+d+"}{"+d+"}{"+d+"}";
	      break;
	    case 'tex-math':
	      res = buf.p1 + " ";
	      break;
	    case 'frac-ce':
	      res = "\\frac{" + texify._goInner(buf.p1) + "}{" + texify._goInner(buf.p2) + "}";
	      break;
	    case 'overset':
	      res = "\\overset{" + texify._goInner(buf.p1) + "}{" + texify._goInner(buf.p2) + "}";
	      break;
	    case 'underset':
	      res = "\\underset{" + texify._goInner(buf.p1) + "}{" + texify._goInner(buf.p2) + "}";
	      break;
	    case 'underbrace':
	      res =  "\\underbrace{" + texify._goInner(buf.p1) + "}_{" + texify._goInner(buf.p2) + "}";
	      break;
	    case 'color':
	      res = "{\\color{" + buf.color1 + "}{" + texify._goInner(buf.color2) + "}}";
	      break;
	    case 'color0':
	      res = "\\color{" + buf.color + "}";
	      break;
	    case 'arrow':
	      var b6 = {
	        rd: texify._goInner(buf.rd),
	        rq: texify._goInner(buf.rq)
	      };
	      var arrow = texify._getArrow(buf.r);
	      if (b6.rd || b6.rq) {
	        if (buf.r === "<=>"  ||  buf.r === "<=>>"  ||  buf.r === "<<=>"  ||  buf.r === "<-->") {
	          // arrows that cannot stretch correctly yet, https://github.com/mathjax/MathJax/issues/1491
	          arrow = "\\long"+arrow;
	          if (b6.rd) { arrow = "\\overset{"+b6.rd+"}{"+arrow+"}"; }
	          if (b6.rq) { arrow = "\\underset{\\lower7mu{"+b6.rq+"}}{"+arrow+"}"; }
	          arrow = " {}\\mathrel{"+arrow+"}{} ";
	        } else {
	          if (b6.rq) { arrow += "[{"+b6.rq+"}]"; }
	          arrow += "{"+b6.rd+"}";
	          arrow = " {}\\mathrel{\\x"+arrow+"}{} ";
	        }
	      } else {
	        arrow = " {}\\mathrel{\\long"+arrow+"}{} ";
	      }
	      res = arrow;
	      break;
	    case 'operator':
	      res = texify._getOperator(buf.kind_);
	      break;
	    case '1st-level escape':
	      res = buf.p1+" ";  // &, \\\\, \\hlin
	      break;
	    case 'space':
	      res = " ";
	      break;
	    case 'entitySkip':
	      res = "~";
	      break;
	    case 'pu-space-1':
	      res = "~";
	      break;
	    case 'pu-space-2':
	      res = "\\mkern3mu ";
	      break;
	    case '1000 separator':
	      res = "\\mkern2mu ";
	      break;
	    case 'commaDecimal':
	      res = "{,}";
	      break;
	    case 'comma enumeration L':
	      res = "{"+buf.p1+"}\\mkern6mu ";
	      break;
	    case 'comma enumeration M':
	      res = "{"+buf.p1+"}\\mkern3mu ";
	      break;
	    case 'comma enumeration S':
	      res = "{"+buf.p1+"}\\mkern1mu ";
	      break;
	    case 'hyphen':
	      res = "\\text{-}";
	      break;
	    case 'addition compound':
	      res = "\\,{\\cdot}\\,";
	      break;
	    case 'electron dot':
	      res = "\\mkern1mu \\bullet\\mkern1mu ";
	      break;
	    case 'KV x':
	      res = "{\\times}";
	      break;
	    case 'prime':
	      res = "\\prime ";
	      break;
	    case 'cdot':
	      res = "\\cdot ";
	      break;
	    case 'tight cdot':
	      res = "\\mkern1mu{\\cdot}\\mkern1mu ";
	      break;
	    case 'times':
	      res = "\\times ";
	      break;
	    case 'circa':
	      res = "{\\sim}";
	      break;
	    case '^':
	      res = "uparrow";
	      break;
	    case 'v':
	      res = "downarrow";
	      break;
	    case 'ellipsis':
	      res = "\\ldots ";
	      break;
	    case '/':
	      res = "/";
	      break;
	    case ' / ':
	      res = "\\,/\\,";
	      break;
	    default:
	      assertNever(buf);
	      throw ["MhchemBugT", "mhchem bug T. Please report."];  // Missing texify rule or unknown MhchemParser output
	    }
	    assertString(res);
	    return res;
	  },
	  _getArrow: function (a) {
	    switch (a) {
	    case "->": return "rightarrow";
	    case "\u2192": return "rightarrow";
	    case "\u27F6": return "rightarrow";
	    case "<-": return "leftarrow";
	    case "<->": return "leftrightarrow";
	    case "<-->": return "leftrightarrows";
	    case "<=>": return "rightleftharpoons";
	    case "\u21CC": return "rightleftharpoons";
	    case "<=>>": return "Rightleftharpoons";
	    case "<<=>": return "Leftrightharpoons";
	    default:
	      assertNever(a);
	      throw ["MhchemBugT", "mhchem bug T. Please report."];
	    }
	  },
	  _getBond: function (a) {
	    switch (a) {
	    case "-": return "{-}";
	    case "1": return "{-}";
	    case "=": return "{=}";
	    case "2": return "{=}";
	    case "#": return "{\\equiv}";
	    case "3": return "{\\equiv}";
	    case "~": return "{\\tripledash}";
	    case "~-": return "{\\rlap{\\lower.1em{-}}\\raise.1em{\\tripledash}}";
	    case "~=": return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{\\tripledash}}-}";
	    case "~--": return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{\\tripledash}}-}";
	    case "-~-": return "{\\rlap{\\lower.2em{-}}\\rlap{\\raise.2em{-}}\\tripledash}";
	    case "...": return "{{\\cdot}{\\cdot}{\\cdot}}";
	    case "....": return "{{\\cdot}{\\cdot}{\\cdot}{\\cdot}}";
	    case "->": return "{\\rightarrow}";
	    case "<-": return "{\\leftarrow}";
	    case "<": return "{<}";
	    case ">": return "{>}";
	    default:
	      assertNever(a);
	      throw ["MhchemBugT", "mhchem bug T. Please report."];
	    }
	  },
	  _getOperator: function (a) {
	    switch (a) {
	    case "+": return " {}+{} ";
	    case "-": return " {}-{} ";
	    case "=": return " {}={} ";
	    case "<": return " {}<{} ";
	    case ">": return " {}>{} ";
	    case "<<": return " {}\\ll{} ";
	    case ">>": return " {}\\gg{} ";
	    case "\\pm": return " {}\\pm{} ";
	    case "\\approx": return " {}\\approx{} ";
	    case "$\\approx$": return " {}\\approx{} ";
	    case "v": return " \\downarrow{} ";
	    case "(v)": return " \\downarrow{} ";
	    case "^": return " \\uparrow{} ";
	    case "(^)": return " \\uparrow{} ";
	    default:
	      assertNever(a);
	      throw ["MhchemBugT", "mhchem bug T. Please report."];
	    }
	  }
	};

	//
	// Helpers for code anaylsis
	// Will show type error at calling position
	//
	/** @param {number} a */
	function assertNever(a) {}
	/** @param {string} a */
	function assertString(a) {}

	exports.mhchemParser = mhchemParser;
	exports.texify = texify;
	exports.assertNever = assertNever;
	exports.assertString = assertString;


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	function noErrors(factory, message, id, expr) {
	    var mtext = factory.create('token', 'mtext', {}, expr.replace(/\n/g, ' '));
	    var error = factory.create('node', 'merror', [mtext], { 'data-mjx-error': message });
	    return error;
	}
	;
	exports.NoErrorsConfiguration = Configuration_js_1.Configuration.create('noerrors', { nodes: { 'error': noErrors } });
	//# sourceMappingURL=NoErrorsConfiguration.js.map

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	function noUndefined(parser, name) {
	    var textNode = parser.create('text', '\\' + name);
	    parser.Push(parser.create('node', 'mtext', [], { mathcolor: 'red' }, textNode));
	}
	;
	exports.NoUndefinedConfiguration = Configuration_js_1.Configuration.create('noundefined', { fallback: { macro: noUndefined } });
	//# sourceMappingURL=NoUndefinedConfiguration.js.map

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var _a;
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var PhysicsItems_js_1 = __webpack_require__(413);
	__webpack_require__(414);
	exports.PhysicsConfiguration = Configuration_js_1.Configuration.create('physics', {
	    handler: {
	        macro: [
	            'Physics-automatic-bracing-macros',
	            'Physics-vector-macros',
	            'Physics-vector-chars',
	            'Physics-derivative-macros',
	            'Physics-expressions-macros',
	            'Physics-quick-quad-macros',
	            'Physics-bra-ket-macros',
	            'Physics-matrix-macros'
	        ],
	        character: ['Physics-characters'],
	        environment: ['Physics-aux-envs']
	    },
	    items: (_a = {},
	        _a[PhysicsItems_js_1.AutoOpen.prototype.kind] = PhysicsItems_js_1.AutoOpen,
	        _a)
	});
	//# sourceMappingURL=PhysicsConfiguration.js.map

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var StackItem_js_1 = __webpack_require__(182);
	var ParseUtil_js_1 = __webpack_require__(174);
	var TexParser_js_1 = __webpack_require__(173);
	var AutoOpen = (function (_super) {
	    __extends(AutoOpen, _super);
	    function AutoOpen() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(AutoOpen.prototype, "kind", {
	        get: function () {
	            return 'auto open';
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(AutoOpen.prototype, "isOpen", {
	        get: function () {
	            return true;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    AutoOpen.prototype.toMml = function () {
	        var parser = this.factory.configuration.parser;
	        var right = this.getProperty('right');
	        if (this.getProperty('smash')) {
	            var mml_1 = _super.prototype.toMml.call(this);
	            var smash = parser.create('node', 'mpadded', [mml_1], { height: 0, depth: 0 });
	            this.Clear();
	            this.Push(parser.create('node', 'TeXAtom', [smash]));
	        }
	        if (right) {
	            this.Push(new TexParser_js_1.default(right, parser.stack.env, parser.configuration).mml());
	        }
	        var mml = _super.prototype.toMml.call(this);
	        return ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'), this.getProperty('big'));
	    };
	    AutoOpen.prototype.checkItem = function (item) {
	        var close = item.getProperty('autoclose');
	        if (close && close === this.getProperty('close')) {
	            if (this.getProperty('ignore')) {
	                this.Clear();
	                return [[], true];
	            }
	            return [[this.toMml()], true];
	        }
	        return _super.prototype.checkItem.call(this, item);
	    };
	    return AutoOpen;
	}(StackItem_js_1.BaseItem));
	exports.AutoOpen = AutoOpen;
	//# sourceMappingURL=PhysicsItems.js.map

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var SymbolMap_js_1 = __webpack_require__(190);
	var PhysicsMethods_js_1 = __webpack_require__(415);
	var TexConstants_js_1 = __webpack_require__(189);
	var ParseMethods_js_1 = __webpack_require__(188);
	var MmlNode_js_1 = __webpack_require__(167);
	new SymbolMap_js_1.CommandMap('Physics-automatic-bracing-macros', {
	    'quantity': 'Quantity',
	    'qty': 'Quantity',
	    'pqty': ['Quantity', '(', ')', true],
	    'bqty': ['Quantity', '[', ']', true],
	    'vqty': ['Quantity', '|', '|', true],
	    'Bqty': ['Quantity', '{', '}', true],
	    'absolutevalue': ['Quantity', '|', '|', true],
	    'abs': ['Quantity', '|', '|', true],
	    'norm': ['Quantity', '\\|', '\\|', true],
	    'evaluated': 'Eval',
	    'eval': 'Eval',
	    'order': ['Quantity', '(', ')', true, 'O',
	        TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],
	    'commutator': 'Commutator',
	    'comm': 'Commutator',
	    'anticommutator': ['Commutator', '\\{', '\\}'],
	    'acomm': ['Commutator', '\\{', '\\}'],
	    'poissonbracket': ['Commutator', '\\{', '\\}'],
	    'pb': ['Commutator', '\\{', '\\}']
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.CharacterMap('Physics-vector-chars', ParseMethods_js_1.default.mathchar0mi, {
	    dotproduct: ['\u22C5', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }],
	    vdot: ['\u22C5', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }],
	    crossproduct: '\u00D7',
	    cross: '\u00D7',
	    cp: '\u00D7',
	    gradientnabla: ['\u2207', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }],
	    real: ['\u211C', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],
	    imaginary: ['\u2111', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }]
	});
	new SymbolMap_js_1.CommandMap('Physics-vector-macros', {
	    'vectorbold': 'VectorBold',
	    'vb': 'VectorBold',
	    'vectorarrow': ['StarMacro', 1, '\\vec{\\vb', '{#1}}'],
	    'va': ['StarMacro', 1, '\\vec{\\vb', '{#1}}'],
	    'vectorunit': ['StarMacro', 1, '\\hat{\\vb', '{#1}}'],
	    'vu': ['StarMacro', 1, '\\hat{\\vb', '{#1}}'],
	    'gradient': ['OperatorApplication', '\\gradientnabla', '(', '['],
	    'grad': ['OperatorApplication', '\\gradientnabla', '(', '['],
	    'divergence': ['VectorOperator', '\\gradientnabla\\vdot', '(', '['],
	    'div': ['VectorOperator', '\\gradientnabla\\vdot', '(', '['],
	    'curl': ['VectorOperator',
	        '\\gradientnabla\\crossproduct', '(', '['],
	    'laplacian': ['OperatorApplication', '\\nabla^2', '(', '['],
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.CommandMap('Physics-expressions-macros', {
	    'sin': 'Expression',
	    'sinh': 'Expression',
	    'arcsin': 'Expression',
	    'asin': 'Expression',
	    'cos': 'Expression',
	    'cosh': 'Expression',
	    'arccos': 'Expression',
	    'acos': 'Expression',
	    'tan': 'Expression',
	    'tanh': 'Expression',
	    'arctan': 'Expression',
	    'atan': 'Expression',
	    'csc': 'Expression',
	    'csch': 'Expression',
	    'arccsc': 'Expression',
	    'acsc': 'Expression',
	    'sec': 'Expression',
	    'sech': 'Expression',
	    'arcsec': 'Expression',
	    'asec': 'Expression',
	    'cot': 'Expression',
	    'coth': 'Expression',
	    'arccot': 'Expression',
	    'acot': 'Expression',
	    'exp': ['Expression', false],
	    'log': 'Expression',
	    'ln': 'Expression',
	    'det': ['Expression', false],
	    'Pr': ['Expression', false],
	    'tr': ['Expression', false],
	    'trace': ['Expression', false, 'tr'],
	    'Tr': ['Expression', false],
	    'Trace': ['Expression', false, 'Tr'],
	    'rank': 'NamedFn',
	    'erf': ['Expression', false],
	    'Res': ['OperatorApplication', '{\\rm Res}', '(', '[', '{'],
	    'principalvalue': ['OperatorApplication', '{\\cal P}'],
	    'pv': ['OperatorApplication', '{\\cal P}'],
	    'PV': ['OperatorApplication', '{\\rm P.V.}'],
	    'Re': ['OperatorApplication', '{\\rm Re}', '{'],
	    'Im': ['OperatorApplication', '{\\rm Im}', '{'],
	    'sine': ['NamedFn', 'sin'],
	    'hypsine': ['NamedFn', 'sinh'],
	    'arcsine': ['NamedFn', 'arcsin'],
	    'asine': ['NamedFn', 'asin'],
	    'cosine': ['NamedFn', 'cos'],
	    'hypcosine': ['NamedFn', 'cosh'],
	    'arccosine': ['NamedFn', 'arccos'],
	    'acosine': ['NamedFn', 'acos'],
	    'tangent': ['NamedFn', 'tan'],
	    'hyptangent': ['NamedFn', 'tanh'],
	    'arctangent': ['NamedFn', 'arctan'],
	    'atangent': ['NamedFn', 'atan'],
	    'cosecant': ['NamedFn', 'csc'],
	    'hypcosecant': ['NamedFn', 'csch'],
	    'arccosecant': ['NamedFn', 'arccsc'],
	    'acosecant': ['NamedFn', 'acsc'],
	    'secant': ['NamedFn', 'sec'],
	    'hypsecant': ['NamedFn', 'sech'],
	    'arcsecant': ['NamedFn', 'arcsec'],
	    'asecant': ['NamedFn', 'asec'],
	    'cotangent': ['NamedFn', 'cot'],
	    'hypcotangent': ['NamedFn', 'coth'],
	    'arccotangent': ['NamedFn', 'arccot'],
	    'acotangent': ['NamedFn', 'acot'],
	    'exponential': ['NamedFn', 'exp'],
	    'logarithm': ['NamedFn', 'log'],
	    'naturallogarithm': ['NamedFn', 'ln'],
	    'determinant': ['NamedFn', 'det'],
	    'Probability': ['NamedFn', 'Pr'],
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.CommandMap('Physics-quick-quad-macros', {
	    'qqtext': 'Qqtext',
	    'qq': 'Qqtext',
	    'qcomma': ['Macro', '\\qqtext*{,}'],
	    'qc': ['Macro', '\\qqtext*{,}'],
	    'qcc': ['Qqtext', 'c.c.'],
	    'qif': ['Qqtext', 'if'],
	    'qthen': ['Qqtext', 'then'],
	    'qelse': ['Qqtext', 'else'],
	    'qotherwise': ['Qqtext', 'otherwise'],
	    'qunless': ['Qqtext', 'unless'],
	    'qgiven': ['Qqtext', 'given'],
	    'qusing': ['Qqtext', 'using'],
	    'qassume': ['Qqtext', 'assume'],
	    'qsince,': ['Qqtext', 'since,'],
	    'qlet': ['Qqtext', 'let'],
	    'qfor': ['Qqtext', 'for'],
	    'qall': ['Qqtext', 'all'],
	    'qeven': ['Qqtext', 'even'],
	    'qodd': ['Qqtext', 'odd'],
	    'qinteger': ['Qqtext', 'integer'],
	    'qand': ['Qqtext', 'and'],
	    'qor': ['Qqtext', 'or'],
	    'qas': ['Qqtext', 'as'],
	    'qin': ['Qqtext', 'in'],
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.CommandMap('Physics-derivative-macros', {
	    'flatfrac': ['Macro', '\\left.#1\\middle/#2\\right.', 2],
	    'differential': ['Differential', '{\\rm d}'],
	    'dd': ['Differential', '{\\rm d}'],
	    'variation': ['Differential', '\\delta'],
	    'var': ['Differential', '\\delta'],
	    'derivative': ['Derivative', 2, '{\\rm d}'],
	    'dv': ['Derivative', 2, '{\\rm d}'],
	    'partialderivative': ['Derivative', 3, '\\partial'],
	    'pderivative': ['Derivative', 3, '\\partial'],
	    'pdv': ['Derivative', 3, '\\partial'],
	    'functionalderivative': ['Derivative', 2, '\\delta'],
	    'fderivative': ['Derivative', 2, '\\delta'],
	    'fdv': ['Derivative', 2, '\\delta'],
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.CommandMap('Physics-bra-ket-macros', {
	    'bra': 'Bra',
	    'ket': 'Ket',
	    'innerproduct': 'BraKet',
	    'braket': 'BraKet',
	    'outerproduct': 'KetBra',
	    'dyad': 'KetBra',
	    'ketbra': 'KetBra',
	    'op': 'KetBra',
	    'expectationvalue': 'Expectation',
	    'expval': 'Expectation',
	    'ev': 'Expectation',
	    'matrixelement': 'MatrixElement',
	    'matrixel': 'MatrixElement',
	    'mel': 'MatrixElement',
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.CommandMap('Physics-matrix-macros', {
	    'matrixquantity': 'MatrixQuantity',
	    'mqty': 'MatrixQuantity',
	    'pmqty': ['Macro', '\\mqty(#1)', 1],
	    'Pmqty': ['Macro', '\\mqty*(#1)', 1],
	    'bmqty': ['Macro', '\\mqty[#1]', 1],
	    'vmqty': ['Macro', '\\mqty|#1|', 1],
	    'smallmatrixquantity': ['MatrixQuantity', true],
	    'smqty': ['MatrixQuantity', true],
	    'spmqty': ['Macro', '\\smqty(#1)', 1],
	    'sPmqty': ['Macro', '\\smqty*(#1)', 1],
	    'sbmqty': ['Macro', '\\smqty[#1]', 1],
	    'svmqty': ['Macro', '\\smqty|#1|', 1],
	    'matrixdeterminant': ['Macro', '\\vmqty{#1}', 1],
	    'mdet': ['Macro', '\\vmqty{#1}', 1],
	    'smdet': ['Macro', '\\svmqty{#1}', 1],
	    'identitymatrix': 'IdentityMatrix',
	    'imat': 'IdentityMatrix',
	    'xmatrix': 'XMatrix',
	    'xmat': 'XMatrix',
	    'zeromatrix': ['Macro', '\\xmat{0}{#1}{#2}', 2],
	    'zmat': ['Macro', '\\xmat{0}{#1}{#2}', 2],
	    'paulimatrix': 'PauliMatrix',
	    'pmat': 'PauliMatrix',
	    'diagonalmatrix': 'DiagonalMatrix',
	    'dmat': 'DiagonalMatrix',
	    'antidiagonalmatrix': ['DiagonalMatrix', true],
	    'admat': ['DiagonalMatrix', true]
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.EnvironmentMap('Physics-aux-envs', ParseMethods_js_1.default.environment, {
	    smallmatrix: ['Array', null, null, null, 'c', '0.333em', '.2em', 'S', 1]
	}, PhysicsMethods_js_1.default);
	new SymbolMap_js_1.MacroMap('Physics-characters', {
	    '|': ['AutoClose', MmlNode_js_1.TEXCLASS.ORD],
	    ')': 'AutoClose',
	    ']': 'AutoClose'
	}, PhysicsMethods_js_1.default);
	//# sourceMappingURL=PhysicsMappings.js.map

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __read = (this && this.__read) || function (o, n) {
	    var m = typeof Symbol === "function" && o[Symbol.iterator];
	    if (!m) return o;
	    var i = m.call(o), r, ar = [], e;
	    try {
	        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
	    }
	    catch (error) { e = { error: error }; }
	    finally {
	        try {
	            if (r && !r.done && (m = i["return"])) m.call(i);
	        }
	        finally { if (e) throw e.error; }
	    }
	    return ar;
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	var BaseMethods_js_1 = __webpack_require__(195);
	var TexParser_js_1 = __webpack_require__(173);
	var TexError_js_1 = __webpack_require__(175);
	var MmlNode_js_1 = __webpack_require__(167);
	var ParseUtil_js_1 = __webpack_require__(174);
	var NodeUtil_js_1 = __webpack_require__(170);
	var NodeFactory_js_1 = __webpack_require__(185);
	var PhysicsMethods = {};
	var pairs = {
	    '(': ')',
	    '[': ']',
	    '{': '}',
	    '|': '|',
	};
	var biggs = /^(b|B)i(g{1,2})$/;
	PhysicsMethods.Quantity = function (parser, name, open, close, arg, named, variant) {
	    if (open === void 0) { open = '('; }
	    if (close === void 0) { close = ')'; }
	    if (arg === void 0) { arg = false; }
	    if (named === void 0) { named = ''; }
	    if (variant === void 0) { variant = ''; }
	    var star = arg ? parser.GetStar() : false;
	    var next = parser.GetNext();
	    var position = parser.i;
	    var big = null;
	    if (next === '\\') {
	        parser.i++;
	        big = parser.GetCS();
	        if (!big.match(biggs)) {
	            var empty = parser.create('node', 'mrow');
	            parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));
	            parser.i = position;
	            return;
	        }
	        next = parser.GetNext();
	    }
	    var right = pairs[next];
	    if (arg && next !== '{') {
	        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
	    }
	    if (!right) {
	        var empty = parser.create('node', 'mrow');
	        parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));
	        parser.i = position;
	        return;
	    }
	    if (named) {
	        var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, named);
	        if (variant) {
	            NodeUtil_js_1.default.setAttribute(mml, 'mathvariant', variant);
	        }
	        parser.Push(parser.itemFactory.create('fn', mml));
	    }
	    if (next === '{') {
	        var argument = parser.GetArgument(name);
	        next = arg ? open : '\\{';
	        right = arg ? close : '\\}';
	        argument = star ? next + ' ' + argument + ' ' + right :
	            (big ?
	                '\\' + big + 'l' + next + ' ' + argument + ' ' + '\\' + big + 'r' + right :
	                '\\left' + next + ' ' + argument + ' ' + '\\right' + right);
	        parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
	        return;
	    }
	    if (arg) {
	        next = open;
	        right = close;
	    }
	    parser.i++;
	    parser.Push(parser.itemFactory.create('auto open')
	        .setProperties({ open: next, close: right, big: big }));
	};
	PhysicsMethods.Eval = function (parser, name) {
	    var star = parser.GetStar();
	    var next = parser.GetNext();
	    if (next === '{') {
	        var arg = parser.GetArgument(name);
	        var replace = '\\left. ' +
	            (star ? '\\smash{' + arg + '}' : arg) +
	            ' ' + '\\vphantom{\\int}\\right|';
	        parser.string = parser.string.slice(0, parser.i) + replace +
	            parser.string.slice(parser.i);
	        return;
	    }
	    if (next === '(' || next === '[') {
	        parser.i++;
	        parser.Push(parser.itemFactory.create('auto open')
	            .setProperties({ open: next, close: '|',
	            smash: star, right: '\\vphantom{\\int}' }));
	        return;
	    }
	    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
	};
	PhysicsMethods.Commutator = function (parser, name, open, close) {
	    if (open === void 0) { open = '['; }
	    if (close === void 0) { close = ']'; }
	    var star = parser.GetStar();
	    var next = parser.GetNext();
	    var big = null;
	    if (next === '\\') {
	        parser.i++;
	        big = parser.GetCS();
	        if (!big.match(biggs)) {
	            throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
	        }
	        next = parser.GetNext();
	    }
	    if (next !== '{') {
	        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);
	    }
	    var arg1 = parser.GetArgument(name);
	    var arg2 = parser.GetArgument(name);
	    var argument = arg1 + ',' + arg2;
	    argument = star ? open + ' ' + argument + ' ' + close :
	        (big ?
	            '\\' + big + 'l' + open + ' ' + argument + ' ' + '\\' + big + 'r' + close :
	            '\\left' + open + ' ' + argument + ' ' + '\\right' + close);
	    parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());
	};
	var latinCap = [0x41, 0x5A];
	var latinSmall = [0x61, 0x7A];
	var greekCap = [0x391, 0x3A9];
	var greekSmall = [0x3B1, 0x3C9];
	var digits = [0x30, 0x39];
	function inRange(value, range) {
	    return (value >= range[0] && value <= range[1]);
	}
	;
	function createVectorToken(factory, kind, def, text) {
	    var parser = factory.configuration.parser;
	    var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);
	    var code = text.charCodeAt(0);
	    if (text.length === 1 && !parser.stack.env.font &&
	        parser.stack.env.vectorFont &&
	        (inRange(code, latinCap) || inRange(code, latinSmall) ||
	            inRange(code, greekCap) || inRange(code, digits) ||
	            (inRange(code, greekSmall) && parser.stack.env.vectorStar) ||
	            NodeUtil_js_1.default.getAttribute(token, 'accent'))) {
	        NodeUtil_js_1.default.setAttribute(token, 'mathvariant', parser.stack.env.vectorFont);
	    }
	    return token;
	}
	PhysicsMethods.VectorBold = function (parser, name) {
	    var star = parser.GetStar();
	    var arg = parser.GetArgument(name);
	    var oldToken = parser.configuration.nodeFactory.get('token');
	    var oldFont = parser.stack.env.font;
	    delete parser.stack.env.font;
	    parser.configuration.nodeFactory.set('token', createVectorToken);
	    parser.stack.env.vectorFont = star ? 'bold-italic' : 'bold';
	    parser.stack.env.vectorStar = star;
	    var node = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();
	    if (oldFont) {
	        parser.stack.env.font = oldFont;
	    }
	    delete parser.stack.env.vectorFont;
	    delete parser.stack.env.vectorStar;
	    parser.configuration.nodeFactory.set('token', oldToken);
	    parser.Push(node);
	};
	PhysicsMethods.StarMacro = function (parser, name, argcount) {
	    var parts = [];
	    for (var _i = 3; _i < arguments.length; _i++) {
	        parts[_i - 3] = arguments[_i];
	    }
	    var star = parser.GetStar();
	    var args = [];
	    if (argcount) {
	        for (var i = args.length; i < argcount; i++) {
	            args.push(parser.GetArgument(name));
	        }
	    }
	    var macro = parts.join(star ? '*' : '');
	    macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);
	    parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));
	    parser.i = 0;
	    if (++parser.macroCount > parser.configuration.options['maxMacros']) {
	        throw new TexError_js_1.default('MaxMacroSub1', 'MathJax maximum macro substitution count exceeded; ' +
	            'is there a recursive macro call?');
	    }
	};
	var vectorApplication = function (parser, kind, name, operator, fences) {
	    var op = new TexParser_js_1.default(operator, parser.stack.env, parser.configuration).mml();
	    parser.Push(parser.itemFactory.create(kind, op));
	    var left = parser.GetNext();
	    var right = pairs[left];
	    if (!right) {
	        return;
	    }
	    var lfence = '', rfence = '', arg = '';
	    var enlarge = fences.indexOf(left) !== -1;
	    if (left === '{') {
	        arg = parser.GetArgument(name);
	        lfence = enlarge ? '\\left\\{' : '';
	        rfence = enlarge ? '\\right\\}' : '';
	        var macro = lfence + ' ' + arg + ' ' + rfence;
	        parser.string = macro + parser.string.slice(parser.i);
	        parser.i = 0;
	        return;
	    }
	    if (!enlarge) {
	        return;
	    }
	    parser.i++;
	    parser.Push(parser.itemFactory.create('auto open')
	        .setProperties({ open: left, close: right }));
	};
	PhysicsMethods.OperatorApplication = function (parser, name, operator) {
	    var fences = [];
	    for (var _i = 3; _i < arguments.length; _i++) {
	        fences[_i - 3] = arguments[_i];
	    }
	    vectorApplication(parser, 'fn', name, operator, fences);
	};
	PhysicsMethods.VectorOperator = function (parser, name, operator) {
	    var fences = [];
	    for (var _i = 3; _i < arguments.length; _i++) {
	        fences[_i - 3] = arguments[_i];
	    }
	    vectorApplication(parser, 'mml', name, operator, fences);
	};
	PhysicsMethods.Expression = function (parser, name, opt, id) {
	    if (opt === void 0) { opt = true; }
	    if (id === void 0) { id = ''; }
	    id = id || name.slice(1);
	    var exp = opt ? parser.GetBrackets(name) : null;
	    var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, id);
	    if (exp) {
	        var sup = new TexParser_js_1.default(exp, parser.stack.env, parser.configuration).mml();
	        mml = parser.create('node', 'msup', [mml, sup]);
	    }
	    parser.Push(parser.itemFactory.create('fn', mml));
	    if (parser.GetNext() !== '(') {
	        return;
	    }
	    parser.i++;
	    parser.Push(parser.itemFactory.create('auto open')
	        .setProperties({ open: '(', close: ')' }));
	};
	PhysicsMethods.Qqtext = function (parser, name, text) {
	    var star = parser.GetStar();
	    var arg = text ? text : parser.GetArgument(name);
	    var replace = (star ? '' : '\\quad') + '\\text{' + arg + '}\\quad ';
	    parser.string = parser.string.slice(0, parser.i) + replace +
	        parser.string.slice(parser.i);
	};
	PhysicsMethods.Differential = function (parser, name, op) {
	    var optArg = parser.GetBrackets(name);
	    var power = optArg != null ? '^{' + optArg + '}' : ' ';
	    var parens = parser.GetNext() === '(';
	    var braces = parser.GetNext() === '{';
	    var macro = op + power;
	    if (!(parens || braces)) {
	        macro += parser.GetArgument(name, true) || '';
	        var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();
	        parser.Push(mml);
	        return;
	    }
	    if (braces) {
	        macro += parser.GetArgument(name);
	        var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();
	        parser.Push(parser.create('node', 'TeXAtom', [mml], { texClass: MmlNode_js_1.TEXCLASS.OP }));
	        return;
	    }
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	    parser.i++;
	    parser.Push(parser.itemFactory.create('auto open')
	        .setProperties({ open: '(', close: ')' }));
	};
	PhysicsMethods.Derivative = function (parser, name, argMax, op) {
	    var star = parser.GetStar();
	    var optArg = parser.GetBrackets(name);
	    var argCounter = 1;
	    var args = [];
	    args.push(parser.GetArgument(name));
	    while (parser.GetNext() === '{' && argCounter < argMax) {
	        args.push(parser.GetArgument(name));
	        argCounter++;
	    }
	    var ignore = false;
	    var power1 = ' ';
	    var power2 = ' ';
	    if (argMax > 2 && args.length > 2) {
	        power1 = '^{' + (args.length - 1) + '}';
	        ignore = true;
	    }
	    else if (optArg != null) {
	        if (argMax > 2 && args.length > 1) {
	            ignore = true;
	        }
	        power1 = '^{' + optArg + '}';
	        power2 = power1;
	    }
	    var frac = star ? '\\flatfrac' : '\\frac';
	    var first = args.length > 1 ? args[0] : '';
	    var second = args.length > 1 ? args[1] : args[0];
	    var rest = '';
	    for (var i = 2, arg = void 0; arg = args[i]; i++) {
	        rest += op + ' ' + arg;
	    }
	    var macro = frac + '{' + op + power1 + first + '}' +
	        '{' + op + ' ' + second + power2 + ' ' + rest + '}';
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	    if (parser.GetNext() === '(') {
	        parser.i++;
	        parser.Push(parser.itemFactory.create('auto open')
	            .setProperties({ open: '(', close: ')', ignore: ignore }));
	    }
	};
	PhysicsMethods.Bra = function (parser, name) {
	    var starBra = parser.GetStar();
	    var bra = parser.GetArgument(name);
	    var ket = '';
	    var hasKet = false;
	    var starKet = false;
	    if (parser.GetNext() === '\\') {
	        var saveI = parser.i;
	        parser.i++;
	        var cs = parser.GetCS();
	        var symbol = parser.lookup('macro', cs);
	        if (symbol && symbol.symbol === 'ket') {
	            hasKet = true;
	            saveI = parser.i;
	            starKet = parser.GetStar();
	            if (parser.GetNext() === '{') {
	                ket = parser.GetArgument(cs, true);
	            }
	            else {
	                parser.i = saveI;
	                starKet = false;
	            }
	        }
	        else {
	            parser.i = saveI;
	        }
	    }
	    var macro = '';
	    if (hasKet) {
	        macro = (starBra || starKet) ?
	            "\\langle{" + bra + "}\\vert{" + ket + "}\\rangle" :
	            "\\left\\langle{" + bra + "}\\middle\\vert{" + ket + "}\\right\\rangle";
	    }
	    else {
	        macro = (starBra || starKet) ?
	            "\\langle{" + bra + "}\\vert" : "\\left\\langle{" + bra + "}\\right\\vert{" + ket + "}";
	    }
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	};
	PhysicsMethods.Ket = function (parser, name) {
	    var star = parser.GetStar();
	    var ket = parser.GetArgument(name);
	    var macro = star ? "\\vert{" + ket + "}\\rangle" :
	        "\\left\\vert{" + ket + "}\\right\\rangle";
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	};
	PhysicsMethods.BraKet = function (parser, name) {
	    var star = parser.GetStar();
	    var bra = parser.GetArgument(name);
	    var ket = null;
	    if (parser.GetNext() === '{') {
	        ket = parser.GetArgument(name, true);
	    }
	    var macro = '';
	    if (ket == null) {
	        macro = star ?
	            "\\langle{" + bra + "}\\vert{" + bra + "}\\rangle" :
	            "\\left\\langle{" + bra + "}\\middle\\vert{" + bra + "}\\right\\rangle";
	    }
	    else {
	        macro = star ?
	            "\\langle{" + bra + "}\\vert{" + ket + "}\\rangle" :
	            "\\left\\langle{" + bra + "}\\middle\\vert{" + ket + "}\\right\\rangle";
	    }
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	};
	PhysicsMethods.KetBra = function (parser, name) {
	    var star = parser.GetStar();
	    var ket = parser.GetArgument(name);
	    var bra = null;
	    if (parser.GetNext() === '{') {
	        bra = parser.GetArgument(name, true);
	    }
	    var macro = '';
	    if (bra == null) {
	        macro = star ?
	            "\\vert{" + ket + "}\\rangle\\!\\langle{" + ket + "}\\vert" :
	            "\\left\\vert{" + ket + "}\\middle\\rangle\\!\\middle\\langle{" + ket + "}\\right\\vert";
	    }
	    else {
	        macro = star ?
	            "\\vert{" + ket + "}\\rangle\\!\\langle{" + bra + "}\\vert" :
	            "\\left\\vert{" + ket + "}\\middle\\rangle\\!\\middle\\langle{" + bra + "}\\right\\vert";
	    }
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	};
	function outputBraket(_a, star1, star2) {
	    var _b = __read(_a, 3), arg1 = _b[0], arg2 = _b[1], arg3 = _b[2];
	    return (star1 && star2) ?
	        "\\left\\langle{" + arg1 + "}\\middle\\vert{" + arg2 + "}\\middle\\vert{" + arg3 + "}\\right\\rangle" :
	        (star1 ? "\\langle{" + arg1 + "}\\vert{" + arg2 + "}\\vert{" + arg3 + "}\\rangle" :
	            "\\left\\langle{" + arg1 + "}\\right\\vert{" + arg2 + "}\\left\\vert{" + arg3 + "}\\right\\rangle");
	}
	;
	PhysicsMethods.Expectation = function (parser, name) {
	    var star1 = parser.GetStar();
	    var star2 = star1 && parser.GetStar();
	    var braket = parser.GetNext() === '{';
	    var arg1 = parser.GetArgument(name);
	    var arg2 = null;
	    if (parser.GetNext() === '{') {
	        arg2 = parser.GetArgument(name, true);
	    }
	    var macro = (arg1 && arg2) ?
	        outputBraket([arg2, arg1, arg2], star1, star2) :
	        (star1 ? "\\langle {" + arg1 + "} \\rangle" :
	            "\\left\\langle {" + arg1 + "} \\right\\rangle");
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	};
	PhysicsMethods.MatrixElement = function (parser, name) {
	    var star1 = parser.GetStar();
	    var star2 = star1 && parser.GetStar();
	    var braket = parser.GetNext() === '{';
	    var arg1 = parser.GetArgument(name);
	    var arg2 = parser.GetArgument(name);
	    var arg3 = parser.GetArgument(name);
	    var macro = outputBraket([arg1, arg2, arg3], star1, star2);
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	};
	PhysicsMethods.MatrixQuantity = function (parser, name, small) {
	    var star = parser.GetStar();
	    var next = parser.GetNext();
	    var array = small ? 'smallmatrix' : 'array';
	    var arg = '';
	    var open = '';
	    var close = '';
	    switch (next) {
	        case '{':
	            arg = parser.GetArgument(name);
	            break;
	        case '(':
	            parser.i++;
	            open = star ? '\\lgroup' : '(';
	            close = star ? '\\rgroup' : ')';
	            arg = parser.GetUpTo(name, ')');
	            break;
	        case '[':
	            parser.i++;
	            open = '[';
	            close = ']';
	            arg = parser.GetUpTo(name, ']');
	            break;
	        case '|':
	            parser.i++;
	            open = '|';
	            close = '|';
	            arg = parser.GetUpTo(name, '|');
	            break;
	        default:
	            open = '(';
	            close = ')';
	            break;
	    }
	    var macro = (open ? '\\left' : '') + open +
	        '\\begin{' + array + '}{} ' + arg + '\\end{' + array + '}' +
	        (open ? '\\right' : '') + close;
	    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());
	};
	PhysicsMethods.IdentityMatrix = function (parser, name) {
	    var arg = parser.GetArgument(name);
	    var size = parseInt(arg, 10);
	    if (isNaN(size)) {
	        throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
	    }
	    if (size <= 1) {
	        parser.string = '1' + parser.string.slice(parser.i);
	        parser.i = 0;
	        return;
	    }
	    var zeros = Array(size).fill('0');
	    var columns = [];
	    for (var i = 0; i < size; i++) {
	        var row = zeros.slice();
	        row[i] = '1';
	        columns.push(row.join(' & '));
	    }
	    parser.string = columns.join('\\\\ ') + parser.string.slice(parser.i);
	    parser.i = 0;
	};
	PhysicsMethods.XMatrix = function (parser, name) {
	    var star = parser.GetStar();
	    var arg1 = parser.GetArgument(name);
	    var arg2 = parser.GetArgument(name);
	    var arg3 = parser.GetArgument(name);
	    var n = parseInt(arg2, 10);
	    var m = parseInt(arg3, 10);
	    if (isNaN(n) || isNaN(m) || m.toString() !== arg3 || n.toString() !== arg2) {
	        throw new TexError_js_1.default('InvalidNumber', 'Invalid number');
	    }
	    n = n < 1 ? 1 : n;
	    m = m < 1 ? 1 : m;
	    if (!star) {
	        var row = Array(m).fill(arg1).join(' & ');
	        var matrix_1 = Array(n).fill(row).join('\\\\ ');
	        parser.string = matrix_1 + parser.string.slice(parser.i);
	        parser.i = 0;
	        return;
	    }
	    var matrix = '';
	    if (n === 1 && m === 1) {
	        matrix = arg1;
	    }
	    else if (n === 1) {
	        var row = [];
	        for (var i = 1; i <= m; i++) {
	            row.push(arg1 + "_{" + i + "}");
	        }
	        matrix = row.join(' & ');
	    }
	    else if (m === 1) {
	        var row = [];
	        for (var i = 1; i <= n; i++) {
	            row.push(arg1 + "_{" + i + "}");
	        }
	        matrix = row.join('\\\\ ');
	    }
	    else {
	        var rows = [];
	        for (var i = 1; i <= n; i++) {
	            var row = [];
	            for (var j = 1; j <= m; j++) {
	                row.push(arg1 + "_{{" + i + "}{" + j + "}}");
	            }
	            rows.push(row.join(' & '));
	        }
	        matrix = rows.join('\\\\ ');
	    }
	    parser.string = matrix + parser.string.slice(parser.i);
	    parser.i = 0;
	    return;
	};
	PhysicsMethods.PauliMatrix = function (parser, name) {
	    var arg = parser.GetArgument(name);
	    var matrix = arg.slice(1);
	    switch (arg[0]) {
	        case '0':
	            matrix += ' 1 & 0\\\\ 0 & 1';
	            break;
	        case '1':
	        case 'x':
	            matrix += ' 0 & 1\\\\ 1 & 0';
	            break;
	        case '2':
	        case 'y':
	            matrix += ' 0 & -i\\\\ i & 0';
	            break;
	        case '3':
	        case 'z':
	            matrix += ' 1 & 0\\\\ 0 & -1';
	            break;
	        default:
	    }
	    parser.string = matrix + parser.string.slice(parser.i);
	    parser.i = 0;
	};
	PhysicsMethods.DiagonalMatrix = function (parser, name, anti) {
	    if (parser.GetNext() !== '{') {
	        return;
	    }
	    ;
	    var startI = parser.i;
	    var arg = parser.GetArgument(name);
	    var endI = parser.i;
	    parser.i = startI + 1;
	    var elements = [];
	    var element = '';
	    var currentI = parser.i;
	    while (currentI < endI) {
	        try {
	            element = parser.GetUpTo(name, ',');
	        }
	        catch (e) {
	            parser.i = endI;
	            elements.push(parser.string.slice(currentI, endI - 1));
	            break;
	        }
	        if (parser.i >= endI) {
	            elements.push(parser.string.slice(currentI, endI));
	            break;
	        }
	        currentI = parser.i;
	        elements.push(element);
	    }
	    parser.string = makeDiagMatrix(elements, anti) + parser.string.slice(endI);
	    parser.i = 0;
	};
	function makeDiagMatrix(elements, anti) {
	    var length = elements.length;
	    var matrix = [];
	    for (var i = 0; i < length; i++) {
	        matrix.push(Array(anti ? length - i : i + 1).join('&') +
	            '\\mqty{' + elements[i] + '}');
	    }
	    return matrix.join('\\\\ ');
	}
	PhysicsMethods.AutoClose = function (parser, fence, texclass) {
	    var mo = parser.create('token', 'mo', { stretchy: false }, fence);
	    var item = parser.itemFactory.create('mml', mo).
	        setProperties({ autoclose: fence });
	    parser.Push(item);
	};
	PhysicsMethods.Macro = BaseMethods_js_1.default.Macro;
	PhysicsMethods.NamedFn = BaseMethods_js_1.default.NamedFn;
	PhysicsMethods.Array = BaseMethods_js_1.default.Array;
	exports.default = PhysicsMethods;
	//# sourceMappingURL=PhysicsMethods.js.map

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = function (d, b) {
	        extendStatics = Object.setPrototypeOf ||
	            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	        return extendStatics(d, b);
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var Tags_js_1 = __webpack_require__(186);
	var tagID = 0;
	function tagFormatConfig(config, jax) {
	    var tags = jax.parseOptions.options.tags;
	    if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {
	        Tags_js_1.TagsFactory.add(tags, config.tags[tags]);
	    }
	    var TagClass = Tags_js_1.TagsFactory.create(jax.parseOptions.options.tags).constructor;
	    var TagFormat = (function (_super) {
	        __extends(TagFormat, _super);
	        function TagFormat() {
	            return _super !== null && _super.apply(this, arguments) || this;
	        }
	        TagFormat.prototype.formatNumber = function (n) {
	            return jax.parseOptions.options.tagFormat.number(n);
	        };
	        TagFormat.prototype.formatTag = function (tag) {
	            return jax.parseOptions.options.tagFormat.tag(tag);
	        };
	        TagFormat.prototype.formatId = function (id) {
	            return jax.parseOptions.options.tagFormat.id(id);
	        };
	        TagFormat.prototype.formatUrl = function (id, base) {
	            return jax.parseOptions.options.tagFormat.url(id, base);
	        };
	        return TagFormat;
	    }(TagClass));
	    tagID++;
	    var tagName = 'configTags-' + tagID;
	    Tags_js_1.TagsFactory.add(tagName, TagFormat);
	    jax.parseOptions.options.tags = tagName;
	}
	exports.tagFormatConfig = tagFormatConfig;
	exports.TagFormatConfiguration = Configuration_js_1.Configuration.create('tagFormat', {
	    config: tagFormatConfig,
	    configPriority: 10,
	    options: {
	        tagFormat: {
	            number: function (n) { return n.toString(); },
	            tag: function (tag) { return '(' + tag + ')'; },
	            id: function (id) { return 'mjx-eqn-' + id.replace(/\s/g, '_'); },
	            url: function (id, base) { return base + '#' + encodeURIComponent(id); },
	        }
	    }
	});
	//# sourceMappingURL=TagFormatConfiguration.js.map

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var TexError_js_1 = __webpack_require__(175);
	var SymbolMap_js_1 = __webpack_require__(190);
	var ParseUtil_js_1 = __webpack_require__(174);
	var NodeUtil_js_1 = __webpack_require__(170);
	var Entities_js_1 = __webpack_require__(176);
	exports.UnicodeMethods = {};
	var UnicodeCache = {};
	exports.UnicodeMethods.Unicode = function (parser, name) {
	    var HD = parser.GetBrackets(name);
	    var HDsplit = null;
	    var font = null;
	    if (HD) {
	        if (HD.replace(/ /g, '').
	            match(/^(\d+(\.\d*)?|\.\d+),(\d+(\.\d*)?|\.\d+)$/)) {
	            HDsplit = HD.replace(/ /g, '').split(/,/);
	            font = parser.GetBrackets(name);
	        }
	        else {
	            font = HD;
	        }
	    }
	    var n = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');
	    if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {
	        throw new TexError_js_1.default('BadUnicode', 'Argument to \\unicode must be a number');
	    }
	    var N = parseInt(n.match(/^x/) ? '0' + n : n);
	    if (!UnicodeCache[N]) {
	        UnicodeCache[N] = [800, 200, font, N];
	    }
	    else if (!font) {
	        font = UnicodeCache[N][2];
	    }
	    if (HDsplit) {
	        UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);
	        UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);
	    }
	    var variant = parser.stack.env.font;
	    var def = {};
	    if (font) {
	        UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\'');
	        if (variant) {
	            if (variant.match(/bold/)) {
	                def.fontweight = 'bold';
	            }
	            if (variant.match(/italic|-mathit/)) {
	                def.fontstyle = 'italic';
	            }
	        }
	    }
	    else if (variant) {
	        def.mathvariant = variant;
	    }
	    var node = parser.create('token', 'mtext', def, Entities_js_1.numeric(n));
	    NodeUtil_js_1.default.setProperty(node, 'unicode', true);
	    parser.Push(node);
	};
	new SymbolMap_js_1.CommandMap('unicode', { unicode: 'Unicode' }, exports.UnicodeMethods);
	exports.UnicodeConfiguration = Configuration_js_1.Configuration.create('unicode', { handler: { macro: ['unicode'] } });
	//# sourceMappingURL=UnicodeConfiguration.js.map

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var Configuration_js_1 = __webpack_require__(187);
	var TexConstants_js_1 = __webpack_require__(189);
	var SymbolMap_js_1 = __webpack_require__(190);
	var TexError_js_1 = __webpack_require__(175);
	exports.VerbMethods = {};
	exports.VerbMethods.Verb = function (parser, name) {
	    var c = parser.GetNext();
	    var start = ++parser.i;
	    if (c === '') {
	        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', name);
	    }
	    while (parser.i < parser.string.length &&
	        parser.string.charAt(parser.i) !== c) {
	        parser.i++;
	    }
	    if (parser.i === parser.string.length) {
	        throw new TexError_js_1.default('NoClosingDelim', 'Can\'t find closing delimiter for %1', parser.currentCS);
	    }
	    var text = parser.string.slice(start, parser.i).replace(/ /g, '\u00A0');
	    parser.i++;
	    parser.Push(parser.create('token', 'mtext', { mathvariant: TexConstants_js_1.TexConstant.Variant.MONOSPACE }, text));
	};
	new SymbolMap_js_1.CommandMap('verb', { verb: 'Verb' }, exports.VerbMethods);
	exports.VerbConfiguration = Configuration_js_1.Configuration.create('verb', { handler: { macro: ['verb'] } });
	//# sourceMappingURL=VerbConfiguration.js.map

/***/ })
/******/ ])
});
;